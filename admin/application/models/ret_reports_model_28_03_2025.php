<?php
if( ! defined('BASEPATH')) exit('No direct script access allowed');
class Ret_reports_model extends CI_Model
{
	function __construct()
    {
        parent::__construct();
    }
    public function insertData($data,$table)
    {
    	$insert_flag = 0;
		$insert_flag = $this->db->insert($table, $data);
		return ($insert_flag == 1 ? $this->db->insert_id(): 0);
	}
    public function update_tag_scan($table,$data)
	{
		$edit_flag = 0;
		if($data['id_product']!=0)
		{
		    $this->db->where('id_product',$data['id_product']);
	 	}
		$this->db->where('id_branch',$data['id_branch']);
        $this->db->where('id_section',$data['id_section']);
		$status['status']=$data['status'];
		$edit_flag=$this->db->update($table,$status);
		return ($edit_flag==1?$edit_flag:0);
	}
	public function updateData($data, $id_field, $id_value, $table)
    {
	    $edit_flag = 0;
	    $this->db->where($id_field, $id_value);
		$edit_flag = $this->db->update($table,$data);
		return ($edit_flag==1?$id_value:0);
	}
 	function get_bill_customer()
	{
	    $sql=$this->db->query("select c.mobile,c.firstname as cus_name,c.id_customer
	    FROM ret_billing b
	    left join customer c on c.id_customer=b.bill_cus_id
	    where b.is_credit=1 group by b.bill_cus_id");
	    return $sql->result_array();
	}
	function getOldMetalPurchases($data){
        $profile_settings = $this->get_profile_settings($this->session->userdata('profile'));
		$old_matel_detail = array();
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$multiple_id_metal = implode(' , ', $data['metal']);
        if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $data['metal'];
		}
        if($data['report_type']==2)
        {
            $old_matel_query = $this->db->query("SELECT
            concat(c.firstname,' ',if(c.lastname!=NULL,c.lastname,'')) as customer,
            concat(b.short_name,'-PU-',bill.pur_ref_no) bill_no,
			bill_old.gross_wt,
            ifnull(bill_old.dust_wt,0.000) as dust_wt,ifnull(bill_old.stone_wt,0.000) as stone_wt,
            (ifnull(bill_old.gross_wt,0.000) - ifnull(bill_old.stone_wt,0.000) - ifnull(bill_old.dust_wt,0.000)) as pure_wt,
            ifnull(bill_old.wast_wt,0.000) as wast_wt,
            ifnull(bill_old.net_wt,0.000) as net_wt,
            ifnull(estst.totwt, 0.000) as sttotwt,
            round((ifnull(bill_old.dust_wt,0.000) - ifnull(bill_old.stone_wt,0.000)),3) as less_wt,
            if(bill_old.item_type = 1, 'Ornament', if(bill_old.item_type = 2, 'Coin', if(bill_old.item_type = 3, 'Bar',''))) as receiveditem,if(bill_old.metal_type =1,'Gold','Silver') as metal_type,
            bill_old.stone_wt, bill_old.dust_wt,bill_old.wastage_percent,DATE_FORMAT(bill_date,'%d-%m-%Y') as bill_date,
            rate_per_grm, rate,bill_old.purity, if(bill_old.purpose=1,'Sale','Purchase' ) as purpose,
            b.name as branch,esti_oms.est_id,IFNULL(r.goldrate_24ct,0) as goldrate_24ct,IFNULL(emp.firstname,'-') as emp_name,IFNULL(e.esti_no,'-') as esti_no,bill.bill_id,t.metal_type,cat.old_metal_cat as old_metal_category,
            bill_old.old_metal_sale_id,IFNULL(pay.pay_amt,0) as refund_amt,if(bill_old.is_pocketed=0,'-',if(bill_old.is_pocketed=2,'Added to Accounts Stock',if(bill_old.is_pocketed=3,'Stock Adj',if(bill_old.is_pocketed=4,'Added to Non Tag',if(bill_old.is_pocketed=5,'ReTagged',if(bill_old.is_pocketed=1,'Added to Pocket','-')))))) as old_metal_status,
			ifnull(bill_old.touch,0.00) as touch, c.mobile, CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address, ste.name AS state_name, IFNULL(c.gst_number, '') AS gst_number,bill.bill_type
            FROM ret_bill_old_metal_sale_details as bill_old
            LEFT JOIN ret_estimation_old_metal_sale_details est_old ON est_old.old_metal_sale_id=bill_old.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type t ON t.id_metal_type=bill_old.id_old_metal_type
            LEFT JOIN ret_old_metal_category cat ON cat.id_old_metal_cat=bill_old.id_old_metal_category
            LEFT JOIN ret_billing as bill ON bill.bill_id = bill_old.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
            LEFT JOIN (SELECT est_id,old_metal_sale_id FROM ret_estimation_old_metal_sale_details) as esti_oms ON bill_old.esti_old_metal_sale_id = esti_oms.old_metal_sale_id
			LEFT JOIN (SELECT IFNULL(SUM(st.wt),0) as totwt,st.old_metal_sale_id,s.metal_type,s.bill_id
			FROM ret_billing_item_stones st
			LEFT JOIN ret_bill_old_metal_sale_details s ON s.old_metal_sale_id = st.old_metal_sale_id
			LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
			LEFT JOIN ret_uom m ON m.uom_id = stnd.uom_id
			LEFT JOIN ret_stone_type t ON t.id_stone_type = stnd.stone_type
			WHERE t.stone_type=1 and s.old_metal_sale_id IS NOT NULL
			GROUP by s.bill_id) as estst ON estst.bill_id = bill_old.bill_id
            LEFT JOIN customer c ON c.id_customer = bill.bill_cus_id
            LEFT JOIN address a on a.id_customer=c.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT JOIN branch as b ON b.id_branch = bill.id_branch
            left join ret_estimation e on e.estimation_id=esti_oms.est_id
            left join employee emp on emp.id_employee=e.created_by
             LEFT JOIN (SELECT IFNULL(SUM(p.payment_amount),0) as pay_amt,p.bill_id
                       FROM ret_billing_payment p
                      LEFT JOIN ret_billing bill ON bill.bill_id=p.bill_id
                      WHERE p.type=2 and bill.bill_type!=5
                      GROUP by p.bill_id) as pay ON pay.bill_id=bill_old.bill_id
            LEFT JOIN (SELECT m.id_metalrates,m.goldrate_24ct,date_format(m.add_date,'%Y-%m-%d') as date_add FROM metal_rates m order by m.id_metalrates DESC LIMIT 1 ) as r ON date(r.date_add)=date(bill.bill_date) WHERE bill.bill_id is not null and bill.bill_status=1
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and bill.id_branch='.$data['id_branch']: '')."
            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."
            ".($id_metal!='' && $id_metal !='0' ? " and bill_old.metal_type in (".$id_metal.") " :'' )."
            ".($data['dt_range'] != '' ? ' and date(bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." ORDER BY old_metal_sale_id DESC");
    		//print_r($this->db->last_query());exit;
    		$result = $old_matel_query->result_array();
            foreach ($result as &$item) {
                $bill_id = $item['bill_id'];
                $bill_type = 3;
                $item['bill_no'] = $this->get_bill_no_format_detail($bill_id,$bill_type);
            }
                // print_r($result);exit;
    		foreach($result as $r){
    			$old_matel_detail['item_details'][$r['old_metal_category']][$r['bill_no']][] = $r;
    		}
    		$old_matel_detail['return_details']=$this->return_bill_details($FromDt,$ToDt,$data['id_branch']);
    		$old_matel_detail['partly_sale_det']=$this->get_partly_sales($FromDt,$ToDt,$data['id_branch']);
    	 }
    	 else if($data['report_type']==1)
    	 {
            $old_matel_query = $this->db->query("SELECT IFNULL(SUM(bill_old.gross_wt),0) as total_gross_wt,IFNULL(SUM(bill_old.net_wt),0) as total_net_wt,
            ifnull(sum(estst.totwt), 0) as sttotwt,
            date_format(bill.bill_date,'%d-%m-%Y') as bill_date,b.name as branch_name,IFNULL(SUM(bill_old.rate),0) as total_amount,cat.old_metal_cat as old_metal_category
            FROM ret_bill_old_metal_sale_details as bill_old
            LEFT JOIN ret_estimation_old_metal_sale_details est_old ON est_old.old_metal_sale_id=bill_old.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type t ON t.id_metal_type=bill_old.id_old_metal_type
            LEFT JOIN ret_old_metal_category cat ON cat.id_old_metal_cat=bill_old.id_old_metal_category
            LEFT JOIN ret_billing as bill ON bill.bill_id = bill_old.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
            LEFT JOIN (SELECT est_id,old_metal_sale_id FROM ret_estimation_old_metal_sale_details) as esti_oms ON bill_old.esti_old_metal_sale_id = esti_oms.old_metal_sale_id
            LEFT JOIN (SELECT IFNULL(SUM(st.wt),0) as totwt,st.old_metal_sale_id,s.metal_type,s.bill_id
				FROM ret_billing_item_stones st
				LEFT JOIN ret_bill_old_metal_sale_details s ON s.old_metal_sale_id = st.old_metal_sale_id
				LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
				LEFT JOIN ret_uom m ON m.uom_id = stnd.uom_id
				LEFT JOIN ret_stone_type t ON t.id_stone_type = stnd.stone_type
				WHERE t.stone_type=1 and s.old_metal_sale_id IS NOT NULL
			GROUP by s.old_metal_sale_id) as estst ON estst.bill_id = bill_old.bill_id
            LEFT JOIN branch as b ON b.id_branch = bill.id_branch
            left join ret_estimation e on e.estimation_id=esti_oms.est_id
            WHERE bill.bill_id is not null and bill.bill_status=1
            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
            ".($data['dt_range'] != '' ? ' and date(bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
			 ".($id_metal!='' && $id_metal !='0' ? " and bill_old.metal_type in (".$id_metal.") " :'' )."
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and bill.id_branch='.$data['id_branch']: '')."
            GROUP by b.id_branch,est_old.id_old_metal_category,date(bill.bill_date)");
    		//print_r($this->db->last_query());exit;
    		$old_matel_detail = $old_matel_query->result_array();
    	 }
		return $old_matel_detail;
	}
	function return_bill_details($FromDt,$ToDt,$id_branch)
	{
	    //SALES RETURN
	        $return_data=array();
    		$return_details=$this->db->query("SELECT p.product_name,d.net_wt as net_wt,d.gross_wt as gross_wt,d.item_cost as item_cost,d.item_total_tax as item_total_tax,
    		d.bill_discount as bill_discount,cat.name as category_name,d.piece as piece,d.rate_per_grm as sales_rate,p.sales_mode,b.bill_no,b.bill_id,
    		date_format(b.bill_date,'%d-%m-%Y') as bill_date,d.calculation_based_on,d.wastage_percent,c.firstname as customer,emp.firstname as emp_name
            FROM ret_billing b
            LEFT JOIN ret_bill_return_details r ON r.bill_id=b.bill_id
            LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
            LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
            LEFT JOIN customer c on c.id_customer=b.bill_cus_id
            left join employee emp on emp.id_employee=b.created_by
            WHERE d.bill_det_id IS NOT null and b.bill_status=1 And (b.bill_type=3 or b.bill_type=7)
            ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
            ".($FromDt!= '' && $ToDt!='' ? 'and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."");
    		$return_details = $return_details->result_array();
    		foreach($return_details as $r)
    		{
    			if($r['category_name']!='')
    			{
    				$return_data[$r['category_name']][] = $r;
    			}
    		}
    		return $return_data;
            //SALES RETURN
	}
	function get_partly_sales($FromDt,$ToDt,$id_branch)
	{
	    $return_data=array();
	    $partly_sale=$this->db->query("SELECT p.product_name,d.net_wt as net_wt,(tag.gross_wt-d.gross_wt) as gross_wt,(d.item_cost) as item_cost,
	    (d.piece) as pcs,b.bill_no,b.bill_id,c.firstname as customer,emp.firstname as emp_name,date_format(b.bill_date,'%d-%m-%Y') as bill_date,d.calculation_based_on,d.wastage_percent
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_estimation_items e ON e.est_item_id=d.esti_item_id
        LEFT JOIN ret_estimation est ON est.estimation_id=e.esti_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
        LEFT JOIN customer c on c.id_customer=b.bill_cus_id
        Left join employee emp on emp.id_employee=b.created_by
        WHERE d.tag_id IS NOT null AND d.is_partial_sale=1 and b.bill_status=1
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."  ");
        //print_r($this->db->last_query());exit;
        $return_data=$partly_sale->result_array();
        return $return_data;
	}
	function getLotwiseSoldPending($data){
        $sql = $this->db->query("SELECT l.lot_no,IFNULL(lot.total_gwt,0) as total_gwt,IFNULL(lot.tot_nwt,0) as tot_nwt,IFNULL(lot.no_of_pcs,0) as no_of_pcs,IFNULL(sold.sold_pcs,0) as sold_pcs,IFNULL(sold.sold_gwt,0) as sold_gwt,IFNULL(sold.sold_nwt,0) as sold_nwt,
        (IFNULL(lot.no_of_pcs,0)-IFNULL(sold.sold_pcs,0)) as pending_pcs,(IFNULL(lot.total_gwt,0)-IFNULL(sold.sold_gwt,0)) as pending_gwt,
        k.firstname as karigar_name
        FROM ret_lot_inwards l
        LEFT JOIN ret_karigar k ON k.id_karigar=l.gold_smith
        LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as total_gwt,IFNULL(SUM(d.net_wt),0) as tot_nwt,IFNULL(SUM(d.no_of_piece),0) as no_of_pcs,d.lot_no
                 FROM ret_lot_inwards_detail d
                 LEFT JOIN ret_lot_inwards lt ON lt.lot_no=d.lot_no
                 where d.lot_no IS NOT NULL
                 ".($data['karigar']!='' ? " and lt.gold_smith=".$data['karigar']."" :'')."
                 ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(lt.lot_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                 GROUP by d.lot_no) as lot ON lot.lot_no=l.lot_no
        LEFT JOIN(SELECT tag.tag_lot_id,IFNULL(SUM(dt.piece),0) as sold_pcs,IFNULL(SUM(dt.gross_wt),0) as sold_gwt,
                  IFNULL(SUM(dt.net_wt),0) as sold_nwt
                 FROM ret_bill_details dt
                 LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
                 LEFT JOIN ret_taging tag ON tag.tag_id=dt.tag_id
                 LEFT JOIN ret_lot_inwards lt ON lt.lot_no=tag.tag_lot_id
                 WHERE dt.tag_id IS NOT NULL AND b.bill_status=1
                 ".($data['karigar']!='' ? " and lt.gold_smith=".$data['karigar']."" :'')."
                 ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(lt.lot_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                 GROUP by tag.tag_lot_id) as sold ON sold.tag_lot_id=l.lot_no
        WHERE l.lot_no IS NOT NULL
        ".($data['karigar']!='' ? " and l.gold_smith=".$data['karigar']."" :'')."
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(l.lot_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ORDER BY l.lot_no DESC");
        //print_r($this->db->last_query());exit;
		$result = $sql->result_array();
		return $result;
	}
    function getLotwiseTaggedVault($data){
        $LotTag = array();
       if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
       }
       if($data['from_date'] != '' && $data['to_date'] != '' ){
        $FromDt = date('Y-m-d',strtotime($data['from_date']));
        $ToDt = date('Y-m-d',strtotime($data['to_date']));
        $data['dt_range'] =$FromDt;
       }
       $lot_id         = $_POST['lotId'];
       $multiple_party_id = implode(' , ', $data['partyId']);
       if($multiple_party_id != '')
       {
           $party_id = $multiple_party_id;
       }else{
           $party_id = $data['partyId'];
       }
       $multiple_id_metal = implode(',',$data['id_metal']);
       if($multiple_id_metal!='')
       {
           $id_metal = $multiple_id_metal;
       }
       else
       {
           $id_metal = $data['id_metal'];
       }
       $multiple_id_cat = implode(',',$data['id_category']);
       if($multiple_id_cat!='')
       {
           $id_category = $multiple_id_cat;
       }
       else
       {
           $id_category = $data['id_category'];
       }
      // echo $ToDt.'  '.$FromDt;exit;
       $sql = $this->db->query("SELECT ifnull(pr.product_name,'-') as product, kr.firstname as karigarname, lotdet.lot_no as lotno,lotdet.id_lot_inward_detail, date_format(lot.lot_date, '%d-%m-%Y') as lotdate, lotdet.no_of_piece as lotpcs,
       lotdet.gross_wt as lotgrswt, lotdet.net_wt as lotnetwt, ifnull(podia.stwt,0) as lotdiawt, ifnull(podia.stpcs,0) as lotdiapcs,
       ifnull(postn.stwt,0) as lotstwt, ifnull(postn.stpcs,0) as lotstpcs, ifnull(lottag.tagpcs, 0) as taggedpcs, ifnull(lottag.taggrswt, 0) as taggrswt, ifnull(lottag.tagnetwt, 0) as tagnetwt,
       ifnull(lottag.tagdiawt,0) as tagdiawt, ifnull(lottag.tagdiapcs,0) as tagdiapcs, ifnull(lottag.tagstnwt,0) as tagstwt, ifnull(lottag.tagstpcs,0) as tagstpcs,ifnull(po.po_ref_no,'-') as po_ref_no,ifnull(date_format(po.po_date, '%d-%m-%Y'),'-') as po_date,ifnull(lottag.emp,'') as emp_name,ifnull(lotrec.nt_pcs,0) as recpcs,ifnull(lotrec.nt_grswt,0) as recgrswt,ifnull(lotrec.nt_netwt,0) as recnetwt,'0' as recdiawt,'0' as recdiapcs,'0' as recstpcs,'0' as recstwt,ifnull(lot_merge.lm_pcs,0)  as lmpcs,ifnull(lot_merge.lm_grswt,0) as lmgrswt,ifnull(lot_merge.lm_netwt,0) as lmnetwt,ifnull(lot_merge.lmdiawt,0) as lmdiawt, ifnull(lot_merge.lmdiapcs,0) as lmdiapcs, ifnull(lot_merge.lmstnwt,0) as lmstwt, ifnull(lot_merge.lmstpcs,0) as lmstpcs,if(lot_merge.lm_grswt > 0,'MERGED WITH LOTNO','') as remarks,ifnull(lot_merge.lot_no,'') as lm_lotno
       FROM ret_lot_inwards_detail as lotdet
       LEFT JOIN ret_product_master as pr ON pr.pro_id = lotdet.lot_product
       LEFT JOIN ret_category cat on cat.id_ret_category = pr.cat_id
       LEFT JOIN metal mt on mt.id_metal = cat.id_metal
       LEFT JOIN ret_lot_inwards as lot ON lot.lot_no = lotdet.lot_no
       LEFT JOIN ret_karigar as kr ON kr.id_karigar = lot.gold_smith
       LEFT JOIN ret_purchase_order_items as poitm ON poitm.po_item_po_id = lot.po_id  AND poitm.po_item_cat_id = lot.id_category AND poitm.po_item_pro_id = lotdet.lot_product
       LEFT JOIN ret_purchase_order as po ON po.po_id = poitm.po_item_po_id
       LEFT JOIN (SELECT lot_stn.id_lot_inward_detail,ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, stone_wt, round((stone_wt/um.divided_by_value), 3))),0) as stwt, sum(stone_pcs) as stpcs,lotdet.lot_product
       FROM ret_lot_inwards_stone_detail lot_stn
       LEFT JOIN ret_lot_inwards_detail lotdet on lotdet.id_lot_inward_detail = lot_stn.id_lot_inward_detail
       LEFT JOIN ret_stone as st ON st.stone_id = lot_stn.stone_id
       LEFT JOIN ret_uom as um ON um.uom_id = lot_stn.uom_id
       WHERE st.stone_type = 1
       GROUP BY lot_stn.id_lot_inward_detail,lotdet.lot_product) as podia ON podia.id_lot_inward_detail = lotdet.id_lot_inward_detail  and podia.lot_product = lotdet.lot_product
       LEFT JOIN (SELECT lot_stn.id_lot_inward_detail,ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, stone_wt, round((stone_wt/um.divided_by_value), 3))),0) as stwt, sum(stone_pcs) as stpcs,lotdet.lot_product
       FROM ret_lot_inwards_stone_detail lot_stn
       LEFT JOIN ret_lot_inwards_detail lotdet on lotdet.id_lot_inward_detail = lot_stn.id_lot_inward_detail
       LEFT JOIN ret_stone as st ON st.stone_id = lot_stn.stone_id
       LEFT JOIN ret_uom as um ON um.uom_id = lot_stn.uom_id
       WHERE st.stone_type != 1
       GROUP BY lot_stn.id_lot_inward_detail,lotdet.lot_product) as postn ON postn.id_lot_inward_detail = lotdet.id_lot_inward_detail and postn.lot_product = lotdet.lot_product
       LEFT JOIN(SELECT tag.id_lot_inward_detail as lotinwid,tag.product_id, sum(tag.piece) as tagpcs, sum(tag.gross_wt) as taggrswt,
       sum(tag.net_wt) as tagnetwt,  sum(ifnull(tagdia.stn_wt,0)) as tagdiawt,
       sum(ifnull(tagdia.stn_pcs,0)) as tagdiapcs,
       sum(ifnull(tagst.stn_wt,0)) as tagstnwt, sum(ifnull(tagst.stn_pcs,0)) as tagstpcs,ifnull(emp.firstname,'') as emp
       FROM ret_taging as tag
       LEFT JOIN employee emp on emp.id_employee = tag.created_by
       LEFT JOIN (SELECT ts.tag_id,
       ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as stn_wt,
       ifnull(SUM(ts.pieces),0) as stn_pcs
       FROM ret_taging_stone as ts
       LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
       LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
       WHERE st.stone_type = 1
       GROUP by ts.tag_id) tagdia on tagdia.tag_id = tag.tag_id
       LEFT JOIN (SELECT ts.tag_id, ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as stn_wt, ifnull(SUM(ts.pieces),0) as stn_pcs
       FROM ret_taging_stone as ts
       LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
       LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
       WHERE st.stone_type != 1
       GROUP by ts.tag_id) tagst on tagst.tag_id = tag.tag_id
       GROUP BY tag.id_lot_inward_detail,tag.product_id) as lottag ON lottag.lotinwid = lotdet.id_lot_inward_detail and lottag.product_id = lotdet.lot_product
       LEFT JOIN(SELECT lm.lot_no,lm.id_lot_inward_detail,ifnull(lotdet.lot_product,'') as product_id,ifnull(sum(lotdet.no_of_piece),0) as lm_pcs,
       ifnull(sum(lotdet.gross_wt),0) as lm_grswt,ifnull(sum(lotdet.net_wt),0) as lm_netwt,
       sum(ifnull(lmdia.stwt,0)) as lmdiawt,
       sum(ifnull(lmdia.stpcs,0)) as lmdiapcs,
       sum(ifnull(lmst.stwt,0)) as lmstnwt, sum(ifnull(lmst.stpcs,0)) as lmstpcs
       FROM ret_lot_merge lm
       LEFT JOIN ret_lot_inwards_detail lotdet on lotdet.id_lot_inward_detail = lm.id_lot_inward_detail
       LEFT JOIN ret_lot_inwards lot on lot.lot_no = lotdet.lot_no
       LEFT JOIN (SELECT lot_stn.id_lot_inward_detail,
      ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, stone_wt, round((stone_wt/um.divided_by_value), 3))),0) as stwt,  sum(stone_pcs) as stpcs,lotdet.lot_product
       FROM ret_lot_inwards_stone_detail lot_stn
       LEFT JOIN ret_lot_inwards_detail lotdet on lotdet.id_lot_inward_detail = lot_stn.id_lot_inward_detail
       LEFT JOIN ret_stone as st ON st.stone_id = lot_stn.stone_id
       LEFT JOIN ret_uom as um ON um.uom_id = lot_stn.uom_id
       WHERE st.stone_type = 1
       GROUP BY lot_stn.id_lot_inward_detail,lotdet.lot_product) as lmdia ON lmdia.id_lot_inward_detail = lotdet.id_lot_inward_detail  and lmdia.lot_product = lotdet.lot_product
       LEFT JOIN (SELECT lot_stn.id_lot_inward_detail, ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, stone_wt, round((stone_wt/um.divided_by_value), 3))),0) as stwt,sum(stone_pcs) as stpcs,lotdet.lot_product
       FROM ret_lot_inwards_stone_detail lot_stn
       LEFT JOIN ret_lot_inwards_detail lotdet on lotdet.id_lot_inward_detail = lot_stn.id_lot_inward_detail
       LEFT JOIN ret_stone as st ON st.stone_id = lot_stn.stone_id
       LEFT JOIN ret_uom as um ON um.uom_id = lot_stn.uom_id
       WHERE st.stone_type != 1
       GROUP BY lot_stn.id_lot_inward_detail,lotdet.lot_product) as lmst ON lmst.id_lot_inward_detail = lotdet.id_lot_inward_detail and lmst.lot_product = lotdet.lot_product
       GROUP BY lm.id_lot_inward_detail,lotdet.lot_product) as lot_merge on lot_merge.id_lot_inward_detail = lotdet.id_lot_inward_detail and lot_merge.product_id = lotdet.lot_product
       LEFT JOIN (SELECT ntr.lot_id,ntr.id_lot_inward_detail,ntr.id_product,ifnull(sum(ntr.pcs),0) as nt_pcs,
       ifnull(sum(ntr.grs_wt),0) as nt_grswt,ifnull(sum(ntr.net_wt),0) as nt_netwt
       FROM ret_nontag_receipt ntr
       GROUP BY ntr.id_lot_inward_detail,ntr.id_product) as lotrec on lotrec.id_lot_inward_detail = lotdet.id_lot_inward_detail and lotrec.id_product = lotdet.lot_product
       WHERE lot.lot_no IS NOT NULL
       ".($data['from_lotno'] != '' && $data['to_lotno'] != ''? ' and (lot.lot_no  BETWEEN "'.$data['from_lotno'].'" AND "'.$data['to_lotno'].'")' : '')."
       ".(!empty($party_id) ? " and lot.gold_smith in (".$party_id.")" :'')."
       ".(!empty($id_metal) ? " and mt.id_metal in (".$id_metal.")" :'')."
       ".(!empty($id_category) ? " and cat.id_ret_category in (".$id_category.")" :'')."
       ".($data['dt_range'] != '' ? ' and (date(lot.lot_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
       GROUP BY lotdet.id_lot_inward_detail,lotdet.lot_product");
      //  print_r($this->db->last_query());exit;
       $result = $sql->result_array();
       //print_r($this->db->last_query());exit;
       foreach($result as $r)
       {
           $LotTag[] = array(
               'karigarname'    =>  $r['karigarname'],
               'lotdate'        =>  $r['lotdate'],
               'lotdiapcs'      =>  $r['lotdiapcs'],
               'lotdiawt'       =>  $r['lotdiawt'],
               'lotgrswt'       =>  $r['lotgrswt'],
               'lotnetwt'       =>  $r['lotnetwt'],
               'lotno'          =>  $r['lotno'],
               'id_lot_inward_detail'  =>  $r['id_lot_inward_detail'],
               'lotpcs'         =>  $r['lotpcs'],
               'lotstpcs'       =>  $r['lotstpcs'],
               'lotstwt'        =>  $r['lotstwt'],
               'product'        =>  $r['product'],
               'tagdiapcs'      =>  $r['tagdiapcs'],
               'tagdiawt'       =>  $r['tagdiawt'],
               'taggedpcs'      =>  $r['taggedpcs'],
               'taggrswt'       =>  $r['taggrswt'],
               'tagnetwt'       =>  $r['tagnetwt'],
               'tagstpcs'       =>  $r['tagstpcs'],
               'recpcs'         =>  $r['recpcs'],
               'recgrswt'       =>  $r['recgrswt'],
               'recnetwt'       =>  $r['recnetwt'],
               'recstpcs'       =>  $r['recstpcs'],
               'recstwt'        =>  $r['recstwt'],
               'recdiapcs'      =>  $r['recdiapcs'],
               'recdiawt'       =>  $r['recdiawt'],
               'lmpcs'          =>  $r['lmpcs'],
               'lmgrswt'        =>  $r['lmgrswt'],
               'lmnetwt'        =>  $r['lmnetwt'],
               'lmstpcs'        =>  $r['lmstpcs'],
               'lmstwt'         =>  $r['lmstwt'],
               'lmdiapcs'       =>  $r['lmdiapcs'],
               'lmdiawt'        =>  $r['lmdiawt'],
               'tagstwt'        =>  $r['tagstwt'],
               'po_ref_no'      =>  $r['po_ref_no'],
               'po_date'        =>  $r['po_date'],
               'emp_name'       =>  $r['emp_name'],
               'lm_lotno'       =>  $r['lm_lotno'],
               'remarks'        =>  $r['remarks'],
               'startTag'       =>  $this->getStartTagNo($r['lotno']),
               'endTag'         =>  $this->getEndTagNo($r['lotno']),
           );
       }
       return $LotTag;
   }
    function getStartTagNo($lot_id)
    {
        $sql = $this->db->query("SELECT ifnull(t.tag_code,'') as tag_code
        FROM ret_taging t
        WHERE t.tag_lot_id = ".$lot_id."
        ORDER BY t.tag_id ASC LIMIT 1");
        //print_r($this->db->last_query());exit;
        return $sql->row()->tag_code;
    }
    function getEndTagNo($lot_id)
    {
        $sql = $this->db->query("SELECT ifnull(t.tag_code,'') as tag_code
        FROM ret_taging t
        WHERE t.tag_lot_id = ".$lot_id."
        ORDER BY t.tag_id DESC LIMIT 1");
        //print_r($this->db->last_query());exit;
        return $sql->row()->tag_code;
    }
	function get_partial_sale_details($tag_id, $sold_bill_det_id)
	{
		$sql=$this->db->query("SELECT * From ret_partlysold s where s.tag_id=".$tag_id." AND s.sold_bill_det_id = '".$sold_bill_det_id."'");
		return $sql->result_array();
	}
	function getPartlySold($data){
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
			if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$return_data=array();
		$res = $this->db->query("
					SELECT bill_no,bil.bill_id,bil.bill_type,bil.id_branch,DATE_FORMAT(bil.bill_date,'%d-%m-%Y') as report_date,bil.bill_type,bil.id_branch,DATE_FORMAT(bil.bill_date,'%d-%m-%Y') as bill_date,
						bil_det.tag_id,pro.product_name as product,IFNULL(des.design_name,'') as design,
					    IFNULL(tag.less_wt,0) as actual_less_wt,IFNULL(tag.net_wt,0) as actual_net_wt,IFNULL(tag.gross_wt,0) as actual_gross_wt,IFNULL(tag.piece,0) as actual_pieces,
					    (IFNULL(bil_det.net_wt,0)+IFNULL(ps.sold_nwt,0)) as sold_net_wt,(IFNULL(bil_det.gross_wt,0)+IFNULL(ps.soldgwt,0)) as sold_gross_wt,IFNULL(bil_det.piece,0) as sold_pieces,
					    tag.tag_code,br.name as branch_name, bil_det.bill_det_id,IFNULL(ps.soldgwt,0) as soldgwt,IFNULL(ps.sold_nwt,0) as sold_nwt ,'0' as blc_pcs
					FROM ret_billing bil
					    LEFT JOIN branch br on br.id_branch = bil.id_branch
                        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bil.id_branch
						LEFT JOIN ret_bill_details bil_det ON bil_det.bill_id=bil.bill_id
						LEFT JOIN ret_estimation_items est on est.est_item_id=bil_det.esti_item_id
					    LEFT JOIN ret_taging tag ON tag.tag_id=bil_det.tag_id
					    LEFT JOIN ret_product_master as pro ON pro.pro_id = bil_det.product_id
						LEFT JOIN ret_design_master as des ON des.design_no = bil_det.design_id
						LEFT JOIN (SELECT IFNULL(SUM(d.gross_wt),0) as soldgwt,IFNULL(SUM(d.net_wt),0) as sold_nwt,d.tag_id
                                  FROM ret_bill_details d
                                  LEFT JOIN ret_billing bill ON bill.bill_id = d.bill_id
                                  WHERE d.item_type = 2 AND bill.bill_status = 1
                                  GROUP BY d.tag_id) as ps ON ps.tag_id = bil_det.tag_id
					WHERE bil_det.is_partial_sale = 1 and bil_det.tag_id IS NOT NULL and bil_det.item_type = 0 AND bil.bill_status = 1 
                    ".($profile_settings['allow_bill_type']==3 ? " and (bil.is_eda=1 OR  ( IF(bil.is_eda=2,date(day_close.entry_date) = date(bil.bill_date),'') and bil.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bil.is_eda=1" :" and bil.is_eda=2 and date(day_close.entry_date) = date(bil.bill_date)") )."         
                    ".($data['dt_range'] != '' ? ' and (date(bil.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and bil.id_branch='.$data['id_branch']: '')." ".($data['id_product'] != '' ? ' and bil_det.product_id ='.$data['id_product']: '')."
					GROUP BY tag.tag_id
					");
				//print_r($this->db->last_query());exit;
			$data=$res->result_array();
    		foreach($data as $items)
    		{
    			$return_data[]=array(
    				'branch_name'=>$items['branch_name'],
    				'actual_gross_wt'=>$items['actual_gross_wt'],
    				'actual_less_wt'=>$items['actual_less_wt'],
    				'actual_net_wt'=>$items['actual_net_wt'],
    				'actual_pieces'=>$items['actual_pieces'],
    				'bill_date'=>$items['bill_date'],
    				'bill_id'=>$items['bill_id'],
    				//'bill_no'=>$items['bill_no'],
                    'bill_no'=>$this->get_bill_no_format_detail($items['bill_id']),
    				'bill_type'=>$items['bill_type'],
    				'design'=>$items['design'],
    				'id_branch'=>$items['id_branch'],
    				'product'=>$items['product'],
    				'report_date'=>$items['report_date'],
    				'sold_gross_wt'=>$items['sold_gross_wt'],
    				'sold_less_wt'=>$items['sold_less_wt'],
    				'sold_net_wt'=>$items['sold_net_wt'],
    				'sold_pieces'=>$items['sold_pieces'],
    				'tag_id'=>$items['tag_id'],
    				'tag_code'=>$items['tag_code'],
    				'blc_pcs'=>$items['blc_pcs'],
    				'partial_details'=>$this->get_partly_sale_tag_details($items['tag_id'])
    			);
    		}
    		return $return_data;
	}
	function get_partly_sale_tag_details($tag_id)
	{
		$sql = $this->db->query("SELECT d.bill_id,b.sales_ref_no,d.gross_wt,d.net_wt,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		WHERE b.bill_status = 1 AND d.tag_id = ".$tag_id."" );
		return $sql->result_array();
	}
	function getBillDetails($post)
	{
        //exit;

	     $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
			$id_branch      =$this->input->post('id_branch');
			$counter_id     =$this->input->post('counter_id');
			$floor_id       =$this->input->post('floor_id');
			$FromDt     =$this->input->post('from_date');
			$ToDt     =$this->input->post('to_date');
			$d1 = date_create($FromDt);
            $d2 = date_create($ToDt);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
            $emp_ids = "";
            if(is_array($this->input->post('employee_ids')))
            {
                $emp_ids = implode(', ',$this->input->post('employee_ids'));
            }
            else
            {
                $emp_ids = $this->input->post('employee_ids');
            }
		    $return_data = array("item_details" => array(), "voucher_details" => array(), "chit_details" => array(),"return_details"=>array(),'payment_details'=>array(),'advance_detals'=>array(),'branch_transfer_details'=>array(),'due_details'=>array(),'credit_details'=>array(),'metal_rates'=>array(),"old_matel_details"=>array(),"advance_adjusted"=>array(),"wallet_adjusted"=>array(),"general_adv_details"=>array(),"general_pay"=>array(),"order_adj"=>array(),"home_bill"=>array(),"partly_sale"=>array(),"bill_det"=>array(),"adv_refund"=>array(),"general_credit_collection"=>array(),"other_expense"=>array(),"advance_deposit"=>array(),"chit_credit_collection"=>array());
		    //SALES DETAILS
			$items_query = $this->db->query("SELECT pro.product_name,ifnull(sum(d.piece),0) as piece,
			c.name as category_name,c.id_ret_category,sum(d.item_cost) as item_cost,sum(ifnull(d.total_sgst, 0) + ifnull(d.total_cgst, 0) + ifnull(d.total_igst, 0)) as item_total_tax,IFNULL(b.tcs_tax_amt,0) as tot_tcs_tax_amt,
			sum(d.bill_discount) as bill_discount,cat.name as category_name,pro.cat_id,
			sum(d.rate_per_grm) as sales_rate,pro.sales_mode,sum(d.net_wt) as net_wt,sum(d.gross_wt) as gross_wt,
			IFNULL(stn.stn_wt,0) as less_wt,mt.metal as metal_name,ifnull(sum(IF(b.is_bill_split = 1 and d.item_type = 2,0,IFNULL(d.piece,1))),0) as piece
			From ret_billing b
			Left JOIN ret_bill_details d on d.bill_id=b.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
			LEFT JOIN ret_estimation_items est_itms on est_itms.est_item_id=d.esti_item_id
			LEFT JOIN ret_product_master as pro ON pro.pro_id = d.product_id
			LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
			LEFT JOIN metal mt on mt.id_metal=c.id_metal
			LEFT JOIN ret_design_master as des ON des.design_no = d.design_id
			LEFT JOIN ret_purity as pur ON pur.id_purity = est_itms.purity
			LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id
			LEFT JOIN ret_taxgroupmaster as txgrp ON txgrp.tgrp_id = mt.tgrp_id
			LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
			LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id,pro.cat_id,c.id_metal
            FROM ret_billing_item_stones st
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = dt.product_id
			LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE b.bill_status=1 AND s.stone_type=1
            and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            	".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
                ".($post['group_type'] ==1  &&  $post['report_type'] == 1 ? "  group by c.id_ret_category" :  ($post['group_type'] ==2  && $post['report_type'] ==1 ? "  group by c.id_metal" :" group by dt.product_id")).")  as stn ON ".($post['report_type']==1 ? ($post['group_type'] ==1 ? "stn.cat_id=pro.cat_id" :"stn.id_metal=cat.id_metal") : " stn.product_id=d.product_id")."
			WHERE  b.bill_id is not null and b.bill_status=1
		    and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
			and  d.bill_det_id !=''
			".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
			".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
			".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
               ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
			".($post['group_type'] ==1  &&  $post['report_type'] == 1 ? "  group by cat.id_ret_category" :  ($post['group_type'] ==2  && $post['report_type'] ==1 ? "  group by cat.id_metal" :" group by d.product_id"))." order by c.sort,pro.product_name ASC");
		    //print_r($this->db->last_query());exit;
    		$item_details= $items_query->result_array();
    		foreach($item_details as $r)
    		{
    			$return_data['item_details'][$r['category_name']][] = $r;
    		}
    		//SALES DETAILS
    		//PURCHASE DETAILS
    		$old_metal_query=$this->db->query("SELECT sum(s.gross_wt) as gross_wt,sum(s.dust_wt)dust_wt,sum(s.stone_wt)as stone_wt,sum(s.rate)as amount,
    		m.metal,m.id_metal,sum(s.net_wt) as net_wt,sum(s.rate_per_grm) as rate_per_grm,count(s.old_metal_sale_id) as tot_pur,
    		t.metal_type as old_metal_type,IFNULL(stn.dia_wt,0) as dia_wt
    		FROM ret_bill_old_metal_sale_details s
    		LEFT JOIN ret_billing b on b.bill_id=s.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
    		LEFT JOIN metal m on m.id_metal=s.metal_type
    		LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
    		LEFT JOIN ret_estimation_old_metal_sale_details as old_est on old_est.old_metal_sale_id=s.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type t on t.id_metal_type=s.id_old_metal_type
            LEFT JOIN (SELECT IFNULL(st.wt,0) as dia_wt,st.est_old_metal_sale_id
                      FROM ret_esti_old_metal_stone_details st
                      LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
                      LEFT JOIN ret_stone_type t ON t.id_stone_type = stnd.stone_type
                      WHERE t.stone_code = 'DIA'
                      GROUP by st.est_old_metal_sale_id) as stn ON stn.est_old_metal_sale_id = old_est.old_metal_sale_id
    		where b.bill_id is not null and b.bill_status=1
    		 and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
    		".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
    		".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
    		".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
                ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
    		group by s.id_old_metal_type order by m.id_metal ASC ");
    			//print_r($this->db->last_query());exit;
    		$old_metal= $old_metal_query->result_array();
    		foreach($old_metal as $r)
    		{
    			$return_data['old_matel_details'][$r['metal']][] = $r;
    		}
    		//PURCHASE DETAILS
    		//SALES RETURN
    		$return_details=$this->db->query("SELECT p.product_name,sum(d.gross_wt) as gross_wt,sum(d.net_wt) as net_wt,sum(d.item_cost) as item_cost,sum(d.item_total_tax) as item_total_tax,
    		sum(d.bill_discount) as bill_discount,cat.name as category_name,sum(d.piece) as piece,sum(d.rate_per_grm) as sales_rate,p.sales_mode,
    		IFNULL(SUM(d.less_wt),0) as less_wt,IFNULL(stn.stn_wt,0) as dia_wt,mt.metal as metal_name
            FROM ret_billing b
            LEFT JOIN ret_bill_return_details r ON r.bill_id=b.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
            LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
            LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
            LEFT JOIN metal mt on mt.id_metal=cat.id_metal
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id,pro.cat_id,c.id_metal
            FROM ret_bill_return_details r
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id = r.ret_bill_det_id
            LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = dt.bill_det_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = dt.product_id
			LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE b.bill_status=1 AND s.stone_type=1
            and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            	".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
                ".($post['group_type'] ==1  &&  $post['report_type'] == 1 ? "  group by c.id_ret_category" :  ($post['group_type'] ==2  && $post['report_type'] ==1 ? "  group by c.id_metal" :" group by dt.product_id")).")  as stn ON ".($post['report_type']==1 ? ($post['group_type'] ==1 ? "stn.cat_id=p.cat_id" :"stn.id_metal=cat.id_metal") : " stn.product_id=d.product_id")."
            WHERE d.bill_det_id IS NOT null and b.bill_status=1
            ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
            ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
            ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
            ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
             and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
             ".($post['group_type'] ==1  &&  $post['report_type'] == 1 ? "  group by cat.id_ret_category" :  ($post['group_type'] ==2  && $post['report_type'] ==1 ? "  group by cat.id_metal" :" group by d.product_id"))."");
    		$return_details = $return_details->result_array();
    		foreach($return_details as $r)
    		{
    			if($r['category_name']!='')
    			{
    				$return_data['return_details'][$r['category_name']][] = $r;
    			}
    		}
            //SALES RETURN
        //PAYMENT DETAILS
		$payment_details = $this->db->query("SELECT p.id_billing_payment,p.type,p.bill_id,p.payment_for,p.payment_amount,p.card_no,p.cvv,p.payment_mode,
		p.nb_type
		 FROM ret_billing_payment p
	 	LEFT JOIN ret_billing b on b.bill_id=p.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
		LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
		where b.bill_id is not null and b.bill_status=1
		and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
		".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
		".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
		and b.bill_type!=6  ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."");
		$return_data['payment_details']=$payment_details->result_array();
        //PAYMENT DETAILS
        //CHIT ADJ
		$chit_details=$this->db->query("SELECT chit.bill_chit_ut_id,chit.bill_id,chit.scheme_account_id,
		s.total_installments,IFNULL(utilized_amt,0) as utilized_amt
			from ret_billing_chit_utilization chit
			LEFT JOIN scheme_account sa on sa.id_scheme_account=chit.scheme_account_id
			LEFT JOIN scheme s on s.id_scheme=sa.id_scheme
			left JOIN ret_billing b on b.bill_id=chit.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
			LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
			where b.bill_id is not null and b.bill_status=1
			and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
			".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
			".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
			".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
            ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
			");
		$return_data['chit_details'] = $chit_details->result_array();
        //CHIT ADJ
        //ORDER ADVANCE DETAILS
		$advance_detals=$this->db->query("SELECT b.bill_id,b.bill_no,a.order_no,a.received_amount,a.received_weight,a.rate_per_gram,a.advance_amount
		 FROM ret_billing_advance a
         LEFT JOIN ret_billing b ON b.bill_id=a.bill_id
         LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
         LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
		  where  b.bill_id is not null and b.bill_status=1
		  and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
		  ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
		  ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
		  ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
          ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
          ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
		  ");
		$return_data['advance_detals'] = $advance_detals->result_array();
        //ORDER ADVANCE DETAILS
        //VOUCHER UTILIZED
		$voucher_details=$this->db->query("SELECT g.gift_voucher_amt,g.bill_id
			From ret_billing_gift_voucher_details g
			LEFT JOIN ret_billing b on b.bill_id=g.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
			LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
			where  b.bill_id is not null and b.bill_status=1
			and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
			".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
			".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
			".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
            ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
            ");
		$return_data['voucher_details'] = $voucher_details->result_array();
        //VOUCHER UTILIZED
        //BT DETAILS
		$branch_transfer_details=$this->db->query("SELECT IFNULL(sum(b.pieces),0) as pieces,IFNULL(sum(b.grs_wt),0)as gross_wt,IFNULL(sum(b.net_wt),0)as net_wt
			From ret_branch_transfer b
			where
			(date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
			".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
		    and  b.status=2 ".($id_branch!='' && $id_branch!=0 ? " and b.transfer_to_branch=".$id_branch."" :'')."");
		$return_data['branch_transfer_details'] = $branch_transfer_details->row_array();
        //BT DETAILS
        //CREDIT ISSUED
		$due_details=$this->db->query("SELECT b.bill_no,b.bill_id,(b.tot_bill_amount-b.tot_amt_received) as due_amt
			From ret_billing b
			LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
			WHERE b.bill_id is not null and b.bill_type!=8 and b.bill_status=1 and b.is_credit=1
			and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
			".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
			".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
			".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
            ".($emp_ids!="" ? " and b.created_by in (".$emp_ids.")" :'')."
			");
		$return_data['due_details']=$due_details->result_array();
        //CREDIT ISSUED
       //CREDIT RECEIVED
		$sql=$this->db->query("SELECT b.bill_no,b.bill_type,b.ref_bill_id,b.tot_amt_received,b.bill_id,b.tot_bill_amount
    	 From ret_billing b
    	 LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
         LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
    	 where  b.bill_id is not null and b.bill_status=1 and b.bill_type=8
    	 and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
    	 ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
    	 ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
         ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
    	 ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
         ".($emp_ids!="" ? " and b.created_by in (".$emp_ids.")" :'')."
         ");
    	 $credit_details=$sql->result_array();
    	 foreach($credit_details as $items)
    	 {
    	     $old_metal=$this->getOldMetalPurchaseAmount($items['bill_id']);
    	     $return_data['credit_details'][]=array(
    	                                            'bill_no'           =>$items['bill_no'],
    	                                            'bill_type'         =>$items['bill_type'],
    	                                            'ref_bill_id'       =>$items['ref_bill_id'],
    	                                            'tot_amt_received'  =>($items['tot_amt_received']>0 ?$items['tot_amt_received'] :$items['tot_bill_amount'])+$old_metal['purchase_amount'],
    	                                           );
    	 }
        //CREDIT RECEIVED
        //GENERAL CREDIT COLLECTION
        $GenCreditColl=$this->db->query("SELECT d.received_amount as amount,r.bill_no,r.id_issue_receipt as bill_id,date_format(r.bill_date,'%d-%m-%Y') as bill_date,
        cus.firstname as cus_name,cus.mobile
        FROM ret_issue_credit_collection_details d
        LEFT JOIN ret_issue_receipt r on r.id_issue_receipt= d.id_issue_receipt
        LEFT JOIN customer cus ON cus.id_customer=r.id_customer
        LEFT JOIN branch br ON br.id_branch=r.id_branch
        WHERE r.type=2 AND r.receipt_type=1 and r.bill_status = 1
        and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
        ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR r.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2") )."
        ".($emp_ids!="" ? " and r.created_by in (".$emp_ids.")" :'')."
        ");
        $return_data['general_credit_collection'] = $GenCreditColl->result_array();
        //GENERAL CREDIT COLLECTION
        //GENERAL ADV ADJ
		$sql = $this->db->query("SELECT IFNULL(sum(u.utilized_amt),0) as adj_amt
        FROM ret_billing b
        LEFT JOIN ret_advance_utilized u ON u.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
        WHERE b.bill_status=1
         and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
        ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
        ");
        //print_r($this->db->last_query());exit;
        $advance_adjusted1 = $sql->row_array();
        $sq2 = $this->db->query("SELECT IFNULL(sum(adj.adjusted_amt),0) as adj_amt
        FROM ret_issue_receipt_advance_adj adj
        LEFT JOIN ret_issue_receipt  ir ON ir.id_issue_receipt=adj.id_issue_receipt
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=ir.id_branch
        WHERE ir.bill_status=1
         and (date(ir.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($id_branch!='' && $id_branch!=0 ? " and ir.id_branch=".$id_branch."" :'')."
        ".($emp_ids!="" ? " and ir.created_by in (".$emp_ids.")" :'')."
        ".($counter_id!='' && $counter_id!=0 ? " and ir.counter_id=".$counter_id."" :'')."
        ".($profile_settings['allow_bill_type']==3 ? " and (ir.is_eda=1 OR  ( IF(ir.is_eda=2,date(day_close.entry_date) = date(ir.bill_date),'') and ir.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and ir.is_eda=1" :" and ir.is_eda=2 and date(day_close.entry_date) = date(ir.bill_date)") )."         
        ");
        //print_r($this->db->last_query());exit;
        $advance_adjusted2 = $sq2->row_array();
        $advance_adjusted = array('adj_amt'=>($advance_adjusted1['adj_amt'] + $advance_adjusted2['adj_amt']));
		//print_r($this->db->last_query());exit;
		$return_data['advance_adjusted']=$advance_adjusted;
		//GENERAL ADV ADJ
		//ORDER ADV ADJ
        $order_adj=$this->db->query("SELECT a.received_amount,a.received_weight,a.rate_per_gram,b.bill_id,a.advance_amount
        FROM ret_billing b
        LEFT JOIN ret_billing_advance a ON a.adjusted_bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch    
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
        WHERE a.is_adavnce_adjusted=1 and b.bill_status=1
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
         ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
         ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
         ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
         ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
        ");
        $return_data['order_adj']=$order_adj->result_array();
        //ORDER ADV ADJ
        //GENERAL ADV RECEIVED
        $general_adv_details=$this->db->query("SELECT r.amount,(r.weight*r.rate_per_gram) as weight_amt
        FROM ret_issue_receipt r
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=r.counter_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=r.id_branch
        WHERE r.type=2 and r.bill_status=1 and r.receipt_type!=4 and r.receipt_type!=5 and r.receipt_type!=3 and r.receipt_type!=7 and r.receipt_type!=1
        and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
        ".($counter_id!='' && $counter_id!=0 ? " and r.counter_id=".$counter_id."" :'')."
         ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
        ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR  ( IF(r.is_eda=2,date(day_close.entry_date) = date(r.bill_date),'') and r.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2 and date(day_close.entry_date) = date(r.bill_date)") )."         
         ".($emp_ids!="" ? " and r.created_by in (".$emp_ids.")" :'')."
        ");
        $return_data['general_adv_details']=$general_adv_details->result_array();
        $advance_deposit=$this->db->query("SELECT IFNULL(SUM(r.amount),0) as advance_deposit_amt
		FROM ret_issue_receipt r
		LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
		 WHERE r.bill_status=1 and (r.receipt_type = 3)
       ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
       ".($counter_id!='' && $counter_id!=0 ? " and r.counter_id=".$counter_id."" :'')."
        and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR r.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2") )."
        ".($emp_ids!="" ? " and r.created_by in (".$emp_ids.")" :'')."
        ");
		// print_r($this->db->last_query());exit;
        $return_data['advance_deposit']=$advance_deposit->row_array();
        //GENERAL ADV RECEIVED
       //GENERAL PAY
        $general_pay=$this->db->query("SELECT p.payment_amount,p.payment_mode,r.type,p.type as transcation_type,r.id_issue_receipt,p.nb_type
        FROM ret_issue_receipt r
        LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=r.counter_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=r.id_branch
        WHERE p.payment_status=1 and r.bill_status=1 and (r.receipt_type!=4 and r.receipt_type!=5 OR r.type = 1)
        ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
        and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($counter_id!='' && $counter_id!=0 ? " and r.counter_id=".$counter_id."" :'')."
        ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
         ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR  ( IF(r.is_eda=2,date(day_close.entry_date) = date(r.bill_date),'') and r.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2 and date(day_close.entry_date) = date(r.bill_date)") )."         
        ".($emp_ids!="" ? " and r.created_by in (".$emp_ids.")" :'')."
        ");
        $return_data['general_pay']=$general_pay->result_array();
        //HOME BILL DETAILS
        $home_bill=$this->db->query("SELECT p.product_name,SUM(d.net_wt) as net_wt,SUM(d.gross_wt) as gross_wt,SUM(d.item_cost) as item_cost,ifnull(SUM(d.piece),0) as pcs
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_estimation_items e ON e.est_item_id=d.esti_item_id
        LEFT JOIN ret_estimation est ON est.estimation_id=e.esti_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
        WHERE d.tag_id is null AND d.item_type=2 and b.bill_status=1
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
         ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
         ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
         ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
         ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
        GROUP by d.product_id");
        $return_data['home_bill']=$home_bill->result_array();
        //HOME BILL DETAILS
        //PARTLY SALE
        $partly_sale=$this->db->query("SELECT p.product_name,
        (SUM(tag.gross_wt)-IFNULL(s.gross_wt,0)) as gross_wt,SUM(d.item_cost) as item_cost,SUM(d.piece) as pcs
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_estimation_items e ON e.est_item_id=d.esti_item_id
        LEFT JOIN ret_estimation est ON est.estimation_id=e.esti_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
        LEFT JOIN (SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,d.product_id
            FROM ret_bill_details d
            LEFT JOIN ret_billing bill ON bill.bill_id = d.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
            LEFT JOIN ret_taging tag ON tag.tag_id = d.tag_id
            WHERE bill.bill_status = 1 AND tag.is_partial = 1
            ".($id_branch!='' && $id_branch!=0 ? " and bill.id_branch=".$id_branch."" :'')."
            and (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            ".($counter_id!='' && $counter_id!=0 ? " and bill.counter_id=".$counter_id."" :'')."
            ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
            ".($emp_ids!="" ? " and bill.created_by in (".$emp_ids.")" :'')."
        GROUP BY d.product_id) as s ON s.product_id = d.product_id
        WHERE d.tag_id IS NOT null AND d.is_partial_sale=1 and b.bill_status=1
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
        ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($emp_ids!="" ? " and b.created_by in (".$emp_ids.")" :'')."
        GROUP by d.product_id HAVING gross_wt > 0");
        $return_data['partly_sale']=$partly_sale->result_array();
        //PARTLY SALE
        //general_bill_details
        $bill_det=$this->db->query("SELECT IFNULL(SUM(b.round_off_amt),0) as round_off_amt,IFNULL(SUM(b.handling_charges),0) as handling_charges
        FROM ret_billing b
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        WHERE b.bill_status=1
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
        ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
         ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
        ");
        $return_data['bill_det']=$bill_det->row_array();
        //general_bill_details
        //Advance refund
        $adv_refund=$this->db->query("SELECT p.payment_amount,p.id_issue_rcpt
        FROM ret_issue_receipt i
        LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=i.id_issue_receipt
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=i.id_branch
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=i.counter_id
        WHERE i.issue_type=3 AND i.bill_status=1 AND p.id_issue_rcpt is not null
        ".($id_branch!='' && $id_branch!=0 ? " and i.id_branch=".$id_branch."" :'')."
        and (date(i.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($counter_id!='' && $counter_id!=0 ? " and i.counter_id=".$counter_id."" :'')."
        ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
        ".($profile_settings['allow_bill_type']==3 ? " and (i.is_eda=1 OR  ( IF(i.is_eda=2,date(day_close.entry_date) = date(i.bill_date),'') and i.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and i.is_eda=1" :" and i.is_eda=2 and date(day_close.entry_date) = date(i.bill_date)") )."         
        ".($emp_ids!="" ? " and i.created_by in (".$emp_ids.")" :'')."
        ");
        $return_data['adv_refund']=$adv_refund->result_array();
        //Advance refund
        // Repair order delivered
        $repair_order_delivered=$this->db->query("SELECT IFNULL(SUM(c.rate),0) as amount,IFNULL(SUM(c.weight),0) as weight,IFNULL(SUM(c.totalitems),0) as pcs,b.bill_id
        FROM ret_billing b
        LEFT JOIN customerorderdetails c ON c.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
        WHERE b.bill_type=11 and b.bill_status=1 AND c.ortertype=3 and c.orderstatus=5
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        ".($counter_id!='' && $counter_id!=0 ? " and b.counter_id=".$counter_id."" :'')."
        ".($floor_id!='' && $floor_id!=0 ? " and f.floor_id=".$floor_id."" :'')."
         and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
         ".($emp_ids!="" ? " and b.id_employee in (".$emp_ids.")" :'')."
         ");
        //print_r($this->db->last_query());exit;
        $return_data['repair_order_delivered']=$repair_order_delivered->row_array();
        $otherExpenses=$this->db->query("SELECT IFNULL(SUM(r.amount),0) as tot_amount
        FROM ret_issue_receipt r
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=r.id_branch
        WHERE r.type=1 AND r.issue_type=1 AND r.bill_status=1
        and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
         ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR  ( IF(r.is_eda=2,date(day_close.entry_date) = date(r.bill_date),'') and r.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2 and date(day_close.entry_date) = date(r.bill_date)") )."         
        ".($emp_ids!="" ? " and r.created_by in (".$emp_ids.")" :'')."
        ");
        $return_data['other_expense']=$otherExpenses->row_array();
		//CHIT DETAILS
		$chit_credit_collection = $this->db->query("SELECT p.id_payment,IFNULL(SUM(d.payment_amount),0) as payment_amount,d.payment_mode
		FROM payment_mode_details d
		LEFT JOIN payment p ON p.id_payment = d.id_payment
		WHERE d.payment_status = 1 AND (date(p.date_payment) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')  AND p.added_by = 0
		".($id_branch!='' && $id_branch>0 ? " and p.id_branch=".$id_branch."" :'')."
		GROUP BY d.payment_mode Order by d.payment_mode ASC");
		//print_r($this->db->last_query());exit;
        $return_data['chit_credit_collection']= $chit_credit_collection->result_array();
		//CHIT DETAILS
        //EDA Payments
        $sql = $this->db->query("SELECT id_branch,is_day_closed,entry_date from ret_day_closing where id_branch=".$id_branch);
        $cur_entry_date = $sql->row()->entry_date;
        $eda_estimations = $this->db->query("SELECT ifnull(sum(estimate_final_amt),0) as collectedamt FROM  ret_estimation WHERE is_eda_approved =1 AND est_date = '".$cur_entry_date."'");
        if($eda_estimations->num_rows() > 0){
            $return_data['eda_payments'] = $eda_estimations->row()->collectedamt;
        }else{
            $return_data['eda_payments'] = 0;
        }
		$metal_rates=$this->db->query("SELECT *
		FROM metal_rates m
		WHERE date(m.updatetime)='".date('Y-m-d',strtotime($FromDt))."'");
		$return_data['metal_rates']=$metal_rates->row_array();
        $eda_sales = $this->db->query("SELECT met.id_metal, met.metal, metal_code, ifnull(eda.grosswt, 0) as grosswt,
        ifnull(eda.netwt, 0) as netwt, ifnull(eda.pieces, 0) as pieces, ifnull(eda.collectedamt, 0) as collectedamt
        FROM `metal` as met
        LEFT JOIN (SELECT mt.id_metal, mt.metal, sum(esitm.gross_wt) as grosswt,
                sum(esitm.net_wt) as netwt, sum(esitm.piece) as pieces,
                ifnull(sum(esitm.item_cost - esitm.item_total_tax),0) as collectedamt
                FROM `ret_estimation_items` esitm
                LEFT JOIN ret_estimation as est ON est.estimation_id = esitm.esti_id
                LEFT JOIN ret_product_master as pr ON pr.pro_id = esitm.product_id
                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                LEFT JOIN metal as mt ON mt.id_metal = cat.id_metal
                WHERE est.is_eda = 1 AND est.is_eda_approved = 1 AND est.id_branch = $id_branch  AND date(est.est_date) = '".$cur_entry_date."'
                GROUP BY cat.id_metal) eda ON eda.id_metal = met.id_metal
        WHERE metal_status = 1 and eda.grosswt > 0
        ".($id_mtal !='' ? " and met.id_metal=".$id_mtal."" :'')."
        GROUP BY id_metal "); //HAVING grosswt > 0 OR netwt > 0 OR pieces > 0
$return_data['eda_sales_abstract'] = $eda_sales->result_array();
$eda_purchase = $this->db->query("SELECT met.id_metal, met.metal, metal_code, ifnull(eda.grosswt, 0) as grosswt, ifnull(eda.netwt, 0) as netwt,
                ifnull(eda.pieces, 0) as pieces,
                ifnull(eda.purchaseamt, 0) as purchaseamt
                FROM `metal` as met
                LEFT JOIN (SELECT mt.id_metal, mt.metal, sum(esitm.gross_wt) as grosswt, sum(esitm.net_wt) as netwt,
                            sum(esitm.piece) as pieces, sum(amount) as purchaseamt
                            FROM `ret_estimation_old_metal_sale_details` esitm
                            LEFT JOIN ret_estimation as est ON est.estimation_id = esitm.est_id
                            LEFT JOIN metal as mt ON mt.id_metal = esitm.id_category
                            WHERE est.is_eda = 1 AND est.is_eda_approved = 1 AND est.id_branch = $id_branch AND date(est.est_date) = '".$cur_entry_date."'
                            GROUP BY mt.id_metal ORDER BY mt.id_metal) eda ON eda.id_metal = met.id_metal
                WHERE metal_status = 1 and eda.grosswt > 0
                ".($id_mtal !='' ? " and met.id_metal=".$id_mtal."" :'')."
                GROUP BY id_metal");  // HAVING grosswt > 0 OR netwt > 0 OR pieces > 0
            $return_data['eda_purchase_abstract'] = $eda_purchase->result_array();
		if($id_branch!='' && $id_branch!=0){
            $dayClose = $this->db->query("SELECT id_branch,is_day_closed,entry_date from ret_day_closing where id_branch=".$id_branch);
    	    $cur_entry_date = $dayClose->row()->entry_date;
    	    if($profile_settings['allow_bill_type']==2)
    	    {
    	         if($FromDt != $cur_entry_date)
    	         {
    	             $return_data = array("item_details" => array(), "voucher_details" => array(), "chit_details" => array(),"return_details"=>array(),'payment_details'=>array(),'advance_detals'=>array(),'branch_transfer_details'=>array(),'due_details'=>array(),'credit_details'=>array(),'metal_rates'=>array(),"old_matel_details"=>array(),"advance_adjusted"=>array(),"wallet_adjusted"=>array(),"general_adv_details"=>array(),"general_pay"=>array(),"order_adj"=>array(),"home_bill"=>array(),"partly_sale"=>array(),"bill_det"=>array(),"adv_refund"=>array(),"general_credit_collection"=>array(),"other_expense"=>array(),"advance_deposit"=>array(),"repair_order_delivered"=>array());
    	         }
    	    }
        }
		return $return_data;
	}
	function get_profile_settings($id_profile)
    {
       $sql=$this->db->query("SELECT * FROM `profile` WHERE id_profile=".$id_profile."");
       return $sql->row_array();
    }
	function getOldMetalPurchaseAmount($bill_id)
	{
	    $sql=$this->db->query("SELECT IFNULL(SUM(s.rate),0) as purchase_amount
        FROM ret_bill_old_metal_sale_details s
        WHERE s.bill_id=".$bill_id);
        return $sql->row_array();
	}
	function getCompanyDetails($id_branch)
	{
		if($id_branch=='')
		{
			$sql = $this->db->query("Select  c.id_company,c.company_name,c.gst_number,c.short_code,c.pincode,c.mobile,c.whatsapp_no,c.phone,c.email,c.website,c.address1,c.address2,c.id_country,c.id_state,c.id_city,ct.name as city,s.name as state,cy.name as country,cs.currency_symbol,cs.currency_name,cs.mob_code,cs.mob_no_len,c.mail_server,c.mail_password,c.send_through,c.mobile1,c.phone1,c.smtp_user,c.smtp_pass,c.smtp_host,c.server_type,cs.login_branch
			from company c
			join chit_settings cs
			left join country cy on (c.id_country=cy.id_country)
			left join state s on (c.id_state=s.id_state)
			left join city ct on (c.id_city=ct.id_city)");
		}
		else
		{
			$sql=$this->db->query("select b.name,b.address1,b.address2,
				cy.name as country,ct.name as city,s.name as state,b.pincode
				from branch b
				left join country cy on (b.id_country=cy.id_country)
				left join state s on (b.id_state=s.id_state)
				left join city ct on (b.id_city=ct.id_city)");
		}
		$result = $sql->row_array();
		return $result;
	}
	function getallCategory()
	{
		$data=$this->db->query("SELECT c.id_ret_category,c.name as category_name,c.id_metal,c.cat_code from ret_category c");
		return $data->result_array();
	}
/*	function getBranchTransReport($filter){
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$sql = $this->db->query("SELECT
									sum(IFNULL(grs_wt,0)) as grs_wt,
									sum(IFNULL(net_wt,0)) as net_wt,
									sum(IFNULL(pieces,0)) as pieces,
									name as branch,DATE_FORMAT(created_time,'%d-%m-%Y') as created_time
								FROM ret_branch_transfer bt
									LEFT JOIN branch b on b.id_branch = bt.transfer_to_branch
								WHERE is_other_issue = 0 AND (date(created_time) BETWEEN '".$FromDt."' AND '".$ToDt."')". ($filter['id_branch'] > 0 && $filter['id_branch'] != '' ? ' AND bt.transfer_to_branch ='.$filter['id_branch'] :'')."
								GROUP BY transfer_to_branch"
								);
		return $sql->result_array();
	}*/
	// function getBranchTransReport($data)
	// {
    //     $returnData = array();
	//     if($_POST['dt_range'] != ''){
    //     $dateRange = explode('-',$_POST['dt_range']);
    //     $from = str_replace('/','-',$dateRange[0]);
    //     $to = str_replace('/','-',$dateRange[1]);
    //     $d1 = date_create($from);
    //     $d2 = date_create($to);
    //     $FromDt = date_format($d1,"Y-m-d");
    //     $ToDt = date_format($d2,"Y-m-d");
    //     }
    //     $multiple_id_metal = implode(',',$data['id_metal']);
    //     if($multiple_id_metal!='')
    //     {
    //         $id_metal = $multiple_id_metal;
    //     }
    //     else
    //     {
    //         $id_metal = $data['id_metal'];
    //     }
    //     $multiple_id_section = implode(',',$data['id_section']);
    //     if($multiple_id_section!='')
    //     {
    //         $id_section = $multiple_id_section;
    //     }
    //     else
    //     {
    //         $id_section = $data['id_section'];
    //     }
    //     $multiple_id_cat = implode(',',$data['id_category']);
    //     if($multiple_id_cat!='')
    //     {
    //         $id_category = $multiple_id_cat;
    //     }
    //     else
    //     {
    //         $id_category = $data['id_category'];
    //     }
    //     if($data['branchtranstype'] == 1)
	// 	{
	// 		$returnData = array();
	// 		$sql= $this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(tag.piece),0) as pieces,
	// 		IFNULL(SUM(tag.net_wt),0) as net_wt,IFNULL(SUM(tag.gross_wt),0) as grs_wt,
	// 		pro.product_name,IFNULL(tag.tag_code,'-') as tag_code,
	// 		date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
	// 		if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
	// 		date_format(b.approved_datetime,'%d-%m-%Y') as approved_datetime,date_format(dwnload_datetime,'%d-%m-%Y') as dwnload_datetime,
	// 		concat(e.firstname,'-',e.emp_code) as created_emp,concat(emp.firstname,'-',emp.emp_code) as downloaded_emp,
    //         IFNULL(dia.dia_wt,'') as dia_wt,IFNULL(sec.section_name,'-') as section
	// 		FROM ret_branch_transfer b
	// 		LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
	// 		LEFT JOIN ret_taging tag ON tag.tag_id=t.tag_id
	// 		LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
	// 		LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
	// 		LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
	// 		left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
	// 		LEFT JOIN employee e on e.id_employee=b.approved_by
	// 		LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
    //         LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
    //         LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
    //         FROM `ret_taging_stone` as retst
    //         LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
    //         LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
    //         WHERE st.stone_type = 1
    //        ".($data['report_type'] == 2 ? "": "Group by tag_id")."
    //         ) as dia ON dia.tag_id = tag.tag_id
	// 		WHERE b.transfer_item_type=1
	// 		".($id_category!='' && $id_category!=0 ? " and c.id_ret_category in (".$id_category.")" :'')."
	// 		".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
	// 		".($id_section!='' && $id_section!=0 ? " and tag.id_section in (".$id_section.")" :'')."
	// 		".($data['id_branch']!='' && $data['id_branch']!=0 ? ($data['transtype'] == 1 ? " and b.transfer_from_branch=".$data['id_branch']."" :" and b.transfer_to_branch=".$data['id_branch']."") :'')."
	// 		".($data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
	// 		".($data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
	// 		".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
	// 		".($data['report_type'] == 2 ? " GROUP by b.branch_transfer_id ": "GROUP by tag.tag_code " )."
	// 		");
	// 		$returnData = $sql->result_array();
	// 		// print_r($this->db->last_query());exit;
    //     }
    //     else if ($data['branchtranstype'] == 2)
	// 	{
	// 		$sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(b.pieces),0) as pieces,
	// 		IFNULL(SUM(b.net_wt),0) as net_wt,IFNULL(SUM(b.grs_wt),0) as grs_wt,
	// 		pro.product_name,
	// 		date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,nt.product,
	// 		if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
	// 		date_format(b.approved_datetime,'%d-%m-%Y') as approved_datetime,date_format(dwnload_datetime,'%d-%m-%Y') as dwnload_datetime,
	// 		concat(e.firstname,'-',e.emp_code) as created_emp,concat(emp.firstname,'-',emp.emp_code) as downloaded_emp,
	// 		''as tag_code,'' as dia_wt,'' as section
	// 		FROM ret_branch_transfer b
	// 		LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
	// 		LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = b.id_nontag_item
	// 		LEFT JOIN ret_product_master as pro ON pro.pro_id = nt.product
	// 		LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
	// 		LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
	// 		left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
	// 		LEFT JOIN employee e on e.id_employee=b.approved_by
	// 		LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
	// 		WHERE b.transfer_item_type = 2 AND b.id_nontag_item IS NOT NULL  AND b.status != 3
	// 		".($id_category!='' && $id_category!=0 ? " and c.id_ret_category in (".$id_category.")" :'')."
	// 		".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
	// 		".($id_section!='' && $id_section!=0 ? " and nt.id_section in (".$id_section.")" :'')."
	// 		".($data['id_branch']!='' && $data['id_branch']!=0 ? ($data['transtype'] == 1 ? " and b.transfer_from_branch=".$data['id_branch']."" :" and b.transfer_to_branch=".$data['id_branch']."") :'')."
	// 		".($data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
	// 		".($data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
	// 		".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
	// 		".($data['report_type'] == 2 ? " GROUP by b.branch_transfer_id ": "GROUP by tag.tag_code " )."");
	// 		//print_r($this->db->last_query());exit;
	// 		$returnData = $sql->result_array();
    //     }
    //     else if ($data['branchtranstype'] == 3) {
    //     $sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(tag.piece),0) as pieces,
    //     IFNULL(SUM(trtag.net_wt),0) as net_wt,IFNULL(SUM(trtag.gross_wt),0) as grs_wt,pro.product_name,
    //     date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
	//     if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
	//     date_format(b.approved_datetime,'%d-%m-%Y') as approved_datetime,date_format(dwnload_datetime,'%d-%m-%Y') as dwnload_datetime,
	//     concat(e.firstname,'-',e.emp_code) as created_emp,concat(emp.firstname,'-',emp.emp_code) as downloaded_emp,
    //     IFNULL(tag.tag_code,'-') as tag_code,IFNULL(dia.dia_wt,'') as dia_wt,
    //     IFNULL(sec.section_name,'-') as section
    //     FROM ret_branch_transfer b
    //     LEFT JOIN ret_brch_transfer_old_metal trtag ON trtag.transfer_id = b.branch_transfer_id
    //     LEFT JOIN ret_taging tag ON tag.tag_id=trtag.tag_id
    //     LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
    //     LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
    //     LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
    //     LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
    //     left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
    //     LEFT JOIN employee e on e.id_employee=b.approved_by
    //     LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
    //     LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
    //      FROM `ret_taging_stone` as retst
    //     LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
    //     LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
    //     WHERE st.stone_type = 1
    //     ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
    //         ) as dia ON dia.tag_id = tag.tag_id
    //     WHERE b.transfer_item_type = 3 AND trtag.item_type = 2  AND b.status != 3
    //     ".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
    //     ".($id_section!='' && $id_section!=0 ? " and tag.id_section in (".$id_section.")" :'')."
    //     ".($data['id_branch']!='' && $data['id_branch']!=0 ? ($data['transtype'] == 1 ? " and b.transfer_from_branch=".$data['id_branch']."" :" and b.transfer_to_branch=".$data['id_branch']."") :'')."
    //     ".($data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
    //     ".($data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
	// 	".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
    //     ".($data['report_type'] == 2 ? " GROUP by b.branch_transfer_id ": "GROUP by tag.tag_code " )."");
	//     //print_r($this->db->last_query());exit;
    //     $returnData = $sql->result_array();
    //     }
    //     else if ($data['branchtranstype'] == 4) {
    //     $sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(tag.piece),0) as pieces,
    //     IFNULL(SUM(trtag.net_wt),0) as net_wt,IFNULL(SUM(trtag.gross_wt),0) as grs_wt,
    //     pro.product_name,
    //     date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
	//     if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
	//     date_format(b.approved_datetime,'%d-%m-%Y') as approved_datetime,date_format(dwnload_datetime,'%d-%m-%Y') as dwnload_datetime,
	//     concat(e.firstname,'-',e.emp_code) as created_emp,concat(emp.firstname,'-',emp.emp_code) as downloaded_emp,
    //     IFNULL(tag.tag_code,'-') as tag_code,IFNULL(dia.dia_wt,'') as dia_wt,IFNULL(sec.section_name,'-') as section
    //     FROM ret_branch_transfer b
    //     LEFT JOIN ret_brch_transfer_old_metal trtag ON trtag.transfer_id = b.branch_transfer_id
    //     LEFT JOIN ret_taging tag ON tag.tag_id=trtag.tag_id
    //     LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
    //     LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
    //     LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
    //     left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
    //     LEFT JOIN employee e on e.id_employee=b.approved_by
    //     LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
    //     LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
    //     LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
    //      FROM `ret_taging_stone` as retst
    //     LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
    //     LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
    //     WHERE st.stone_type = 1
    //     ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
    //        ) as dia ON dia.tag_id = tag.tag_id
    //     WHERE b.transfer_item_type = 3 AND trtag.item_type = 3  AND b.status != 3
    //     ".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
    //     ".($data['id_branch']!='' && $data['id_branch']!=0 ? ($data['transtype'] == 1 ? " and b.transfer_from_branch=".$data['id_branch']."" :" and b.transfer_to_branch=".$data['id_branch']."") :'')."
    //     ".($data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
    //     ".($data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
	// 	".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
    //     ".($data['report_type'] == 2 ? " GROUP by b.branch_transfer_id ": "GROUP by tag.tag_code " )."");
	//     //print_r($this->db->last_query());exit;
    //     $returnData = $sql->result_array();
    //     }
    //     else if ($data['branchtranstype'] == 5) {
	// 		$sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(osl.piece),0) as pieces,
	// 		IFNULL(SUM(osl.net_wt),0) as net_wt,IFNULL(SUM(osl.gross_wt),0) as grs_wt,
	// 		pro.product_name,IFNULL(tag.tag_code,'-') as tag_code,
	// 		date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
	// 		if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
	// 		date_format(b.approved_datetime,'%d-%m-%Y') as approved_datetime,date_format(dwnload_datetime,'%d-%m-%Y') as dwnload_datetime,
	// 		concat(e.firstname,'-',e.emp_code) as created_emp,concat(emp.firstname,'-',emp.emp_code) as downloaded_emp,
    //         IFNULL(dia.dia_wt,'') as dia_wt,IFNULL(sec.section_name,'-') as section
	// 		FROM ret_branch_transfer b
	// 		LEFT JOIN ret_brch_transfer_old_metal trtag ON trtag.transfer_id = b.branch_transfer_id
	// 		LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
	// 		LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
	// 		LEFT JOIN ret_taging tag ON tag.tag_id=trtag.tag_id
	// 		LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
	// 		LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
	// 		LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
	// 		left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
	// 		LEFT JOIN employee e on e.id_employee=b.approved_by
	// 		LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
    //         LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
    //         LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
    //         FROM `ret_taging_stone` as retst
    //         LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
    //         LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
    //         WHERE st.stone_type = 1
    //     ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
    //        ) as dia ON dia.tag_id = tag.tag_id
	// 		WHERE b.transfer_item_type = 3 AND trtag.item_type = 1  AND b.status != 3
	// 		".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
	// 		".($data['id_branch']!='' && $data['id_branch']!=0 ? ($data['transtype'] == 1 ? " and b.transfer_from_branch=".$data['id_branch']."" :" and b.transfer_to_branch=".$data['id_branch']."") :'')."
	// 		".($data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
	// 		".($data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
	// 		".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
	// 		".($data['report_type'] == 2 ? " GROUP by b.branch_transfer_id ": "GROUP by tag.tag_code " )."
	// 		");
	// 		//print_r($this->db->last_query());exit;
	// 		$returnData = $sql->result_array();
	// 	}
    //    else if ($data['branchtranstype'] == 6) {
    //     $sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(rbt.no_of_pcs),0) as pieces,
    //     rtm.name as item_name,
    //     date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,
	//     if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
	//     date_format(b.approved_datetime,'%d-%m-%Y') as approved_datetime,date_format(dwnload_datetime,'%d-%m-%Y') as dwnload_datetime,
	//     concat(e.firstname,'-',e.emp_code) as created_emp,concat(emp.firstname,'-',emp.emp_code) as downloaded_emp,
    //     '' as dia_wt,'' as section,'' as product_name
    //     FROM ret_branch_transfer b
    //     LEFT JOIN ret_branch_transfer_other_inventory rbt ON rbt.branch_transfer_id=b.branch_transfer_id
    //     LEFT JOIN ret_other_inventory_item rtm ON rtm.id_other_item=rbt.id_other_inv_item
    //     LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
    //     left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
    //     LEFT JOIN employee e on e.id_employee=b.approved_by
    //     LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
    //     WHERE  b.transfer_item_type=4
    //     ".($data['id_branch']!='' && $data['id_branch']!=0 ? ($data['transtype'] == 1 ? " and b.transfer_from_branch=".$data['id_branch']."" :" and b.transfer_to_branch=".$data['id_branch']."") :'')."
    //     ".($data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
    //     ".($data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
    //     ".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
    //     GROUP by b.branch_transfer_id");
	//     //  print_r($this->db->last_query());exit;
    //     $returnData = $sql->result_array();
    //    }
	//     else
	// 	{
    //     $sql= $this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(tag.piece),0) as pieces,
    //     IFNULL(SUM(tag.net_wt),0) as net_wt,IFNULL(SUM(tag.gross_wt),0) as grs_wt,
    //     pro.product_name,IFNULL(tag.tag_code,'-') as tag_code,
    //     date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
	//     if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
	//     date_format(b.approved_datetime,'%d-%m-%Y') as approved_datetime,date_format(dwnload_datetime,'%d-%m-%Y') as dwnload_datetime,
	//     concat(e.firstname,'-',e.emp_code) as created_emp,concat(emp.firstname,'-',emp.emp_code) as downloaded_emp,
    //     IFNULL(dia.dia_wt,'') as dia_wt,IFNULL(sec.section_name,'-') as section
    //     FROM ret_branch_transfer b
    //     LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
    //     LEFT JOIN ret_taging tag ON tag.tag_id=t.tag_id
    //     LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
    //     LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
    //     LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
    //     left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
    //     LEFT JOIN employee e on e.id_employee=b.approved_by
    //     LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
    //     LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
    //     LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
    //      FROM `ret_taging_stone` as retst
    //     LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
    //     LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
    //     WHERE st.stone_type = 1
    //     ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
    //     ) as dia ON dia.tag_id = tag.tag_id
    //     WHERE b.transfer_item_type=1
    //     ".($id_category!='' && $id_category!=0 ? " and c.id_ret_category in (".$id_category.")" :'')."
    //     ".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
    //     ".($id_section!='' && $id_section!=0 ? " and tag.id_section in (".$id_section.")" :'')."
    //     ".($data['id_branch']!='' && $data['id_branch']!=0 ? ($data['transtype'] == 1 ? " and b.transfer_from_branch=".$data['id_branch']."" :" and b.transfer_to_branch=".$data['id_branch']."") :'')."
    //     ".($data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
    //     ".($data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
    //     ".($data['report_type'] == 2 ? " GROUP by b.branch_transfer_id ": "GROUP by tag.tag_code " )."
    //     ".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
    //     ");
    //     $returnData = $sql->result_array();
    //    }
    //     // print_r($this->db->last_query());exit;
    //     return $returnData;
	// }
    function getBranchTransReport($data)
	{
        $returnData = array();
        $FromDt = $data['from_date'] ;
        $ToDt = $data['to_date'];
        $multiple_id_metal = implode(',',$data['id_metal']);
        if($multiple_id_metal!='')
        {
            $id_metal = $multiple_id_metal;
        }
        else
        {
            $id_metal = $data['id_metal'];
        }
        $multiple_id_section = implode(',',$data['id_section']);
        if($multiple_id_section!='')
        {
            $id_section = $multiple_id_section;
        }
        else
        {
            $id_section = $data['id_section'];
        }
        $multiple_id_cat = implode(',',$data['id_category']);
        if($multiple_id_cat!='')
        {
            $id_category = $multiple_id_cat;
        }
        else
        {
            $id_category = $data['id_category'];
        }
        if($data['branchtranstype'] == 1)
		{
			$returnData = array();
            $sql= $this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(tag.piece),0) as pieces,
            IFNULL(SUM(tag.net_wt),0) as net_wt,IFNULL(SUM(tag.gross_wt),0) as grs_wt,
            pro.product_name,IFNULL(tag.tag_code,'-') as tag_code,c.id_metal,
            date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
            if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
            IFNULL(date_format(b.approved_datetime,'%d-%m-%Y'),'') as approved_datetime,IFNULL(date_format(dwnload_datetime,'%d-%m-%Y'),'') as dwnload_datetime,
            IFNULL(concat(e.firstname,'-',e.emp_code),'') as created_emp,IFNULL(concat(emp.firstname,'-',emp.emp_code),'') as downloaded_emp,
            IFNULL(dia.dia_wt,0) as dia_wt,IFNULL(sec.section_name,'-') as section,IFNULL(stn.stn_wt,0) as stn_wt,
            IFNULL(po.po_ref_no,'') as po_ref_no,IFNULL(date_format(po.po_date,'%d-%m-%Y'),'') as po_date,IFNULL(des.design_name,'') as design_name,
            IFNULL(tag.old_tag_id,'-') as old_tag_id,IFNULL(pur.purity,'')as purity,pro.stone_type
            FROM ret_branch_transfer b
			LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
			LEFT JOIN ret_taging tag ON tag.tag_id=t.tag_id
            LEFT JOIN ret_lot_inwards ld ON ld.lot_no = tag.tag_lot_id
            LEFT JOIN ret_purchase_order po ON po.po_id = ld.po_id
			LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
            LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
			LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
			LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
			left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
			LEFT JOIN employee e on e.id_employee=b.approved_by
			LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
            LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
            LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
            LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
            FROM `ret_taging_stone` as retst
            LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
            LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
            WHERE st.stone_type = 1
           ".($data['report_type'] == 2 ? "": "Group by tag_id")."
            ) as dia ON dia.tag_id = tag.tag_id
            LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as stn_wt
            FROM `ret_taging_stone` as retst
            LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
            LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
            WHERE st.stone_type != 1
           ".($data['report_type'] == 2 ? "": "Group by tag_id")."
            ) as stn ON stn.tag_id = tag.tag_id
			WHERE b.transfer_item_type=1  and b.status!=3
            ".($data['stock_type']==0 ? "and b.is_other_issue = 0" : "and b.is_other_issue = 1" )."
			".($id_category!='' && $id_category!=0 ? " and c.id_ret_category in (".$id_category.")" :'')."
			".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
			".($id_section!='' && $id_section!=0 ? " and tag.id_section in (".$id_section.")" :'')."
			".($data['from_branch']!='' && $data['from_branch']!=0 ? "and b.transfer_from_branch =".$data['from_branch']."":"")."
			".($data['to_branch']!='' && $data['to_branch']!=0 ? "and b.transfer_to_branch =".$data['to_branch']."":"")."
			".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
            ".($data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['report_type'] == 1 ? "GROUP by tag.tag_code " : ($data['group_by'] ==  1 ? "GROUP by b.branch_transfer_id":($data['group_by'] ==  2 ? "GROUP by tag.id_section" : "GROUP by tag.product_id")))."
            ");
			// $returnData = $sql->result_array();
            // $result=$sql->result_array();
            $result = $sql->result_array();
            $returnData = [];
            foreach ($result as $items) {
                $Group_by = '';
                if ($data['group_by'] == 1) {
                    $Group_by = $items[''];
                } elseif ($data['group_by'] == 2) {
                    $Group_by = $items['section'];
                } elseif ($data['group_by'] == 3) {
                    $Group_by = $items['product_name'];
                }
                $returnData[$Group_by][] = $items;
            }
        }
        // else if ($data['branchtranstype'] == 2)
		// {
		// 	$sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(b.pieces),0) as pieces,
		// 	IFNULL(SUM(b.net_wt),0) as net_wt,IFNULL(SUM(b.grs_wt),0) as grs_wt,
        //     IFNULL(pro.product_name,'') as product_name,
		// 	date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,nt.product,
		// 	if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
        //     IFNULL(date_format(b.approved_datetime,'%d-%m-%Y') ,'')as approved_datetime, IFNULL(date_format(dwnload_datetime,'%d-%m-%Y'),'')as dwnload_datetime,
        //     IFNULL(concat(e.firstname,'-',e.emp_code),'') as created_emp, IFNULL(concat(emp.firstname,'-',emp.emp_code),'') as downloaded_emp,
		// 	''as tag_code, 0 as dia_wt,'' as section,0 as stn_wt,'' as old_tag_id,
        //     ''as po_ref_no,'' as po_date,IFNULL(des.design_name,'') as design_name,'' as purity
		// 	FROM ret_branch_transfer b
		// 	LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
		// 	LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = b.id_nontag_item
        //     LEFT JOIN ret_design_master des ON des.design_no = nt.design
		// 	LEFT JOIN ret_product_master as pro ON pro.pro_id = nt.product
		// 	LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
		// 	LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
		// 	left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
		// 	LEFT JOIN employee e on e.id_employee=b.approved_by
		// 	LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
		// 	WHERE b.transfer_item_type = 2 AND b.id_nontag_item IS NOT NULL  AND b.status != 3
		// 	".($id_category!='' && $id_category!=0 ? " and c.id_ret_category in (".$id_category.")" :'')."
		// 	".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
		// 	".($id_section!='' && $id_section!=0 ? " and nt.id_section in (".$id_section.")" :'')."
        //     ".($data['from_branch']!='' && $data['from_branch']!=0 ? "and b.transfer_from_branch =".$data['from_branch']."":"")."
		// 	".($data['to_branch']!='' && $data['to_branch']!=0 ? "and b.transfer_to_branch =".$data['to_branch']."":"")."
        //     ".($data['brans_type'] == 1  || $FromDt!="" && $ToDt!=""  ? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
        //     ".($data['brans_type'] == 2 || $data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
		// 	".($data['brans_type'] == 3 || $data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
		// 	".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
        //     ".($data['report_type'] == 1 ? "GROUP by nt.id_nontag_item " : ($data['group_by'] ==  1 ? "GROUP by b.branch_transfer_id":($data['group_by'] ==  2 ? "GROUP by nt.id_section" : "GROUP by nt.product")))."
        //     ");
        //     //print_r($this->db->last_query());exit;
        //     $result = $sql->result_array();
        //     $returnData = [];
        //     foreach ($result as $items) {
        //         $Group_by = '';
        //         if ($data['group_by'] == 1) {
        //             $Group_by = $items[''];
        //         } elseif ($data['group_by'] == 2) {
        //             $Group_by = $items['section'];
        //         } elseif ($data['group_by'] == 3) {
        //             $Group_by = $items['product_name'];
        //         }
        //         $returnData[$Group_by][] = $items;
        //     }
        // }
        else if ($data['branchtranstype'] == 2)
        {
            $sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(rnt.pieces),0) as pieces,
            IFNULL(SUM(rnt.net_wt),0) as net_wt,IFNULL(SUM(rnt.grs_wt),0) as grs_wt,
            '' as product_name,
            date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,nt.product,
            if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
            IFNULL(date_format(b.approved_datetime,'%d-%m-%Y'),'') as approved_datetime,IFNULL(date_format(dwnload_datetime,'%d-%m-%Y'),'') as dwnload_datetime,
            IFNULL(concat(e.firstname,'-',e.emp_code),'') as created_emp,IFNULL(concat(emp.firstname,'-',emp.emp_code),'') as downloaded_emp,
            ''as tag_code, 0 as dia_wt,'' as section,0 as stn_wt,'' as old_tag_id,
            ''as po_ref_no,'' as po_date,'' as design_name,'' as purity,pro.stone_type
            FROM ret_branch_transfer b
            LEFT JOIN ret_brch_transfer_non_tag_items rnt ON rnt.transfer_id=b.branch_transfer_id
            LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
            LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = rnt.id_nontag_item
            LEFT JOIN ret_design_master des ON des.design_no = nt.design
            LEFT JOIN ret_product_master as pro ON pro.pro_id = nt.product
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
            LEFT JOIN employee e on e.id_employee=b.approved_by
            LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
            WHERE b.transfer_item_type = 2 AND rnt.id_nontag_item IS NOT NULL  AND b.status != 3
            ".($data['stock_type']==0 ? "and b.is_other_issue = 0" : "and b.is_other_issue = 1" )."
            ".($id_category!='' && $id_category!=0 ? " and c.id_ret_category in (".$id_category.")" :'')."
            ".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
            ".($id_section!='' && $id_section!=0 ? " and nt.id_section in (".$id_section.")" :'')."
            ".($data['from_branch']!='' && $data['from_branch']!=0 ? "and b.transfer_from_branch =".$data['from_branch']."":"")."
            ".($data['to_branch']!='' && $data['to_branch']!=0 ? "and b.transfer_to_branch =".$data['to_branch']."":"")."
            ".($data['brans_type'] == 1  || $FromDt!="" && $ToDt!=""  ? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['brans_type'] == 2 || $data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['brans_type'] == 3 || $data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
            ".($data['report_type'] == 1 ? "GROUP by rnt.id_nontag_item" : "GROUP by b.branch_transfer_id")."
            ");
            //print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            $returnData = [];
            foreach ($result as $items) {
                $Group_by = '';
                if ($data['group_by'] == 1) {
                    $Group_by = $items[''];
                } elseif ($data['group_by'] == 2) {
                    $Group_by = $items['section'];
                } elseif ($data['group_by'] == 3) {
                    $Group_by = $items['product_name'];
                }
                $returnData[$Group_by][] = $items;
            }
        }
        else if ($data['branchtranstype'] == 3) {
            $sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(tag.piece),0) as pieces,
            IFNULL(SUM(trtag.net_wt),0) as net_wt,IFNULL(SUM(trtag.gross_wt),0) as grs_wt, IFNULL(pro.product_name,'') as product_name,
            date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
            if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
            IFNULL(date_format(b.approved_datetime,'%d-%m-%Y'),'') as approved_datetime,IFNULL(date_format(dwnload_datetime,'%d-%m-%Y'),'') as dwnload_datetime,
            IFNULL(concat(e.firstname,'-',e.emp_code),'') as created_emp,IFNULL(concat(emp.firstname,'-',emp.emp_code) ,'')as downloaded_emp,
            IFNULL(tag.tag_code,'-') as tag_code,IFNULL(dia.dia_wt,0) as dia_wt,IFNULL(stn.stn_wt,0) as stn_wt,
            IFNULL(sec.section_name,'-') as section,IFNULL(po.po_ref_no,'') as po_ref_no,
            IFNULL(date_format(po.po_date,'%d-%m-%Y'),'') as po_date,IFNULL(des.design_name,'') as design_name,
            IFNULL(tag.old_tag_id,'-') as old_tag_id,IFNULL(pur.purity,'')as purity,pro.stone_type
            FROM ret_branch_transfer b
            LEFT JOIN ret_brch_transfer_old_metal trtag ON trtag.transfer_id = b.branch_transfer_id
            LEFT JOIN ret_taging tag ON tag.tag_id=trtag.tag_id
            LEFT JOIN ret_lot_inwards ld ON ld.lot_no = tag.tag_lot_id
            LEFT JOIN ret_purchase_order po ON po.po_id = ld.po_id
            LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
            LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
            LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
            LEFT JOIN employee e on e.id_employee=b.approved_by
            LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
            LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
            LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
            FROM `ret_taging_stone` as retst
            LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
            LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
            WHERE st.stone_type = 1
            ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
                ) as dia ON dia.tag_id = tag.tag_id
                LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as stn_wt
                FROM `ret_taging_stone` as retst
                LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                WHERE st.stone_type != 1
            ".($data['report_type'] == 2 ? "": "Group by tag_id")."
                ) as stn ON stn.tag_id = tag.tag_id
            WHERE b.transfer_item_type = 3 AND trtag.item_type = 2  AND b.status != 3
            ".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
            ".($id_section!='' && $id_section!=0 ? " and tag.id_section in (".$id_section.")" :'')."
            ".($data['from_branch']!='' && $data['from_branch']!=0 ? "and b.transfer_from_branch =".$data['from_branch']."":"")."
            ".($data['to_branch']!='' && $data['to_branch']!=0 ? "and b.transfer_to_branch =".$data['to_branch']."":"")."
            ".($data['brans_type'] == 1 || $FromDt!="" && $ToDt!=""  ? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['brans_type'] == 2 || $data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['brans_type'] == 3 || $data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
            ".($data['report_type'] == 1 ? "GROUP by tag.tag_code " : ($data['group_by'] ==  1 ? "GROUP by b.branch_transfer_id":($data['group_by'] ==  2 ? "GROUP by tag.id_section" : "GROUP by tag.product_id")))."
            ");
            //print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            $returnData = [];
            foreach ($result as $items) {
                $Group_by = '';
                if ($data['group_by'] == 1) {
                    $Group_by = $items[''];
                } elseif ($data['group_by'] == 2) {
                    $Group_by = $items['section'];
                } elseif ($data['group_by'] == 3) {
                    $Group_by = $items['product_name'];
                }
                $returnData[$Group_by][] = $items;
            }
        }
        else if ($data['branchtranstype'] == 4) {
            $sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(tag.piece),0) as pieces,
            IFNULL(SUM(trtag.net_wt),0) as net_wt,IFNULL(SUM(trtag.gross_wt),0) as grs_wt,
            IFNULL(pro.product_name,'') as product_name ,IFNULL(stn.stn_wt,0) as stn_wt,
            date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
            if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
            IFNULL( date_format(b.approved_datetime,'%d-%m-%Y'),'')as approved_datetime,  IFNULL(date_format(dwnload_datetime,'%d-%m-%Y'),'') as dwnload_datetime,
            IFNULL(concat(e.firstname,'-',e.emp_code),'') as created_emp,  IFNULL(concat(emp.firstname,'-',emp.emp_code),'')as downloaded_emp,
            IFNULL(tag.tag_code,'-') as tag_code,IFNULL(dia.dia_wt,0) as dia_wt,IFNULL(sec.section_name,'-') as section,
            IFNULL(po.po_ref_no,'') as po_ref_no,IFNULL(date_format(po.po_date,'%d-%m-%Y'),'') as po_date,
            IFNULL(des.design_name,'') as design_name,IFNULL(tag.old_tag_id,'-') as old_tag_id,
            IFNULL(pur.purity,'')as purity,pro.stone_type
            FROM ret_branch_transfer b
            LEFT JOIN ret_brch_transfer_old_metal trtag ON trtag.transfer_id = b.branch_transfer_id
            LEFT JOIN ret_taging tag ON tag.tag_id=trtag.tag_id
            LEFT JOIN ret_lot_inwards ld ON ld.lot_no = tag.tag_lot_id
            LEFT JOIN ret_purchase_order po ON po.po_id = ld.po_id
            LEFT JOIN ret_design_master des ON des.design_no = tag.design_id
            LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
            LEFT JOIN employee e on e.id_employee=b.approved_by
            LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
            LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
            LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
            LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
            FROM `ret_taging_stone` as retst
            LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
            LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
            WHERE st.stone_type = 1
            ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
            ) as dia ON dia.tag_id = tag.tag_id
            LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as stn_wt
            FROM `ret_taging_stone` as retst
            LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
            LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
            WHERE st.stone_type != 1
            ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
                ) as stn ON stn.tag_id = tag.tag_id
            WHERE b.transfer_item_type = 3 AND trtag.item_type = 3  AND b.status != 3
            ".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
            ".($data['from_branch']!='' && $data['from_branch']!=0 ? "and b.transfer_from_branch =".$data['from_branch']."":"")."
            ".($data['to_branch']!='' && $data['to_branch']!=0 ? "and b.transfer_to_branch =".$data['to_branch']."":"")."
            ".($data['brans_type'] == 1  || $FromDt!="" && $ToDt!=""  ? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['brans_type'] == 2 || $data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['brans_type'] == 3 || $data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
            ".($data['report_type'] == 1 ? "GROUP by tag.tag_code " : ($data['group_by'] ==  1 ? "GROUP by b.branch_transfer_id":($data['group_by'] ==  2 ? "GROUP by tag.id_section" : "GROUP by tag.product_id")))."
            ");
            //print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            $returnData = [];
            foreach ($result as $items) {
                $Group_by = '';
                if ($data['group_by'] == 1) {
                    $Group_by = $items[''];
                } elseif ($data['group_by'] == 2) {
                    $Group_by = $items['section'];
                } elseif ($data['group_by'] == 3) {
                    $Group_by = $items['product_name'];
                }
                $returnData[$Group_by][] = $items;
            }
        }
        else if ($data['branchtranstype'] == 5) {
                $sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(osl.piece),0) as pieces,
                IFNULL(SUM(osl.net_wt),0) as net_wt,IFNULL(SUM(osl.gross_wt),0) as grs_wt,
                IFNULL(pro.product_name,'') as product_name,IFNULL(tag.tag_code,'-') as tag_code,IFNULL(stn.stn_wt,0) as stn_wt,
                date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
                if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
                IFNULL(date_format(b.approved_datetime,'%d-%m-%Y'),'') as approved_datetime,IFNULL(date_format(dwnload_datetime,'%d-%m-%Y'),'')as dwnload_datetime,
                IFNULL(concat(e.firstname,'-',e.emp_code),'') as created_emp,IFNULL(concat(emp.firstname,'-',emp.emp_code),'') as downloaded_emp,
                IFNULL(dia.dia_wt,0) as dia_wt,IFNULL(sec.section_name,'-') as section,
                IFNULL(po.po_ref_no,'') as po_ref_no,IFNULL(date_format(po.po_date,'%d-%m-%Y'),'') as po_date,
                IFNULL(des.design_name,'') as design_name,IFNULL(tag.old_tag_id,'-') as old_tag_id,
                IFNULL(pur.purity,'')as purity,pro.stone_type
                FROM ret_branch_transfer b
                LEFT JOIN ret_brch_transfer_old_metal trtag ON trtag.transfer_id = b.branch_transfer_id
                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                LEFT JOIN ret_taging tag ON tag.tag_id=trtag.tag_id
                LEFT JOIN ret_lot_inwards ld ON ld.lot_no = tag.tag_lot_id
                LEFT JOIN ret_purchase_order po ON po.po_id = ld.po_id
                LEFT JOIN ret_design_master des ON des.design_no = tag.design_id
                LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
                LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
                LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                LEFT JOIN employee e on e.id_employee=b.approved_by
                LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
                LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
                LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
                FROM `ret_taging_stone` as retst
                LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                WHERE st.stone_type = 1
            ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
            ) as dia ON dia.tag_id = tag.tag_id
            LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as stn_wt
            FROM `ret_taging_stone` as retst
            LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
            LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
            WHERE st.stone_type != 1
            ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
                ) as stn ON stn.tag_id = tag.tag_id
                WHERE b.transfer_item_type = 3 AND trtag.item_type = 1  AND b.status != 3
                ".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
                ".($data['from_branch']!='' && $data['from_branch']!=0 ? "and b.transfer_from_branch =".$data['from_branch']."":"")."
                ".($data['to_branch']!='' && $data['to_branch']!=0 ? "and b.transfer_to_branch =".$data['to_branch']."":"")."
                ".($data['brans_type'] == 1 || $FromDt!="" && $ToDt!="" ? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                ".($data['brans_type'] == 2 || $data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                ".($data['brans_type'] == 3 || $data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                ".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
                ".($data['report_type'] == 1 ? "GROUP by tag.tag_code " : ($data['group_by'] ==  1 ? "GROUP by b.branch_transfer_id":($data['group_by'] ==  2 ? "GROUP by tag.id_section" : "GROUP by tag.product_id")))."
                ");
                //print_r($this->db->last_query());exit;
                $result = $sql->result_array();
                $returnData = [];
                foreach ($result as $items) {
                    $Group_by = '';
                    if ($data['group_by'] == 1) {
                        $Group_by = $items[''];
                    } elseif ($data['group_by'] == 2) {
                        $Group_by = $items['section'];
                    } elseif ($data['group_by'] == 3) {
                        $Group_by = $items['product_name'];
                    }
                    $returnData[$Group_by][] = $items;
                }
            }
        else if ($data['branchtranstype'] == 6) {
            $sql =$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(rbt.no_of_pcs),0) as pieces,
            rtm.name as item_name,
            date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,
            if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
            IFNULL(date_format(b.approved_datetime,'%d-%m-%Y'),'') as approved_datetime,IFNULL(date_format(dwnload_datetime,'%d-%m-%Y'),'')as dwnload_datetime,
            IFNULL(concat(e.firstname,'-',e.emp_code),'') as created_emp, IFNULL(concat(emp.firstname,'-',emp.emp_code),'') as downloaded_emp,
            0 as dia_wt,'' as section,'' as product_name, 0 as stn_wt,
            ''as po_ref_no,'' as po_date,'' as design_name,'' as old_tag_id,'' as purity,pro.stone_type
            FROM ret_branch_transfer b
            LEFT JOIN ret_branch_transfer_other_inventory rbt ON rbt.branch_transfer_id=b.branch_transfer_id
            LEFT JOIN ret_other_inventory_item rtm ON rtm.id_other_item=rbt.id_other_inv_item
            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
            LEFT JOIN employee e on e.id_employee=b.approved_by
            LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
            WHERE  b.transfer_item_type=4
            ".($data['from_branch']!='' && $data['from_branch']!=0 ? "and b.transfer_from_branch =".$data['from_branch']."":"")."
            ".($data['to_branch']!='' && $data['to_branch']!=0 ? "and b.transfer_to_branch =".$data['to_branch']."":"")."
            ".($data['brans_type'] == 1 || $FromDt!="" && $ToDt!=""? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['brans_type'] == 2 || $data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['brans_type'] == 3 || $data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
            ".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
            GROUP by b.branch_transfer_id");
            //  print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            $returnData = [];
            foreach ($result as $items) {
                $Group_by = '';
                if ($data['group_by'] == 1) {
                    $Group_by = $items[''];
                } elseif ($data['group_by'] == 2) {
                    $Group_by = $items['section'];
                } elseif ($data['group_by'] == 3) {
                    $Group_by = $items['product_name'];
                }
                $returnData[$Group_by][] = $items;
            }
            }
            else
            {
                $sql= $this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,IFNULL(SUM(tag.piece),0) as pieces,
                IFNULL(SUM(tag.net_wt),0) as net_wt,IFNULL(SUM(tag.gross_wt),0) as grs_wt,
                pro.product_name,IFNULL(tag.tag_code,'-') as tag_code,IFNULL(stn.stn_wt,0) as stn_wt,
                date_format(b.created_time,'%d-%m-%Y') as date_add,br.name as from_branch,brc.name as to_branch,tag.product_id,
                if(b.status=1,'Yet to Approve',if(b.status=2,'In Transit',if(b.status=3,'Rejected','Stock Updated'))) as bt_status,
                date_format(b.approved_datetime,'%d-%m-%Y') as approved_datetime,date_format(dwnload_datetime,'%d-%m-%Y') as dwnload_datetime,
                concat(e.firstname,'-',e.emp_code) as created_emp,concat(emp.firstname,'-',emp.emp_code) as downloaded_emp,
                IFNULL(dia.dia_wt,0) as dia_wt,IFNULL(sec.section_name,'-') as section,IFNULL(tag.old_tag_id,'-') as old_tag_id,
                IFNULL(po.po_ref_no,'') as po_ref_no,IFNULL(date_format(po.po_date,'%d-%m-%Y'),'') as po_date,IFNULL(des.design_name,'') as design_name,
                IFNULL(pur.purity,'')as purity,pro.stone_type
                FROM ret_branch_transfer b
                LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
                LEFT JOIN ret_taging tag ON tag.tag_id=t.tag_id
                LEFT JOIN ret_lot_inwards ld ON ld.lot_no = tag.tag_lot_id
                LEFT JOIN ret_purchase_order po ON po.po_id = ld.po_id
                LEFT JOIN ret_design_master des ON des.design_no = tag.design_id
                LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
                LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
                LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                LEFT JOIN employee e on e.id_employee=b.approved_by
                LEFT JOIN employee emp on emp.id_employee=b.downloaded_by
                LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
                LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
                FROM `ret_taging_stone` as retst
                LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                WHERE st.stone_type = 1
                ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
                ) as dia ON dia.tag_id = tag.tag_id
                LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as stn_wt
                FROM `ret_taging_stone` as retst
                LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                WHERE st.stone_type != 1
                ".($data['report_type'] == 2 ? "": "Group by tag_id" )."
                ) as stn ON stn.tag_id = tag.tag_id
                WHERE b.transfer_item_type=1
                ".($data['stock_type']==0 ? "and b.is_other_issue = 0" : "and b.is_other_issue = 1" )."
                ".($id_category!='' && $id_category!=0 ? " and c.id_ret_category in (".$id_category.")" :'')."
                ".($id_metal!='' && $id_metal!=0 ? " and c.id_metal in (".$id_metal.")" :'')."
                ".($id_section!='' && $id_section!=0 ? " and tag.id_section in (".$id_section.")" :'')."
                ".($data['from_branch']!='' && $data['from_branch']!=0 ? "and b.transfer_from_branch =".$data['from_branch']."":"")."
                ".($data['to_branch']!='' && $data['to_branch']!=0 ? "and b.transfer_to_branch =".$data['to_branch']."":"")."
                ".($data['brans_type'] == 1 || $FromDt!="" && $ToDt!="" ? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                ".($data['brans_type'] == 2 || $data['transtype'] == 1 ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                ".($data['brans_type'] == 3 || $data['transtype'] == 2 ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' and '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                ".($data['trans_status']!='' && $data['trans_status']!=0 ? "and b.status=".$data['trans_status']."":"")."
                ".($data['report_type'] == 1 ? "GROUP by tag.tag_code " : ($data['group_by'] ==  1 ? "GROUP by b.branch_transfer_id":($data['group_by'] ==  2 ? "GROUP by tag.id_section" : "GROUP by tag.product_id")))."
                ");
                // print_r($this->db->last_query());exit;
                $result = $sql->result_array();
                $returnData = [];
                foreach ($result as $items) {
                    $Group_by = '';
                    if ($data['group_by'] == 1) {
                        $Group_by = $items[''];
                    } elseif ($data['group_by'] == 2) {
                        $Group_by = $items['section'];
                    } elseif ($data['group_by'] == 3) {
                        $Group_by = $items['product_name'];
                    }
                    $returnData[$Group_by][] = $items;
                }
            }
            // print_r($this->db->last_query());exit;
            return $returnData;
        }
	function getcreditBill($data)
    {
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$credit_detail = array();
		if($data['report_type']==1)
		{
		    $result1 = array();
		    $result2 = array();
            /*$sql1=$this->db->query("SELECT b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
            IFNULL(DATE_FORMAT(b.credit_due_date,'%d-%m-%Y'),'') as credit_due_date,b.tot_bill_amount,
            b.bill_cus_id,c.mobile,c.firstname as cus_name,br.name as branch_name,
            (b.tot_bill_amount-b.tot_amt_received) as due_amt,b.tot_amt_received,'1' as invoice_type
            from ret_billing b
            LEFT JOIN customer c on c.id_customer=b.bill_cus_id
            LEFT JOIN branch br on br.id_branch=b.id_branch
            where  b.bill_id is not null and b.bill_status=1 and b.is_credit=1  and b.bill_type!=8 and b.bill_type!=12 ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." ORDER BY b.id_branch,b.bill_id");
            */
            $sql1=$this->db->query("SELECT b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
            IFNULL(DATE_FORMAT(b.credit_due_date,'%d-%m-%Y'),'') as credit_due_date,b.tot_bill_amount,
            b.bill_cus_id,c.mobile,c.firstname as cus_name,br.name as branch_name,
            (b.tot_amt_received-IFNULL(ret.credit_ret_amt,0)) as due_amt,b.tot_amt_received,IFNULL(ret.credit_ret_amt,0) as credit_ret_amt
            from ret_billing b
            LEFT JOIN customer c on c.id_customer=b.bill_cus_id
            LEFT JOIN branch br on br.id_branch=b.id_branch
             LEFT JOIN(SELECT IFNULL(SUM(b.credit_ret_amt),0) as credit_ret_amt,r.ret_bill_id
                     FROM ret_bill_return_details r
                     LEFT JOIN ret_billing b ON b.bill_id = r.bill_id
                     WHERE b.bill_status = 1
                     GROUP BY r.ret_bill_id) as ret ON ret.ret_bill_id = b.bill_id
            where  b.bill_id is not null and b.bill_status=1 and b.is_credit=1  and b.bill_type!=8 and b.bill_type!=12 ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." ORDER BY b.id_branch,b.bill_id");
            // print_r($this->db->last_query());exit;
            $result1 = $sql1->result_array();
            // foreach($res_data as $r){
            //     $r['bill_no'] = $this->get_bill_no_format_detail($r['bill_id']);
            //     $result1[] = $r;
            // }
            $sql2=$this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no,date_format(r.bill_date,'%d-%m-%Y') as bill_date,'' as credit_due_date,
            r.amount as tot_bill_amount,r.amount as due_amt,'0' as tot_amt_received,
            cus.mobile,cus.firstname as cus_name,br.name as branch_name,'0' as credit_ret_amt
            FROM ret_issue_receipt r
            LEFT JOIN customer cus ON cus.id_customer=r.id_customer
            LEFT JOIN branch br ON br.id_branch=r.id_branch
            WHERE r.type=1 AND r.bill_status=1 AND (r.issue_type=2 OR r.issue_type=4)
            ".($FromDt!= '' && $ToDt!='' ? ' and (date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
            ");
            //print_r($this->db->last_query());exit;
             $result2 = $sql2->result_array();
             $result = array_merge($result1,$result2);
            //  return $result;
		}
		else
		{
		    $result1 = array();
		    $result2 = array();
            $sql1=$this->db->query("SELECT b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,DATE_FORMAT(b.credit_due_date,'%d-%m-%Y') as credit_due_date,b.tot_bill_amount,
            b.bill_cus_id,c.mobile,c.firstname as cus_name,if(b.credit_status=1,'Paid','Pending') as credit_status,
            br.name as branch_name,b.tot_amt_received,'1' as invoice_type
            from ret_billing b
            LEFT JOIN customer c on c.id_customer=b.bill_cus_id
            LEFT JOIN branch br on br.id_branch=b.id_branch
            where  b.ref_bill_id is not null and b.bill_status=1 and b.bill_type=8  ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." ORDER BY b.id_branch,b.bill_id");
            $result = $sql1->result_array();
            foreach($result as $items)
            {
                    $old_metal_details=$this->getOld_sales_details($items['bill_id'],8);
                    $old_metal_amount=0;
                    foreach($old_metal_details as $old_items)
                    {
                        $old_metal_amount+=$old_items['amount'];
                    }
                    $items['bill_no'] = $this->get_bill_no_format_detail($items['bill_id']);
                    $items['tot_amt_received'] = $items['tot_amt_received']+$old_metal_amount;
                    $result1[]=$items;
            }
            $sql2=$this->db->query("SELECT r.amount as tot_bill_amount,r.bill_no,r.id_issue_receipt as bill_id,date_format(r.bill_date,'%d-%m-%Y') as bill_date,'' as credit_due_date,
            cus.firstname as cus_name,cus.mobile,'' as credit_status,r.id_customer as bill_cus_id,br.name as branch_name,r.amount as tot_amt_received,'2' as invoice_type
            FROM ret_issue_receipt r
            LEFT JOIN customer cus ON cus.id_customer=r.id_customer
            LEFT JOIN branch br ON br.id_branch=r.id_branch
            WHERE r.type=2 AND r.receipt_type=1 and r.bill_status=1
            ".($FromDt!= '' && $ToDt!='' ? ' and (date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
            ");
            //print_r($this->db->last_query());exit;
            $result2 = $sql2->result_array();
            $credit_detail = array_merge($result1,$result2);
		}
		return $credit_detail;
    }
    function getcreditBill_history($data)
    {
			if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$credit_detail = array();
        $sql1=$this->db->query("SELECT b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,DATE_FORMAT(b.credit_due_date,'%d-%m-%Y') as credit_due_date,b.tot_bill_amount,b.tot_amt_received,b.bill_cus_id,c.mobile,c.firstname as cus_name,
        if(b.credit_status=1,'Paid','Pending') as credit_status,br.name as branch_name,(b.tot_bill_amount-b.tot_amt_received-IFNULL(ret.credit_due_amt,0)) as bal_amt,b.credit_disc_amt,'0' as type,IFNULL(ret.credit_ret_amt,0) as credit_ret_amt
        from ret_billing b
        LEFT JOIN customer c on c.id_customer=b.bill_cus_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN(SELECT IFNULL((b.credit_ret_amt),0) as credit_ret_amt,IFNULL((b.credit_due_amt),0) as credit_due_amt,r.ret_bill_id
        FROM ret_bill_return_details r
        LEFT JOIN ret_billing b ON b.bill_id = r.bill_id
        WHERE b.bill_status = 1
        GROUP BY r.ret_bill_id) as ret ON ret.ret_bill_id = b.bill_id
        where  b.bill_id is not null and b.is_credit=1 and b.is_to_be=0 and b.bill_status=1  and b.bill_type!=8 and b.bill_type!=12
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
        ".($data['id_customer'] != '' && $data['id_customer'] >0 ? ' and b.bill_cus_id='.$data['id_customer']: '')."
        ORDER BY b.id_branch,b.bill_id");
        //print_r($this->db->last_query());exit;
        $result1 = $sql1->result_array();
        /*$issue_sql=$this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no as bill_no,cus.mobile,r.amount as tot_bill_amount,
        DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date,'' as credit_due_date,IFNULL(r.amount-IFNULL(coll.paid_amt,0)-IFNULL(coll.credit_disc_amt,0),0) as bal_amt,
        IFNULL(coll.paid_amt,0) as tot_amt_received,cus.firstname as cus_name,br.name as branch_name,'1' as type,cus.id_customer as bill_cus_id,
        if(r.is_collect=0,'Pending','Collected') as credit_status,IFNULL(coll.credit_disc_amt,0) as credit_disc_amt,'0' as credit_ret_amt
        FROM ret_issue_receipt r
        LEFT JOIN branch br on br.id_branch=r.id_branch
        LEFT JOIN (SELECT IFNULL(SUM(r.amount),0) as paid_amt,IFNULL(SUM(c.discount_amt),0) as credit_disc_amt,c.receipt_for
        FROM ret_issue_receipt r
        LEFT JOIN ret_issue_credit_collection_details c ON c.id_issue_receipt=r.id_issue_receipt
        where r.bill_status=1
        GROUP by c.receipt_for) as coll ON coll.receipt_for=r.id_issue_receipt
        LEFT JOIN customer cus ON cus.id_customer=r.id_customer
        WHERE r.type=1 AND r.is_collect=0 and r.bill_status=1  and (r.issue_type=2 or r.issue_type=4)
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
        ".($data['id_customer'] != '' && $data['id_customer'] >0 ? ' and r.id_customer='.$data['id_customer']: '')."
        ORDER BY r.id_branch,r.id_issue_receipt ");*/
        $issue_sql=$this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no as bill_no,cus.mobile,r.amount as tot_bill_amount,
        DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date,'' as credit_due_date,IFNULL(r.amount,0) as bal_amt,
        0 as tot_amt_received,cus.firstname as cus_name,br.name as branch_name,'1' as type,cus.id_customer as bill_cus_id,
        if(r.is_collect=0,'Pending','Collected') as credit_status,0 as credit_disc_amt,'0' as credit_ret_amt
        FROM ret_issue_receipt r
        LEFT JOIN branch br on br.id_branch=r.id_branch
        LEFT JOIN customer cus ON cus.id_customer=r.id_customer
        WHERE r.type=1 AND r.is_collect=0 and r.bill_status=1  and (r.issue_type=2 or r.issue_type=4)
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
        ".($data['id_customer'] != '' && $data['id_customer'] >0 ? ' and r.id_customer='.$data['id_customer']: '')."
        ORDER BY r.id_branch,r.id_issue_receipt ");
        //print_r($this->db->last_query());exit;
        $result2 = $issue_sql->result_array();
        $result=array_merge($result1,$result2);
        foreach($result as $r)
        {
            $creditCollection = array();
            if($r['type'] == 0)
            {
                $creditCollection = $this->getCreditCollection($r['bill_id']);
            }
            else if($r['type'] == 1)
            {
                $issueCollections = $this->get_IssueCreditCollectionDetails($r['bill_id']);
                foreach ($issueCollections as $coll) {
                    $coll['tot_bill_amount'] = $r['tot_bill_amount'];
                    $creditCollection[] = $coll;
                }
            }
            $credit_detail[$r['branch_name']][] = array(
                'type'              =>$r['type'],
                'bill_no'           =>$this->get_bill_no_format_detail($r['bill_id']),
                'bill_date'         =>$r['bill_date'],
                'credit_due_date'   =>$r['credit_due_date'],
                'tot_bill_amount'   =>$r['tot_bill_amount'],
                'tot_amt_received'  =>$r['tot_amt_received'],
                'bill_cus_id'       =>$r['bill_cus_id'],
                'cus_name'          =>$r['cus_name'],
                'mobile'            =>$r['mobile'],
                'credit_status'     =>$r['credit_status'],
                'branch_name'       =>$r['branch_name'],
                'bal_amt'           =>$r['bal_amt'],
                'bill_id'           =>$r['bill_id'],
                'credit_disc_amt'   =>$r['credit_disc_amt'],
                'credit_ret_amt'    =>$r['credit_ret_amt'],
                'credit_collection' =>$creditCollection
            );
        }
		return $credit_detail;
    }
    function getCreditCollection($bill_id)
    {
        $return_data=array();
    	$data=$this->db->query("SELECT b.bill_id,b.bill_no,b.bill_type,b.ref_bill_id,b.tot_amt_received,b.credit_disc_amt,
    	b.tot_bill_amount,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date
    	 From ret_billing b
    	 where b.bill_status=1 and b.ref_bill_id=".$bill_id."");
        $items=$data->result_array();
        foreach($items as $item)
        {
            $old_metal_details=$this->getOld_sales_details($item['bill_id'],8);
            $old_metal_amount=0;
            foreach($old_metal_details as $old_items)
            {
                $old_metal_amount+=$old_items['amount'];
            }
            $return_data[]=array(
                                 '0'                =>'type',
                                 'bill_no'          =>$item['bill_no'],
                                 'bill_id'          =>$item['bill_id'],
                                 'bill_type'        =>$item['bill_type'],
                                 'ref_bill_id'      =>$item['ref_bill_id'],
                                 'tot_amt_received' =>$item['tot_amt_received'],
                                 'credit_disc_amt'  =>$item['credit_disc_amt'],
                                 'tot_bill_amount'  =>($item['tot_bill_amount']+$old_metal_amount),
                                 'bill_date'        =>$item['bill_date'],
                                 'old_metal_amount'=>$old_metal_amount,
                                );
        }
        return $return_data;
    }
    function get_advance_details($data)
    {
    	$advance_detail=array();
    	if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
    	$advance=$this->db->query("SELECT b.bill_id,c.mobile,c.firstname as cus_name,br.name as branch_name,sum(a.advance_amount) as total_adv_amount,ifnull(adv_adj.adjusted_amt,0) as adjusted_amt
    		from ret_billing b
    		LEFT JOIN ret_billing_advance a on a.bill_id=b.bill_id
    		LEFT JOIN customer c on c.id_customer=b.bill_cus_id
    		LEFT JOIN branch br on br.id_branch=b.id_branch
    		LEFT JOIN (SELECT adv.bill_id,sum(adv.advance_amount) as adjusted_amt from ret_billing_advance adv where adv.is_adavnce_adjusted=1) as adv_adj on  adv_adj.bill_id=b.bill_id
    		where  b.bill_id is not null and b.bill_status=1 and b.bill_type=6 ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." GROUP by b.bill_cus_id ORDER BY b.id_branch");
    	$result = $advance->result_array();
    	if($result[0]['bill_id']!=null)
    	{
    		foreach($result as $r){
			$advance_detail[$r['branch_name']][] = $r;
			}
    	}
    	return $advance_detail;
    }
/*
    function chit_utilize_details($data)
    {
    	$chit_detail[]=array();
    		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $sql=$this->db->query("SELECT chit.scheme_account_id,b.bill_id,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
		CASE WHEN b.customer_name is NOT null then b.customer_name
			ELSE c.firstname END as cus_name,
		c.mobile as mobile,
		concat(br.short_name,'-',if(IFNULL(b.sales_ref_no,'')!='',concat('SA-',b.sales_ref_no),if(IFNULL(b.pur_ref_no,'')!='',concat('PU-',b.pur_ref_no),if(IFNULL(b.s_ret_refno,'')!='',concat('SR-',b.s_ret_refno),if(b.bill_type=5,concat('OD-',b.order_adv_ref_no),if(b.bill_type=8,concat('CC-',b.credit_coll_refno),b.bill_no)))))) as bill_no,
        s.total_installments,chit.utilized_amt,s.scheme_name,IFNULL(sa.closing_add_chgs,0) as closing_add_chgs,if(s.discount=1,s.allpay_disc_value,0) as discountAmt,sa.id_scheme_account,
        s.scheme_type,concat(s.code,'-',sa.scheme_acc_number) as scheme_acc_number,IFNULL(chit.savings_in_wastage,0) as savings_in_wastage,IFNULL(chit.savings_in_making_charge,0) as savings_in_making_charge,
        if(chit.closing_weight > 0,((IFNULL(chit.closing_weight,0)*b.goldrate_22ct)+(IFNULL(chit.savings_in_wastage,0)*b.goldrate_22ct)+IFNULL(chit.savings_in_making_charge,0)-IFNULL(sa.closing_amount,0)),sa.additional_benefits) as sch_benefits,
        IFNULL(sa.closing_amount,0) as closing_amount,
        pay.paid_installments
        FROM ret_billing_chit_utilization chit
        LEFT JOIN ret_billing b ON b.bill_id=chit.bill_id
		Left join branch br on br.id_branch=b.id_branch
        LEFT JOIN scheme_account sa ON sa.id_scheme_account=chit.scheme_account_id
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN scheme s on s.id_scheme=sa.id_scheme
        LEFT JOIN (select p.id_scheme_account,COUNT(Distinct Date_Format(p.date_payment,'%Y%m')) as paid_installments
        FROM payment p
        left join scheme_account sa on sa.id_scheme_account=p.id_scheme_account
        left join scheme s on s.id_scheme=sa.id_scheme
        where p.payment_status=1 group by sa.id_scheme_account) as pay on pay.id_scheme_account=sa.id_scheme_account
        WHERE b.bill_status = 1
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
        ");
		//echo "<pre>";print_r($this->db->last_query());exit;
        $chit_detail=$sql->result_array();
        foreach ($chit_detail as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
        }
    	return $chit_detail;
    }
*/
    function chit_utilize_details($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        $chit_detail[]=array();
            if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $sql=$this->db->query("SELECT chit.scheme_account_id,b.bill_id,date_format(b.bill_date,'%d-%m-%Y') as bill_date,c.firstname as cus_name,c.mobile as mobile,
        s.total_installments,chit.utilized_amt,s.scheme_name,IFNULL(sa.closing_add_chgs,0) as closing_add_chgs,if(s.discount=1,s.allpay_disc_value,0) as discountAmt,sa.id_scheme_account,
        s.scheme_type,concat(s.code,'-',sa.scheme_acc_number) as scheme_acc_number,IFNULL(chit.savings_in_wastage,0) as savings_in_wastage,IFNULL(chit.savings_in_making_charge,0) as savings_in_making_charge,
        if(chit.closing_weight > 0,((IFNULL(chit.closing_weight,0)*if(chit.rate_per_gram>0,chit.rate_per_gram,b.goldrate_22ct))+(IFNULL(chit.savings_in_wastage,0)*if(chit.rate_per_gram>0,chit.rate_per_gram,b.goldrate_22ct))+IFNULL(chit.savings_in_making_charge,0)-IFNULL(sa.closing_amount,0)),sa.additional_benefits) as sch_benefits,
    ((IFNULL(chit.savings_in_wastage,0)*if(chit.rate_per_gram>0,chit.rate_per_gram,b.goldrate_22ct))+IFNULL(chit.savings_in_making_charge,0)) as benifits,IFNULL(sa.additional_benefits,0) as additional_bennefits,
        (IFNULL(sa.closing_amount,0) - sa.additional_benefits) as closing_amount,pay.paid_installments,br.short_name as branch_code,mt.metal_code
        FROM ret_billing_chit_utilization chit
        LEFT JOIN ret_billing b ON b.bill_id=chit.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN scheme_account sa ON sa.id_scheme_account=chit.scheme_account_id
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN scheme s on s.id_scheme=sa.id_scheme
        LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN metal mt on mt.id_metal=b.metal_type
        LEFT JOIN (select p.id_scheme_account,COUNT(Distinct Date_Format(p.date_payment,'%Y%m')) as paid_installments
        FROM payment p
        left join scheme_account sa on sa.id_scheme_account=p.id_scheme_account
        left join scheme s on s.id_scheme=sa.id_scheme
        where p.payment_status=1 group by sa.id_scheme_account) as pay on pay.id_scheme_account=sa.id_scheme_account
        WHERE b.bill_status = 1 and sa.id_scheme_account is not null
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
        ");
        // IFNULL(concat(br.short_name,'-SA-',mt.metal_code,'-',b.sales_ref_no),concat(br.short_name,'-',chit_preclose_refno)) as bill_no
        $chit_detail=$sql->result_array();
        foreach($chit_detail as $c){
            $c['bill_no'] = $this->get_bill_no_format_detail($c['bill_id']);
            $ret_data[] = $c;
        }
        return $ret_data;
    }
      function card_payment_details($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
    	$card_detail=array();
        $d1     = date_create($data['from_date']);
        $FromDt = date_format($d1,"Y-m-d");
	        $entry_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
			$before_day_closing=$this->db->query("SELECT b.bill_no,c.mobile,
             CASE WHEN b.customer_name IS NOT NULL THEN b.customer_name
              ELSE c.firstname END AS cus_name,b.bill_id,
			br.name as branch_name,date_format(b.bill_date,'%d-%m-%Y') as bill_date,ifnull(credit.crdit_payment,0) as crdit_payment,ifnull(debit.debit_payment,0) as debit_payment,
			ifnull(nb.net_payment,0) as net_payment,IFNULL(pay.card_no,'') as card_no,IFNULL(pay.payment_ref_number,'') as payment_ref_number
    		FROM ret_billing b
    		LEFT JOIN ret_billing_payment pay on pay.bill_id=b.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
    		LEFT JOIN customer c on c.id_customer=b.bill_cus_id
    		LEFT JOIN branch br on br.id_branch=b.id_branch
    		LEFT JOIN (select p.bill_id,'Credit Card' as payment_mode,sum(p.payment_amount) as crdit_payment from ret_billing_payment p where p.payment_mode='CC' GROUP by p.bill_id) as credit on credit.bill_id=b.bill_id
    		LEFT JOIN (select pay.bill_id,'Debit Card' as payment_mode,sum(pay.payment_amount) as debit_payment from ret_billing_payment pay where pay.payment_mode='DC' GROUP by pay.bill_id) as debit on debit.bill_id=b.bill_id
    		LEFT JOIN (select pay.bill_id,'Net Banking' as payment_mode,sum(pay.payment_amount) as net_payment from ret_billing_payment pay where pay.payment_mode='NB' GROUP by pay.bill_id) as nb on nb.bill_id=b.bill_id
    		where   b.bill_id is not null and b.bill_status=1 and (pay.payment_mode='CC' or pay.payment_mode='DC' or pay.payment_mode='NB')
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
            ".($FromDt!= '' ? ' and (date(b.created_time) BETWEEN "'.$entry_date.'" AND "'.$entry_date.'") and date(b.bill_date)="'.$FromDt.'"' : '')."
           ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
    		GROUP by b.bill_id ORDER BY b.id_branch,b.bill_id");
            //print_r($this->db->last_query());exit;
            $result['before_day_closing'] = $before_day_closing->result_array();
            $after_day_closing=$this->db->query("SELECT b.bill_no,c.mobile,b.bill_id,
			CASE WHEN b.customer_name is not null then b.customer_name
			ELSE c.firstname END as cus_name,
			br.name as branch_name,date_format(b.bill_date,'%d-%m-%Y') as bill_date,ifnull(credit.crdit_payment,0) as crdit_payment,ifnull(debit.debit_payment,0) as debit_payment,
			ifnull(nb.net_payment,0) as net_payment,IFNULL(pay.card_no,'') as card_no,IFNULL(pay.payment_ref_number,'') as payment_ref_number
    		FROM ret_billing b
    		LEFT JOIN ret_billing_payment pay on pay.bill_id=b.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
    		LEFT JOIN customer c on c.id_customer=b.bill_cus_id
    		LEFT JOIN branch br on br.id_branch=b.id_branch
    		LEFT JOIN (select p.bill_id,'Credit Card' as payment_mode,sum(p.payment_amount) as crdit_payment from ret_billing_payment p where p.payment_mode='CC' GROUP by p.bill_id) as credit on credit.bill_id=b.bill_id
    		LEFT JOIN (select pay.bill_id,'Debit Card' as payment_mode,sum(pay.payment_amount) as debit_payment from ret_billing_payment pay where pay.payment_mode='DC' GROUP by pay.bill_id) as debit on debit.bill_id=b.bill_id
    		LEFT JOIN (select pay.bill_id,'Net Banking' as payment_mode,sum(pay.payment_amount) as net_payment from ret_billing_payment pay where pay.payment_mode='NB' GROUP by pay.bill_id) as nb on nb.bill_id=b.bill_id
    		where   b.bill_id is not null and b.bill_status=1 and (pay.payment_mode='CC' or pay.payment_mode='DC' or pay.payment_mode='NB')
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
            ".($FromDt!= ''  ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$FromDt.'") and date(b.created_time)="'.$FromDt.'" ' : '')."
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
    		GROUP by b.bill_id ORDER BY b.id_branch,b.bill_id");
            //print_r($this->db->last_query());exit;
            $result['after_day_closing'] = $after_day_closing->result_array();
            $gne_pay_before_day_close=$this->db->query("SELECT r.bill_no,c.mobile,
			c.firstname as cus_name,
			br.name as branch_name,date_format(r.bill_date,'%d-%m-%Y') as bill_date,
	        ifnull(credit.crdit_payment,0) as crdit_payment,ifnull(debit.debit_payment,0) as debit_payment,
			ifnull(nb.net_payment,0) as net_payment,IFNULL(p.card_no,'') as card_no,IFNULL(p.payment_ref_number,'') as payment_ref_number
            FROM ret_issue_receipt r
            LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=r.id_branch
            LEFT JOIN customer c ON c.id_customer=r.id_customer
            LEFT JOIN branch br on br.id_branch=r.id_branch
            LEFT JOIN (select p.id_issue_rcpt,'Credit Card' as payment_mode,sum(p.payment_amount) as crdit_payment from ret_issue_rcpt_payment p where p.payment_mode='CC' GROUP by p.id_issue_rcpt) as credit on credit.id_issue_rcpt=r.id_issue_receipt
    		LEFT JOIN (select pay.id_issue_rcpt,'Debit Card' as payment_mode,sum(pay.payment_amount) as debit_payment from ret_issue_rcpt_payment pay where pay.payment_mode='DC' GROUP by pay.id_issue_rcpt) as debit on debit.id_issue_rcpt=r.id_issue_receipt
            LEFT JOIN (select pay.id_issue_rcpt,'Net Banking' as payment_mode,sum(pay.payment_amount) as net_payment from ret_issue_rcpt_payment pay where pay.payment_mode='NB' GROUP by pay.id_issue_rcpt) as nb on nb.id_issue_rcpt=r.id_issue_receipt
            WHERE r.bill_status=1 AND r.type=2
            ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR  ( IF(r.is_eda=2,date(day_close.entry_date) = date(r.bill_date),'') and r.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2 and date(day_close.entry_date) = date(r.bill_date)") )."         
            ".($FromDt!= ''  ? ' and (date(r.created_on) BETWEEN "'.$entry_date.'" AND "'.$entry_date.'") and date(r.bill_date)="'.$FromDt.'"' : '')."
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
            GROUP by r.id_issue_receipt");
             $result['gen_pay_before_day_closing'] = $gne_pay_before_day_close->result_array();
            $gne_pay_after_day_close=$this->db->query("SELECT r.bill_no,c.mobile,
			c.firstname as cus_name,
			br.name as branch_name,date_format(r.bill_date,'%d-%m-%Y') as bill_date,
	        ifnull(credit.crdit_payment,0) as crdit_payment,ifnull(debit.debit_payment,0) as debit_payment,
			ifnull(nb.net_payment,0) as net_payment,IFNULL(p.card_no,'') as card_no,
            IFNULL(p.payment_ref_number,'') as payment_ref_number
            FROM ret_issue_receipt r
            LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=r.id_branch
            LEFT JOIN customer c ON c.id_customer=r.id_customer
            LEFT JOIN branch br on br.id_branch=r.id_branch
            LEFT JOIN (select p.id_issue_rcpt,'Credit Card' as payment_mode,sum(p.payment_amount) as crdit_payment from ret_issue_rcpt_payment p where p.payment_mode='CC' GROUP by p.id_issue_rcpt) as credit on credit.id_issue_rcpt=r.id_issue_receipt
    		LEFT JOIN (select pay.id_issue_rcpt,'Debit Card' as payment_mode,sum(pay.payment_amount) as debit_payment from ret_issue_rcpt_payment pay where pay.payment_mode='DC' GROUP by pay.id_issue_rcpt) as debit on debit.id_issue_rcpt=r.id_issue_receipt
            LEFT JOIN (select pay.id_issue_rcpt,'Net Banking' as payment_mode,sum(pay.payment_amount) as net_payment from ret_issue_rcpt_payment pay where pay.payment_mode='NB' GROUP by pay.id_issue_rcpt) as nb on nb.id_issue_rcpt=r.id_issue_receipt
            WHERE r.bill_status=1 AND r.type=2
            ".($FromDt!= '' ? ' and (date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$FromDt.'") and date(r.created_on)="'.$FromDt.'"' : '')."
            ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR  ( IF(r.is_eda=2,date(day_close.entry_date) = date(r.bill_date),'') and r.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2 and date(day_close.entry_date) = date(r.bill_date)") )."         
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
            GROUP by r.id_issue_receipt");
            $result['gen_pay_after_day_closing'] = $gne_pay_after_day_close->result_array();
            $card_detail['AFTER DAY CLOSING']=array_merge($result['before_day_closing'],$result['gen_pay_before_day_closing']);
            $card_detail['BEFORE DAY CLOSING']=array_merge($result['after_day_closing'],$result['gen_pay_after_day_closing']);
            foreach ($card_detail['AFTER DAY CLOSING'] as &$item) {
                $bill_id = $item['bill_id'];
                $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
            }
            foreach ($card_detail['BEFORE DAY CLOSING'] as &$item) {
                $bill_id = $item['bill_id'];
                $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
            }
            return $card_detail;
    }
    function getDulpicate_bill_details($data)
    {
    	$bill_detail=array();
    		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
    	$data=$this->db->query("SELECT COUNT(d.copy_id) as total_copy,c.mobile,c.firstname as cus_name,e.firstname as emp_name,br.name as branch_name,b.bill_no,b.tot_bill_amount,
    		date_format(b.bill_date,'%d-%m-%Y') as bill_date,date_format(d.print_date,'%d-%m-%Y') as print_date
			FROM ret_bill_duplicate_copy d
			LEFT JOIN ret_billing b on b.bill_id=d.bill_id
			LEFT JOIN customer c on c.id_customer=b.bill_cus_id
			LEFT JOIN branch br on br.id_branch=b.id_branch
			LEFT JOIN employee e on e.id_employee=d.id_employee
    		where  b.bill_id is not null and b.bill_status=1 ".($FromDt!= '' && $ToDt!='' ? 'and (date(d.print_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." GROUP BY d.bill_id ORDER BY b.id_branch");
    	//print_r($this->db->last_query());exit;
    	$result = $data->result_array();
        foreach ($result as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
        }
    		foreach($result as $r){
			$bill_detail[$r['branch_name']][] = $r;
			}
    	return $bill_detail;
    }
    function get_ret_settings($settings)
	{
		$data=$this->db->query("SELECT value FROM ret_settings where name='".$settings."'");
		return $data->row()->value;
	}
    function pan_bill_details($data)
    {
    	$bill_detail=array();
    		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$min_pan_amt = $this->get_ret_settings('min_pan_amt');
    	$data=$this->db->query("SELECT b.bill_id,c.mobile,c.firstname as cus_name,br.name as branch_name,b.bill_no,b.tot_bill_amount,IFNULL(c.pan,'') as pan_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date
    		From ret_billing b
    		LEFT JOIN customer c on c.id_customer=b.bill_cus_id
			LEFT JOIN branch br on br.id_branch=b.id_branch
    		where   b.bill_id is not null and b.bill_status=1
    		".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
    		".($min_pan_amt>0 ? " and b.tot_bill_amount>=".$min_pan_amt."" :'')."
    		".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." ORDER BY b.id_branch");
    	//print_r($this->db->last_query());exit;
    	$result = $data->result_array();
        foreach ($result as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
         }
    		foreach($result as $r){
			$bill_detail[$r['branch_name']][] = $r;
			}
    	return $bill_detail;
    }
/*function getStockAgeDetails($data){
		if($data['dt_range'] != ''){
			$dateRange = explode('-',$data['dt_range']);
			$d1 = date_create($dateRange[0]);
			$d2 = date_create($dateRange[1]);
			$FromDt = date_format($d1,"Y-d-m");
			$ToDt = date_format($d2,"Y-d-m");
		}
		$sql = "SELECT
					DATEDIFF(date(now()),date(tag_datetime)) AS age,
					b.name as branch_name,
					if(product_short_code = '' or product_short_code is null ,product_name ,CONCAT(product_short_code,' - ',product_name) ) as product_name,
					CONCAT(if(lastname is null,firstname,CONCAT(firstname,' ',lastname)),' ',code_karigar) as karigar,
					sum(ifnull(tag.piece,0)) as pieces,sum(ifnull(tag.gross_wt,0)) as gross_wt, sum(ifnull(tag.net_wt,0)) as net_wt
				FROM `ret_taging` tag
					LEFT JOIN ret_lot_inwards lt on lt.lot_no = tag.tag_lot_id
					LEFT JOIN ret_product_master p on p.pro_id = tag.product_id
					LEFT JOIN ret_karigar k on k.id_karigar = lt.gold_smith
					LEFT JOIN ret_category cat on cat.id_ret_category = lt.id_category
					LEFT JOIN branch b on b.id_branch = tag.current_branch
				WHERE tag.tag_status = 0 ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and tag.current_branch='.$data['id_branch']: '')." ".($data['id_category'] != '' && $data['id_category'] > 0 ? ' and lt.id_category ='.$data['id_category']: '')." ".($data['karigar'] != '' && $data['karigar'] > 0 ? ' and lt.gold_smith ='.$data['karigar']: '')." ".($data['id_metal'] != '' && $data['id_metal'] > 0 ? ' and cat.id_metal ='.$data['id_metal']: '')." ".($data['id_product'] != '' ? ' and product_id ='.$data['id_product']: '')." ".($data['dt_range'] != '' ? ' and (date(tag_datetime) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
				GROUP BY product_id";
		if($data['age_from'] != '' && $data['age_to'] != ''){
			$sql = $sql." HAVING (age >=".$data['age_from']." and age <=".$data['age_to'].")";
		}
		elseif($data['age_from'] != ''){
			$sql = $sql." HAVING age >=".$data['age_from'];
		}
		$result = $this->db->query($sql)->result_array();
		return $result;
	}*/
	function getStockAgeDetails($data)
	{
		$sql=$this->db->query("SELECT p.pro_id,p.product_name,p.cat_id
        FROM ret_product_master p
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN ret_taging tag ON tag.product_id=p.pro_id
        WHERE product_status=1 and tag.tag_id is NOT null
		".($data['id_ret_category']!='' && $data['id_ret_category']!=0 ? " and p.cat_id=".$data['id_ret_category']."" :'')."
		".($data['id_product']!='' && $data['id_product']!=0 ? " and p.pro_id=".$data['id_product']."" :'')."
		".($data['id_metal']!='' && $data['id_metal']>0 ? " and cat.id_metal=".$data['id_metal']."" :'')."
		 GROUP by tag.product_id
		order by pro_id ASC");
		//print_r($this->db->last_query());exit;
		$result=$sql->result_array();
		foreach($result as $items)
		{
	    	$return_data[]=array(
	                      'pro_id'      =>$items['pro_id'],
	                      'cat_id'      =>$items['cat_id'],
	                      'product_name'=>$items['product_name'],
	                      'below_120_days'=>$this->get_design_age_analysis_report($items['pro_id'],0,120,$data['id_branch'],$items['cat_id'],$data['age_type']),
	                      'above_120_days'=>$this->get_design_age_analysis_report($items['pro_id'],120,180,$data['id_branch'],$items['cat_id'],$data['age_type']),
	                      'above_180_days'=>$this->get_design_age_analysis_report($items['pro_id'],180,240,$data['id_branch'],$items['cat_id'],$data['age_type']),
	                      'above_240_days'=>$this->get_design_age_analysis_report($items['pro_id'],240,360,$data['id_branch'],$items['cat_id'],$data['age_type']),
	                      'above_360_days'=>$this->get_design_age_analysis_report($items['pro_id'],360,'',$data['id_branch'],$items['cat_id'],$data['age_type']),
	                    );
		}
		return $return_data;
	}
	function get_stock_age_tag($data)
	{
	    $return_data=array();
	    $sql =$this->db->query("SELECT if(tag.old_tag_date!='',DATEDIFF(date(now()),date(old_tag_date)),DATEDIFF(date(now()),date(tag_datetime))) AS actual_age,DATEDIFF(date(now()),date(received_tag.date)) AS current_age,ifnull(tag.gross_wt,0) as total_wt,(ifnull(tag.piece,0)) as tot_pcs,tag.tag_code,k.firstname as karigar_name,
                tag.tag_mc_value,tag.retail_max_wastage_percent,if(tag.tag_mc_type=1,'Per Gram','Per Piece') as mc_type,if(p.sales_mode=1,tag.sales_value,0) as fixed_rate,tag.tag_id,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_datetime,date_format(received_tag.date,'%d-%m-%Y') as received_date, (ifnull(tag.piece,0)) as tot_pcs,
                IF(tag.tag_mark=1,'Green Tag','Normal Tag') as tag_status,tag.tag_lot_id,tag.tag_mark,p.product_name,tag.is_green_tag_printed,
                IFNULL(date_format(tag.old_tag_date,'%d-%m-%Y'),'') as old_tag_date,IFNULL(tag.old_tag_id,'') as old_tag_id
				FROM ret_taging tag
                LEFT JOIN ret_lot_inwards l ON l.lot_no=tag.tag_lot_id
                LEFT JOIN ret_karigar k ON k.id_karigar=l.gold_smith
                LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                LEFT join ret_design_master des ON des.design_no=tag.design_id
                LEFT JOIN (SELECT tag_id,date FROM ret_taging_status_log 
                WHERE status = 0
                " . ($data['id_branch'] != '' && $data['id_branch'] != 0 ? " and to_branch=" . $data['id_branch'] . "" : '') . "
                GROUP BY tag_id 
                ORDER BY tag_id DESC
                        ) as received_tag ON received_tag.tag_id = tag.tag_id
				WHERE tag.tag_status = 0
				".($data['id_product']!='' && $data['id_product']!=0 ? " and tag.product_id=".$data['id_product']."" :'')."
				".($data['id_branch']!='' && $data['id_branch']!=0 ? " and tag.current_branch=".$data['id_branch']."" :'')."
                GROUP BY tag.tag_id
                ");
	    // print_r($this->db->last_query());exit;
		$result=$sql->result_array();
	    foreach($result as $items)
	    {
            $age = ($data['age_type'] == 1 ? $items['actual_age'] : $items['current_age']);
	        if($data['to_days']!='')
	        {
                if($age>= $data['from_days'] && $age<= $data['to_days'])
        	    {
        	       $return_data[]=$items;
        	    }
	        }
	        else if($age>= $data['from_days'] && $items['to_days']=='')
	        {
	            $return_data[]=$items;
	        }
	    }
	    return $return_data;
	}
	function get_design_age_analysis_report($id_product,$from_age,$to_age,$id_branch,$cat_id,$age_type="")
	{
	    $total_pcs=0;$total_wt=0;
	    $stock_det=0;
        $sql =$this->db->query("SELECT tag.tag_id, received_tag.tag_id,
        if(tag.old_tag_date!='',DATEDIFF(date(now()),date(old_tag_date)),DATEDIFF(date(now()),date(tag.tag_datetime))) AS actual_age,DATEDIFF(date(now()),date(received_tag.date)) AS current_age,ifnull(tag.gross_wt,0) as total_wt,(ifnull(tag.piece,0)) as tot_pcs,tag.old_tag_date,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date,date_format(tag.old_tag_date,'%d-%m-%Y') as old_tag_date,
        tag.is_tag_imported, date_format((received_tag.date),'%d-%m-%Y') as received_date
        FROM ret_taging tag
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        LEFT JOIN (SELECT tag_id,date FROM ret_taging_status_log 
                WHERE status = 0
        " . ($id_branch != '' && $id_branch != 0 ? " and to_branch=" . $id_branch . "" : '') . "
        GROUP BY tag_id 
        ORDER BY tag_id DESC
                ) as received_tag ON received_tag.tag_id = tag.tag_id

        LEFT join ret_design_master des ON des.design_no=tag.design_id
        WHERE tag.tag_status = 0
        ".($id_product!='' ? " and tag.product_id=".$id_product."" :'')."
        ".($cat_id!='' && $cat_id!=0 ? " and p.cat_id=".$cat_id."" :'')."
        ".($id_branch!='' && $id_branch!=0 ? " and tag.current_branch=".$id_branch."" :'')."
        HAVING tot_pcs >0 ");
		//print_r($this->db->last_query());exit;
	    $result=$sql->result_array();
	    foreach($result as $items)
	    {
            $age = ($age_type == 1 ? $items['actual_age'] : $items['current_age']);
	        if(($from_age=='' && $to_age=='') && $items['tot_pcs']>0)
	        {
	            $total_pcs+=$items['tot_pcs'];
    	        $total_wt+=$items['total_wt'];
	        }
	        else if($age>= $from_age && $age<= $to_age && $items['tot_pcs']>0)
    	    {
    	       $total_pcs+=$items['tot_pcs'];
    	       $total_wt+=$items['total_wt'];
    	    }
    	    else if(($age>= $from_age) && $to_age=='')
    	    {
    	        $total_pcs+=$items['tot_pcs'];
    	        $total_wt+=$items['total_wt'];
    	    }
	    }
	    $stock_det=number_format(($total_wt), 3, '.', '').' / '.$total_pcs;
	    return $stock_det;
	}
	function getCancelledBills($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
    	$bill_detail=array();
    	if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
    	$data=$this->db->query("SELECT b.bill_id,c.mobile,
		CASE WHEN b.customer_name is not null then b.customer_name
		Else c.firstname END as cus_name,
		br.name as branch_name,b.bill_no,b.tot_bill_amount,date_format(b.bill_date,'%d-%m-%Y') as bill_date,date_format(b.cancelled_date,'%d-%m-%Y') as cancelled_date,if(bill_type = 1,'Sales',if(bill_type = 2,'Sales&Purchase',if(bill_type = 3,'Sales&Return',if(bill_type = 4,'Purchase',if(bill_type = 5,'Order Advance',if(bill_type = 6,'Advance',if(bill_type = 7,'Sales Return',''))))))) as bill_type,
    	    IFNULL(b.cancel_reason,'') as cancel_reason,emp.firstname cancel_by
    		From ret_billing b
    		LEFT JOIN customer c on c.id_customer=b.bill_cus_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
			LEFT JOIN branch br on br.id_branch=b.id_branch
            LEFT JOIN employee emp on emp.id_employee=b.updated_by
    		where  b.bill_id is not null and b.bill_status = 2 
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
            ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.cancelled_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." ORDER BY b.id_branch");
    	$result = $data->result_array();
        foreach ($result as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
        }
        foreach($result as $r){
            $bill_detail[$r['branch_name']][] = $r;
        }
    	return $bill_detail;
    }
	function getDiscountBills($data)
    {
    	$bill_detail = array();
    		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
			$data = $this->db->query("
							SELECT
								c.mobile,c.firstname as cus_name,br.name as branch_name,b.bill_no,b.tot_bill_amount,date_format(b.bill_date,'%d-%m-%Y') as bill_date,if(b.bill_type = 1,'Sales',if(b.bill_type = 2,'Sales&Purchase',if(b.bill_type = 3,'Sales&Return',if(b.bill_type = 4,'Purchase',if(b.bill_type = 5,'Order Advance',if(b.bill_type = 6,'Advance',if(b.bill_type = 7,'Sales Return',''))))))) as bill_type,
								IFNULL(tot_discount,0) as discount,det.item_cost,det.bill_discount,det.product_name,det.design_name,det.net_wt,
								det.status,det.mc_value,det.rate_per_grm,b.bill_id
							From ret_billing b
								LEFT JOIN
								(
									SELECT
										bill_det_id,bill_id,item_type,is_non_tag,tag_id,order_no,
										ifnull(design_name, '') as design_name,ifnull(product_name, '') as product_name,
										ifnull(d.gross_wt,0.000) as gross_wt,ifnull(d.net_wt,0.000) as net_wt,ifnull(d.less_wt,0.000) as less_wt,
										if(d.status = 1,'Sold',if(d.status = 2,'Returned','')) as status,bill_discount,item_cost,d.mc_value,d.rate_per_grm
									FROM `ret_bill_details` d
										LEFT JOIN ret_product_master as pro ON pro.pro_id = d.product_id
										LEFT JOIN ret_design_master as des ON des.design_no = d.design_id
									WHERE d.bill_discount > 0 AND d.bill_discount IS NOT NULL
								) det on det.bill_id=b.bill_id
								LEFT JOIN customer c on c.id_customer=b.bill_cus_id
								LEFT JOIN branch br on br.id_branch=b.id_branch
				    		WHERE tot_bill_amount > 0 AND b.bill_type <= 3 AND b.bill_status = 1 AND b.tot_discount > 0 AND tot_discount IS NOT NULL ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." ORDER BY b.id_branch");
			$result = $data->result_array();
			foreach($result as $r){
				$bill_detail[$r['branch_name']][$r['bill_no']][] = $r;
			}
		//}
    	return $bill_detail;
    }
    function discount_bill_01_03_204($data)
    {
        $bill_detail = array();
        if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $sql=$this->db->query("SELECT date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_id,
		concat(br.short_name,'-',if(IFNULL(b.sales_ref_no,'')!='',concat('SA-',b.sales_ref_no),if(IFNULL(b.pur_ref_no,'')!='',concat('PU-',b.pur_ref_no),if(IFNULL(b.s_ret_refno,'')!='',concat('SR-',b.s_ret_refno),if(b.bill_type=5,concat('OD-',b.order_adv_ref_no),if(b.bill_type=8,concat('CC-',b.credit_coll_refno),b.bill_no)))))) as bill_no,
		d.gross_wt,d.net_wt,d.calculation_based_on,if(d.mc_type=1,'Per Gram','Per Piece') as mc_type,d.mc_value,p.product_name,d.item_cost,d.bill_discount,
        d.wastage_percent,
		CASE WHEN b.customer_name is not null then b.customer_name
			Else c.firstname END as cus_name,
		c.mobile,
		d.mc_type as mcType,d.piece,d.rate_per_grm,d.bill_discount,
        d.esti_item_id,d.design_id,des.design_name,ifnull(sub.sub_design_name,'-') as sub_design_name,b.tot_bill_amount,IFNULL(d.item_total_tax,0) as item_total_tax,e.firstname as emp_name,IFNULL(emp.firstname,'-') otp_approved_by
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
		LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_design_master des ON des.design_no=d.design_id
        LEFT JOIN ret_estimation_items est ON est.est_item_id=d.esti_item_id
        LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=est.id_sub_design
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
		LEFT JOIN employee e ON e.id_employee=b.created_by
        LEFT JOIN employee emp on emp.id_employee=b.otp_approved_by
        WHERE d.bill_discount>0 AND b.bill_status=1
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
        order by b.bill_id");
        //print_r($this->db->last_query());exit;
        $bill_detail=$sql->result_array();
        foreach ($bill_detail as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
        }
        return $bill_detail;
    }
    function discount_bill($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        $bill_detail = array();
        if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $sql=$this->db->query("SELECT date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_id,d.gross_wt,d.net_wt,d.calculation_based_on,if(d.mc_type=1,'Per Gram','Per Piece') as mc_type,d.mc_value,p.product_name,d.item_cost,d.bill_discount,
        d.wastage_percent,c.firstname as cus_name,d.mc_type as mcType,d.piece,d.rate_per_grm,d.bill_discount,
        d.esti_item_id,d.design_id,des.design_name,ifnull(sub.sub_design_name,'-') as sub_design_name,b.tot_bill_amount,IFNULL(d.item_total_tax,0) as item_total_tax,e.firstname as emp_name,
        mt.metal_code,concat(br.short_name,'-SA-',mt.metal_code,'-',b.sales_ref_no) as bill_no,c.mobile,t.tag_code,e.emp_code,br.name as branch_name,
        IFNULL(d.wastage_percent,0) as sales_wastage,IFNULL(d.rate_per_grm,0) as rate,IFNULL(d.mc_value,0) as sales_mc_value,d.mc_type,IF(b.is_otp_approved = 1,'Yes','No') as is_otp_approved,IFNULL(appr.firstname,'-') as approved_by
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_design_master des ON des.design_no=d.design_id
        LEFT JOIN ret_estimation_items est ON est.est_item_id=d.esti_item_id
        LEFT JOIN ret_estimation esti ON esti.estimation_id = est.esti_id
        LEFT JOIN employee e on e.id_employee = esti.created_by
        LEFT JOIN employee appr on appr.id_employee = b.otp_approved_by
        LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=est.id_sub_design
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN ret_taging t ON t.tag_id = d.tag_id
        LEFT JOIN ret_category cat ON cat.id_ret_category = p.cat_id
        LEFT JOIN branch br on br.id_branch = b.id_branch
        LEFT JOIN metal mt ON mt.id_metal = cat.id_metal
        WHERE d.bill_discount>0 AND b.bill_status=1
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
        ".($data['id_product'] != '' && $data['id_product'] >0 ? ' and d.product_id='.$data['id_product']: '')."
        ".($data['category_id'] != '' && $data['category_id'] >0 ? ' and p.cat_id ='.$data['category_id']: '')."
        ".($data['id_design'] != '' && $data['id_design'] >0 ? ' and d.design_id ='.$data['id_design']: '')."
        ".($data['id_sub_design'] != '' && $data['id_sub_design'] >0 ? ' and t.id_sub_design='.$data['id_sub_design']: '')."
        ".($data['metal_id'] != '' && $data['metal_id'] >0 ? ' and cat.id_metal='.$data['metal_id']: '')."
        ".($data['is_otp_approved'] == '1' ? 'and b.is_otp_approved = 1': ($data['is_otp_approved'] == '2' ? 'and b.is_otp_approved = 0' : ''))."
        order by b.bill_id");
       // print_r($this->db->last_query());exit;
        $bill_detail=$sql->result_array();
        $returnData = array();
        foreach($bill_detail as $items)
        {
            $mc_wast_amt = 0;
            $wast_wgt_amt = 0;
            $mc_amount = 0;
            $wastage_discount = 0;
            $mc_discount = 0;
            $watsge_wt = 0;
            $blc_discount = 0;
            $wastage_amount = 0;
            if($items['sales_wastage']>0){
                $watsge_wt = ($items['sales_wastage']*$items['net_wt']/100);
                $wastage_amount = (($items['sales_wastage']*$items['net_wt']/100)*$items['rate']);
            }
            if($items['sales_mc_value']>0)
            {
                $mc_amount = ($items['mc_type']==1 ? $items['sales_mc_value'] :($items['sales_mc_value']*$items['gross_wt']));
            }
            if($wastage_amount < ($items['bill_discount']))
            {
                $wastage_discount = $wastage_amount;
                $blc_discount = (($items['bill_discount']) - ($wastage_discount));
                if($blc_discount > 0)
                {
                    if($mc_amount > 0)
                    {
                        if(($mc_amount)>($blc_discount))
                        {
                            $mc_discount = ($blc_discount);
                        }else
                        {
                            $mc_discount = (($mc_amount));
                        }
                    }
                    else
                    {
                        $mc_discount = 0;
                    }
                    $total_applied_discount = (($mc_discount)+($wastage_discount));
                    if($total_applied_discount < $items['bill_discount'])
                    {
                        $item_blc_discount  = (($items['bill_discount'])-($total_applied_discount));
                    }
                }
            }
            else
            {
                if($wastage_amount > $items['bill_discount'])
                {
                    $wastage_discount = $items['bill_discount'];
                }
            }
            if ($wastage_discount > 0) {
                $discount_weight = number_format(($wastage_discount / $items['rate']), 3, '.', '');
                $item_wastge_wt = number_format(($watsge_wt - $discount_weight), 3, '.', '');
            } else {
                $item_wastge_wt = $watsge_wt;
            }
            if ($item_wastge_wt > 0) {
                if ($items['calculation_based_on'] == 0) {
                    $wastage_percent = (($item_wastge_wt * 100) / $items['gross_wt']);
                } else if ($items['calculation_based_on'] == 1 || $items['calculation_based_on'] == 2) {
                    $wastage_percent = (($item_wastge_wt * 100) / $items['net_wt']);
                }
            } else {
                $wastage_percent = $items['wastage_percent'];
            }
            if ($mc_discount > 0) {
                $mc        = $mc_amount - $mc_discount;
            }else{
                $mc = $mc_amount;
            }
            $items['wastage_percent'] = number_format($wastage_percent,2,'.','');
            $items['wastage_disc_amt'] = number_format($wastage_discount,2,'.','');
            $items['making_charge'] = number_format($mc,2,'.','');
            $items['mc_disc_amt'] = number_format($mc_discount,2,'.','');
            $returnData[]=$items;
        }
        return $returnData;
    }
/*    function getGSTBills($data)
    {
    	$bill_detail = array();
    		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
    	$data = $this->db->query("SELECT c.mobile,c.firstname as cus_name,br.name as branch_name,b.bill_no,b.tot_bill_amount,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
    	if(b.bill_type = 1,'Sales',if(b.bill_type = 2,'Sales&Purchase',if(b.bill_type = 3,'Sales&Purchase&Return',if(b.bill_type = 4,'Purchase',if(b.bill_type = 5,'Order Advance',if(b.bill_type = 6,'Advance',if(b.bill_type = 7,'Sales Return',''))))))) as bill_type,
    	IFNULL(tot_tax_value,0) as tot_tax_value,sum(d.item_total_tax) as tot_tax_value,sum(d.total_sgst) as sgst,sum(d.total_igst) as igst,
    	sum(d.total_cgst) as cgst,b.bill_id
    		From ret_billing b
    		LEFT JOIN ret_bill_details d on d.bill_id=b.bill_id
    		LEFT JOIN customer c on c.id_customer=b.bill_cus_id
			LEFT JOIN branch br on br.id_branch=b.id_branch
    		where b.bill_status = 1  AND item_total_tax IS NOT NULL ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
    		".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
    		GROUP  by d.bill_id ORDER BY b.id_branch");
    	$result = $data->result_array();
    		foreach($result as $r){
				$bill_detail[$r['branch_name']][] = $r;
			}
    	return $bill_detail;
    }*/
    function getGSTBills($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
    	$bill_detail = array();
    		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
    	$data = $this->db->query("SELECT b.bill_no,b.bill_id,c.firstname as cus_name,IFNULL(c.gst_number,'') as gst_number,c.mobile,a.company_name,a.address1,a.address2,t.name,s.name,y.name,IFNULL(c.pan,'') as pan,
    	br.name as branch_name,b.id_branch,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
        IFNULL(b.tot_bill_amount,0) as tot_bill_amount,IFNULL(d.item_total_tax,0) as tax_value,
        IFNULL(d.item_cost - d.item_total_tax,0) as tot_tax_value
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN address a ON a.id_customer=c.id_customer
        LEFT JOIN country t ON t.id_country=a.id_country
        LEFT JOIN state s ON s.id_state=a.id_state
        LEFT JOIN city y ON y.id_city=a.id_city
        LEFT JOIN branch br on br.id_branch=b.id_branch
        WHERE c.cus_type=2 and b.bill_status = 1
        AND b.sales_ref_no IS NOT NULL AND b.sales_ref_no!=''
        AND d.bill_id is not null and d.item_cost>0
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
    		".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
    		".($data['id_category'] != '' && $data['id_category'] >0 ? ' and p.cat_id ='.$data['id_category']: '')."
    	group by b.bill_id
    	ORDER BY b.id_branch");
        //print_r($this->db->last_query());exit;
    	$result = $data->result_array();
        foreach ($result as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
        }
    		foreach($result as $r){
				$bill_detail[$r['branch_name']][] = $r;
			}
    	return $bill_detail;
    }
    function getReorderitems($data)
    {
    	$result=array();
    	$multiple_weight_range = implode(' , ', $data['id_weight']);
		if($multiple_weight_range != '')
		{
			$id_weight = $multiple_weight_range;
		}else{
			$id_weight = $data['id_weight'];
		}
	    $sql=$this->db->query("SELECT IFNULL(SUM(s.min_pcs),0) as min_pcs,IFNULL(SUM(s.max_pcs),0) as max_pcs,concat(IFNULL(sz.value,''),'',sz.name) as size,p.product_name,d.design_name,s.id_product as product_id,s.id_design as design_id,
	    b.name as branch_name,s.id_branch,concat(wt.value,m.uom_name) as weight_name,wt.from_weight,wt.to_weight,subDes.sub_design_name,s.id_sub_design,s.id_wt_range,
	    sz.id_size,IFNULL(cart.id_cart_order,0) as id_cart_order,IFNULL(ord.id_orderdetails,'') as id_orderdetails
        FROM ret_reorder_settings s
        LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
        LEFT  JOIN ret_design_master d ON d.design_no=s.id_design
        LEFT JOIN ret_sub_design_master subDes on subDes.id_sub_design=s.id_sub_design
        LEFT JOIN ret_size sz on sz.id_size=s.size
        LEFT JOIN branch b on b.id_branch=s.id_branch
        LEFT JOIN ret_weight wt on wt.id_weight=s.id_wt_range
        LEFT JOIN ret_uom m on m.uom_id=wt.id_uom
        LEFT JOIN (SELECT ct.id_product,ct.design_no,ct.id_sub_design,ct.id_wt_range,ct.size,ct.id_cart_order
        FROM order_cart ct
        WHERE ct.orderstatus=0
        GROUP by ct.id_product,ct.design_no,ct.id_sub_design,ct.id_wt_range,ct.size) as cart ON cart.id_product=s.id_product AND cart.design_no=s.id_design AND cart.id_sub_design=s.id_sub_design AND cart.id_wt_range=s.id_wt_range AND cart.size=s.size
        LEFT JOIN(SELECT dt.id_product,dt.design_no,dt.id_sub_design,dt.id_weight_range,dt.size,dt.id_orderdetails
         FROM customerorderdetails dt
         LEFT JOIN customerorder c ON c.id_customerorder=dt.id_customerorder
         WHERE dt.orderstatus=3 AND c.order_type=1
         GROUP by dt.id_product,dt.design_no,dt.id_sub_design,dt.id_weight_range,dt.size) as ord ON ord.id_product=s.id_product AND ord.design_no=s.id_design AND ord.id_sub_design=s.id_sub_design AND ord.id_weight_range=s.id_wt_range AND ord.size=s.size
        where s.id_product IS NOT NULL and s.id_design IS NOT NULL and s.id_sub_design IS NOT NULL
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and s.id_branch=".$data['id_branch']."":'')."
        ".($data['id_product']!='' ? " and s.id_product=".$data['id_product']."" :'')."
        ".($data['id_design']!='' ? " and s.id_design=".$data['id_design']."" :'')."
        ".($data['id_sub_design']!='' ? " and s.id_sub_design=".$data['id_sub_design']."" :'')."
        ".($id_weight!='' && $id_weight !='0' ? " and wt.id_weight in (".$id_weight.") " :'' )."
        ".($data['id_size']!='' ? " and s.size=".$data['id_size']."" :'')."
        GROUP by s.id_product,s.id_design,s.id_sub_design,s.size,s.id_wt_range
        having wt.from_weight IS NOT NULL and wt.to_weight IS NOT NULL ");
		// print_r($this->db->last_query());exit;
    	$items = $sql->result_array();
    	foreach($items as $row)
    	{
    		$result[]=array(
    		    'product_name'      =>$row['product_name'],
    		    'design_name'       =>$row['design_name'],
    		    'sub_design_name'   =>$row['sub_design_name'],
    		    'product_id'        =>$row['product_id'],
    		    'design_id'         =>$row['design_id'],
    		    'id_sub_design'     =>$row['id_sub_design'],
    		    'branch_name'       =>$row['branch_name'],
    		    'id_branch'         =>$row['id_branch'],
    		    'weight_name'       =>$row['weight_name'],
    		    'min_pcs'           =>$row['min_pcs'],
    		    'max_pcs'           =>$row['max_pcs'],
    		    'from_weight'       =>$row['from_weight'],
    		    'to_weight'         =>$row['to_weight'],
    		    'size'              =>$row['size'],
    		    'id_size'           =>$row['id_size'],
    		    'id_wt_range'       =>$row['id_wt_range'],
    		    'is_cart'		    =>$row['id_cart_order'],
    		    'is_order'		    =>$row['id_orderdetails'],
    		    'tag_details'       =>$this->get_tagged_details($row['product_id'],$row['design_id'],$row['id_sub_design'],$data['id_branch'],$row['from_weight'],$row['to_weight'],$row['id_size'])
    		);
    	}
    	return $result;
    }
    function getBranchReorderitems($data)
    {
    	$result=array();
    	$multiple_weight_range = implode(' , ', $data['id_weight']);
		if($multiple_weight_range != '')
		{
			$id_weight = $multiple_weight_range;
		}else{
			$id_weight = $data['id_weight'];
		}
	    $sql = $this->db->query("SELECT view_reorder_details.*,
	                            coalesce(sum(case when id_branch = '2' then totgrosswt end), 0) as Btotgrswt,
                            	coalesce(sum(case when id_branch = '2' then totnet_wt end), 0) as Btotnetwt,
                            	coalesce(sum(case when id_branch = '2' then totpcs end), 0) as Btotpcs,
                                concat(coalesce(sum(case when id_branch = '2' then min_pcs end), 0), '\/', coalesce(sum(case when id_branch = '2' then max_pcs end), 0)) as Bminmax,
                            	coalesce(sum(case when id_branch = '5' then totgrosswt end), 0) as Ctotgrswt,
                            	coalesce(sum(case when id_branch = '5' then totnet_wt end), 0) as Ctotnetwt,
                            	coalesce(sum(case when id_branch = '5' then totpcs end), 0) as Ctotpcs,
                            	 concat(coalesce(sum(case when id_branch = '5' then min_pcs end), 0), '\/', coalesce(sum(case when id_branch = '5' then max_pcs end), 0)) as Cminmax,
                            	coalesce(sum(case when id_branch = '6' then totgrosswt end), 0) as Dtotgrswt,
                            	coalesce(sum(case when id_branch = '6' then totnet_wt end), 0) as Dtotnetwt,
                            	coalesce(sum(case when id_branch = '6' then totpcs end), 0) as Dtotpcs,
                            	 concat(coalesce(sum(case when id_branch = '6' then min_pcs end), 0), '\/', coalesce(sum(case when id_branch = '6' then max_pcs end), 0)) as Dminmax,
                            	coalesce(sum(case when id_branch = '7' then totgrosswt end), 0) as Etotgrswt,
                            	coalesce(sum(case when id_branch = '7' then totnet_wt end), 0) as Etotnetwt,
                            	coalesce(sum(case when id_branch = '7' then totpcs end), 0) as Etotpcs,
                            	 concat(coalesce(sum(case when id_branch = '7' then min_pcs end), 0), '\/', coalesce(sum(case when id_branch = '7' then max_pcs end), 0)) as Eminmax,
	                            coalesce(sum(case when id_branch = '2' then if(min_pcs > totpcs,  min_pcs - totpcs , 0)end), 0) as Bshortage,
                            	coalesce(sum(case when id_branch = '5' then if(min_pcs > totpcs,  min_pcs - totpcs , 0)end), 0) as Cshortage,
                            	coalesce(sum(case when id_branch = '6' then if(min_pcs > totpcs,  min_pcs - totpcs , 0)end), 0) as Dshortage,
                            	coalesce(sum(case when id_branch = '7' then if(min_pcs > totpcs,  min_pcs - totpcs , 0)end), 0) as Eshortage,
                            	coalesce(sum(case when id_branch = '2' then if(max_pcs < totpcs,  totpcs - max_pcs , 0)end), 0) as Bexcess,
                            	coalesce(sum(case when id_branch = '5' then if(max_pcs < totpcs,  totpcs - max_pcs , 0)end), 0) as Cexcess,
                            	coalesce(sum(case when id_branch = '6' then if(max_pcs < totpcs,  totpcs - max_pcs , 0)end), 0) as Dexcess,
                            	coalesce(sum(case when id_branch = '7' then if(max_pcs < totpcs,  totpcs - max_pcs , 0)end), 0) as Eexcess
                            FROM view_reorder_details
                            WHERE id_branch != 1
        ".($data['id_product']!='' ? " and product_id=".$data['id_product']."" :'')."
        ".($data['id_design']!='' ? " and design_id=".$data['id_design']."" :'')."
        ".($data['id_sub_design']!='' ? " and id_sub_design=".$data['id_sub_design']."" :'')."
        ".($id_weight!='' && $id_weight !='0' ? " and id_wt_range in (".$id_weight.") " :'' )."
        ".($data['id_size']!='' ? " and id_size =".$data['id_size']."" :'')."
        GROUP by product_id,design_id,id_sub_design,id_size,id_wt_range
        having (Bshortage > 0 OR Cshortage > 0 OR Dshortage > 0 OR Eshortage > 0 OR Bexcess > 0 OR Cexcess > 0 OR Dexcess > 0 OR Eexcess > 0)");
		//print_r($this->db->last_query());exit;
    	return $sql->result_array();
    }
    function get_retagging_details($data)
    {
    	// $bill_detail = array();
    	if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
    	$sql = $this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,date_format(b.dwnload_datetime,'%d-%m-%Y') as bt_date,
        (IFNULL(op_inw.gross_wt,0)-IFNULL(op_blc_metalIssue.issue_wt,0)-IFNULL(op_blc_retag.gross_wt,0)-IFNULL(op_blc_ret.gross_wt,0)) as op_blc_gwt,
        (IFNULL(op_inw.net_wt,0)-IFNULL(op_blc_metalIssue.issue_wt,0)-IFNULL(op_blc_retag.net_wt,0)-IFNULL(op_blc_ret.net_wt,0)) as op_blc_nwt,
        (IFNULL(op_inw.net_wt,0)-IFNULL(op_blc_metalIssue.issue_wt,0)-IFNULL(op_blc_retag.net_wt,0)-IFNULL(op_blc_ret.net_wt,0)) as op_blc_nwt,
        IFNULL(inw.gross_wt,0) as inw_gwt,IFNULL(inw.net_wt,0) as inw_nwt,IFNULL(inw_dia.diawt,0) as inw_diawt,
        IFNULL(metalIssue.issue_wt,0) as issue_gwt,IFNULL(metalIssue.issue_wt,0) as issue_nwt,IFNULL(retag.gross_wt,0) as retag_gwt,IFNULL(retag.net_wt,0) as retag_nwt,IFNULL(retagDia.dia_wt,0) as retag_diawt,
        IFNULL(ret.gross_wt,0) as ret_gwt,IFNULL(ret.net_wt,0) as ret_nwt,IFNULL(retDia.diawt,0) as return_diawt,
        (IFNULL(inw.gross_wt,0)-IFNULL(metalIssue.issue_wt,0)-IFNULL(retag.gross_wt,0)-IFNULL(ret.gross_wt,0)) as closing_gwt,
        (IFNULL(inw.net_wt,0)-IFNULL(metalIssue.issue_wt,0)-IFNULL(retag.net_wt,0)-IFNULL(ret.net_wt,0)) as closing_nwt,
        (IFNULL(inw_dia.diawt,0)-IFNULL(retagDia.dia_wt,0)-IFNULL(retDia.diawt,0)) as closing_diawt
        FROM ret_branch_transfer b
        LEFT JOIN(SELECT t.transfer_id,IFNULL(SUM(t.gross_wt),0) as gross_wt,IFNULL(SUM(t.net_wt),0) as net_wt
                 FROM ret_brch_transfer_old_metal t
                 LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id =t.transfer_id AND brch.status = 4
                 WHERE t.item_type = 2
                 GROUP BY t.transfer_id) as op_inw ON op_inw.transfer_id = b.branch_transfer_id
        LEFT JOIN(SELECT t.transfer_id,IFNULL(SUM(t.gross_wt),0) as gross_wt,IFNULL(SUM(t.net_wt),0) as net_wt
                 FROM ret_brch_transfer_old_metal t
                 LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id =t.transfer_id AND brch.status = 4
                 WHERE t.item_type = 2
                 GROUP BY t.transfer_id) as inw ON inw.transfer_id = b.branch_transfer_id
        LEFT JOIN(SELECT t.transfer_id,IFNULL(SUM(s.wt),0) as diawt
                 FROM ret_brch_transfer_old_metal t
                 LEFT JOIN ret_bill_details det ON det.bill_det_id = t.sold_bill_det_id
                 LEFT JOIN ret_billing_item_stones s ON s.bill_det_id = det.bill_det_id
                 LEFT JOIN ret_billing bill ON bill.bill_id = det.bill_id
                 LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
                 WHERE bill.bill_status = 1 AND det.status = 2 AND st.stone_type = 1
                 GROUP BY t.transfer_id) as op_blc_inw_dia ON op_blc_inw_dia.transfer_id = b.branch_transfer_id
        LEFT JOIN(SELECT t.transfer_id,IFNULL(SUM(s.wt),0) as diawt
                 FROM ret_brch_transfer_old_metal t
                 LEFT JOIN ret_bill_details det ON det.bill_det_id = t.sold_bill_det_id
                 LEFT JOIN ret_billing_item_stones s ON s.bill_det_id = det.bill_det_id
                 LEFT JOIN ret_billing bill ON bill.bill_id = det.bill_id
                 LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
                 WHERE bill.bill_status = 1 AND det.status = 2 AND st.stone_type = 1
                 GROUP BY t.transfer_id) as inw_dia ON inw_dia.transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT bt.transfer_id,IFNULL(SUM(d.issue_metal_wt),0) as issue_wt
                  FROM ret_karigar_metal_issue k
                  LEFT JOIN ret_karigar_metal_issue_details d ON d.issue_met_parent_id = k.met_issue_id
                  LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = d.tag_id AND bt.item_type = 2
                  LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id AND brch.status = 4
                  WHERE k.issue_from = 1 AND k.tag_issue_from = 2 and k.bill_status = 1
                  GROUP BY bt.transfer_id) as op_blc_metalIssue ON op_blc_metalIssue.transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT bt.transfer_id,IFNULL(SUM(d.issue_metal_wt),0) as issue_wt
                  FROM ret_karigar_metal_issue k
                  LEFT JOIN ret_karigar_metal_issue_details d ON d.issue_met_parent_id = k.met_issue_id
                  LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = d.tag_id AND bt.item_type = 2
                  LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id AND brch.status = 4
                  WHERE k.issue_from = 1 AND k.tag_issue_from = 2 and k.bill_status = 1
                  GROUP BY bt.transfer_id) as metalIssue ON metalIssue.transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT brch.branch_transfer_id,IFNULL(SUM(accDet.gross_wt),0) as gross_wt,IFNULL(SUM(accDet.net_wt),0) as net_wt
                  FROM ret_acc_stock_process_details accDet
                  LEFT JOIN ret_acc_stock_process acc ON acc.id_process = accDet.id_process
                  LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = accDet.ref_no AND bt.item_type = 2
                  LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id
                  WHERE acc.type = 1
                  GROUP BY brch.branch_transfer_id) as op_blc_retag ON op_blc_retag.branch_transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT brch.branch_transfer_id,IFNULL(SUM(accDet.gross_wt),0) as gross_wt,IFNULL(SUM(accDet.net_wt),0) as net_wt
                  FROM ret_acc_stock_process_details accDet
                  LEFT JOIN ret_acc_stock_process acc ON acc.id_process = accDet.id_process
                  LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = accDet.ref_no AND bt.item_type = 2
                  LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id
                  WHERE acc.type = 1
                  GROUP BY brch.branch_transfer_id) as retag ON retag.branch_transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT brch.branch_transfer_id,IFNULL(SUM(accstn.stone_wt),0) as dia_wt
                  FROM ret_acc_stock_process_stone_details accstn
                  LEFT JOIN ret_acc_stock_process_details accdet ON accdet.id_process_details = accstn.id_process_details
                  LEFT JOIN ret_acc_stock_process acc ON acc.id_process = accdet.id_process
                  LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = accdet.ref_no AND bt.item_type = 2
                  LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id
                  LEFT JOIN ret_stone st ON st.stone_id = accstn.stone_id
                  WHERE acc.type = 1 AND st.stone_type = 1 GROUP BY brch.branch_transfer_id) as op_blc_retagDia ON op_blc_retagDia.branch_transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT brch.branch_transfer_id,IFNULL(SUM(accstn.stone_wt),0) as dia_wt
                  FROM ret_acc_stock_process_stone_details accstn
                  LEFT JOIN ret_acc_stock_process_details accdet ON accdet.id_process_details = accstn.id_process_details
                  LEFT JOIN ret_acc_stock_process acc ON acc.id_process = accdet.id_process
                  LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = accdet.ref_no AND bt.item_type = 2
                  LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id
                  LEFT JOIN ret_stone st ON st.stone_id = accstn.stone_id
                  WHERE acc.type = 1 AND st.stone_type = 1 GROUP BY brch.branch_transfer_id) as retagDia ON retagDia.branch_transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT brch.branch_transfer_id,IFNULL(SUM(itm.pur_ret_gwt),0) as 			     gross_wt,IFNULL(SUM(itm.pur_ret_nwt),0) as net_wt
                          FROM ret_purchase_return r
                          LEFT JOIN ret_purchase_return_items itm ON itm.pur_ret_id = r.pur_return_id
                          LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = itm.tag_id AND bt.item_type = 2
                            LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id
                          WHERE r.tag_issue_from = 2 and r.bill_status = 1
                           GROUP BY brch.branch_transfer_id) as op_blc_ret ON op_blc_ret.branch_transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT brch.branch_transfer_id,IFNULL(SUM(itm.pur_ret_gwt),0) as 			     gross_wt,IFNULL(SUM(itm.pur_ret_nwt),0) as net_wt
                          FROM ret_purchase_return r
                          LEFT JOIN ret_purchase_return_items itm ON itm.pur_ret_id = r.pur_return_id
                          LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = itm.tag_id AND bt.item_type = 2
                            LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id
                          WHERE r.tag_issue_from = 2 and r.bill_status = 1
                           GROUP BY brch.branch_transfer_id) as ret ON ret.branch_transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT brch.branch_transfer_id,IFNULL(SUM(ret_st.ret_stone_wt),0) as diawt
                  FROM ret_purchase_return_stone_items ret_st
                  LEFT JOIN ret_purchase_return_items ritm ON ritm.pur_ret_itm_id = ret_st.pur_ret_return_id
                  LEFT JOIN ret_purchase_return ret ON ret.pur_return_id = ritm.pur_ret_id
                  LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = ritm.tag_id AND bt.item_type = 2
                  LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id
                  LEFT JOIN ret_stone stn ON stn.stone_id = ret_st.po_st_id
                  WHERE ret.tag_issue_from = 2 AND stn.stone_type = 1 and ret.bill_status = 1
                 GROUP BY brch.branch_transfer_id) as op_blc_retDia ON op_blc_retDia. branch_transfer_id = b.branch_transfer_id
        LEFT JOIN (SELECT brch.branch_transfer_id,IFNULL(SUM(ret_st.ret_stone_wt),0) as diawt
                  FROM ret_purchase_return_stone_items ret_st
                  LEFT JOIN ret_purchase_return_items ritm ON ritm.pur_ret_itm_id = ret_st.pur_ret_return_id
                  LEFT JOIN ret_purchase_return ret ON ret.pur_return_id = ritm.pur_ret_id
                  LEFT JOIN ret_brch_transfer_old_metal bt ON bt.tag_id = ritm.tag_id AND bt.item_type = 2
                  LEFT JOIN ret_branch_transfer brch ON brch.branch_transfer_id = bt.transfer_id
                  LEFT JOIN ret_stone stn ON stn.stone_id = ret_st.po_st_id
                  WHERE ret.tag_issue_from = 2 AND stn.stone_type = 1 and ret.bill_status = 1
                 GROUP BY brch.branch_transfer_id) as retDia ON retDia. branch_transfer_id = b.branch_transfer_id
        WHERE b.transfer_item_type = 3 AND b.status = 4
        ".($data['from_date'] != '' ? ' and date(bt_date) BETWEEN "'.$data['from_date'].'" AND "'.$data['to_date'].'"' : '')."
        ");
        print_r($this->db->last_query());exit;
    	return $sql->result_array();
    }
    function get_cart_items($id_product,$design_no,$id_sub_design,$id_wt_range)
    {
    	$sql=$this->db->query("SELECT * FROM order_cart o WHERE o.orderstatus=0 AND o.id_product=".$id_product." AND o.design_no=".$design_no." and o.id_sub_design=".$id_sub_design." AND o.id_wt_range=".$id_wt_range."");
    	//print_r($this->db->last_query());exit;
    	return $sql->num_rows();
    }
    function get_order_items($id_product,$design_no,$id_sub_design,$id_wt_range)
    {
        $sql=$this->db->query("SELECT d.id_orderdetails
        FROM customerorderdetails d
        LEFT JOIN customerorder c ON c.id_customerorder=d.id_customerorder
        WHERE id_product=".$id_product." AND design_no=".$design_no."
        AND id_sub_design=".$id_sub_design." AND id_weight_range=".$id_wt_range." AND c.order_status=3 AND c.order_type=1");
        //print_r($this->db->last_query());exit;
    	return $sql->num_rows();
    }
    function get_tagged_details($id_product,$design_id,$id_sub_design,$id_branch,$from_weight,$to_weight,$id_size)
    {
            $sql=$this->db->query("SELECT IFNULL(SUM(t.piece),0) as tot_pcs,sum(t.net_wt) as net_wt,SUM(t.gross_wt) as gross_wt
            FROM ret_taging t
            WHERE t.tag_status=0  AND t.product_id=".$id_product." AND t.design_id=".$design_id."
            AND t.id_sub_design=".$id_sub_design." and net_wt BETWEEN ".$from_weight." AND ".$to_weight."
            ".($id_branch!=0 ? " and t.current_branch=".$id_branch."" :'')."
            ".($id_size!='' ? " and t.size=".$id_size."" :'')."");
            //print_r($this->db->last_query());exit;
            return $sql->row_array();
    }
    function get_reorder_settings($id_branch,$id_product,$id_design,$field)
    {
    	$data=$this->db->query("SELECT ".$field."
    			FROM ret_reorder_settings s
    			left join ret_weight wt on wt.id_weight=s.id_wt_range
    			where s.id_product=".$id_product." and s.id_design=".$id_design."
    			".($id_branch!='' ? " and s.id_branch=".$id_branch."":'')."");
    	//print_r($this->db->last_query());exit;
    	if($data->num_rows()>0)
    	{
    		return $data->row($field);
    	}else{
    		return '-';
    	}
    }
    function get_Activedesign($data)
    {
        $multiple_id_product = implode(' , ', $data['id_product']);
		if($multiple_id_product != '')
		{
			$id_products = $multiple_id_product;
		}else{
			$id_products = $data['id_product'];
		}
        if($id_products != ""){
    	    $sql=$this->db->query("SELECT d.design_no, d.design_name, d.mc_cal_type, d.wastage_type, ifnull(d.wastag_value, 0) as wastag_value,
    	                            ifnull(d.mc_cal_value, 0) as mc_cal_value, pr.sales_mode as sales_mode
    	                            FROM ret_design_master d
    	                            LEFT JOIN ret_product_mapping dm ON dm.id_design = d.design_no
    	                            LEFT JOIN ret_product_master as pr ON pr.pro_id = dm.pro_id
    	                            where d.design_status=1 ".($id_products!='' ? " and dm.pro_id in (".$id_products.")" :'')." ");
    	   //echo $this->db->last_query();exit;
        }else{
            $sql=$this->db->query("SELECT d.design_no,d.design_name,d.mc_cal_type,d.wastage_type,ifnull(d.wastag_value, 0)  as wastag_value, ifnull(d.mc_cal_value, 0) as mc_cal_value
    		FROM ret_design_master d
    		LEFT JOIN ret_product_mapping dm ON dm.id_design = d.design_no
    		where d.design_status=1 ".($id_products!='' ? " and dm.pro_id in (".$id_products." )" :'')." ");
        }
    	return $sql->result_array();
    }
    function get_ActiveSubDesign($data)
    {
        $multiple_id_product = implode(' , ', $data['id_product']);
		if($multiple_id_product != '')
		{
			$id_product = $multiple_id_product;
		}else{
			$id_product = $data['id_product'];
		}
        $multiple_id_design = implode(' , ', $data['id_design']);
		if($multiple_id_design != '')
		{
			$id_design = $multiple_id_design;
		}else{
			$id_design = $data['id_design'];
		}
        $sql=$this->db->query("SELECT subDes.id_sub_design,subDes.sub_design_name
        FROM ret_sub_design_mapping s
        LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=s.id_sub_design
        WHERE s.id_product in (".$id_product.")
        AND s.id_design in (".$id_design.") ");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    function get_Active_St_SubDesign($data)
    {
        $sql=$this->db->query("SELECT subDes.id_sub_design,subDes.sub_design_name
        FROM ret_sub_design_mapping s
        LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=s.id_sub_design
        ");
        return $sql->result_array();
    }
    function get_ActiveProduct($postdata) {
        $id_category=(isset($postdata['id_category']) ? ($postdata['id_category']!='' ? $postdata['id_category'] :'') :'');
        $multiple_id_category = implode(' , ', $postdata['id_category']);
        if($multiple_id_category != '') {
            $id_category = $multiple_id_category;
        } else {
            $id_category = $postdata['id_category'];
        }
        $stock_type  = $postdata['stock_type'];
        $data=$this->db->query("SELECT p.pro_id,p.product_name,p.stock_type,p.cat_id ,p.tax_type,m.metal as metal_name,m.id_metal,tax.tax_percentage,cat.hsn_code,p.tgrp_id as tax_group_id,tgrp_name,p.sales_mode,p.calculation_based_on,p.stone_type
         FROM ret_product_master p
         LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
         LEFT JOIN metal m on m.id_metal=cat.id_metal
         LEFT JOIN (select i.tgi_taxcode,i.tgi_tgrpcode,
                                    m.tax_percentage as tax_percentage,
                                    i.tgi_calculation as tgi_calculation
                                    FROM ret_taxgroupitems i
                                    LEFT JOIN ret_taxmaster m on m.tax_id=i.tgi_taxcode) as tax on tax.tgi_tgrpcode=p.tgrp_id
            LEFT JOIN ret_taxgroupmaster as txgrp ON txgrp.tgrp_id = p.tgrp_id
            where p.product_status = 1
        ".($id_category !='' && $id_category !='0' ? " and cat_id in (".$id_category.") " :'' )."
        ".($stock_type  !='' && $stock_type  !='0' ? " and p.stock_type =".$stock_type ." " :'' )."
        ");
    	return $data->result_array();
    }
    function get_ActiveNontagProduct($postdata)
    {
	    $data=$this->db->query("SELECT p.pro_id,p.product_name,p.cat_id
		FROM ret_product_master p
		where p.product_status=1 and p.stock_type=2");
    	return $data->result_array();
    }
    function get_weight_range()
    {
        $id_design = (isset($_POST['id_design']) ? $_POST['id_design'] :'');
        $id_sub_design = (isset($_POST['id_sub_design']) ? $_POST['id_sub_design'] :'');
    	$data=$this->db->query("SELECT wt.name,wt.id_weight,wt.weight_description
    		FROM ret_weight wt
    		where wt.id_weight IS NOT NULL
    		".($_POST['id_product']!='' ? " and wt.id_product=".$_POST['id_product']."" :'')."
    		".($id_design!='' ? " and wt.id_design=".$id_design."" :'')."
    		".($id_sub_design!='' ? " and wt.id_sub_design=".$id_sub_design."" :'')."
    		");
    	return $data->result_array();
    }
    function getTaggeditems($data)
    {
    	$result=array();
    	$collection = implode(' , ', $data['id_collection']);
		if($collection != '')
		{
			$id_collection = $collection;
		}else{
			$id_collection = $data['id_collection'];
		}
        $karigar = implode(' , ', $data['id_karigar']);
		if($karigar != '')
		{
			$id_karigar = $karigar;
		}else{
			$id_karigar = $data['id_karigar'];
		}
        $available_stk_date = date_create($data['available_stk_date']);
        $stock_date = date_format($available_stk_date,"Y-m-d");
        // $branch = implode(' , ', $data['id_branch']);
		// if($branch != '')
		// {
		// 	$id_branch = $branch;
		// }else{
		// 	$id_branch = $data['id_branch'];
		// }
        $section = implode(' , ', $data['id_section']);
		if($section != '')
		{
			$id_section = $section;
		}else{
			$id_section = $data['id_section'];
		}
        $product = implode(' , ', $data['id_product']);
		if($product != '')
		{
			$id_product = $product;
		}else{
			$id_product = $data['id_product'];
		}
        $design = implode(' , ', $data['id_design']);
		if($design != '')
		{
			$id_design = $design;
		}else{
			$id_design = $data['id_design'];
		}
        $sub_design = implode(' , ', $data['id_sub_design']);
		if($sub_design != '')
		{
			$id_sub_design = $sub_design;
		}else{
			$id_sub_design = $data['id_sub_design'];
		}
        $metal = implode(' , ', $data['id_metal']);
		if($metal != '')
		{
			$id_metal = $metal;
		}else{
			$id_metal = $data['id_metal'];
		}
        $category = implode(' , ', $data['id_category']);
		if($category != '')
		{
			$id_category = $category;
		}else{
			$id_category = $data['id_category'];
		}
		$profile=$this->get_profile_settings($this->session->userdata('profile'));
    	$data=$this->db->query("SELECT t.piece,IFNULL(d.design_name,'') as design_name, IFNULL(sd.sub_design_name,'') as sub_design_name, IFNULL(p.product_name,'') as product_name,t.product_id,t.design_id,b.name as branch_name,IFNULL(t.gross_wt,0) as gross_wt,IFNULL(t.net_wt,0) as net_wt,t.id_branch,DATE_FORMAT(t.tag_datetime,'%d-%m-%Y') as tag_date,
    		if(t.tag_mc_type=1,'Per Piece', 'Per Gram') as mc_type,t.tag_mc_value,t.retail_max_wastage_percent,t.item_rate,t.tag_id,t.tag_mc_type,
    		IFNULL(st.st_pieces,'-') as st_pieces,IFNULL(st.st_wt,'-') as st_wt, IFNULL(st.st_amount,'-') as st_amount, IFNULL(t.sales_value,0) as sales_value,
            t.tag_code,ifnull(concat(s.value,'-',s.name),'-') as size_name,
    		IFNULL(t.tag_lot_id,'') as tag_lot_id,IFNULL(est.tot_est,0) as tot_est, IFNULL(kar.firstname,'-') as karigarname,
    		IFNULL(tagatt.attrvalues,'-') as attrvalues, t.remarks , cat.name as catname ,
            ifnull(t.old_tag_id,'-') as old_tag_id,IFNULL(m.collection_name,'') as collection_name,
    		IFNULL(t.cert_no, if(t.ref_tag_id IS NOT NULL, (SELECT IFNULL(rt.cert_no, '') as certno FROM ret_taging as rt WHERE rt.tag_id = t.ref_tag_id), '')) as cert_no,
    		IFNULL(t.style_code, if(t.ref_tag_id IS NOT NULL, (SELECT IFNULL(rt.style_code, '-') as certno FROM ret_taging as rt WHERE rt.tag_id = t.ref_tag_id), '-')) as style_code, tag_img.image as tag_img,sec.section_name,IFNULL(t.hu_id,'') as huid,
            IFNULL(tagdia.stn_wt,0) as dia_stn_wt,IFNULL(tagst.stn_wt,0) as nt_stn_wt,
            IFNULL(tagdia.stn_pcs,0) as dia_stn_pcs,IFNULL(tagst.stn_pcs,0) as nt_stn_pcs,
            IFNULL(po.po_ref_no,'-') as po_ref_no, DATE_FORMAT(t.old_tag_date,'%d-%m-%Y') as old_tag_date,
            IFNULL(ROUND(IF(t.calculation_based_on = 0, (t.gross_wt * t.retail_max_wastage_percent) / 100,
            IF(t.calculation_based_on = 1, (t.net_wt * t.retail_max_wastage_percent) / 100,
            IF(t.calculation_based_on = 2, (t.gross_wt * t.retail_max_wastage_percent) / 100, 0))), 3), 0) AS wastage_weight,
            IFNULL(t.narration,'') as remark,IFNULL(c.order_no,'-') as order_no,tag_img.image as tag_img,
            DATEDIFF(date(now()),date(t.tag_datetime)) AS age,
            DATEDIFF(date(now()),date(t.old_tag_date)) AS old_age,
            IFNULL(emp.firstname,'') as emp_name,
            IFNULL(pur.purity,'')as purity,IFNULL(t.narration,'')as narration,p.stone_type,IFNULL(t.uom_gross_wt,'') as tag_uom
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '".$stock_date."')
                                    
			LEFT JOIN ret_taging t ON t.tag_id = m1.tag_id
            left join ret_taging_huid rh on rh.tag_id=t.tag_id
			left JOIN ret_product_master p on p.pro_id=t.product_id
			left JOIN ret_category cat on cat.id_ret_category=p.cat_id
            left JOIN employee emp on emp.id_employee = t.created_by
			LEFT JOIN ret_design_master d on d.design_no=t.design_id
			LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=t.id_sub_design
			LEFT JOIN branch b on b.id_branch=t.current_branch
			LEFT JOIN ret_size s on s.id_size=t.size
            LEFT JOIN ret_section sec ON sec.id_section = t.id_section
            LEFT JOIN customerorderdetails od ON od.id_orderdetails = t.id_orderdetails
            LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
			LEFT JOIN ret_purity as pur ON pur.id_purity = t.purity
			LEFT JOIN (SELECT s.tag_id,sum(s.pieces) as st_pieces,sum(s.wt) as st_wt, sum(s.amount) as st_amount
			FROM ret_taging_stone s GROUP BY s.tag_id) st on st.tag_id = t.tag_id
            LEFT JOIN (SELECT ts.tag_id,ifnull(sum(ts.wt),0) as stn_wt,
            sum(ts.pieces) as stn_pcs
            FROM ret_taging_stone as ts
            LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
            LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
            WHERE st.stone_type = 1
            GROUP by ts.tag_id) tagdia on tagdia.tag_id = t.tag_id
            LEFT JOIN (SELECT ts.tag_id,ifnull(sum(ts.wt),0) as stn_wt,
            sum(ts.pieces) as stn_pcs
            FROM ret_taging_stone as ts
            LEFT JOIN ret_stone as st ON
            st.stone_id = ts.stone_id
            LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
            WHERE st.stone_type != 1
            GROUP by ts.tag_id) tagst on tagst.tag_id = t.tag_id
			LEFT JOIN (SELECT est_items.tag_id,COUNT(est_items.esti_id) as tot_est FROM ret_estimation_items est_items GROUP by est_items.tag_id) est on est.tag_id=t.tag_id
			Left join ret_lot_inwards_detail lot_det on lot_det.id_lot_inward_detail = if(t.ref_tag_id !='', (SELECT id_lot_inward_detail FROM ret_taging as rett where rett.tag_id = t.ref_tag_id),t.id_lot_inward_detail)
            LEFT JOIN ret_lot_inwards as linw ON linw.lot_no = lot_det.lot_no
            LEFT JOIN ret_purchase_order as po ON po.po_id =linw.po_id
            LEFT JOIN ret_karigar as kar ON kar.id_karigar = linw.gold_smith
            LEFT JOIN (SELECT id_tagging, GROUP_CONCAT(attr_val) as attrvalues FROM `ret_tagging_attributes` tagattr
            LEFT JOIN ret_attribute as attr ON attr.attr_id = tagattr.attr_id
            LEFT JOIN ret_attribute_values as atrval ON atrval.attr_val_id =  tagattr.attr_val_id
            GROUP BY tagattr.id_tagging) as tagatt ON tagatt.id_tagging = t.tag_id
            LEFT JOIN ret_tag_collection_mapping_details coll on coll.tag_id=t.tag_id
            LEFT JOIN ret_tag_collection_mapping mt on mt.id_tag_mapping=coll.id_tag_mapping
            LEFT JOIN ret_collection_master m on m.id_collection=mt.id_collection_master
            LEFT JOIN (SELECT tag_id, GROUP_CONCAT(IFNULL(image,'')) AS image FROM ret_taging_images GROUP BY tag_id) AS tag_img on tag_img.tag_id=t.tag_id
			where m2.id_tag_status_log IS NULL 
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$stock_date."'
			".($data['id_size']!='' ? " and t.size=".$data['id_size']."" :'')."
            ".($data['id_purity']!='' ? " and t.purity =".$data['id_purity']."" :'')."
			".($data['from_weight']!='' ?" and t.gross_wt>=".$data['from_weight']."" :'')."
			".($data['to_weight']!='' ?" and t.gross_wt<=".$data['to_weight']."" :'')."
			".($id_collection!='' && $id_collection !='0' ? " and m.id_collection in (".$id_collection.") " :'' )."
            ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."":'')."
            ".($id_product!='' && $id_product !='0' ? " and t.product_id in (".$id_product.") " :'' )."
            ".($id_design!='' && $id_design !='0' ? " and t.design_id in (".$id_design.") " :'' )."
            ".($id_sub_design!='' && $id_sub_design !='0' ? " and  t.id_sub_design in (".$id_sub_design.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? " and p.cat_id in (".$id_category.") " :'' )."
            ".($id_section!='' && $id_section !='0' ? " and  t.id_section in (".$id_section.") " :'' )."
            ".($id_metal!='' && $id_metal !='0' ? " and   cat.id_metal in (".$id_metal.") " :'' )."
            ".($id_karigar!='' && $id_karigar !='0' ? " and  linw.gold_smith in (".$id_karigar.") " :'' )."
            ".($data['from_lotno'] != '' && $data['to_lotno'] != ''? ' and (t.tag_lot_id BETWEEN "'.$data['from_lotno'].'" AND "'.$data['to_lotno'].'")' : '')."

                ".($data['huid'] != '' 
                    ? " AND (t.hu_id = '".$data['huid']."' OR t.hu_id2 = '".$data['huid']."' OR rh.huid = '".$data['huid']."') "  : '')."

            ".($data['from_age'] != '' && $data['to_age'] != ''? ' and (DATEDIFF(date(now()),date(t.tag_datetime)) BETWEEN "'.$data['from_age'].'" AND "'.$data['to_age'].'")' : '')."
            group by t.tag_id
            ORDER by t.id_branch
            ");
         // print_r($this->db->last_query());exit;
         $items = $data->result_array();
         foreach($items as $ikey => $ival){
             if($profile['purchase_details']==0)
             {
                 $items[$ikey]['tag_lot_id'] = '';
                 $items[$ikey]['karigarname'] = '-';
             }
             $items[$ikey]["stone_details"] = $this->getTagStoneDetails($ival['tag_id']);
             $items[$ikey]["multi_metal_details"] = $this->getTagMultiMetalDetails($ival['tag_id']);
            }
    	return $items;
    }
     function getTagMultiMetalDetails($tag_id)
    {
        $sql = $this->db->query("SELECT cat.name, pur.purity, tag_other_itm_grs_weight as grosswt,  tag_other_itm_wastage as wastage,
                                tag_other_itm_mc as mc, tag_other_itm_rate as rate,
                                tag_other_itm_pcs as pcs, tag_other_itm_amount as totalamt
                                FROM `ret_tag_other_metals` as om
                                LEFT JOIN ret_category as cat ON cat.id_ret_category = om.tag_other_itm_metal_id
                                LEFT JOIN ret_purity as pur ON pur.id_purity = om.tag_other_itm_pur_id
                                WHERE tag_other_itm_tag_id = '".$tag_id."'");
        return $sql->result_array();
    }
    function getTagStoneDetails($tag_id)
    {
        $st_sql = $this->db->query("SELECT tag_stone_id,tag_id, st.stone_name, uom.uom_name, pieces, wt, rate_per_gram,
                                    amount,s.stone_id, amount as price, IFNULL(certification_cost,0) as certification_cost, is_apply_in_lwt
                                    FROM ret_taging_stone as s
                                    LEFT JOIN ret_stone as st ON st.stone_id = s.stone_id
                                    LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
                                    WHERE s.tag_id = '".$tag_id."'");
        return $st_sql->result_array();
    }
    function get_Tagged_items($data)
    {
    	$result=array();
        $returnData=array();
    	$collection = implode(' , ', $data['id_collection']);
		if($collection != '')
		{
			$id_collection = $collection;
		}else{
			$id_collection = $data['id_collection'];
		}
        $karigar = implode(' , ', $data['id_karigar']);
		if($karigar != '')
		{
			$id_karigar = $karigar;
		}else{
			$id_karigar = $data['id_karigar'];
		}
        $branch = implode(' , ', $data['id_branch']);
		if($branch != '')
		{
			$id_branch = $branch;
		}else{
			$id_branch = $data['id_branch'];
		}
        $section = implode(' , ', $data['id_section']);
		if($section != '')
		{
			$id_section = $section;
		}else{
			$id_section = $data['id_section'];
		}
        $product = implode(' , ', $data['id_product']);
		if($product != '')
		{
			$id_product = $product;
		}else{
			$id_product = $data['id_product'];
		}
        $design = implode(' , ', $data['id_design']);
		if($design != '')
		{
			$id_design = $design;
		}else{
			$id_design = $data['id_design'];
		}
        $sub_design = implode(' , ', $data['id_sub_design']);
		if($sub_design != '')
		{
			$id_sub_design = $sub_design;
		}else{
			$id_sub_design = $data['id_sub_design'];
		}
        $metal = implode(' , ', $data['id_metal']);
		if($metal != '')
		{
			$id_metal = $metal;
		}else{
			$id_metal = $data['id_metal'];
		}
        $category = implode(' , ', $data['id_category']);
		if($category != '')
		{
			$id_category = $category;
		}else{
			$id_category = $data['id_category'];
		}
        $group_by = $data['group_by'];
        $profile=$this->get_profile_settings($this->session->userdata('profile'));
    	$data=$this->db->query("SELECT t.piece,IFNULL(p.product_name,'') as product_name,t.product_id,t.design_id,b.name as branch_name,IFNULL(t.gross_wt,0) as gross_wt,IFNULL(t.net_wt,0) as net_wt,t.id_branch,DATE_FORMAT(t.tag_datetime,'%d-%m-%Y') as tag_date,
    		if(t.tag_mc_type=1,'Per Piece', 'Per Gram') as mc_type,t.tag_mc_value,t.retail_max_wastage_percent,t.item_rate,t.tag_id,t.tag_mc_type,
    		IFNULL(st.st_pieces,'-') as st_pieces,IFNULL(st.st_wt,'-') as st_wt, IFNULL(st.st_amount,'-') as st_amount, IFNULL(t.sales_value,0) as sales_value,t.tag_code,(concat(IFNULL(s.value,''),'-',IFNULL(s.name,''))) as size_name,
    		IFNULL(t.tag_lot_id,'') as tag_lot_id,IFNULL(est.tot_est,0) as tot_est, kar.firstname as karigarname,
    		IFNULL(tagatt.attrvalues,'') as attrvalues, t.remarks , cat.name as catname ,ifnull(t.old_tag_id,'-') as old_tag_id,IFNULL(m.collection_name,'') as collection_name,
    		IFNULL(t.cert_no, if(t.ref_tag_id IS NOT NULL, (SELECT IFNULL(rt.cert_no, '') as certno FROM ret_taging as rt WHERE rt.tag_id = t.ref_tag_id), '')) as cert_no,
    		IFNULL(t.style_code, if(t.ref_tag_id IS NOT NULL, (SELECT IFNULL(rt.style_code, '-') as certno FROM ret_taging as rt WHERE rt.tag_id = t.ref_tag_id), '-')) as style_code, tag_img.image as tag_img,sec.section_name,IFNULL(t.hu_id,'') as huid,
            IFNULL(tagdia.stn_wt,0) as dia_stn_wt,IFNULL(tagst.stn_wt,0) as nt_stn_wt,
            IFNULL(tagdia.stn_pcs,0) as dia_stn_pcs,IFNULL(tagst.stn_pcs,0) as nt_stn_pcs,
            IFNULL(pur.purity,'-') as purity,IFNULL(po.po_ref_no,'-') as po_ref_no,
            IFNULL(ROUND(IF(t.calculation_based_on = 0, (t.gross_wt * t.retail_max_wastage_percent) / 100,
            IF(t.calculation_based_on = 1, (t.net_wt * t.retail_max_wastage_percent) / 100,
            IF(t.calculation_based_on = 2, (t.gross_wt * t.retail_max_wastage_percent) / 100, 0))), 3), 0) AS wastage_weight,
            IFNULL(t.narration,'') as remark,IFNULL(c.order_no,'-') as order_no,
            DATEDIFF(date(now()),date(t.tag_datetime)) AS age,IFNULL(emp.firstname,'') as emp_name,
            d.design_name, sd.sub_design_name,p.stone_type,IFNULL(t.uom_gross_wt,'') as tag_uom,count(t.tag_id) as tag_count
			FROM ret_taging t
			left JOIN ret_product_master p on p.pro_id=t.product_id
			left JOIN ret_category cat on cat.id_ret_category=p.cat_id
            left JOIN employee emp on emp.id_employee = t.created_by
			LEFT JOIN ret_design_master d on d.design_no=t.design_id
			LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=t.id_sub_design
			LEFT JOIN branch b on b.id_branch=t.current_branch
			LEFT JOIN ret_size s on s.id_size=t.size
            LEFT JOIN ret_purity pur on pur.id_purity=t.purity
            LEFT JOIN ret_section sec ON sec.id_section = t.id_section
            LEFT JOIN customerorderdetails od ON od.id_orderdetails = t.id_orderdetails
            LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
			LEFT JOIN (SELECT s.tag_id,sum(s.pieces) as st_pieces,sum(s.wt) as st_wt, sum(s.amount) as st_amount
			FROM ret_taging_stone s GROUP BY s.tag_id) st on st.tag_id = t.tag_id
            LEFT JOIN (SELECT ts.tag_id,ifnull(sum(ts.wt),0) as stn_wt,
            sum(ts.pieces) as stn_pcs
            FROM ret_taging_stone as ts
            LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
            LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
            WHERE st.stone_type = 1
            GROUP by ts.tag_id) tagdia on tagdia.tag_id = t.tag_id
            LEFT JOIN (SELECT ts.tag_id,ifnull(sum(ts.wt),0) as stn_wt,
            sum(ts.pieces) as stn_pcs
            FROM ret_taging_stone as ts
            LEFT JOIN ret_stone as st ON
            st.stone_id = ts.stone_id
            LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
            WHERE st.stone_type != 1
            GROUP by ts.tag_id) tagst on tagst.tag_id = t.tag_id
			LEFT JOIN (SELECT est_items.tag_id,COUNT(est_items.esti_id) as tot_est FROM ret_estimation_items est_items GROUP by est_items.tag_id) est on est.tag_id=t.tag_id
			Left join ret_lot_inwards_detail lot_det on lot_det.id_lot_inward_detail = if(t.ref_tag_id !='', (SELECT id_lot_inward_detail FROM ret_taging as rett where rett.tag_id = t.ref_tag_id),t.id_lot_inward_detail)
            LEFT JOIN ret_lot_inwards as linw ON linw.lot_no = lot_det.lot_no
            LEFT JOIN ret_purchase_order as po ON po.po_id =linw.po_id
            LEFT JOIN ret_karigar as kar ON kar.id_karigar = linw.gold_smith
            LEFT JOIN (SELECT id_tagging, GROUP_CONCAT(attr_val) as attrvalues FROM `ret_tagging_attributes` tagattr
            LEFT JOIN ret_attribute as attr ON attr.attr_id = tagattr.attr_id
            LEFT JOIN ret_attribute_values as atrval ON atrval.attr_val_id =  tagattr.attr_val_id
            GROUP BY tagattr.id_tagging) as tagatt ON tagatt.id_tagging = t.tag_id
            LEFT JOIN ret_tag_collection_mapping_details coll on coll.tag_id=t.tag_id
            LEFT JOIN ret_tag_collection_mapping mt on mt.id_tag_mapping=coll.id_tag_mapping
            LEFT JOIN ret_collection_master m on m.id_collection=mt.id_collection_master
            LEFT JOIN ret_taging_images tag_img on tag_img.tag_id=t.tag_id and tag_img.is_default = 1
			where t.tag_status = 0
			".($data['id_size']!='' ? " and t.size=".$data['id_size']."" :'')."
			".($data['from_weight']!='' ?" and t.gross_wt>=".$data['from_weight']."" :'')."
			".($data['to_weight']!='' ?" and t.gross_wt<=".$data['to_weight']."" :'')."
			".($id_collection!='' && $id_collection !='0' ? " and m.id_collection in (".$id_collection.") " :'' )."
            ".($id_branch!='' && $id_branch !='0' ? " and t.current_branch in (".$id_branch.") " :'' )."
            ".($id_product!='' && $id_product !='0' ? " and t.product_id in (".$id_product.") " :'' )."
            ".($id_design!='' && $id_design !='0' ? " and t.design_id in (".$id_design.") " :'' )."
            ".($id_sub_design!='' && $id_sub_design !='0' ? " and  t.id_sub_design in (".$id_sub_design.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? " and p.cat_id in (".$id_category.") " :'' )."
            ".($id_section!='' && $id_section !='0' ? " and  t.id_section in (".$id_section.") " :'' )."
            ".($id_metal!='' && $id_metal !='0' ? " and   cat.id_metal in (".$id_metal.") " :'' )."
            ".($id_karigar!='' && $id_karigar !='0' ? " and  linw.gold_smith in (".$id_karigar.") " :'' )."
            ".($data['from_lotno'] != '' && $data['to_lotno'] != ''? ' and (t.tag_lot_id BETWEEN "'.$data['from_lotno'].'" AND "'.$data['to_lotno'].'")' : '')."
            group by t.tag_id
            ORDER by t.id_branch");
	    //print_r($this->db->last_query());exit;
    	// $items = $data->result_array();
        // // $item =[];
    	// foreach($items as $ikey => $ival){
		// 	if($profile['purchase_details']==0)
		// 	{
		// 		$items[$ikey]['tag_lot_id'] = '';
		// 		$items[$ikey]['karigarname'] = '-';
		// 	}
    	//     $items[$ikey]["stone_details"] = $this->getTagStoneDetails($ival['tag_id']);
    	//     $items[$ikey]["multi_metal_details"] = $this->getTagMultiMetalDetails($ival['tag_id']);
    	// }
    	// return $items;
        $result = $data->result_array();
    	foreach($result as $ikey => $ival){
			if($profile['purchase_details']==0)
			{
				$ival['tag_lot_id'] = '';
				$ival['karigarname'] = '-';
                $ival['po_ref_no'] = '-';
			}
    	     $ival['stone_details'] = $this->getTagStoneDetails($ival['tag_id']);
    	     $ival['multi_metal_details'] = $this->getTagMultiMetalDetails($ival['tag_id']);
             if($group_by==2)
            {
                $returnData[$ival['product_name']][]=$ival;
            }
            else if($group_by==3)
            {
                $returnData[$ival['branch_name']][]=$ival;
            }
            else
            {
                $returnData[$ival['karigarname']][]=$ival;
            }
    	}
    	return $returnData;
    }
    function getTaggeditems_branchwise($data)
    {
    	$result=array();
        $product = implode(' , ', $data['id_product']);
		if($product != '')
		{
			$id_product = $product;
		}else{
			$id_product = $data['id_product'];
		}
        $design = implode(' , ', $data['id_design']);
		if($design != '')
		{
			$id_design = $design;
		}else{
			$id_design = $data['id_design'];
		}
        $sub_design = implode(' , ', $data['id_sub_design']);
		if($sub_design != '')
		{
			$id_sub_design = $sub_design;
		}else{
			$id_sub_design = $data['id_sub_design'];
		}
        $metal = implode(' , ', $data['id_metal']);
		if($metal != '')
		{
			$id_metal = $metal;
		}else{
			$id_metal = $data['id_metal'];
		}
        $category = implode(' , ', $data['id_category']);
		if($category != '')
		{
			$id_category = $category;
		}else{
			$id_category = $data['id_category'];
		}
    	$data=$this->db->query("SELECT b.name as branch_name, IFNULL(sum(t.gross_wt),0) as gross_wt, IFNULL(sum(t.net_wt),0) as net_wt, sum(t.piece) as piece
			FROM ret_taging t
			left JOIN ret_product_master p on p.pro_id=t.product_id
			LEFT JOIN ret_design_master d on d.design_no=t.design_id
			LEFT JOIN branch b on b.id_branch=t.current_branch
			LEFT JOIN ret_size s on s.id_size=t.size
			LEFT JOIN (SELECT s.tag_id,sum(s.pieces) as st_pieces,sum(s.wt) as st_wt
			FROM ret_taging_stone s) st on st.tag_id=t.tag_id
			LEFT JOIN (SELECT est_items.tag_id,COUNT(est_items.esti_id) as tot_est FROM ret_estimation_items est_items GROUP by est_items.tag_id) est on est.tag_id=t.tag_id
			where t.tag_status = 0
            ".($id_design!='' && $id_design !='0' ? " and t.design_id in (".$id_design.") " :'' )."
            ".($id_product!='' && $id_product !='0' ? " and t.product_id in (".$id_product.") " :'' )."
            ".($id_sub_design!='' && $id_sub_design !='0' ? " and  t.id_sub_design in (".$id_sub_design.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? " and p.cat_id in (".$id_category.") " :'' )."
			".($data['id_size']!='' ? " and t.size=".$data['id_size']."" :'')."
			".($data['from_weight']!='' ?" and t.gross_wt>=".$data['from_weight']."" :'')."
			".($data['to_weight']!='' ?" and t.gross_wt<=".$data['to_weight']."" :'')."
			group by t.current_branch ORDER by t.id_branch ASC");
	    //print_r($this->db->last_query());exit;
    	$items = $data->result_array();
    	return $items;
    }
    function getApprovalTaggeditems($data)
    {
    	$result=array();
    	$data=$this->db->query("SELECT t.piece,d.design_name, sd.sub_design_name, p.product_name,t.product_id,t.design_id,b.name as branch_name,IFNULL(t.gross_wt,0) as gross_wt,IFNULL(t.net_wt,0) as net_wt,t.id_branch,DATE_FORMAT(t.tag_datetime,'%d-%m-%Y') as tag_date,
    		if(t.tag_mc_type=1,'Per Piece', 'Per Gram') as mc_type,t.tag_mc_value,t.retail_max_wastage_percent,t.item_rate,t.tag_id,t.tag_mc_type,
    		IFNULL(st.st_pieces,'-') as st_pieces,IFNULL(st.st_wt,'-') as st_wt,t.sales_value,t.tag_code,concat(s.value,'-',s.name) as size_name,
    		t.tag_lot_id,IFNULL(est.tot_est,0) as tot_est, ifnull(sup.firstname,'-') as karigar, pur.po_ref_no as po_ref_no
			FROM ret_taging t
			left JOIN ret_product_master p on p.pro_id=t.product_id
			LEFT JOIN ret_design_master d on d.design_no=t.design_id
			LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=t.id_sub_design
			LEFT JOIN branch b on b.id_branch=t.current_branch
			LEFT JOIN ret_size s on s.id_size=t.size
			LEFT JOIN (SELECT s.tag_id,sum(s.pieces) as st_pieces,sum(s.wt) as st_wt
			FROM ret_taging_stone s) st on st.tag_id=t.tag_id
			LEFT JOIN (SELECT est_items.tag_id,COUNT(est_items.esti_id) as tot_est FROM ret_estimation_items est_items GROUP by est_items.tag_id) est on est.tag_id=t.tag_id
			LEFT JOIN ret_purchase_order_items as puritm ON puritm.lot_no = t.tag_lot_id AND puritm.po_item_sub_des_id = t.id_sub_design
            LEFT JOIN ret_purchase_order as pur ON pur.po_id = puritm.po_item_po_id
            LEFT JOIN ret_karigar as sup ON sup.id_karigar = pur.po_karigar_id
			where t.tag_status = 0 AND  t.tag_type = 1 and is_approval_stock_converted = 0
			".($data['id_branch']!='' && $data['id_branch']>0 ? " and t.current_branch=".$data['id_branch']."":'')."
			".($data['id_design']!='' ? " and t.design_id=".$data['id_design']."" :'')."
			".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
			".($data['id_size']!='' ? " and t.size=".$data['id_size']."" :'')."
			".($data['from_weight']!='' ?" and t.gross_wt>=".$data['from_weight']."" :'')."
			".($data['to_weight']!='' ?" and t.gross_wt<=".$data['to_weight']."" :'')."
			ORDER by t.id_branch");
	    //print_r($this->db->last_query());exit;
    	$items = $data->result_array();
    	return $items;
    }
    function getapprovalTaggeditems_branchwise($data)
    {
    	$result=array();
    	$data=$this->db->query("SELECT b.name as branch_name,IFNULL(sum(t.gross_wt),0) as gross_wt,IFNULL(sum(t.net_wt),0) as net_wt,sum(t.piece) as piece
			FROM ret_taging t
			left JOIN ret_product_master p on p.pro_id=t.product_id
			LEFT JOIN ret_design_master d on d.design_no=t.design_id
			LEFT JOIN branch b on b.id_branch=t.current_branch
			LEFT JOIN ret_size s on s.id_size=t.size
			LEFT JOIN (SELECT s.tag_id,sum(s.pieces) as st_pieces,sum(s.wt) as st_wt
			FROM ret_taging_stone s) st on st.tag_id=t.tag_id
			LEFT JOIN (SELECT est_items.tag_id,COUNT(est_items.esti_id) as tot_est FROM ret_estimation_items est_items GROUP by est_items.tag_id) est on est.tag_id=t.tag_id
			where t.tag_status = 0 AND  t.tag_type = 1
			".($data['id_design']!='' ? " and t.design_id=".$data['id_design']."" :'')."
			".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
			".($data['id_size']!='' ? " and t.size=".$data['id_size']."" :'')."
			".($data['from_weight']!='' ?" and t.gross_wt>=".$data['from_weight']."" :'')."
			".($data['to_weight']!='' ?" and t.gross_wt<=".$data['to_weight']."" :'')."
			group by t.current_branch ORDER by t.id_branch ASC");
	    //print_r($this->db->last_query());exit;
    	$items = $data->result_array();
    	return $items;
    }
    function getBranchDayClosingData($id_branch)
    {
    $sql = $this->db->query("SELECT id_branch,is_day_closed,entry_date from ret_day_closing where id_branch=".$id_branch);
    return $sql->row_array();
    }
    function stock_balance_nontag($data)
    {
        $stock_detail = array();
        if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
        $op_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        //$op_date = date($FromDt,(strtotime('-1 day')));
		$op_bal = $this->db->query("
        				SELECT
        					p.pro_id as product_id,p.product_name, b.name as branch_name,b.id_branch,c.name as category_name,m.metal as metal_name,
        					IFNULL(stk.closing_gwt,0) as op_blc_gwt,IFNULL(stk.closing_nwt,0) as op_blc_nwt,IFNULL(stk.closing_pcs,0) as op_blc_pcs
        				FROM ret_product_master p
        				LEFT JOIN branch b on b.id_branch=".$data['id_branch']."
        				LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
				        LEFT JOIN metal m on m.id_metal=c.id_metal
        				LEFT JOIN ret_stock_balance stk  on p.pro_id=stk.id_product  ".($data['id_product'] !='' ? 'and p.pro_id='.$data['id_product'] :'')." and date(stk.date)='".$op_date."' ".($data['id_branch']!='' && $data['id_branch']>0 ? " and stk.id_branch=".$data['id_branch']."" :'')."
        				WHERE stock_type = 2
        				GROUP by p.pro_id
    			    ");
		$inward = $this->db->query("
    					SELECT
    						INW.product,
    						IFNULL(sum(INW.gross_wt),0) as inw_gwt,IFNULL(sum(INW.net_wt),0) as inw_nwt,IFNULL(sum(INW.no_of_piece),0) as inw_pcs
    					FROM ret_nontag_item_log INW
    					WHERE  INW.status=0 ".($data['id_product'] !='' ? 'and INW.product='.$data['id_product'] :'')." and  to_branch=".$data['id_branch']." AND (date(INW.date) BETWEEN '".$FromDt."' AND '".$ToDt."')
    					GROUP by INW.product
				    ");
	//	echo $this->db->last_query();exit;
		$outward = $this->db->query("
        				SELECT
        					ot.product,
        					IFNULL(sum(ot.gross_wt),0) as out_gwt,IFNULL(sum(ot.net_wt),0) as out_nwt,IFNULL(sum(ot.no_of_piece),0) as out_pcs
        				FROM ret_nontag_item_log ot
    					LEFT JOIN ret_billing bill on bill.bill_id=ot.bill_id and bill.bill_status=1
				        WHERE  ot.from_branch=".$data['id_branch']." ".($data['id_product'] !='' ? 'and ot.product='.$data['id_product'] :'')." and (ot.status=0 or ot.status=1 or ot.status=3 or ot.status=7) AND (date(ot.date) BETWEEN '".$FromDt."' AND '".$ToDt."')
				        GROUP by ot.product
        			");
        foreach($op_bal->result_array() as $op_bal){
            $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']] = $op_bal;
            $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['inw_gwt'] = 0;
            $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['inw_nwt'] = 0;
            $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['inw_pcs'] = 0;
            $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['out_gwt'] = 0;
            $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['out_nwt'] = 0;
            $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['out_pcs'] = 0;
            foreach($inward->result_array() as $inw){
                if($op_bal['product_id'] == $inw['product']){
                    $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['inw_gwt'] = $inw['inw_gwt'];
                    $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['inw_nwt'] = $inw['inw_nwt'];
                    $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['inw_pcs'] = $inw['inw_pcs'];
                }
            }
            foreach($outward->result_array() as $out){
                if($op_bal['product_id'] == $out['product']){
                    $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['out_gwt'] = $out['out_gwt'];
                    $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['out_nwt'] = $out['out_nwt'];
                    $stock_detail[$op_bal['metal_name']][$op_bal['category_name']][$op_bal['product_id']]['out_pcs'] = $out['out_pcs'];
                }
            }
        }
        //print_r($stock_detail);exit;
    	return $stock_detail;
    }
    function stock_details($data)
    {
        $day_closing=$this->getBranchDayClosingData($data['id_branch']);
    	$stock_detail = array();
    	$sql='';
    	if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
		$date=($day_closing['is_day_closed']==1 ? $day_closing['entry_date']:date("Y-m-d"));
		if(($FromDt!=$date) && ($ToDt!=$date))
		{
			$data = $this->db->query("SELECT b.name as branch_name,p.product_name,
				s.op_blc_pcs,s.op_blc_gwt,s.op_blc_nwt,s.inw_pcs,s.inw_gwt,s.inw_nwt,
				s.sold_pcs,s.sold_gwt,s.sold_nwt,s.closing_pcs,s.closing_gwt,s.closing_nwt,
				Date_Format(s.date,'%d-%m-%Y') as date_add,'0' as br_out_gwt,'0' as br_out_nwt,'0' as br_out_pcs,
				'0' as in_trans_gwt,'0' as in_trans_nwt,'0' as in_trans_pcs,c.name as category_name,m.metal as metal_name
				From ret_stock_balance s
				LEFT JOIN ret_product_master p on p.pro_id=s.id_product
				left join ret_category c on c.id_ret_category=p.cat_id
				left join metal m on m.id_metal=c.id_metal
				lEFT JOIN branch b on b.id_branch=s.id_branch
				where date(s.date) BETWEEN '$FromDt' AND '$ToDt'
				".($data['id_branch']!='' ? " and s.id_branch=".$data['id_branch']."" :'')."
				".($data['id_product']!='' ? " and s.id_product=".$data['id_product']."" :'')."
				".($data['id_metal']!='' && $data['id_metal']!='0' ? " and m.id_metal=".$data['id_metal']."" :'')."
				".($data['id_category']!='' && $data['id_category']!='0' ? " and s.id_ret_category=".$data['id_category']."" :'')."
				order by c.sort,p.pro_id ASC");
		}
		else{
		$op_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
		//print_r($op_date);exit;
		$data = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
		IFNULL(blc.gross_wt,0) as op_blc_gwt,IFNULL(blc.net_wt,0) as op_blc_nwt,IFNULL(blc.piece,0) as op_blc_pcs,
		IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
		IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
		IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
		IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
		Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name
		FROM ret_taging t
		LEFT JOIN ret_product_master p on p.pro_id=t.product_id
		LEFT JOIN branch b on b.id_branch=t.current_branch
		left join ret_category c on c.id_ret_category=p.cat_id
		left join metal m on m.id_metal=c.id_metal
		LEFT JOIN (SELECT s.id_product as product_id,s.closing_gwt as gross_wt,s.closing_nwt as net_wt,s.closing_pcs as piece,s.date
        FROM ret_stock_balance s
        LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
        left join ret_category c on c.id_ret_category=p.cat_id
		left join metal m on m.id_metal=c.id_metal
        WHERE s.id_product is NOT null AND date(s.date)='$op_date'
        ".($data['id_branch']!='' ? " and s.id_branch=".$data['id_branch']."" :'')."
        ".($data['id_metal']!='' && $data['id_metal']!='0' ? " and m.id_metal=".$data['id_metal']."" :'')."
        ".($data['id_category']!='' && $data['id_category']!='0' ? " and c.id_ret_category=".$data['id_category']."" :'')."
        GROUP by s.id_product) blc on blc.product_id=t.product_id
		LEFT JOIN (SELECT tag.tag_id,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and l.to_branch=".$data['id_branch']." and l.status=0
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') And l.status=0
        ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
        GROUP by tag.product_id) INW on INW.product_id=t.product_id
		LEFT JOIN (SELECT b.tag_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,b.product_id
		FROM ret_taging tag
		LEFT JOIN ret_bill_details b on b.tag_id=tag.tag_id
		lEFT JOIN ret_billing bill on bill.bill_id=b.bill_id
		LEFT JOIN ret_product_master prod on prod.pro_id=b.product_id
		WHERE  bill.bill_status=1 and date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND b.product_id=prod.pro_id
		".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." and tag.current_branch=".$data['id_branch']."" :'')."
		GROUP by b.product_id) s ON s.product_id=t.product_id
		LEFT JOIN (
		SELECT tag.tag_id,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and l.from_branch=".$data['id_branch']." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=7 or l.status=8 or l.status=9 or l.status=10)
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt')  and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=7 or l.status=8 or l.status=9 or l.status=10)
        ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP by tag.product_id
		) br_out on br_out.product_id=t.product_id
        LEFT JOIN (
        SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name
        FROM ret_taging_status_log l
        LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
        ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
        GROUP by t.product_id
        ) in_trans on in_trans.product_id=t.product_id
		where t.tag_id is not null
		".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
		".($data['id_metal']!='' && $data['id_metal']!='0' ? " and m.id_metal=".$data['id_metal']."" :'')."
		".($data['id_category']!='' && $data['id_category']!='0' ? " and c.id_ret_category=".$data['id_category']."" :'')."
		GROUP by t.product_id order by c.sort,p.pro_id ASC");
		}
	    //print_r($this->db->last_query());exit;
    	$result = $data->result_array();
    		foreach($result as $r){
				$stock_detail[$r['metal_name']][$r['category_name']][] = $r;
			}
    	return $stock_detail;
    }
    //Tag Scan
     function stock_checking($data)
    {
    	$stock_detail = array();
    	$sql='';
    	if($data['dt_range'] != ''){
			$dateRange = explode('-',$data['dt_range']);
			$d1 = date_create($dateRange[0]);
			$d2 = date_create($dateRange[1]);
			$FromDt = date_format($d1,"Y-m-d");
			$ToDt = date_format($d2,"Y-m-d");
		}
		$date=date("Y-m-d");
		if(($FromDt!=$date) && ($ToDt!=$date))
		{
			$data = $this->db->query("SELECT b.name as branch_name,p.product_name,
				s.op_blc_pcs,s.op_blc_gwt,s.op_blc_nwt,s.inw_pcs,s.inw_gwt,s.inw_nwt,
				s.sold_pcs,s.sold_gwt,s.sold_nwt,s.closing_pcs,s.closing_gwt,s.closing_nwt,
				Date_Format(s.date,'%d-%m-%Y') as date_add
				From ret_stock_balance s
				LEFT JOIN ret_product_master p on p.pro_id=s.id_product
				lEFT JOIN branch b on b.id_branch=s.id_branch
				where date(s.date) BETWEEN '$FromDt' AND '$ToDt'
				".($data['id_branch']!='' ? " and s.id_branch=".$data['id_branch']."" :'')."
				".($data['id_product']!='' ? " and s.id_product=".$data['id_product']."" :'')."
				");
		}
		else{
		$op_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
		$data = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,IFNULL(blc.gross_wt,0) as op_blc_gwt,IFNULL(blc.net_wt,0) as op_blc_nwt,IFNULL(blc.piece,0) as op_blc_pcs,
		IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
		IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
		IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
		Date_Format(current_date(),'%d-%m-%Y') as date_add
		FROM ret_taging t
		LEFT JOIN ret_product_master p on p.pro_id=t.product_id
		LEFT JOIN branch b on b.id_branch=t.current_branch
		LEFT JOIN (SELECT s.id_product as product_id,s.closing_gwt as gross_wt,s.closing_nwt as net_wt,s.closing_pcs as piece,s.date
        FROM ret_stock_balance_new s
        LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
        WHERE s.id_product is NOT null AND date(s.date)='$op_date'
        ".($data['id_branch']!='' ? " and s.id_branch=".$data['id_branch']."" :'')."
        GROUP by s.id_product) blc on blc.product_id=t.product_id
		LEFT JOIN (SELECT tag.tag_id,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and l.to_branch=".$data['id_branch']." and l.status=0
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt')
        GROUP by tag.product_id) INW on INW.product_id=t.product_id
		LEFT JOIN (SELECT b.tag_id,sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,SUM(b.piece) as piece,b.product_id
		FROM ret_taging tag
		LEFT JOIN ret_bill_details b on b.tag_id=tag.tag_id
		lEFT JOIN ret_billing bill on bill.bill_id=b.bill_id
		LEFT JOIN ret_product_master prod on prod.pro_id=b.product_id
		WHERE  bill.bill_status=1 and date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND b.product_id=prod.pro_id
		".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
		GROUP by b.product_id) s ON s.product_id=t.product_id
		LEFT JOIN (
		SELECT tag.tag_id,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and l.from_branch=".$data['id_branch']."
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt')
        GROUP by tag.product_id
		) br_out on br_out.product_id=t.product_id
		where t.tag_id is not null  ".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
		GROUP by t.product_id");
		}
		//print_r($this->db->last_query());exit;
    	$result = $data->result_array();
    		foreach($result as $r){
				$stock_detail[$r['branch_name']][] = $r;
			}
    	return $stock_detail;
    }
    function get_tag_scan_missing($product_id,$id_branch)
    {
        $sql=$this->db->query("SELECT tag.tag_id,tag.piece,tag.gross_wt,tag.net_wt
        FROM ret_taging tag
        WHERE tag_id not in(SELECT t.tag_id
        FROM ret_tag_scan s
        LEFT JOIN ret_tag_scanned t ON t.id_scanned=s.id_scanned
        WHERE s.status=1 AND s.id_product=".$product_id." AND s.id_branch=".$id_branch.")
        AND tag.tag_status=0 AND tag.product_id=".$product_id." AND tag.current_branch=".$id_branch."");
        $items = $sql->result_array();
    	return $items;
    }
    function get_TagScannedDetails($post)
    {
         if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
            }
        // $id_branch=$this->input->post('id_branch');
        // $id_product=$this->input->post('id_product');
        // $id_section=$this->input->post('id_section');
        // $id_design=$this->input->post('id_design');
        // $id_sub_design=$this->input->post('id_sub_design');
        // $category=$this->input->post('category');
        $multiple_id_branch = implode(' , ', $post['id_branch']);
        if($multiple_id_branch != '')
        {
            $id_branch = $multiple_id_branch;
        }else{
            $id_branch = $post['id_branch'];
        }
        $multiple_id_product = implode(' , ', $post['id_product']);
        if($multiple_id_product != '')
        {
            $id_product = $multiple_id_product;
        }else{
            $id_product = $post['id_product'];
        }
        $multiple_id_section = implode(' , ', $post['id_section']);
        if($multiple_id_section != '')
        {
            $id_section = $multiple_id_section;
        }else{
            $id_section = $post['id_section'];
        }
        $multiple_id_design= implode(' , ', $post['id_design']);
        if($multiple_id_design!= '')
        {
            $id_design = $multiple_id_design;
        }else{
            $id_design = $post['id_design'];
        }
        $multiple_id_sub_design= implode(' , ', $post['id_sub_design']);
        if($multiple_id_sub_design!= '')
        {
            $id_sub_design = $multiple_id_sub_design;
        }else{
            $id_sub_design = $post['id_sub_design'];
        }
        $multiple_category= implode(' , ', $post['category']);
        if($multiple_category!= '')
        {
            $category = $multiple_category;
        }else{
            $category = $post['category'];
        }
        $report_type=$this->input->post('report_type');
        if($report_type==1)
        {
            $scanned_items=$this->db->query("SELECT s.id_scanned,IFNULL(tag.piece,0) as piece,IFNULL(tag.gross_wt,0) as gross_wt,IFNULL(tag.net_wt,0) as net_wt,tag.product_id,
            date_format(s.from_time,'%d-%m-%Y') as scanned_date,tag.tag_status,tag.tag_code,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date,p.product_name,
            IFNULL(tag.old_tag_id,'') as old_tag_id,IFNULL(sec.section_name,'') as section_name,tag_img.image as tag_img,
            IFNULL(d.design_name,'') as design_name, IFNULL(sd.sub_design_name,'') as sub_design_name,
            IFNULL(c.name ,'') as category_name,IFNULL(dia.dia_wt,0) as dia_wt,IFNULL(t.remark,'') as remarks,
            concat(IFNULL(sz.value,''),'',sz.name) as size
            FROM ret_tag_scan s
            LEFT JOIN ret_tag_scanned t ON t.id_scanned=s.id_scanned
            LEFT JOIN ret_taging tag ON tag.tag_id=t.tag_id
            LEFT JOIN ret_size sz on sz.id_size=tag.size
            LEFT JOIN (SELECT retst.tag_id, sum(IFNULL(wt,0)) as dia_wt
                FROM `ret_taging_stone` as retst
                LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                WHERE st.stone_type = 1) as dia ON dia.tag_id = tag.tag_id
            LEFT JOIN ret_taging_images tag_img on tag_img.tag_id=tag.tag_id
            LEFT JOIN ret_design_master d on d.design_no=tag.design_id
			LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=tag.id_sub_design
            left JOIN ret_product_master p on p.pro_id=tag.product_id
            LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
            LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
            WHERE t.tag_id is not null and s.status=1
            ".($FromDt!= '' && $ToDt!='' ? ' and (date(s.from_time) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
            ".($id_branch!='' && $id_branch!=0 ? " and s.id_branch in (".$id_branch.")" :'')."
            ".($id_section!='' && $id_section!=0 ? " and tag.id_section in (".$id_section.")" :'')."
            ".($id_design!='' && $id_design!=0 ? " and tag.design_id in (".$id_design.")" :'')."
            ".($category!='' && $category!=0 ? " and p.cat_id in (".$category.")" :'')."
            ".($id_sub_design!='' && $id_sub_design!=0 ? " and tag.id_sub_design in (".$id_sub_design.")" :'')."
            ".($id_product!='' && $id_product!=0 ? " and s.id_product in (".$id_product.")" :'')."");
            // print_r($this->db->last_query());exit;
            $return_data=$scanned_items->result_array();
        }
        else
        {
            $sql=$this->db->query("SELECT IFNULL(tag.piece,0) as piece,IFNULL(tag.gross_wt,0) as gross_wt,IFNULL(tag.net_wt,0) as net_wt,tag.product_id,
            tag.tag_code,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date,p.product_name,'-' as scanned_date,'-' as id_scanned,
            IFNULL(tag.old_tag_id,'') as old_tag_id,tag_img.image as tag_img,IFNULL(sec.section_name,'') as section_name,
            IFNULL(c.name ,'') as category_name,'-' as dia_wt,'-' as remarks,tag.tag_id,
            IFNULL(d.design_name,'') as design_name, IFNULL(sd.sub_design_name,'') as sub_design_name,
            concat(IFNULL(sz.value,''),'',sz.name) as size
            FROM ret_taging tag
            LEFT JOIN ret_size sz on sz.id_size=tag.size
            LEFT JOIN ret_taging_images tag_img on tag_img.tag_id=tag.tag_id
            LEFT JOIN ret_design_master d on d.design_no=tag.design_id
			LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=tag.id_sub_design
            LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
            left JOIN ret_product_master p on p.pro_id=tag.product_id
            LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
            LEFT JOIN (SELECT retst.tag_id, sum(IFNULL(wt,0)) as dia_wt
                FROM `ret_taging_stone` as retst
                LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                WHERE st.stone_type = 1) as dia ON dia.tag_id = tag.tag_id
            WHERE tag.tag_id not in(SELECT t.tag_id
            FROM ret_tag_scan s
            LEFT JOIN ret_tag_scanned t ON t.id_scanned=s.id_scanned
            WHERE s.status=1
            ".($id_branch!='' && $id_branch!=0 ? " and s.id_branch in(".$id_branch.")" :'')."
            ".($id_product!='' && $id_product!=0 ? " and s.id_product in (".$id_product.")" :'')."
           ) AND tag.tag_status=0
            ".($id_branch!='' && $id_branch!=0 ? " and tag.current_branch in(".$id_branch.")" :'')."
            ".($id_product!='' && $id_product!=0 ? " and tag.product_id in (".$id_product.")" :'')."");
            // print_r($this->db->last_query());exit;
            $return_data=$sql->result_array();
        }
        return $return_data;
    }
            //    ".($category!='' && $category!=0 ? " and p.cat_id in (".$category.")" :'')."
    //Tag scan
   /* function get_tag_scan_missing($product_id,$id_branch)
    {
    	$result=array();
    	$data=$this->db->query("SELECT t.piece,d.design_name,p.product_name,t.product_id,t.design_id,b.name as branch_name,t.gross_wt as gross_wt,t.net_wt as net_wt,t.id_branch,DATE_FORMAT(t.tag_datetime,'%d-%m-%Y') as tag_date,
    		if(t.tag_mc_type=1,'Per Gram','Per Piece') as mc_type,t.tag_mc_value,t.retail_max_wastage_percent,t.item_rate,t.tag_id,t.tag_mc_type,
    		IFNULL(st.st_pieces,'-') as st_pieces,IFNULL(st.st_wt,'-') as st_wt,t.sales_value,t.calculation_based_on
			FROM ret_taging t
			LEFT JOIN ret_tag_scanned s on s.tag_id=t.tag_id
			left JOIN ret_product_master p on p.pro_id=t.product_id
			LEFT JOIN ret_design_master d on d.design_no=t.design_id
			LEFT JOIN branch b on b.id_branch=t.current_branch
			LEFT JOIN (SELECT s.tag_id,sum(s.pieces) as st_pieces,sum(s.wt) as st_wt
			FROM ret_taging_stone s) st on st.tag_id=t.tag_id
			where t.tag_status = 0   and s.tag_id IS null
			".($id_branch!='' && $id_branch>0 ? " and t.current_branch=".$id_branch."":'')."
			".($product_id!='' ? " and t.product_id=".$product_id."" :'')."
			ORDER by t.tag_id DESC");
    	//print_r($this->db->last_query());exit;
    	$items = $data->result_array();
    	return $items;
    }*/
    function get_product_scan_details($id_product,$id_section,$id_branch)
	{
	    $sql=$this->db->query("SELECT s.id_branch,s.id_product,s.from_time,s.to_time,s.id_scanned
	    From ret_tag_scan s
	    where s.id_product=".$id_product." and s.id_section=".$id_section." and s.status=1
	    ".($id_branch!='' ? " and s.id_branch=".$id_branch."" :'')."");
		if($sql->num_rows()==0)
		{
		    return array('status'=>1,'prod_det'=>$sql->row_array());
		}else{
			 return array('status'=>0,'prod_det'=>$sql->row_array());
		}
	}
    function get_tag_scanned_items($id_product,$id_branch, $id_section="")
    {
        $scanned_items=$this->db->query("SELECT IFNULL(SUM(tag.piece),0) as piece,IFNULL(SUM(tag.gross_wt),0) as gross_wt,IFNULL(SUM(tag.net_wt),0) as net_wt,tag.product_id
    FROM ret_tag_scan s
    LEFT JOIN ret_tag_scanned t ON t.id_scanned=s.id_scanned
    LEFT JOIN ret_taging tag ON tag.tag_id=t.tag_id
            WHERE s.status=1  and tag.tag_status!=1
            ".($id_branch!='' && $id_branch!=0 ? " and s.id_branch=".$id_branch."" :'')."
            ".($id_product!='' && $id_product!=0 ? " and s.id_product=".$id_product."" :'')."
            ".($id_section !=''  ? " and tag.id_section=".$id_section."" : '')."
            GROUP by tag.product_id ");
          //print_r($this->db->last_query());exit;
            return $scanned_items->row_array();
    }
    function get_unscanned_details($id_product,$id_branch, $id_section="")
    {
        $sql=$this->db->query("SELECT IFNULL(SUM(tag.piece),0) as tot_pcs,IFNULL(SUM(tag.gross_wt),0) as tot_gwt,IFNULL(SUM(tag.net_wt),0) as tot_nwt
        FROM ret_taging tag
        left JOIN ret_product_master p on p.pro_id=tag.product_id
        WHERE tag_id not in(SELECT t.tag_id
        FROM ret_tag_scan s
        LEFT JOIN ret_tag_scanned t ON t.id_scanned=s.id_scanned
        WHERE s.status=1 AND s.id_product=".$id_product." AND s.id_branch=".$id_branch.")
        ".($id_section !=''  ? " and tag.id_section=".$id_section."" : '')."
        AND tag.tag_status=0 AND tag.product_id=".$id_product." AND tag.current_branch=".$id_branch."");
        $return_data=$sql->result_array();
        //print_r($this->db->last_query());exit;
        return $sql->row_array();
    }
    function get_tag_sold_details($id_product,$id_branch)
    {
        $sql=$this->db->query("SELECT IFNULL(SUM(t.piece),0) as tot_pcs,IFNULL(SUM(t.gross_wt),0) as tot_gwt,IFNULL(SUM(t.net_wt),0) as tot_nwt,t.tag_id
        FROM ret_taging t
        LEFT JOIN ret_tag_scanned s ON s.tag_id=t.tag_id
        LEFT JOIN ret_tag_scan sc ON sc.id_scanned=s.id_scanned
        WHERE sc.status=1 AND t.tag_status!=0
        ".($id_branch!='' && $id_branch!=0 ? " and sc.id_branch=".$id_branch."" :'')."
        ".($id_product!='' && $id_product!=0 ? " and sc.id_product=".$id_product."" :'')."");
        return $sql->row_array();
    }
    function get_tag_scan_start($id_product,$id_branch)
    {
        $sql=$this->db->query("SELECT date_format(s.from_time,'%Y-%m-%d') as from_time  from ret_tag_scan s where s.status=1 and s.id_product=".$id_product." ".($id_branch!='' && $id_branch!=0 ? " and s.id_branch=".$id_branch."" :'')."");
        //print_r($this->db->last_query());exit;
        return $sql->row()->from_time;
    }
    function tag_scan_details($data)
    {
        $id_branch=$this->session->userdata('id_branch');
    	$return_data=array();
    	if($data['id_branch']!='' && $data['id_branch']!=0)
    	{
    	    $id_branch=$data['id_branch'];
    	}
    	$tot_items=$this->db->query("SELECT p.product_name,tag.product_id,tag.current_branch,b.name as branch_name,
        IFNULL(s.section_name,'') as section_name,tag_img.image as tag_img,IFNULL(c.name ,'') as category_name,
        IFNULL(d.design_name,'') as design_name,IFNULL(sd.sub_design_name,'') as sub_design_name
        FROM ret_taging tag
        left JOIN ret_product_master p on p.pro_id=tag.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN ret_taging_images tag_img on tag_img.tag_id=tag.tag_id
        left join branch b on b.id_branch=tag.current_branch
        left JOIN ret_section s on s.id_section = tag.id_section
        LEFT JOIN ret_design_master d on d.design_no=tag.design_id
		LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=tag.id_sub_design
        WHERE tag.product_id is not null and tag.tag_status=0
        ".($id_branch!='' && $id_branch!=0 ? " and tag.current_branch=".$id_branch."" : '')."
        ".($data['id_product']!=''  ? " and tag.product_id=".$data['id_product']."" : '')."
        ".($data['category']!=''  ? " and p.cat_id=".$data['category']."" : '')."
        ".($data['id_section']!=''  ? " and tag.id_section=".$data['id_section']."" : '')."
        ".($data['id_design']!=''  ? " and tag.design_id=".$data['id_design']."" : '')."
        ".($data['id_sub_design']!=''  ? " and tag.id_sub_design=".$data['id_sub_design']."" : '')."
         GROUP by tag.product_id order by tag.product_id");
        // print_r($this->db->last_query());exit;
        $items = $tot_items->result_array();
        foreach($items as $tag)
        {
            $start_date=$this->get_tag_scan_start($tag['product_id'],$id_branch);
            $op_blc_details=$this->get_opening_balance($tag['product_id'],$tag['current_branch'],$start_date);
            $inward_details=$this->get_inward_details($tag['product_id'],$tag['current_branch']);
            $scanned_details=$this->get_tag_scanned_items($tag['product_id'],$id_branch, $data['id_section']);
            $unscanned_details=$this->get_unscanned_details($tag['product_id'],$id_branch, $data['id_section']);
            $sold_details=$this->get_tag_sold_details($tag['product_id'],$id_branch);
            $return_data['total_items'][]=array(
            'product_name'          =>$tag['product_name'],
            'section_name'          =>$tag['section_name'],
            'branch_name'           =>$tag['branch_name'],
            'design_name'           =>$tag['design_name'],
            'category_name'         =>$tag['category_name'],
            'tag_img'                =>$tag['tag_img'],
            'sub_design_name'        =>$tag['sub_design_name'],
            'op_pcs'                =>$op_blc_details['opening_pcs'],
            'op_gwt'                =>$op_blc_details['gross_wt'],
            'op_nwt'                =>$op_blc_details['nwt'],
            'inw_pcs'               =>$inward_details['piece'],
            'inw_gwt'               =>$inward_details['gross_wt'],
            'inw_nwt'               =>$inward_details['net_wt'],
            'sold_pcs'	            =>$sold_details['tot_pcs'],
            'sold_gwt'	            =>$sold_details['tot_gwt'],
            'sold_nwt'	            =>$sold_details['tot_nwt'],
            'scanned_pcs'	        =>$scanned_details['piece'],
            'scanned_gwt'	        =>$scanned_details['gross_wt'],
            'scanned_nwt'	        =>$scanned_details['net_wt'],
            'unscanned_pcs'	        =>$unscanned_details['tot_pcs'],
            'unscanned_gwt'	        =>$unscanned_details['tot_gwt'],
            'unscanned_nwt'	        =>$unscanned_details['tot_nwt'],
            'tot_pcs'               =>($scanned_details['piece']+$sold_details['tot_pcs']+$unscanned_details['tot_pcs']),
            'tot_gwt'               =>number_format(($scanned_details['gross_wt']+$unscanned_details['tot_gwt']+$sold_details['tot_gwt']),3,'.',''),
            'tot_nwt'               =>number_format(($sold_details['tot_gwt']+$unscanned_details['tot_nwt']+$sold_details['tot_nwt']),3,'.',''),
            );
        }
    	return $return_data;
    }
    function get_opening_balance($product_id,$id_branch,$start_date)
    {
        $sql=$this->db->query("SELECT s.closing_pcs as opening_pcs,s.closing_gwt as gross_wt,s.closing_nwt as nwt,s.id_product
        FROM ret_stock_balance s
        where s.id_product is not null and date(s.date)='".$start_date."'
        ".($product_id!=''  ? " and s.id_product=".$product_id."" : '')."
        ".($id_branch!=''  ? "  and s.id_branch=".$id_branch."" : '')."
        ORDER by s.id_ret_collection DESC LIMIT 1");
        //print_r($this->db->last_query());exit;
        return $sql->row_array();
    }
    function get_inward_details($product_id,$id_branch)
    {
        $dCData = $this->getBranchDayClosingData($id_branch);
        $sql=$this->db->query("SELECT tag.tag_id,tag.product_id,IFNULL(sum(tag.gross_wt),0) as gross_wt,IFNULL(SUM(tag.net_wt),0) as net_wt,IFNULL(SUM(tag.piece),0) as piece
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and l.to_branch=".$id_branch." and l.status=0
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE (date(l.date) BETWEEN '".date('Y-m-d',strtotime($dCData['entry_date']))."' AND '".date('Y-m-d',strtotime($dCData['entry_date']))."') And l.status=0
        ".($id_branch!='' ? " and l.to_branch=".$id_branch."" :'')."
        ".($product_id!='' ? " and tag.product_id=".$product_id."" :'')."
        GROUP by tag.product_id");
        return $sql->row_array();
    }
    function get_entry_records($tag_id,$old_tag_id,$design,$sub_design,$id_size)
	{
	    $code=explode("-",$tag_id);
	    $tag_code=str_pad($code[1], 5, '0', STR_PAD_LEFT);
	    $code=$code[0].'-'.$tag_code;
		$sql = $this->db->query("SELECT tag.tag_id,tag.tag_code,tag.counter,
				date_format(tag.tag_datetime,'%d-%m-%Y') as tag_datetime,tag.sell_rate,tag.item_rate,
				tag.tag_type,tag.tag_lot_id,tag.id_lot_inward_detail,tag.design_id,
				tag.cost_center,tag.purity,tag.size,tag.uom,tag.piece,tag.less_wt,tag.net_wt,tag.gross_wt,
				tag.calculation_based_on,tag.retail_max_wastage_percent,
				tag.tag_mc_type, tag.tag_mc_value ,IFNULL(sd.sub_design_name,'') as sub_design_name,
                sub.id_sub_design,sz.id_size,
                concat(IFNULL(sz.value,''),'',sz.name) as size,
				tag.retail_max_mc,halmarking,IFNULL(tag.sales_value,'') as sales_value ,tag.image, IFNULL(dia.dia_wt,0) as dia_wt,
				tag.current_branch, current_counter,tag.product_id,tag.id_section,tag_img.image as tag_image,
				ifnull(design_code,'') as design_code ,tag.created_by,des.design_name,tag.net_wt,tag.old_tag_id,
                b.name as branch_name,tag.tot_print_taken,p.product_name,IFNULL(tag.remarks,'') as remarks,
				tag.product_id,tag.tag_status,IFNULL(s.section_name,'-') as section_name
				FROM ret_taging as tag
				LEFT JOIN ret_design_master as des ON des.design_no = tag.design_id
                LEFT JOIN ret_taging_images tag_img on tag_img.tag_id=tag.tag_id
                LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
                FROM `ret_taging_stone` as retst
                LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                WHERE st.stone_type = 1) as dia ON dia.tag_id = tag.tag_id
				LEFT JOIN ret_product_master p on p.pro_id=tag.product_id
                LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=tag.id_sub_design
                LEFT JOIN ret_size sz on sz.id_size=tag.size
                LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=tag.id_sub_design
                Left join ret_section s on s.id_section = tag.id_section
				left join branch b on b.id_branch=tag.current_branch
				WHERE
				".($old_tag_id!='' ? " old_tag_id='".$old_tag_id."'" : ($tag_id!='' ? "tag_code='".$tag_id."'" :'') )."
                    ".($id_size != '' && $id_size >0 ? ' and tag.size ='.$id_size : '')."
                    ".($design != '' && $design >0 ? ' and tag.design_id ='.$design : '')."
                     ".($sub_design != '' && $sub_design >0 ? ' and tag.id_sub_design='.$sub_design : '')."
				and tag.tag_status=0");
		// print_r($this->db->last_query());exit;
		return $sql->row_array();
	}
	function get_tagging($id_branch,$id_product)
	{
	    $sql=$this->db->query("SELECT tag.tag_id,tag.tag_code,tag.counter,
        date_format(tag.tag_datetime,'%d-%m-%Y') as tag_datetime,tag.sell_rate,tag.item_rate,
        tag.tag_type,tag.tag_lot_id,tag.id_lot_inward_detail,tag.design_id,tag_img.image as tag_image,
        tag.cost_center,tag.purity,tag.size,tag.uom,tag.piece,tag.less_wt,tag.net_wt,tag.gross_wt,
        tag.calculation_based_on,tag.retail_max_wastage_percent,tag.net_wt,tag.old_tag_id,
        tag.tag_mc_type, tag.tag_mc_value ,IFNULL(sd.sub_design_name,'') as sub_design_name,
        tag.retail_max_mc,halmarking,IFNULL(tag.sales_value,'') as sales_value ,tag.image, IFNULL(dia.dia_wt,0) as dia_wt,
        tag.current_branch, current_counter,tag.product_id,tag.id_section,
        ifnull(design_code,'') as design_code ,tag.created_by,des.design_name,
        b.name as branch_name,tag.tot_print_taken,p.product_name,IFNULL(tag.remarks,'') as remarks,
		tag.product_id,tag.tag_status,s.id_tag_scanned,IFNULL(sec.section_name,'-') as section_name
        From ret_taging tag
	    left join ret_tag_scanned s on s.tag_id=tag.tag_id
	    left join ret_tag_scan t on t.id_scanned=s.id_scanned
        LEFT JOIN ret_taging_images tag_img on tag_img.tag_id=tag.tag_id
	    LEFT JOIN ret_design_master as des ON des.design_no = tag.design_id
        LEFT JOIN (SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
                FROM `ret_taging_stone` as retst
                LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                WHERE st.stone_type = 1) as dia ON dia.tag_id = tag.tag_id
        LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=tag.id_sub_design
		LEFT JOIN ret_product_master p on p.pro_id=tag.product_id
        Left join ret_section sec on sec.id_section = tag.id_section
		left join branch b on b.id_branch=tag.current_branch
	    where t.status=1
	    ".($id_branch!='' ? " and t.id_branch=".$id_branch."":'')."
	    ".($id_product!='' ? " and t.id_product=".$id_product."":'')."
	    order by s.id_tag_scanned DESC");
	    // print_r($this->db->last_query());exit;
		return $sql->result_array();
	}
    function get_scanned_details($tag_id,$id_branch)
	{
		$sql=$this->db->query("SELECT s.tag_id,s.id_branch,s.id_tag_scanned
			From ret_tag_scanned s
			left join ret_tag_scan t on t.id_scanned=s.id_scanned
			where s.tag_id=".$tag_id." and t.status=1
			".($id_branch!='' ? " and t.id_branch=".$id_branch."" :'')."");
			//print_r($this->db->last_query());exit;
		if($sql->num_rows()==0)
		{
			return TRUE;
		}else{
			return FALSE;
		}
	}
	function itemwise_sales_details($data)
    {
		$profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
    	$result = array();
    	if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
            $return_data=array();
            $multiple_id_metal = implode(' , ', $data['id_metal']);
            if($multiple_id_metal != '')
            {
                $id_metal = $multiple_id_metal;
            }else{
                $id_metal = $data['id_metal'];
            }
		if($data['sales_report_type']==2)
		{
			$sql=$this->db->query("SELECT d.product_id,p.product_name,IFNULL(d.piece,1) as tot_pcs,d.item_cost as total_cost,d.esti_item_id,est.id_sub_design,ifnull(sub.sub_design_name,'-') as sub_design_name,
			des.design_name,IFNULL(d.design_id,'') as design_id,IFNULL(d.gross_wt,0) as gross_wt,IFNULL(d.net_wt,0) as net_wt,IFNULL(tag.tag_code,'') as tag_code,bill.bill_no,bill.bill_id,
			IFNULL(tag.style_code,'') as style_code,IFNULL(tag.cert_no,'') as cert_no,IFNULL(tag.old_tag_id,'-') as old_tag_id,br.name as branch,date_format(bill.bill_date,'%d-%m-%Y %h:%m') as bill_date,
			ifnull(stn.stn_wt,0) as dia_wt,IFNULL(k.firstname,'') as karigar,bill.sales_ref_no,m.metal_code,
			IFNULL(DATEDIFF(date(bill_date),date(tag_datetime)),'') AS age,tag_img.image as tag_image,IFNULL(s.section_name,'') as section_name, IFNULL(es.esti_no,0) AS esti_no, est.esti_id,IFNULL(tag.gross_wt,0) as tag_gross_wt,  IFNULL(tag.hu_id,'') as huid,


			IFNULL(d.wastage_percent,0) as wastage_percent,d.mc_type,d.mc_value,
			IFNULL(stn.stn_amt,0) as stn_amt,d.calculation_based_on,IFNULL(d.less_wt,0) as less_wt,IFNULL(d.wastage_discount,0) as wastage_discount,IFNULL(d.mc_discount,0) as mc_discount,
			CASE WHEN bill.customer_name IS NULL THEN CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,''))
			ELSE bill.customer_name END AS cus_name,IF(tag.is_partial = 1, 'Partly Sold','Sold') AS partial_status,
			 cus.mobile,IFNULL(est.est_rate_per_grm,0) as estimation_rate,
            CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number, IFNULL(d.total_cgst,0) AS total_cgst, IFNULL(d.total_sgst,0) AS total_sgst,
			IFNULL(d.total_igst,0) AS total_igst, IFNULL(d.item_total_tax,0) AS item_total_tax,
			round(IFNULL(d.item_cost,0)-IFNULL(d.item_total_tax,0),2) AS amt_without_tax, IFNULL(p.hsn_code,'') AS hsn_code,
            IFNULL(pur.purity,'')as purity,
            IF(bill.is_bill_split = 1 and d.item_type = 2,0,IFNULL(d.piece,1)) as tot_pcs
			FROM ret_bill_details d
			LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
            LEFT JOIN ret_taging_huid rh ON rh.tag_id = tag.tag_id
			LEFT JOIN ret_lot_inwards lt on lt.lot_no=tag.tag_lot_id
			LEFT JOIN ret_karigar k ON k.id_karigar=lt.gold_smith
			LEFT JOIN ret_billing bill ON bill.bill_id=d.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
			LEFT JOIN ret_estimation_items est ON est.est_item_id=d.esti_item_id
			LEFT JOIN ret_estimation es ON es.estimation_id = est.esti_id
			LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=tag.id_sub_design
			LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
			LEFT JOIN ret_design_master des ON des.design_no=d.design_id
			LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
			LEFT JOIN metal m ON m.id_metal=c.id_metal
            LEFT JOIN customer cus ON cus.id_customer=bill.bill_cus_id
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
			LEFT JOIN branch br on br.id_branch=bill.id_branch
            LEFT JOIN ret_purity as pur ON pur.id_purity = d.purity
			LEFT JOIN ret_section s ON s.id_section = ".($data['tag_type']==1 ? 'tag.id_section' : 'd.id_section')."
			LEFT JOIN (SELECT IFNULL(SUM(bill_stn.wt),0) as stn_wt,dt.bill_det_id,
						IFNULL(SUM(bill_stn.price),0) as stn_amt
						FROM ret_billing_item_stones bill_stn
						LEFT JOIN ret_bill_details dt on dt.bill_det_id = bill_stn.bill_det_id
                        LEFT JOIN ret_billing b on b.bill_id=dt.bill_id
                        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
						LEFT JOIN ret_stone s ON s.stone_id=bill_stn.stone_id
						WHERE b.bill_status=1 AND s.stone_type = 1
						".($id_branch != '' && $id_branch >0 ? ' and b.id_branch='.$id_branch: '')."
						".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
                         ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
						group by dt.bill_det_id) as stn on stn.bill_det_id = d.bill_det_id
			LEFT JOIN ret_taging_images tag_img on tag_img.tag_id=tag.tag_id
			 WHERE bill.bill_status=1
			".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and bill.id_branch='.$data['id_branch']: '')."
			".($data['id_product'] != '' && $data['id_product'] >0 ? ' and d.product_id='.$data['id_product']: '')."
			".($data['id_category'] != '' && $data['id_category'] >0 ? ' and p.cat_id='.$data['id_category']: '')."
			".($id_metal!='' && $id_metal !='0' ? " and m.id_metal in (".$id_metal.") " :'' )."
			".($FromDt!= '' && $ToDt!='' ? ' and (date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
			".($data['id_section'] != '' && $data['id_section'] >0 ? ' and tag.id_section ='.$data['id_section']: '')."
			".($data['tag_type'] == 1 ? ' and IFNULL(d.tag_id,0) > 0': '')."
			".($data['tag_type'] == 2 ? ' and IFNULL(d.is_non_tag,0) = 1': '')."

            ".($data['huid'] != '' 
                    ? " AND (tag.hu_id = '".$data['huid']."' OR tag.hu_id2 = '".$data['huid']."' OR rh.huid = '".$data['huid']."') "  : '')."





            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
			group by d.bill_det_id
            ORDER BY p.pro_id ASC");
			//print_r($this->db->last_query());exit;
			$result=$sql->result_array();
			if($data['id_branch']!='' && $data['id_branch']!=0){
				$dayClose = $this->db->query("SELECT id_branch,is_day_closed,entry_date from ret_day_closing where id_branch=".$data['id_branch']);
				$cur_entry_date = $dayClose->row()->entry_date;
				if($profile_settings['allow_bill_type']==2)
				{
					 if($FromDt != $cur_entry_date)
					 {
						 $result =[];
					 }
				}
			}
			foreach($result as $items)
			{
				$wast_wgt=0;
				$mc_value=0;
				if($items['mc_type']==1)
				{
					$mc_value = ($items['mc_value']);
				}else if($items['mc_type']==2)
				{
					$mc_value = ($items['mc_value']*$items['gross_wt']);
				}
				if($items['calculation_based_on']==0)
				{
					$wast_wgt = number_format((($items['gross_wt']*$items['wastage_percent'])/100),3,'.','');
				}else if($items['calculation_based_on']==1 || $items['calculation_based_on']==2)
				{
					$wast_wgt = number_format((($items['net_wt']*$items['wastage_percent'])/100),3,'.','');
				}
                $items['bill_no'] = $this->get_bill_no_format_detail($items['bill_id']);
				$items['mc_value'] = $mc_value;
				$items['wast_wgt'] = $wast_wgt;
				$return_data[$items['section_name']][]=$items;
			}
		}else{
			$sql=$this->db->query("SELECT sec.section_name,IFNULL(SUM(d.piece),0) as tot_pcs,IFNULL(SUM(d.item_cost),0) as total_cost,IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.net_wt),0) as net_wt,
			count(tag.tag_id) as tagcount,round(IFNULL(IF(d.calculation_based_on=0,IFNULL(SUM((d.gross_wt*d.wastage_percent)/100),0),IFNULL(SUM((d.net_wt*d.wastage_percent)/100),0)),0),3) as wast_wt,if(d.mc_type=1,IFNULL(sum(d.mc_value),0),if(d.calculation_based_on=0 OR d.calculation_based_on=2,IFNULL(SUM(d.gross_wt),0),if(d.calculation_based_on=1,IFNULL(SUM(d.net_wt),0),0))) as mc_value,IFNULL(dia.diawt,0) as diawt,
			IFNULL(stn.stn_amt,0) as stn_amt,IFNULL(SUM(tag.gross_wt),0) as tag_gross_wt,
			IFNULL(sum(d.wastage_percent),0) as wastage_percent,IFNULL(pur.purity,'')as purity
			FROM ret_bill_details d
			LEFT JOIN ret_billing bill ON bill.bill_id = d.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
			LEFT JOIN ret_taging tag ON tag.tag_id = d.tag_id
            LEFT JOIN ret_purity as pur ON pur.id_purity = d.purity
			LEFT JOIN ret_section sec ON sec.id_section = ".($data['tag_type']==1 ? 'tag.id_section' : 'd.id_section' )."
			LEFT JOIN(SELECT IFNULL(SUM(s.wt),0) as diawt,IFNULL(SUM(s.price),0) as stn_amt,t.id_section
			FROM ret_billing_item_stones s
			LEFT JOIN ret_bill_details d ON d.bill_det_id = s.bill_det_id
			LEFT JOIN ret_billing b on b.bill_id=d.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
			LEFT JOIN ret_taging t ON t.tag_id  = d.tag_id
			LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
			LEFT JOIN ret_uom m ON m.uom_id = s.uom_id
			WHERE st.stone_type=1
			".($id_branch != '' && $id_branch >0 ? ' and b.id_branch='.$id_branch: '')."
			".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
			GROUP BY t.id_section) as dia ON dia.id_section = tag.id_section
			LEFT JOIN(SELECT IFNULL(SUM(s.wt),0) as diawt,IFNULL(SUM(s.price),0) as stn_amt,t.id_section
			FROM ret_billing_item_stones s
			LEFT JOIN ret_bill_details d ON d.bill_det_id = s.bill_det_id
			LEFT JOIN ret_billing b on b.bill_id=d.bill_id
			LEFT JOIN ret_taging t ON t.tag_id  = d.tag_id
			LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
			LEFT JOIN ret_uom m ON m.uom_id = s.uom_id
			WHERE s.bill_det_id IS NOT NULL
			".($id_branch != '' && $id_branch >0 ? ' and b.id_branch='.$id_branch: '')."
			".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
			".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
			GROUP BY t.id_section) as stn ON stn.id_section = tag.id_section
			WHERE bill.bill_status=1
			".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and bill.id_branch='.$data['id_branch']: '')."
			".($FromDt!= '' && $ToDt!='' ? ' and (date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
			".($data['id_section'] != '' && $data['id_section'] >0 ? ' and tag.id_section ='.$data['id_section']: '')."
			".($data['tag_type'] == 1 ? ' and IFNULL(d.tag_id,0) > 0': '')."
			".($data['tag_type'] == 2 ? ' and IFNULL(d.is_non_tag,0) = 1': '')."

            ".($data['huid'] != '' 
                    ? " AND (tag.hu_id = '".$data['huid']."' OR tag.hu_id2 = '".$data['huid']."' OR rh.huid = '".$data['huid']."') "  : '')."




            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
			GROUP BY ".($data['tag_type']==1 ? 'tag.id_section': 'd.id_section')."");
			return $sql->result_array();
			//print_r($this->db->last_query());exit;
		}
        return $return_data;
    }
    function design_wise_sales($product_id,$FromDt,$ToDt,$id_branch,$id_metal)
    {
        $data=[];
        $sql=$this->db->query("SELECT d.product_id,p.product_name,IFNULL(d.piece,1) as tot_pcs,d.item_cost as total_cost,d.esti_item_id,est.id_sub_design,ifnull(sub.sub_design_name,'-') as sub_design_name,
		des.design_name,IFNULL(d.design_id,'') as design_id,IFNULL(d.gross_wt,0) as gross_wt,IFNULL(d.net_wt,0) as net_wt,tag.tag_code,bill.bill_no,bill.bill_id,
		IFNULL(tag.style_code,'') as style_code,IFNULL(tag.cert_no,'') as cert_no,IFNULL(tag.old_tag_id,'-') as old_tag_id,br.name as branch,date_format(bill.bill_date,'%d-%m-%Y') as bill_date,
        ifnull(stn.stn_wt,'') as less_wt,IFNULL(k.firstname,'') as karigar,bill.sales_ref_no,m.metal_code,
        DATEDIFF(date(bill_date),date(tag_datetime)) AS age,tag_img.image as tag_image
        FROM ret_bill_details d
        LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
        LEFT JOIN ret_lot_inwards lt on lt.lot_no=tag.tag_lot_id
        LEFT JOIN ret_karigar k ON k.id_karigar=lt.gold_smith
        LEFT JOIN ret_billing bill ON bill.bill_id=d.bill_id
        LEFT JOIN ret_estimation_items est ON est.est_item_id=d.esti_item_id
        LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=tag.id_sub_design
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
        LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=c.id_metal
        LEFT JOIN branch br on br.id_branch=bill.id_branch
        LEFT JOIN (SELECT IFNULL(SUM(bill_stn.wt),0) as stn_wt,dt.bill_det_id
                    FROM ret_billing_item_stones bill_stn
                    LEFT JOIN ret_bill_details dt on dt.bill_det_id = bill_stn.bill_det_id
                    LEFT JOIN ret_billing b on b.bill_id=dt.bill_id
                    LEFT JOIN ret_stone s ON s.stone_id=bill_stn.stone_id
                    WHERE b.bill_status=1 AND s.stone_type = 1
                    ".($id_branch != '' && $id_branch >0 ? ' and b.id_branch='.$id_branch: '')."
                    ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
                    group by dt.bill_det_id) as stn on stn.bill_det_id = d.bill_det_id
        LEFT JOIN ret_taging_images tag_img on tag_img.tag_id=tag.tag_id
         WHERE bill.bill_status=1
        ".($id_metal != '' && $id_metal >0 ? ' and m.id_metal='.$id_metal: '')."
        ".($id_branch != '' && $id_branch >0 ? ' and bill.id_branch='.$id_branch: '')."
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        AND d.product_id=".$product_id."
        ORDER BY tag.design_id,est.id_sub_design");
       //print_r($this->db->last_query());exit;
       $des_items=$sql->result_array();
       foreach($des_items as $items)
       {
            $data[]=$items;
       }
       return $data;
    }
    function design_wise_bill_det($design_id,$FromDt,$ToDt,$id_branch,$product_id)
    {
        $sql=$this->db->query("SELECT b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,d.item_cost,d.item_total_tax,d.gross_wt,d.net_wt,d.piece,c.firstname as cus_name,c.mobile,
        d.bill_discount,t.tag_code,b.bill_id
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_taging t on t.tag_id=d.tag_id
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        WHERE b.bill_status=1
        ".($design_id!='' || $design_id!=null ? " and d.design_id=".$design_id."" :'')."
        ".($id_branch != '' && $id_branch >0 ? ' and b.id_branch='.$id_branch: '')."
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')." ");
      // print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
	function itemwise_sales($data)
    {
    	$result = array();
    	if($data['dt_range'] != ''){
			$dateRange = explode('-',$data['dt_range']);
			$d1 = date_create($dateRange[0]);
			$d2 = date_create($dateRange[1]);
			$FromDt = date_format($d1,"Y-d-m");
			$ToDt = date_format($d2,"Y-d-m");
		}
		$data = $this->db->query("
						SELECT
							c.mobile,c.firstname as cus_name,br.name as branch_name,b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,if(b.bill_type = 1,'Sales',if(b.bill_type = 2,'Sales&Purchase',if(b.bill_type = 3,'Sales&Return',if(b.bill_type = 4,'Purchase',if(b.bill_type = 5,'Order Advance',if(b.bill_type = 6,'Advance',if(b.bill_type = 7,'Sales Return',''))))))) as bill_type,det.item_cost,det.bill_discount,det.product_name,det.design_name,det.net_wt,det.product_id,det.design_id,b.id_branch,det.piece,det.gross_wt,'' as tax,
							det.status
						From ret_billing b
							LEFT JOIN
							(
								SELECT
									piece,bill_det_id,bill_id,item_type,is_non_tag,tag_id,order_no,d.product_id,d.design_id,
									ifnull(design_name, '') as design_name,ifnull(product_name, '') as product_name,
									ifnull(d.gross_wt,0.000) as gross_wt,ifnull(d.net_wt,0.000) as net_wt,ifnull(d.less_wt,0.000) as less_wt,
									if(d.status = 1,'Sold',if(d.status = 2,'Returned','')) as status,bill_discount,item_cost
								FROM `ret_bill_details` d
									LEFT JOIN ret_product_master as pro ON pro.pro_id = d.product_id
									LEFT JOIN ret_design_master as des ON des.design_no = d.design_id
								WHERE d.product_id IS NOT NULL AND d.product_id!='' AND d.status = 1
							) det on det.bill_id=b.bill_id
							LEFT JOIN customer c on c.id_customer=b.bill_cus_id
							LEFT JOIN branch br on br.id_branch=b.id_branch
			    		WHERE det.product_id IS NOT NULL AND det.product_id!='' AND b.bill_type <= 3 AND b.bill_status = 1 AND b.tot_discount > 0 AND tot_discount IS NOT NULL".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."   ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')." ".($data['id_product'] != '' && $data['id_product'] >0 ? ' and det.product_id='.$data['id_product']: '')." ORDER BY b.id_branch");
		$bill_data = $data->result_array();
		$branchwiseProd = array();
		// Group by branch a product
		foreach($bill_data as $r){
			if(isset($branchwiseProd[$r['id_branch']][$r['product_id']])){
				$prodData = $branchwiseProd[$r['id_branch']][$r['product_id']];
				// Already having design array
				if(isset($prodData['designs'][$r['design_id']])){
					// Update Design Array
					$branchwiseProd[$r['id_branch']][$r['product_id']]['designs'][$r['design_id']]['piece'] = $prodData['designs'][$r['design_id']]['piece'] + $r['piece'];
					$branchwiseProd[$r['id_branch']][$r['product_id']]['designs'][$r['design_id']]['no_of_bills'] = $prodData['designs'][$r['design_id']]['no_of_bills'] + 1;
					$branchwiseProd[$r['id_branch']][$r['product_id']]['designs'][$r['design_id']]['item_discount'] = $prodData['designs'][$r['design_id']]['item_discount'] + $r['bill_discount'];
					$branchwiseProd[$r['id_branch']][$r['product_id']]['designs'][$r['design_id']]['item_cost'] = $prodData['designs'][$r['design_id']]['item_cost'] + $r['item_cost'];
				}
				else{
					$item = array(
						  	"design_name"	=> $r['design_name'],
						  	"id_design"		=> $r['design_id'],
						  	"piece"			=> $r['piece'],
						  	"no_of_bills"	=> 1,
						  	"item_discount"	=> $r['bill_discount'],
						  	"item_cost"		=> $r['item_cost'],
						  );
					$branchwiseProd[$r['id_branch']][$r['product_id']]['designs'][$r['design_id']] = $item;
					$branchwiseProd[$r['id_branch']][$r['product_id']]['sold_items'] = $prodData['sold_items']+1;
					$branchwiseProd[$r['id_branch']][$r['product_id']]['no_of_bills'] = $prodData['no_of_bills']+1;
				}
				$bill = array(
					  	"cus_name"		=> $r['cus_name'],
					  	"mobile"		=> $r['mobile'],
					  	"bill_no"		=> $r['bill_no'],
					  	"bill_date"		=> $r['bill_date'],
					  	"bill_discount"	=> $r['bill_discount'],
					  	"item_cost"		=> $r['item_cost'],
					  	"net_wt"		=> $r['net_wt'],
					  	"gross_wt"		=> $r['gross_wt'],
					  	"tax"			=> $r['tax'],
					  );
				// Update Bills Array
				$branchwiseProd[$r['id_branch']][$r['product_id']]['bills'][$r['design_id']][] = $bill;
				// Update Parent Array
				$branchwiseProd[$r['id_branch']][$r['product_id']]['no_of_bills'] = $prodData['no_of_bills']+1;
				$branchwiseProd[$r['id_branch']][$r['product_id']]['discount'] = $prodData['discount']+$r['bill_discount'];
				$branchwiseProd[$r['id_branch']][$r['product_id']]['amount'] = $prodData['amount']+$r['item_cost'];
			}else{
				$item = array(
						  	"design_name"	=> $r['design_name'],
						  	"id_design"		=> $r['design_id'],
						  	"piece"			=> $r['piece'],
						  	"no_of_bills"	=> 1,
						  	"item_discount"	=> $r['bill_discount'],
						  	"item_cost"		=> $r['item_cost'],
						  );
				$bill = array(
						  	"cus_name"		=> $r['cus_name'],
						  	"mobile"		=> $r['mobile'],
						  	"bill_no"		=> $r['bill_no'],
						  	"bill_date"		=> $r['bill_date'],
						  	"bill_discount"	=> $r['bill_discount'],
						  	"item_cost"		=> $r['item_cost'],
						  	"net_wt"		=> $r['net_wt'],
						  	"gross_wt"		=> $r['gross_wt'],
						  	"tax"			=> $r['tax'],
						  );
				$branchwiseProd[$r['id_branch']][$r['product_id']] = array(
																	"branch_name"	=> $r['branch_name'],
																	"product_name"	=> $r['product_name'],
																	"id_product"	=> $r['product_id'],
																	"sold_items"	=> 1,
																	"no_of_bills"	=> 1,
																	"discount"		=> $r['bill_discount'],
																	"amount"		=> $r['item_cost'],
																	"designs"		=> array($r['design_id'] => $item),
																	"bills"			=> array($r['design_id'] =>  array($bill)),
																);
			}
		}
		// create return array with child row data
		/*echo $this->db->last_query();
		 echo "<pre>";print_r($branchwiseProd);  exit;*/
		foreach($branchwiseProd as $branchProd){
			foreach($branchProd as $prod){
				$result[] = $prod;
			}
		}
    	return $result;
    }
    //bill wise transcation
	 function getBillingDetails($post)
	{
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$data=array();
		$items_query = $this->db->query("SELECT b.bill_id,b.bill_cus_id,b.pan_no,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
		b.bill_id,
		 CASE
			WHEN b.customer_name IS NOT NULL THEN b.customer_name
			WHEN b.bill_type=12 THEN k.firstname
			ELSE concat(c.mobile,'-',c.firstname)
		END AS cus_name,
		b.id_branch,b.tot_bill_amount,
		date_format(b.credit_due_date,'%d-%m-%y') as credit_due_date,b.is_credit,b.ref_bill_id as ref_bill_id,b.print_taken,b.remark,IFNULL(b.tot_discount,0) as tot_discount,
        a.id_state as cus_state,c.firstname as customer_name,c.mobile,
		br.name as branch_name,b.tot_amt_received,round_off_amt,IFNULL(v.village_name,'') as village_name,IFNULL(b.handling_charges,0) as handling_charges,
		IFNULL(ret.ret_item_cost,0) as tot_ret_amt,IFNULL(g.gift_voucher_amt,0) as gift_voucher_amt,IFNULL(chit.utilized_amt,0) as utilized_amt,
		IFNULL((ord_adj.received_amount+ord_adj.weight_amt),0) as order_adj_amt,IFNULL(adv_adj.adj_amt,0) as adv_adj_amt,IFNULL(b.advance_deposit,0) as advance_deposit,
        ret.product_id,IFNULL(a.address1,'-') as address1,
        IF(b.bill_type = 1, 'Sales',IF(b.bill_type = 2, 'Sales&Purchase',IF(b.bill_type = 3, 'Sales&Return',IF(b.bill_type = 4, 'Purchase',IF(b.bill_type = 5, 'Order Advance',  IF(b.bill_type = 6, 'Advance',IF(b.bill_type = 7, 'Sales Return',IF(b.bill_type = 8, 'Credit Bill Payment',IF(b.bill_type = 9, 'Order Delivery',IF(b.bill_type = 10, 'Chit Proclose',IF(b.bill_type = 11, 'Repair Order Delivery', ''))))))))))) AS bill_type,
        IFNULL(b.pan_no, ifnull(c.pan, '')) as pan, IFNULL(c.gst_number,'') as gst_number,  emp.firstname as emp_name
		FROM ret_billing b
        left join employee emp on emp.id_employee=b.created_by
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
		LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
		LEFT JOIN ret_karigar k on k.id_karigar=b.bill_cus_id
		LEFT JOIN address a on a.id_customer=c.id_customer
		LEFT JOIN state s on s.id_state=a.id_state
		LEFT JOIN branch br on br.id_branch=b.id_branch
		LEFT JOIN village v on v.id_village=c.id_village
        LEFT JOIN (SELECT SUM(bill_items.item_cost) as ret_item_cost,bill.bill_id,bill_items.product_id
        FROM ret_billing bill
        LEFT JOIN ret_bill_return_details d on d.bill_id=bill.bill_id
        LEFT JOIN ret_bill_details as bill_items ON bill_items.bill_det_id = d.ret_bill_det_id
        group by bill.bill_id
        ) as ret ON ret.bill_id=b.bill_id
        LEFT JOIN (SELECT SUM(d.gift_voucher_amt) as gift_voucher_amt,d.bill_id,b.bill_no
            FROM ret_billing_gift_voucher_details d
            LEFT JOIN ret_billing b on b.bill_id=d.bill_id
            group by b.bill_id
        ) as g ON g.bill_id=b.bill_id
         LEFT JOIN(SELECT chit.bill_chit_ut_id,chit.bill_id,chit.scheme_account_id,SUM(utilized_amt) as utilized_amt
            FROM ret_billing_chit_utilization chit
            LEFT JOIN ret_billing b on b.bill_id=chit.bill_id
            group by b.bill_id
        ) as chit ON chit.bill_id=b.bill_id
        LEFT JOIN(SELECT sum(a.received_amount) as received_amount,sum(a.received_weight*a.rate_per_gram) as weight_amt,b.bill_id
        FROM ret_billing b
        LEFT JOIN ret_billing_advance a ON a.adjusted_bill_id=b.bill_id
        WHERE a.is_adavnce_adjusted=1
        group by b.bill_id) as ord_adj on ord_adj.bill_id=b.bill_id
        LEFT JOIN ret_product_master p on p.pro_id = ret.product_id
        LEFT JOIN ret_section sec on sec.id_section= p.id_section
        left join ret_category cat on cat.id_ret_category=p.cat_id
        left join metal m on m.id_metal=cat.id_metal
        LEFT JOIN(SELECT IFNULL(sum(r.amount),0) as adj_amt,bill.bill_id
			FROM ret_billing bill
			LEFT JOIN ret_wallet_transcation r on r.bill_no=bill.bill_id
			where r.bill_no is not null
			and bill.bill_status=1  and r.transaction_type=1 group by bill.bill_id) as adv_adj ON adv_adj.bill_id=b.bill_id
		where b.bill_status=1 and b.bill_type!=6
        ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
		".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
		".($post['id_counter']!='' && $post['id_counter']>0 ? " and b.counter_id=".$post['id_counter']."" :'')."
		".($post['id_section']!='' && $post['id_section']>0 ? " and p.id_section=".$post['id_section']."" :'')."
        ".($post['id_village']!='' && $post['id_village']!=null ? " and v.id_village=".$post['id_village']."" :'')."
        ".($post['bill_wise_type']!='' && $post['bill_wise_type']!= 0 ? " and b.bill_type=".$post['bill_wise_type']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        order by b.bill_id DESC");
		$bill_details=$items_query->result_array();
		 //print_r($this->db->last_query());exit;
		foreach($bill_details as $bill)
		{
			$data[$bill['bill_no']]= array(
			'bill_date'	        =>$bill['bill_date'],
            'bill_id'	        =>$bill['bill_id'],
			'is_credit'	        =>$bill['is_credit'],
			'customer_name'	    =>$bill['cus_name'],
			'mobile'	        =>$bill['mobile'],
            'pan'	            =>$bill['pan'],
            'emp_name'	        =>$bill['emp_name'],
			'gst_number'	    =>$bill['gst_number'],
            'bill_type'	        =>$bill['bill_type'],
            'address1'	        =>$bill['address1'],
			'handling_charges'	=>$bill['handling_charges'],
			'village_name'	    =>$bill['village_name'],
			'tot_ret_amt'	    =>$bill['tot_ret_amt'],
			'gift_voucher_amt'	=>$bill['gift_voucher_amt'],
			'order_adj_amt'	    =>$bill['order_adj_amt'],
			'adv_adj_amt'	    =>$bill['adv_adj_amt'],
			'utilized_amt'	    =>$bill['utilized_amt'],
			'advance_deposit'	=>$bill['advance_deposit'],
            'bill_no'           => $this->get_bill_no_format_detail($bill['bill_id']),
			'due_amt'	        =>$bill['tot_bill_amount']-$bill['tot_amt_received'],
			'sale_details'      =>$this->get_salesDetails($bill['bill_id'],$bill['bill_type']),
			'old_sales_details' =>$this->getOld_sales_details($bill['bill_id'],$bill['bill_type']),
			'pay_details'       =>$this->get_payment_details($bill['bill_id']),
			//'bill_wise_details'  =>$this->bill_wise_details($bill['bill_id']),
			);
		}
		return $data;
	}
	function get_salesDetails($bill_id,$bill_type)
	{
		if($bill_type!=5)
		{
			$items_query = $this->db->query("SELECT b.bill_no,d.bill_det_id,IFNULL(d.esti_item_id,'') as  esti_item_id,
			ifnull(d.product_id, '') as product_id, ifnull(tag.tag_code, '') as tag_id,
			ifnull(d.design_id, '') as design_id, ifnull(pro.hsn_code,'') as hsn_code,
			d.purity as purid,d.size, ifnull(d.uom,'') as uom,d.piece,
			ifnull(d.less_wt,0) as less_wt, ifnull(d.net_wt,0) as net_wt,
            ifnull(d.gross_wt,0) as gross_wt,ifnull(stn.stn_wt,0) as dia_wt,
			d.calculation_based_on,ifnull(d.wastage_percent,0) as wastage_percent,d.mc_value,
            IF(d.mc_type=1,'Per Pc',(if(d.mc_type=2,'Per Gm','% on price'))) as mc_type,
			d.item_cost, ifnull(pro.product_short_code, '-') as product_short_code,
			ifnull(pro.product_name, '-') as product_name,ifnull(des.design_code, '-') as design_code,ifnull(des.design_name, '') as design_name,
            ifnull(des.fixed_rate,0) as fixed_rate,d.is_non_tag,d.id_lot_inward_detail,
			d.order_no,d.bill_discount,d.item_total_tax,b.bill_id,IFNULL(d.total_cgst,0) as total_cgst,IFNULL(d.total_sgst,0) as total_sgst,IFNULL(d.total_igst,0) as total_igst,
            IFNULL(sec.section_name,'') as section_name,If(d.bill_type =1,'Purchase','Sales') as bill_type,IFNULL(bc.counter_name,'') as counter_name,
            ifnull(stone.stone_wt,0) as stone_wt, IFNULL(d.rate_per_grm,0) as rate,IFNULL(stn.dia_amount,0) as dia_amount,
            IFNULL(stone.stone_amount,0) as stone_amount,c.mobile,concat(c.firstname,' ',if(c.lastname!=NULL,c.lastname,'')) as customer,
            IFNULL(a.address1,'-') as address1,IFNULL(a.address2,'-') as address2,IFNULL(a.address3,'-') as address3,
            IFNULL(b.pan_no, ifnull(c.pan, '')) as pan, IFNULL(c.gst_number,'') as gst_number,emp.firstname as emp_name,
            IFNULL(b.remark,'') as remark,IF(b.bill_status=1,'Success','Cancelled') as bill_status
            From ret_billing b
			Left JOIN ret_bill_details d on d.bill_id=b.bill_id
            left join customer c on c.id_customer=b.bill_cus_id
            LEFT JOIN address a ON a.id_address=c.id_address
            left join employee emp on emp.id_employee=b.created_by
			LEft JOIN ret_branch_floor_counter bc on bc.counter_id=b.counter_id
            LEft JOIN ret_taging tag on tag.tag_id=d.tag_id
            LEFT JOIN ret_section as sec ON sec.id_section = d.id_section
			LEFT JOIN ret_product_master as pro ON pro.pro_id = d.product_id
			LEFT JOIN ret_design_master as des ON des.design_no = d.design_id
            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,st.bill_det_id,st.price as dia_amount
            FROM ret_billing_item_stones st
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
            LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE b.bill_status=1 AND uom.uom_short_code='CT'
            GROUP BY st.bill_det_id) as stn ON stn.bill_det_id=d.bill_det_id
            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stone_wt,st.bill_det_id,st.price as stone_amount
            FROM ret_billing_item_stones st
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
            LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_stone_type sp ON sp.id_stone_type =s.stone_id
            WHERE b.bill_status=1 AND sp.id_stone_type!=1
            GROUP BY st.bill_det_id) as stone ON stone.bill_det_id=d.bill_det_id
			WHERE b.bill_status=1 and d.bill_id=".$bill_id."");
		//echo $this->db->last_query();exit;
		}
		else if($bill_type==5)
		{
			$items_query = $this->db->query("SELECT
			ifnull(pro.product_name, '-') as product_name,b.bill_no,b.bill_type,b.tot_amt_received as advance_amt,cus.order_no,b.tot_bill_amount,
            '' as less_wt,  '' as net_wt, '' as gross_wt,  '' as dia_wt,'' as calculation_based_on,
            '' as wastage_percent, '' as mc_value, '-' as mc_type, '-' as section_name,'0' as piece,''as bill_type,'' as counter_name,'' as stone_wt, '' as rate,'' as dia_amount,
            '' as stone_amount, ''as mobile, ''as customer,'' as address1,'' as address2, '' as address3,'' as pan, '' as gst_number, '' as emp_name,
            '' as remark,'' as bill_status
        	From ret_billing b
			Left JOIN ret_billing_advance d on d.bill_id=b.bill_id
			LEFT JOIN customerorder cus on cus.order_no=d.order_no
			LEFT JOIN customerorderdetails cus_order on cus_order.id_customerorder=cus.id_customerorder
			LEFT JOIN ret_product_master as pro ON pro.pro_id = cus_order.id_product
			LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
			LEFT JOIN metal mt on mt.id_metal=c.id_metal
			LEFT JOIN ret_design_master as des ON des.design_no = cus_order.design_no
			LEFT JOIN ret_purity as pur ON pur.id_purity = cus_order.id_purity
			LEFT JOIN ret_taxgroupmaster as txgrp ON txgrp.tgrp_id = mt.tgrp_id
			WHERE b.bill_id=".$bill_id." GROUP by d.order_no");
			//echo $this->db->last_query();exit;
		}
		$item_details= $items_query->result_array();
		return $item_details;
	}
	function getOld_sales_details($bill_id,$bill_type)
	{
		$old_metal_query=$this->db->query("SELECT s.old_metal_sale_id,s.bill_id,s.purpose,s.metal_type,s.item_type,s.gross_wt,s.stone_wt,s.dust_wt,s.stone_wt,s.wastage_percent,s.wast_wt,
		s.net_wt,s.rate_per_grm as rate_per_gram,s.rate as amount,s.bill_id,s.bill_discount,est_id,b.bill_no,b.pur_ref_no
		FROM ret_billing b
		LEFT join  ret_bill_old_metal_sale_details s on s.bill_id=b.bill_id
		where b.bill_status=1 and s.bill_id=".$bill_id."");
		//print_r($this->db->last_query());exit;
		$old_matel_details = $old_metal_query->result_array();
		return $old_matel_details;
	}
	function get_payment_details($bill_id)
	{
		$pay_details = $this->db->query("SELECT p.id_billing_payment,p.type,p.bill_id,p.payment_for,p.payment_amount,p.card_no,p.cvv,p.payment_mode, IF(p.payment_mode = 'NB',p.NB_type, '') AS nb_type
		FROM ret_billing_payment p
		where p.bill_id=".$bill_id."");
		$return_data = $pay_details->result_array();
		return $return_data;
	}
	function get_receipt_payment_details($id_issue_rcpt)
	{
		$pay_details = $this->db->query("SELECT p.id_issue_rcpt_pay,p.type,p.id_issue_rcpt,p.payment_amount,p.card_no,p.cvv,p.payment_mode
		FROM ret_issue_rcpt_payment p
		where p.id_issue_rcpt=".$id_issue_rcpt."");
		$return_data = $pay_details->result_array();
		return $return_data;
	}
	function bill_wise_details($bill_id)
	{
        $bill_wise_details=$this->db->query("SELECT b.bill_id,IFNULL(ret.ret_item_cost,0) as tot_ret_amt,IFNULL(g.gift_voucher_amt,0) as gift_voucher_amt,
        IFNULL(chit.utilized_amt,0) as utilized_amt,b.handling_charges,b.round_off_amt,IFNULL((received_amount+weight_amt),0) as order_adj_amt,IFNULL(adv_adj.adj_amt,0) as adv_adj_amt
        FROM ret_billing b
        LEFT JOIN (SELECT SUM(bill_items.item_cost) as ret_item_cost,bill.bill_id
            FROM ret_billing bill
            LEFT JOIN ret_bill_return_details d on d.bill_id=bill.bill_id
            LEFT JOIN ret_bill_details as bill_items ON bill_items.bill_det_id = d.ret_bill_det_id
            group by bill.bill_id
        ) as ret ON ret.bill_id=b.bill_id
        LEFT JOIN (SELECT SUM(d.gift_voucher_amt) as gift_voucher_amt,d.bill_id,b.bill_no
            FROM ret_billing_gift_voucher_details d
            LEFT JOIN ret_billing b on b.bill_id=d.bill_id
            group by b.bill_id
        ) as g ON g.bill_id=b.bill_id
        LEFT JOIN(SELECT chit.bill_chit_ut_id,chit.bill_id,chit.scheme_account_id,SUM(utilized_amt) as utilized_amt
            FROM ret_billing_chit_utilization chit
            LEFT JOIN ret_billing b on b.bill_id=chit.bill_id
            group by b.bill_id
        ) as chit ON chit.bill_id=b.bill_id
        LEFT JOIN(SELECT sum(a.received_amount) as received_amount,sum(a.received_weight*a.rate_per_gram) as weight_amt,b.bill_id
        FROM ret_billing b
        LEFT JOIN ret_billing_advance a ON a.adjusted_bill_id=b.bill_id
        WHERE a.is_adavnce_adjusted=1
        group by b.bill_id) as ord_adj on ord_adj.bill_id=b.bill_id
        LEFT JOIN(SELECT IFNULL(sum(r.amount),0) as adj_amt,bill.bill_id
			FROM ret_billing bill
			LEFT JOIN ret_wallet_transcation r on r.bill_no=bill.bill_id
			where r.bill_no is not null
			and bill.bill_status=1  and r.transaction_type=1 group by bill.bill_id) as adv_adj ON adv_adj.bill_id=b.bill_id
        WHERE b.bill_status=1 AND b.bill_id=".$bill_id."");
        // print_r($this->db->last_query());exit;
        return $bill_wise_details->row_array();
	}
	//bill wise transcation
	function getOtherIssueList($filter){
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        if($profile_settings['pre_date_oi']==0){
            if($filter['id_branch']){
                $day_closing=$this->getBranchDayClosingData($filter['id_branch']);
                $FromDt=$day_closing['entry_date'];
                $ToDt=$day_closing['entry_date'];
            }else{
                $FromDt=date("Y-m-d");
                $ToDt=date("Y-m-d");
            }
        }
		$tag = array();
                    $sql_tg = $this->db->query("SELECT t.tag_code as tag_id,
                    fb.name as from_branch,tb.name as to_branch,
                    IFNULL(sum(t.gross_wt),0) as gross_wt,
                    IFNULL(sum(t.net_wt),0) as net_wt,IFNULL(k.firstname,'')as karigar_name,
                    IFNULL(sum(t.piece),0) as piece,m.metal as metal_name,t.id_section,
                    if( product_short_code = '' or product_short_code is null ,product_name ,CONCAT(product_short_code ,' - ',product_name) ) as product,
                    ifnull(bt.remark,'') as remark,IFNULL(d.design_name,'')as design,IFNULL(sm.sub_design_name,'')as sub_design,
                    IFNULL(sec.section_name,'')as section,IFNULL(dia.dia_wt,'') as dia_wt,emp.firstname as emp_name,
                    p.cat_id,c.id_metal
                    FROM `ret_branch_transfer` bt
                    Left join ret_brch_transfer_tag_items bti on bti.transfer_id = bt.branch_transfer_id
                    Left join ret_taging t on t.tag_id = bti.tag_id
                    Left join ret_lot_inwards l on l.lot_no = t.tag_lot_id
                    LEFT JOIN ret_karigar k ON k.id_karigar=l.gold_smith
                    left join employee emp on emp.id_employee= bt.create_by
                    Left join ret_product_master p on p.pro_id = t.product_id
                    Left join ret_category c on c.id_ret_category = p.cat_id
                    Left join metal m on m.id_metal = c.id_metal
                    LEFT JOIN (SELECT bti.tag_id, IFNULL(sum(wt),0) as dia_wt,
                         t.id_section,c.id_metal
                        FROM `ret_taging_stone` as retst
                        Left join ret_taging t on t.tag_id = retst.tag_id
                        Left join ret_lot_inwards l on l.lot_no = t.tag_lot_id
                         LEFT JOIN ret_karigar k ON k.id_karigar=l.gold_smith
                        Left join ret_brch_transfer_tag_items bti on bti.tag_id = t.tag_id
                        Left join ret_branch_transfer bt on bt.branch_transfer_id = bti.transfer_id
                        LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
                        LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
                        Left join ret_product_master p on p.pro_id = t.product_id
                        Left join ret_design_master d on d.design_no = t.design_id
                        Left join ret_sub_design_master sm on sm.id_sub_design = t.id_sub_design
                        Left join ret_category c on c.id_ret_category = p.cat_id
                        Left join metal m on m.id_metal = c.id_metal
                        Left join ret_section sec on sec.id_section = t.id_section
                        WHERE st.stone_type = 1
                        AND (date(bt.created_time) BETWEEN '".$FromDt."' AND '".$ToDt."')
                        ".($filter['id_branch'] > 0 && $filter['id_branch'] != '' ? ' AND bt.transfer_from_branch ='.$filter['id_branch'] :'')."
                        ".($filter['tag_id']!= '' ? " and t.tag_code ='".$filter['tag_id']."'" :'')."
                        ".($filter['id_product']!='' ? " and t.product_id=".$filter['id_product']."" :'')."
                        ".($filter['id_metal']!= 0 ? " and c.id_metal=".$filter['id_metal']."" :'')."
                        ".($filter['id_karigar']!='' ? " and l.gold_smith=".$filter['id_karigar']."" :'')."
                        ".($filter['id_section']!= 0 ? " and sec.id_section=".$filter['id_section']."" :'')."
                        ".($filter['id_design']!= 0 ? " and d.design_no=".$filter['id_design']."" :'')."
                        ".($filter['id_sub_design']!= 0 ? " and sm.id_sub_design=".$filter['id_sub_design']."" :'')."
                        ".($filter['report_type'] == 1 ? "GROUP BY bti.tag_id":($filter['group_by'] == 1 ?
                        "GROUP BY c.id_metal" : "GROUP BY sec.id_section"))."
                       ) as dia ON ".($filter['report_type'] == 1 ? "dia.tag_id = t.tag_id":($filter['group_by']==1 ? "dia.id_metal =  c.id_metal ":"dia.id_section =  t.id_section "))."
                    Left join ret_design_master d on d.design_no = t.design_id
                    Left join ret_sub_design_master sm on sm.id_sub_design = t.id_sub_design
                    Left join ret_section sec on sec.id_section = t.id_section
                    Left join branch fb on fb.id_branch = bt.transfer_from_branch
                    Left join branch tb on tb.id_branch = bt.transfer_to_branch
                WHERE is_other_issue=1 AND t.tag_status = 3  and transfer_item_type =1
                AND (date(bt.created_time) BETWEEN '".$FromDt."' AND '".$ToDt."')
                ".($filter['id_branch'] > 0 && $filter['id_branch'] != '' ? ' AND bt.transfer_from_branch ='.$filter['id_branch'] :'')."
                ".($filter['tag_id']!= '' ? " and t.tag_code ='".$filter['tag_id']."'" :'')."
                ".($filter['id_product']!='' ? " and t.product_id=".$filter['id_product']."" :'')."
                ".($filter['id_karigar']!='' ? " and l.gold_smith=".$filter['id_karigar']."" :'')."
                ".($filter['id_metal']!= 0 ? " and c.id_metal=".$filter['id_metal']."" :'')."
                ".($filter['id_section']!= 0 ? " and sec.id_section=".$filter['id_section']."" :'')."
                ".($filter['id_design']!= 0 ? " and d.design_no=".$filter['id_design']."" :'')."
                ".($filter['id_sub_design']!= 0 ? " and sm.id_sub_design=".$filter['id_sub_design']."" :'')."
                ". ($filter['report_type'] == 1 ? "GROUP BY bti.tag_id" : ($filter['group_by'] == 1 ? "GROUP BY c.id_metal" : "GROUP BY sec.id_section"))."
                ");
		//  print_r($this->db->last_query());exit;
		$tag = $sql_tg->result_array();
		// Non Tag
		/*$result_1 = array();
		$sql_lt = $this->db->query("SELECT
				fb.name as from_branch,tb.name as to_branch,l.`lot_no`,
				IFNULL(bt.grs_wt,0) as gross_wt,
				IFNULL(bt.net_wt,0) as net_wt,
				IFNULL(bt.pieces,0) as piece,
				if( product_short_code = '' or product_short_code is null ,product_name ,CONCAT(product_short_code ,' - ',product_name) ) as product,
				is_other_issue
			FROM `ret_branch_transfer` bt
				Left join ret_lot_inwards_detail ld on ld.id_lot_inward_detail=bt.id_lot_inward_detail
				Left join ret_lot_inwards l on l.lot_no = ld.lot_no
				Left join ret_product_master p on p.pro_id = ld.lot_product
				Left join branch fb on fb.id_branch = bt.transfer_from_branch
				Left join branch tb on tb.id_branch = bt.transfer_to_branch
		 	WHERE bt.id_lot_inward_detail is not null AND bt.id_lot_inward_detail > 0 AND status = 2 and  transfer_item_type =2 ".($filter['id_branch'] != '' ? ' and transfer_from_branch='.$filter['id_branch']: '')." ".($filter['id_product'] != '' ? ' and lot_product='.$filter['id_product']: '')." ".($filter['dt_range'] != '' ? ' and date(bt.created_time) BETWEEN '.$FromDt.' AND '.$ToDt: '')." group by bt.getBranchTransReportfer_id" );
		 $result_1 = $sql_lt->result_array();*/
		$result_2 = array();
        $non_tag = array();
		$sql_nt = $this->db->query("SELECT
            ''  as tag_id,
			fb.name as from_branch,tb.name as to_branch,
            IFNULL(sum(bt.grs_wt),0) as gross_wt,
			IFNULL(sum(bt.net_wt),0) as net_wt,'' as karigar_name,
			IFNULL(sum(bt.pieces),0) as piece,m.metal as metal_name,
			if( product_short_code = '' or product_short_code is null ,product_name ,CONCAT(product_short_code ,' - ',product_name) ) as product,
			is_other_issue,IFNULL(d.design_name,'')as design,IFNULL(sm.sub_design_name,'')as sub_design,
             IFNULL(sec.section_name,'')as section,'' as dia_wt,emp.firstname as emp_name
		    FROM `ret_branch_transfer` bt
			Left join ret_nontag_item nt on nt.id_nontag_item = bt.id_nontag_item
			Left join ret_product_master p on p.pro_id = nt.product
            Left join ret_category c on c.id_ret_category = p.cat_id
            Left join metal m on m.id_metal = c.id_metal
			Left join branch fb on fb.id_branch = bt.transfer_from_branch
			Left join branch tb on tb.id_branch = bt.transfer_to_branch
            Left join ret_design_master d on d.design_no = nt.design
            Left join ret_sub_design_master sm on sm.id_sub_design = nt.id_sub_design
            Left join ret_section sec on sec.id_section = nt.id_section
            left join employee emp on emp.id_employee= bt.create_by
		WHERE bt.id_nontag_item is not null AND bt.id_nontag_item > 0 AND bt.status != 3 and is_other_issue = 1 and  transfer_item_type =2 ".($filter['id_branch'] != '' ? ' and transfer_from_branch='.$filter['id_branch']: '')." ".($filter['id_product'] != '' ? ' and product='.$filter['id_product']: '')."
        ".($filter['dt_range'] != '' ? ' and date(bt.created_time) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($filter['id_product']!='' ? " and nt.product=".$filter['id_product']."" :'')."
        ".($filter['id_metal']!= 0 ? " and c.id_metal=".$filter['id_metal']."" :'')."
        ".($filter['id_design']!= 0 ? " and d.design_no=".$filter['id_design']."" :'')."
        ".($filter['id_sub_design']!= 0 ? " and sm.id_sub_design=".$filter['id_sub_design']."" :'')."
        ".($filter['report_type'] == 1 ? "GROUP BY bt.branch_transfer_id" : ($filter['group_by'] == 1 ?"GROUP BY c.id_metal":"GROUP BY sec.id_section"))."
        ");
		$result_2 = $sql_nt->result_array();
        $non_tag = $result_2;
        $acc_stock_other_issue = array();
         //Accounts Stock Other Issue
          $sql3 = $this->db->query("SELECT t.tag_code as tag_id,CONCAT(p.product_short_code ,' - ',p.product_name) as product,
           IFNULL(sum(d.gross_wt),0) as gross_wt,
			IFNULL(sum(d.net_wt),0) as net_wt,'' as karigar_name,
			IFNULL(sum( t.piece),0) as piece,m.metal as metal_name,
            ifnull(d.narration,'') as remark,c.id_metal, p.cat_id,t.id_section,
           br.name as from_branch,'' as to_branch,IFNULL(dm.design_name,'')as design,IFNULL(sm.sub_design_name,'')as sub_design,
          IFNULL(sec.section_name,'')as section,IFNULL(dia.dia_wt,'') as dia_wt,emp.firstname as emp_name
         FROM ret_acc_stock_process_details d
         LEFT JOIN ret_acc_stock_process a ON a.id_process = d.id_process
         LEFT JOIN ret_taging t ON t.tag_id=d.ref_no
         LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
         Left join ret_category c on c.id_ret_category = p.cat_id
         Left join metal m on m.id_metal = c.id_metal
         LEFT JOIN branch br ON br.id_branch = a.id_branch
         Left join ret_design_master dm on dm.design_no = t.design_id
         Left join ret_sub_design_master sm on sm.id_sub_design = t.id_sub_design
         Left join ret_section sec on sec.id_section = t.id_section
         left join employee emp on emp.id_employee= a.created_by
         LEFT JOIN (SELECT t.tag_id, sum(IFNULL(wt,0)) as dia_wt,
         c.id_metal,t.id_section
        FROM `ret_taging_stone` as retst
        LEFT JOIN ret_taging as t ON t.tag_id = retst.tag_id
        LEFT JOIN ret_acc_stock_process_details d ON d.ref_no = t.tag_id
        LEFT JOIN ret_acc_stock_process a ON a.id_process = d.id_process
        LEFT JOIN branch br ON br.id_branch = a.id_branch
        Left join ret_design_master dm on dm.design_no = t.design_id
        Left join ret_sub_design_master sm on sm.id_sub_design = t.id_sub_design
        LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
        LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
        Left join ret_section sec on sec.id_section = t.id_section
        LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
        Left join ret_category c on c.id_ret_category = p.cat_id
        Left join metal m on m.id_metal = c.id_metal
        WHERE st.stone_type = 1
        AND (date(a.date_add) BETWEEN '".$FromDt."' AND '".$ToDt."')
        ".($filter['id_product'] != '' ? ' and t.product_id='.$filter['id_product']: '')."
         ".($filter['id_design']!= 0 ? " and dm.design_no=".$filter['id_design']."" :'')."
         ".($filter['id_sub_design']!= 0 ? " and sm.id_sub_design=".$filter['id_sub_design']."" :'')."
         ".($filter['id_branch']!='' ? 'and br.id_branch='.$filter['id_branch'].'':'')."
         ".($filter['id_metal']!= 0 ? " and c.id_metal=".$filter['id_metal']."" :'')."
         ".($filter['id_section']!= 0 ? " and sec.id_section=".$filter['id_section']."" :'')."
         ".($filter['tag_id']!= '' ? " and t.tag_code ='".$filter['tag_id']."'" :'')."
        ".($filter['report_type'] == 1 ? "GROUP BY t.tag_id":($filter['group_by'] == 1 ?
         "GROUP BY c.id_metal" : "GROUP BY sec.id_section"))." )
          as dia ON ".($filter['report_type'] == 1 ? "dia.tag_id = t.tag_id":
          ($filter['group_by']==1 ? "dia.id_metal =  c.id_metal ":"dia.id_section = t.id_section"))."
         WHERE a.process_for = 2 AND (date(a.date_add) BETWEEN '".$FromDt."' AND '".$ToDt."')
         ".($filter['id_product'] != '' ? ' and t.product_id='.$filter['id_product']: '')."
         ".($filter['id_design']!= 0 ? " and dm.design_no=".$filter['id_design']."" :'')."
         ".($filter['id_sub_design']!= 0 ? " and sm.id_sub_design=".$filter['id_sub_design']."" :'')."
         ".($filter['id_branch']!='' ? 'and br.id_branch='.$filter['id_branch'].'':'')."
         ".($filter['id_metal']!= 0 ? " and c.id_metal=".$filter['id_metal']."" :'')."
         ".($filter['id_section']!= 0 ? " and sec.id_section=".$filter['id_section']."" :'')."
         ".($filter['tag_id']!= '' ? " and t.tag_code ='".$filter['tag_id']."'" :'')."
         ".($filter['report_type'] == 1 ? "GROUP BY t.tag_id" : ($filter['group_by'] == 1 ?"GROUP BY c.id_metal":"GROUP BY sec.id_section"))."
           ");
         //Accounts Stock Other Issue
        //  print_r($this->db->last_query());exit;
		$acc_stock_other_issue = $sql3->result_array();
        if($_POST['stock_type']=='1')
        {
            return $tag;
        }
        else if($_POST['stock_type']=='2')
        {
            return $non_tag;
        }
        else if($_POST['stock_type']=='3')
        {
            return $acc_stock_other_issue;
        }
        else
        {
            return array_merge($tag, $non_tag ,$acc_stock_other_issue);
        }
	}
	//Home Bill
	function get_home_bill_details($post)
	{
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $multiple_id_metal = implode(' , ', $post['id_metal']);
		if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $post['id_metal'];
		}
        $multiple_id_category = implode(' , ', $post['id_category']);
		if($multiple_id_category != '')
		{
			$id_category = $multiple_id_category;
		}else{
			$id_category = $post['id_category'];
		}
		$sql=$this->db->query("SELECT ifnull(pro.product_name, '-') as product_name,
			des.design_name,b.bill_no,b.bill_id,
			DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
			d.piece as piece,d.gross_wt as gross_wt,d.net_wt as net_wt,
			d.item_total_tax as item_total_tax,d.item_cost as item_cost,br.name as branch_name,IFNULL(st.st_price,0) as st_price,IFNULL(d.tag_id,'') as tag_id,
            m.metal as metal_name,c.name as category_name, IFNULL(sub.sub_design_name,'') as sub_design_name,cus.firstname,cus.mobile
            FROM ret_billing b
			LEFT JOIN ret_bill_details d on d.bill_id=b.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
			LEFT JOIN ret_estimation_items e on e.est_item_id=d.esti_item_id
			LEFT JOIN ret_product_master as pro ON pro.pro_id = d.product_id
			LEFT JOIN ret_design_master as des ON des.design_no = d.design_id
            LEFT JOIN ret_category c ON c.id_ret_category=pro.cat_id
            LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=e.id_sub_design
             LEFT JOIN metal m ON m.id_metal=c.id_metal
			LEFT JOIN branch br on br.id_branch=b.id_branch
			LEFT JOIN customer cus on cus.id_customer=b.bill_cus_id
			LEFT JOIN (select bill.bill_id,sum(s.price) as st_price
			From ret_billing bill
			LEFT JOIN ret_billing_item_stones s on s.bill_id=bill.bill_id) as st on st.bill_id=b.bill_id
			WHERE b.bill_status=1 and e.item_type=2 ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
			".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['id_product']!='' && $post['id_product']>0 ? " and d.product_id=".$post['id_product']."" :'')."
			".($post['id_design']!='' && $post['id_design']>0 ? " and d.design_id=".$post['id_design']."" :'')."
			".($post['id_sub_design']!='' && $post['id_sub_design']>0 ? " and e.id_sub_design=".$post['id_sub_design']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
            ".($id_category!='' && $id_category !='0' ? " and pro.cat_id in (".$id_category.") " :'' )."
            ");
		//print_r($this->db->last_query());exit;
		$item_details= $sql->result_array();
        foreach ($item_details as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
        }
		return $item_details;
	}
	//Home Bill
	function get_order_advance($post)
	{
	    	if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $filter_by = $_POST['filter_by'];
        if($filter_by== 'all'){
            $filter_by = ($filter_by  == '0' && $filter_by  == '1' && $filter_by == '5');
        }
        else if ($filter_by != ''){
            $filter_by = $_POST['filter_by'];
        }
		$sql=$this->db->query("SELECT SUM(a.advance_amount) as advance_amount,SUM(ifnull(om.net_wt,0)) as advance_weight,a.rate_per_gram,
        a.order_no,a.bill_id,c.firstname as cus_name,br.name as branch_name,c.mobile,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
        IF(a.is_adavnce_adjusted=0 and cus.order_status!=6,'Pending',(if(a.is_adavnce_adjusted=1,'Adjusted',(IF(cus.order_status=6,'Converted','-'))))) as bill_status
        FROM ret_billing b
        LEFT JOIN ret_billing_advance a on a.bill_id=b.bill_id
        LEFT JOIN customerorder cus on cus.id_customerorder = a.id_customerorder
        left join ret_bill_old_metal_sale_details om on om.old_metal_sale_id=a.old_metal_sale_id
        LEFT JOIN customer c on c.id_customer=b.bill_cus_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        WHERE b.bill_status=1 and a.bill_id IS NOT null
        ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
		".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
        ".($filter_by!='' && $filter_by <2 ? "and cus.order_status!=6 and a.is_adavnce_adjusted=".$filter_by."" :($filter_by=5 && $filter_by!='' ? "and cus.order_status=".$filter_by."" : ''))."
        GROUP BY a.bill_id");
        $item_details= $sql->result_array();
		return $item_details;
	}
	function get_est_details($post)
	{
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
	    $return_data=array();
	    	if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $multiple_id_product = implode(' , ', $post['id_product']);
		if($multiple_id_product != '')
		{
			$id_product = $multiple_id_product;
		}else{
			$id_product = $post['id_product'];
		}
        $multiple_id_design = implode(' , ', $post['id_design']);
		if($multiple_id_design != '')
		{
			$id_design = $multiple_id_design;
		}else{
			$id_design = $post['id_design'];
		}
        $multiple_id_sub_design = implode(' , ', $post['id_sub_design']);
		if($multiple_id_sub_design != '')
		{
			$id_sub_design = $multiple_id_sub_design;
		}else{
			$id_sub_design = $post['id_sub_design'];
		}
        $multiple_id_metal = implode(' , ', $post['id_metal']);
		if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $post['id_metal'];
		}
        $multiple_id_employee = implode(' , ', $post['id_employee']);
		if($multiple_id_employee != '')
		{
			$id_employee = $multiple_id_employee;
		}else{
			$id_employee = $post['id_employee'];
		}
	    $sql=$this->db->query("SELECT COUNT(est.est_item_id) as tot_est,IFNULL(emp.firstname,bill_item_emp.firstname) as emp_name,e.created_by,br.name as branch_name,
	    SUM(d.item_cost) as tot_bill_amount,count(d.piece) as piece,sum(d.gross_wt) as gross_wt,sum(d.net_wt) as net_wt,IFNULL(SUM(d.less_wt),0) as less_wt,IFNULL(emp.emp_code,bill_item_emp.emp_code) as emp_code,
	    IFNULL(stn.stn_wt,0) as dia_wt,IFNULL(des.design_name,'') as design_name, IFNULL(sub.sub_design_name,'') as sub_design_name,d.item_emp_id
        FROM ret_billing bill
        LEFT JOIN ret_bill_details d on d.bill_id=bill.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
        LEFT JOIN ret_estimation_items  est on est.est_item_id=d.esti_item_id
        LEFT JOIN ret_estimation  e on e.estimation_id=est.esti_id
        LEFT JOIN ret_product_master p on p.pro_id=d.product_id
        LEFT JOIN ret_design_master des on des.design_no=d.design_id
        LEFT JOIN ret_sub_design_master sub on sub.id_sub_design =d.id_sub_design
        LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=c.id_metal
        LEFT JOIN employee emp ON emp.id_employee=e.created_by
        LEFT JOIN employee bill_item_emp on bill_item_emp.id_employee = d.item_emp_id
        LEFT JOIN branch br on br.id_branch=e.id_branch
        LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
        LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.item_emp_id
                    FROM ret_billing_item_stones st
                    LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
                    LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
                    LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
                    LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
                    LEFT JOIN ret_estimation_items  est on est.est_item_id=dt.esti_item_id
                    LEFT JOIN ret_estimation e ON e.estimation_id=est.esti_id
                    WHERE b.bill_status=1 AND s.stone_type=1
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                    ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                    GROUP by dt.item_emp_id)  as stn ON stn.item_emp_id=d.item_emp_id
        WHERE bill.bill_id is not null and d.item_emp_id is not null
        ".($post['dt_range'] != '' ? 'and date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
		".($post['id_branch']!='' && $post['id_branch']>0 ? " and bill.id_branch=".$post['id_branch']."" :'')."
		".($post['id_ret_category']!='' && $post['id_ret_category']>0 ? " and p.cat_id=".$post['id_ret_category']."" :'')."
		".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
        ".($id_design!='' && $id_design !='0' ? " and d.design_id in (".$id_design.") " :'' )."
        ".($id_sub_design!='' && $id_sub_design !='0' ? " and d.id_sub_design in (".$id_sub_design.") " :'' )."
        ".($id_metal!='' && $id_metal >0 ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_employee!='' && $id_employee !='0' ? " and d.item_emp_id in (".$id_employee.") " :'' )."
        GROUP BY d.item_emp_id");
        // print_r($this->db->last_query());exit;
        $item_details= $sql->result_array();
        foreach($item_details as $items)
		{
			$return_data[]= array(
                'bill_wastage'=> $items['bill_wastage'] ,
                'bill_mc'=> $items['bill_mc'],
			    'tot_bill_amount'=> $items['tot_bill_amount'],
			    'emp_code'      => $items['emp_code'],
			    'branch_name'  => $items['branch_name'],
			    'tot_est'      => $items['tot_est'],
                'design_name'      => $items['design_name'],
                'sub_design_name'   => $items['sub_design_name'],
                'tot_est'      => $items['tot_est'],
                'piece'        => $items['piece'],
                'gross_wt'     => $items['gross_wt'],
                'less_wt'      => $items['less_wt'],
                'net_wt'       => $items['net_wt'],
                'dia_wt'       => $items['dia_wt'],
			    'emp_name'     => $items['emp_name'],
			    'created_by'   => $items['created_by'],
                'bill_details' => $this->get_sale_details($items['item_emp_id'],$FromDt,$ToDt,$post['id_branch'],$post['id_ret_category'],$id_product,$id_metal,$id_design,$id_sub_design,$id_employee),
			);
		}
        //print_r($return_data);exit;
		return $return_data;
	}
    function get_sale_details($id_emp,$FromDt,$ToDt,$id_branch,$id_ret_category,$id_product,$id_metal,$id_design,$id_sub_design,$id_employee)
    {
    $data = array();
    $sql=$this->db->query("SELECT sum(d.item_cost) as item_cost,d.esti_item_id,p.product_name,sum(d.piece) as piece,sum(d.gross_wt) as gross_wt,sum(d.net_wt) as net_wt,IFNULL(des.design_name,'') as design_name,e.esti_no,IFNULL(stn.stn_wt,0) as dia_wt,IFNULL(SUM(d.less_wt),0) as less_wt,
    d.wastage_percent,d.wastage_discount,IFNULL(ROUND(IF(d.calculation_based_on = 0, (d.gross_wt * d.wastage_percent) / 100,
    IF(d.calculation_based_on = 1, (d.net_wt * d.wastage_percent) / 100,
    IF(d.calculation_based_on = 2, (d.gross_wt * d.wastage_percent) / 100, 0))), 3), 0) AS wastage_weight,d.bill_discount,IFNULL(d.mc_value,'') as sales_mc_value,d.mc_type,IFNULL(d.rate_per_grm,'') as rate,d.calculation_based_on,d.bill_id,ifnull(t.tag_code,'') as tag_code,
    IFNULL(sub.sub_design_name,'') as sub_design_name
    FROM ret_bill_details d
    LEFT JOIN ret_billing b on b.bill_id = d.bill_id
    LEFT JOIN ret_estimation_items est on est.est_item_id=d.esti_item_id
    LEFT JOIN ret_estimation e on e.estimation_id=est.esti_id
    left join ret_taging t on t.tag_id=d.tag_id
    LEFT JOIN ret_product_master p on p.pro_id=d.product_id
    LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
    LEFT JOIN metal m ON m.id_metal=c.id_metal
    LEFT JOIN ret_design_master des on des.design_no=d.design_id
    LEFT JOIN ret_sub_design_master sub on sub.id_sub_design =d.id_sub_design
    LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id
            FROM ret_billing_item_stones st
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
            LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            LEFT JOIN ret_estimation_items est on est.est_item_id=dt.esti_item_id
            LEFT JOIN ret_estimation e ON e.estimation_id=est.esti_id
            WHERE b.bill_status=1 AND uom.uom_short_code ='CT'
            AND dt.item_emp_id = ".$id_emp."
            ".($FromDt != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
            GROUP by dt.product_id) as stn ON stn.product_id = d.product_id
    WHERE b.bill_id is not null and d.item_emp_id = ".$id_emp."
    ".($FromDt != '' && $ToDt!=''? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
    ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
    ".($id_metal!='' && $id_metal >0 ? " and c.id_metal in (".$id_metal.") " :'' )."
    ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id=".$id_ret_category."" :'')."
    ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
    ".($id_design!='' && $id_design !='0' ? " and d.design_id in (".$id_design.") " :'' )."
    ".($id_sub_design!='' && $id_sub_design !='0' ? " and d.id_sub_design in (".$id_sub_design.") " :'' )."
    ".($id_employee!='' && $id_employee !='0' ? " and d.item_emp_id in (".$id_employee.") " :'' )."
    GROUP BY d.item_emp_id
    ");
    // print_r($this->db->last_query());exit;
    $result = $sql->result_array();
    foreach($result as $items){
    $mc_wast_amt = 0;
    $wast_wgt_amt = 0;
    $mc_amount = 0;
    $item_wastge_wt =0;
    $wastage_discount = 0;
    $wastage_amount = 0;
    $mc_discount = 0;
    $watsge_wt = 0;
    $blc_discount = 0;
    if($items['wastage_percent']>0){
    $watsge_wt = ($items['wastage_percent']*$items['net_wt']/100);
    $wastage_amount = (($items['wastage_percent']*$items['net_wt']/100)*$items['rate']);
    }
    if($items['sales_mc_value']>0)
    {
    $mc_amount = ($items['mc_type']==1 ? $items['sales_mc_value'] :($items['sales_mc_value']*$items['gross_wt']));
    }
    if($wastage_amount < ($items['bill_discount'])) { $wastage_discount=$wastage_amount; $blc_discount=(($items['bill_discount']) - ($wastage_discount)); if($blc_discount> 0)
        {
        if($mc_amount > 0)
        {
        if(($mc_amount)>($blc_discount))
        {
        $mc_discount = ($blc_discount);
        }else
        {
        $mc_discount = (($mc_amount));
        }
        }
        else
        {
        $mc_discount = 0;
        }
        $total_applied_discount = (($mc_discount)+($wastage_discount));
        if($total_applied_discount < $items['bill_discount']) { $item_blc_discount=(($items['bill_discount'])-($total_applied_discount)); } } } else { if($wastage_amount> $items['bill_discount'])
            {
            $wastage_discount = $items['bill_discount'];
            }
            }
            if ($wastage_discount > 0) {
            $discount_weight = number_format(($wastage_discount / $items['rate']), 3, '.', '');
            $item_wastge_wt = number_format(($watsge_wt - $discount_weight), 3, '.', '');
            } else {
            $item_wastge_wt = $watsge_wt;
            }
            if ($item_wastge_wt > 0) {
            if ($items['calculation_based_on'] == 0) {
            $wastage_percent = (($item_wastge_wt * 100) / $items['gross_wt']);
            } else if ($items['calculation_based_on'] == 1 || $items['calculation_based_on'] == 2) {
            $wastage_percent = (($item_wastge_wt * 100) / $items['net_wt']);
            }
            } else {
            $wastage_percent = $items['wastage_percent'];
            }
            if ($mc_discount > 0) {
            $mc = $mc_amount - $mc_discount;
            }else{
            $mc = $mc_amount;
            }
            $items['bill_wastage'] = number_format($wastage_percent,2,'.','');
            $items['bill_wast_wt'] = number_format($item_wastge_wt,3,'.','');
            $items['watsge_wt'] = number_format($watsge_wt,3,'.','');
            $items['wastage_disc_amt'] = number_format($wastage_discount,2,'.','');
            $items['bill_mc'] = number_format($mc,2,'.','');
            $items['mc_disc_amt'] = number_format($mc_discount,2,'.','');
            $items['bill_no'] = $this->get_bill_no_format_detail($items['bill_id']);
            $data []=$items;
            }
            return $data;
            }
	function get_gift_voucher_details($post)
	{
        $this->checkGiftExpire();
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$return_data=array();
		if($post['report_type']==1)
		{
    		$sql = $this->db->query("SELECT g.id_gift_card,if(g.gift_for=1,e.firstname,c.firstname) as owned_by,g.code,g.amount,b.name as branch_name,date_format(g.date_add,'%d-%m-%Y') as date,
    		g.status,if(g.status=0,'Pending',if(g.status=3,'Expired',if(g.status=5,'Cancel',if(g.status=2,'Redeemed','')))) as gift_status
            FROM gift_card g
            LEFT JOIN customer c ON c.id_customer=g.purchased_by
            LEFT JOIN employee e ON e.id_employee=g.purchased_by
            LEFT JOIN branch b on b.id_branch=g.id_branch
            WHERE g.id_gift_card IS NOT NULL
    		".($post['dt_range'] != '' ? 'and date(g.date_add) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
    		".($post['id_branch']!='' && $post['id_branch']>0 ? " and g.id_branch=".$post['id_branch']."" :'')."
    		order by g.id_gift_card DESC");
    		$gift_details=$sql->result_array();
    		foreach($gift_details as $gift)
    		{
    		    $return_data[]=array(
    		                    'id_gift_card'  =>$gift['id_gift_card'],
    		                    'owned_by'      =>$gift['owned_by'],
    		                    'code'          =>$gift['code'],
    		                    'amount'        =>$gift['amount'],
    		                    'branch_name'   =>$gift['branch_name'],
    		                    'date'          =>$gift['date'],
    		                    'status'        =>$gift['status'],
    		                    'gift_status'   =>$gift['gift_status'],
    		                 );
    		}
	    }
	    else
	    {
	        $sql = $this->db->query("SELECT d.gift_voucher_amt,d.bill_id,if(g.gift_for=1,e.firstname,c.firstname) as owned_by,
	        br.name as branch_name,date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_no,g.code,b.bill_id
	        FROM ret_billing_gift_voucher_details d
	        LEFT JOIN ret_billing b on b.bill_id=d.bill_id
	        LEFT JOIN gift_card g on g.id_gift_card=d.voucher_no
	        LEFT JOIN customer c ON c.id_customer=g.purchased_by
            LEFT JOIN employee e ON e.id_employee=g.purchased_by
            LEFT JOIN branch br on br.id_branch=b.id_branch
            where b.bill_status=1
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
    		".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ");
            //print_r($this->db->last_query());exit;
    		$return_data=$sql->result_array();
	    }
		return $return_data;
	}
	function checkGiftExpire()
	{
	        $from_date = strtotime(date("Y-m-d"));
	        $sql = $this->db->query("SELECT g.id_gift_card,if(g.gift_for=1,e.firstname,c.firstname) as owned_by,g.code,g.amount,b.name as branch_name,date_format(g.date_add,'%d-%m-%Y') as date,
    		g.status,if(g.status=0,'Pending',if(g.status=3,'Expired',if(g.status=5,'Cancel',''))) as gift_status,date_format(g.valid_to,'%Y-%m-%d') as valid_to
            FROM gift_card g
            LEFT JOIN customer c ON c.id_customer=g.purchased_by
            LEFT JOIN employee e ON e.id_employee=g.purchased_by
            LEFT JOIN branch b on b.id_branch=g.id_branch
            WHERE g.status=0 order by g.id_gift_card DESC");
    		$gift_details=$sql->result_array();
    		foreach($gift_details as $items)
    		{
    		     $to_date = strtotime($items['valid_to']);
    		      if($from_date>$to_date)
    		      {
    		          $data['status']=3;
    		          $this->updateData($data,'id_gift_card',$items['id_gift_card'],'gift_card');
    		      }
    		}
	}
	function order_status_message()
	{
	    $sql=$this->db->query("select * from order_status_message");
	    return $sql->result_array();
	}
	/*function order_status($data)
	{
        $FromDt     =$this->input->post('from_date');
		$ToDt     =$this->input->post('to_date');
		$sql_1=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,c.order_no,b.name as branch_name,od.weight,od.wast_percent,od.mc,od.totalitems,od.size,p.product_name,d.design_name,m.order_status,
	    date_format(c.order_date,'%d-%m-%Y') as order_date,bill_det.tag_id,IFNULL(bill.bill_no,'') as bill_no,bill.bill_id,m.color,
	    date_format(od.delivered_date,'%d-%m-%Y') as delivered_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type,
	    date_format(od.cus_due_date,'%d-%m-%Y') as cus_due_date,od.id_orderdetails,
	    IFNULL(s.sub_design_name,'') as sub_design_name,IFNULL(tag.tag_code,'') as tag_code,IFNULL(purdet.karigar_name,'') as karigar_name,
	    IFNULL(purdet.smith_due_date,'') as smith_due_date,IFNULL(purdet.pur_no,'') as pur_no,IFNULL(purdet.purord_id,'') as purord_id,
        ifnull(od.less_wt,'') as less_wt,ifnull(od.net_wt,'') as net_wt,ifnull(od.stn_amt,'')as stn_amt,ifnull(od.description,'') as description,COALESCE(rbill.advance_amount, 0) as advance_amount,
		COALESCE(adjbill.advance_amount, 0) as advance_adj_amount, e.firstname as emp_name, e.id_employee
		FROM customerorderdetails od
        LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
        LEFT JOIN ret_product_master p ON p.pro_id=od.id_product
        LEFT JOIN ret_design_master d ON d.design_no=od.design_no
        LEFT JOIN ret_sub_design_master s ON s.id_sub_design=od.id_sub_design
        LEFT JOIN customer cus ON cus.id_customer=c.order_to
        LEFT JOIN branch b ON b.id_branch=c.order_from
        LEFT JOIN order_status_message m ON m.id_order_msg=od.orderstatus
        LEFT JOIN ret_taging tag on tag.id_orderdetails=od.id_orderdetails
        LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id and bill.bill_status = 1
        LEFT join employee e on e.id_employee=c.order_taken_by
		LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
        FROM ret_billing_advance rb
		LEFT JOIN ret_billing b ON b.bill_id = rb.bill_id
		where b.bill_status = 1
        Group by rb.id_customerorder) as rbill ON rbill.id_customerorder = c.id_customerorder
		LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
        FROM ret_billing_advance rb
		LEFT JOIN ret_billing b ON b.bill_id = rb.adjusted_bill_id
		where b.bill_status = 1
        Group by rb.id_customerorder) as adjbill ON adjbill.id_customerorder = c.id_customerorder
        LEFT JOIN(SELECT det.id_customerorder,det.id_product,det.design_no,det.id_sub_design,k.firstname as karigar_name,
                date_format(det.smith_due_date,'%d-%m-%Y') as smith_due_date,purord.cus_ord_ref,IFNULL(purord.pur_no,'') as pur_no,det.id_customerorder as purord_id
                 FROM customerorderdetails det
				 LEFT JOIN customerorder purord ON purord.id_customerorder = det.id_customerorder
                 LEFT JOIN joborder j ON j.id_order = det.id_orderdetails
                 LEFT JOIN ret_karigar k ON k.id_karigar = j.id_vendor) as purdet ON purdet.cus_ord_ref = c.id_customerorder AND od.id_product = purdet.id_product AND od.design_no = purdet.design_no AND od.id_sub_design = purdet.id_sub_design
        where c.order_type=2 AND c.pur_no IS NULL AND
        ".($data['filter_by']==1 ? "date(c.order_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' " : ($data['filter_by']==2 ? " date(od.delivered_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' " : ($data['filter_by']==3 ?   " date(od.cus_due_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' "  : ($data['filter_by']==4 ? " date(od.smith_due_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' " : ($data['filter_by']==7 ?   "date(od.deliverydate) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' "  :($data['filter_by']==5 ? 'date(od.cus_due_date)<'."'date('Y-m-d',strtotime($FromDt))'" :($data['filter_by']==6 ? "date(od.smith_due_date)<'".date('Y-m-d',strtotime($FromDt))."'"  :''))) )  ) ) )."
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and c.order_from=".$data['id_branch']."" :'')."
        ".($data['orderstatus']!=''  ? ($data['filter_by']==3 || $data['filter_by']==5 ? " and od.orderstatus<=".$data['orderstatus']."" : " and od.orderstatus=".$data['orderstatus']."" ) :'')."
        GROUP BY od.id_orderdetails
        order by c.id_customerorder DESC");
        //print_r($this->db->last_query());exit;
        $result =  $sql_1->result_array();
		$orderNumbers = array();
		foreach($result as $gkey =>$items)
		{
			$orderNo = $items['order_no'];
            if (isset($orderNumbers[$orderNo])) {
                $items['advance_amount'] = 0;
                $items['advance_adj_amount'] = 0;
            } else {
                $orderNumbers[$orderNo] = '';
            }
		    $items['image_details']=$this->get_order_images($items['id_orderdetails']);
		    $returnData[]=$items;
		}
		return $returnData;
	}*/
	function order_status($data)
	{
        $returnData = array();
        $FromDt     =$this->input->post('from_date');
		$ToDt     =$this->input->post('to_date');
        if($FromDt == "" && $ToDt == "") {
            $FromDt = isset($data['from_date']) ? $data['from_date'] : "";
            $ToDt = isset($data['to_date']) ? $data['to_date'] : "";
        }
        if($FromDt == "" || $ToDt == "") {
            $data['filter_by'] = 0;
        }
        $order_no = isset($data['order_no']) ? $data['order_no'] : "";
        $limit = "";
        if($order_no == "") {
            $page_no = isset($data['page_no']) && $data['page_no'] > 0 ? $data['page_no'] : 0;
            if($page_no == 1) {
                $limit = " LIMIT 10";
            } else if($page_no > 1) {
                $offset = ($page_no -1) * 10;
                $limit = " LIMIT 10 OFFSET ".$offset;
            }
        }
		$sql_1=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,c.order_no,b.name as branch_name,od.weight,od.wast_percent,od.mc,od.totalitems,od.size,p.product_name,d.design_name,m.order_status,
	    date_format(c.order_date,'%d-%m-%Y') as order_date,bill_det.tag_id,IFNULL(bill.bill_no,'') as bill_no,bill.bill_id,m.color,
	    date_format(od.delivered_date,'%d-%m-%Y') as delivered_date,if(c.order_for=2,if(od.ortertype = 5,'Tag Reserve','Customer Order'),'Stock Order') as order_type,
	    date_format(od.cus_due_date,'%d-%m-%Y') as cus_due_date,od.id_orderdetails,
	    IFNULL(s.sub_design_name,'') as sub_design_name,IFNULL(tag.tag_code,'') as tag_code,IFNULL(purdet.karigar_name,'') as karigar_name,
	    IFNULL(purdet.smith_due_date,'') as smith_due_date,IFNULL(purdet.pur_no,'') as pur_no,IFNULL(purdet.purord_id,'') as purord_id,
        ifnull(od.less_wt,'') as less_wt,ifnull(od.net_wt,'') as net_wt,ifnull(od.stn_amt,'')as stn_amt,ifnull(od.description,'') as description,COALESCE(rbill.advance_amount, 0) as advance_amount,
		COALESCE(adjbill.advance_amount, 0) as advance_adj_amount, c.order_taken_by as id_employee,round(IFNULL(ordDia.stn_wt,0),3) as dia_wt,IF(c.rate_type=1,'Order Rate',IF(c.rate_type=2,'Deliver Rate','')) as rate_type, od.less_wt, od.id_mc_type as mc_type, IF(od.id_mc_type = 2, od.mc * od.weight, od.mc * od.totalitems) as total_mc, (od.net_wt * (od.wast_percent/100)) as wast_wgt, IF(c.added_through = 2, 'App', 'Admin') AS created_through, IFNULL(e.firstname, '') AS emp_name,od.assigned_by,od.assigned_on
		FROM customerorderdetails od
        LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
        LEFT JOIN ret_product_master p ON p.pro_id=od.id_product
        LEFT JOIN ret_design_master d ON d.design_no=od.design_no
        LEFT JOIN ret_sub_design_master s ON s.id_sub_design=od.id_sub_design
        LEFT JOIN customer cus ON cus.id_customer=c.order_to
        LEFT JOIN branch b ON b.id_branch=c.order_from
        LEFT JOIN order_status_message m ON m.id_order_msg=od.orderstatus
        LEFT JOIN ret_taging tag on tag.id_orderdetails=od.id_orderdetails
        LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id and bill.bill_status = 1
        LEFT join employee e on e.id_employee=c.order_taken_by
		LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
        FROM ret_billing_advance rb
		LEFT JOIN ret_billing b ON b.bill_id = rb.bill_id
		where b.bill_status = 1
        Group by rb.id_customerorder) as rbill ON rbill.id_customerorder = c.id_customerorder
		LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
        FROM ret_billing_advance rb
		LEFT JOIN ret_billing b ON b.bill_id = rb.adjusted_bill_id
		where b.bill_status = 1
        Group by rb.id_customerorder) as adjbill ON adjbill.id_customerorder = c.id_customerorder
        LEFT JOIN(SELECT co.id_customerorder,IFNULL(SUM(os.wt),0) as stn_wt
        FROM ret_order_item_stones os
        LEFT JOIN ret_stone st ON st.stone_id = os.stone_id
        LEFT JOIN customerorderdetails od on od.id_orderdetails = os.order_item_id
        LEFT JOIN customerorder co on co.id_customerorder = od.id_customerorder
        WHERE st.stone_type =1
        GROUP BY co.id_customerorder) as ordDia on ordDia.id_customerorder = c.id_customerorder
        LEFT JOIN(SELECT det.id_customerorder,k.id_karigar,det.id_product,det.design_no,det.id_sub_design,k.firstname as karigar_name,
                date_format(det.smith_due_date,'%d-%m-%Y') as smith_due_date,purord.cus_ord_ref,IFNULL(purord.pur_no,'') as pur_no,det.id_customerorder as purord_id
                 FROM customerorderdetails det
				 LEFT JOIN customerorder purord ON purord.id_customerorder = det.id_customerorder
                 LEFT JOIN ret_karigar k ON k.id_karigar = det.id_karigar
                 WHERE det.id_customerorder is not null
                 ".($data['id_karigar']!='' && $data['id_karigar']>0 ? " and k.id_karigar=".$data['id_karigar']."" : '' ).") as purdet ON purdet.cus_ord_ref = c.id_customerorder AND od.id_product = purdet.id_product AND od.design_no = purdet.design_no AND od.id_sub_design = purdet.id_sub_design
        where (c.order_type=2 OR c.order_type=5) AND c.pur_no IS NULL
        ".($data['id_karigar']!='' && $data['id_karigar']>0 ? " and purdet.id_karigar=".$data['id_karigar']."" : '' )."
        ".($data['filter_by']==1 ? " and date(c.order_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' " : ($data['filter_by']==2 ? "date(od.delivered_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' " : ($data['filter_by']==3 ?   "date(od.cus_due_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' "  : ($data['filter_by']==4 ? "date(od.smith_due_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' " : ($data['filter_by']==7 ?   "date(od.deliverydate) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."' "  :($data['filter_by']==5 ? 'date(od.cus_due_date)<'."'date('Y-m-d',strtotime($FromDt))'" :($data['filter_by']==6 ? "date(od.smith_due_date)<'".date('Y-m-d',strtotime($FromDt))."'"  :''))) )  ) ) )."
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and c.order_from=".$data['id_branch']."" :'')."
        ".($data['id_employee']!='' && $data['id_employee']>0 ? " and c.order_taken_by=".$data['id_employee']."" :'')."
        ".($data['orderstatus']!=''  ? ($data['filter_by']==3 || $data['filter_by']==5 ? " and od.orderstatus<=".$data['orderstatus']."" : " and od.orderstatus=".$data['orderstatus']."" ) :'')."
        ".($data['id_product']!='' && $data['id_product']>0 ? " and p.pro_id=".$data['id_product']."" :'')."
        ".($data['id_design']!='' && $data['id_design']>0 ? " and s.id_sub_design=".$data['id_design']."" :'')."
        ".($data['id_sub_design']!='' && $data['id_sub_design']>0 ? " and c.order_from=".$data['id_sub_design']."" :'')."
        ".($order_no !='' ? " and c.order_no = '".$order_no."'" :'')."
        GROUP BY od.id_orderdetails
        order by c.id_customerorder DESC".$limit
    );
        //print_r($this->db->last_query());exit;
        $result =  $sql_1->result_array();
		$orderNumbers = array();
		foreach($result as $gkey =>$items)
		{
			$orderNo = $items['order_no'];
            if (isset($orderNumbers[$orderNo])) {
                $items['advance_amount'] = 0;
                $items['advance_adj_amount'] = 0;
            } else {
                $orderNumbers[$orderNo] = '';
            }
		    $image_details=$this->get_order_images($items['id_orderdetails']);
            $items['default_image']='';
            //echo "<pre>";print_r($items['image_details']);
            if(count($image_details) > 0) {
                foreach($image_details as $imgdetails) {
                    $imgPath = base_url()."/assets/img/orders/".$imgdetails['image'];
                    if ($item['is_default'] == 1) {
                        $items['default_image'] = $imgPath;
                    }
                    $imgdetails['image'] = $imgPath;
                    $items['image_details'][]=$imgdetails;
                }
                if($items['default_image'] == '') {
                    $imgdetails = $image_details[0];
                    $items['default_image'] = base_url()."assets/img/orders/".$imgdetails['image'];
                }
            }
            else
            {
                $items['image_details']=[];
            }
            $items['stonedetail']=$this->get_order_stones($items['id_orderdetails'], 1);
            $items['diadetail']=$this->get_order_stones($items['id_orderdetails'], 2);
		    $returnData[]=$items;
		}
		return $returnData;
	}
	function get_order_images($id_orderdetails)
    {
        $sql = $this->db->query("SELECT * FROM `customer_order_image` where id_orderdetails=".$id_orderdetails."");
        return $sql->result_array();
    }
    function get_order_stones($id_orderdetails, $type = "") {
        // 1 -> Stone , 2 -> Diamond
        $sql=$this->db->query("SELECT os.is_apply_in_lwt,os.stone_type,os.stone_id,
        os.pieces,os.wt,os.uom_id,
        os.price as amount,os.stone_cal_type,os.rate_per_gram, uom.uom_name, uom.uom_short_code, st.stone_name, st.stone_code
        FROM ret_order_item_stones os
        LEFT JOIN ret_stone st ON st.stone_id = os.stone_id
        LEFT JOIN ret_uom uom ON uom.uom_id = os.uom_id
        where os.order_item_id=".$id_orderdetails."
        ".($type == 2 ? 'AND st.stone_type = 1' : 'AND st.stone_type != 1')."
        ");
        return $sql->result_array();
    }
	function get_village()
    {
		$sql="Select *From village";
		return $data = $this->db->query($sql)->result_array();
	}
	//Monthly sales  report
	function monthly_sales($data)
	{
	    $return_data=array();
	    if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
	    $sql=$this->db->query("select b.id_branch,b.name from branch b");
        $items=$sql->result_array();
        //print_r($this->db->last_query());exit;
        foreach($items as $item)
        {
            $gold_sales=$this->get_sales_details_metal($item['id_branch'],1,$FromDt,$ToDt);
            $silver_sales=$this->get_sales_details_metal($item['id_branch'],2,$FromDt,$ToDt);
            $return_data[]=array(
                                'starting_bill'     =>$this->get_min_bill($item['id_branch'],$FromDt,$ToDt),
                                'ending_bill'       =>$this->get_max_bill($item['id_branch'],$FromDt,$ToDt),
                                'gold_sales'        =>$gold_sales['sale_wt'].'/'.$gold_sales['sale_amount'],
                                'silver_sales'      =>$silver_sales['sale_wt'].'/'.$silver_sales['sale_amount'],
                                'pur_starting_bill' =>$this->get_pur_min_bill($item['id_branch'],$FromDt,$ToDt),
                                'pur_ending_bill'   =>$this->get_pur_max_bill($item['id_branch'],$FromDt,$ToDt),
                                'branch_name'       =>$item['name'],
                                );
        }
	    return $return_data;
	}
	function get_sales_details_metal($id_branch,$id_metal,$FromDt,$ToDt)
	{
	    $sql=$this->db->query("SELECT IFNULL(SUM(d.net_wt),0) as sale_wt,IFNULL(SUM(d.item_cost),0) as sale_amount
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=c.id_metal
        LEFT JOIN branch  br ON br.id_branch=b.id_branch
        WHERE m.id_metal is not null AND b.bill_status=1 AND m.id_metal=".$id_metal."
        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
        ".($FromDt != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ");
        return $sql->row_array();;
	}
	function get_pur_min_bill($id_branch,$FromDt,$ToDt)
	{
	   $sql=$this->db->query("SELECT b.pur_ref_no
        FROM ret_billing b
        WHERE b.pur_ref_no IS NOT NULL AND b.pur_ref_no!=''
        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
        ".($FromDt != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ORDER by b.bill_id ASC LIMIT 1");
        return $sql->row()->pur_ref_no;
	}
    function get_pur_max_bill($id_branch,$FromDt,$ToDt)
	{
	    $sql=$this->db->query("SELECT b.pur_ref_no
        FROM ret_billing b
        Where b.pur_ref_no IS NOT NULL AND b.pur_ref_no!=''
        ".($FromDt != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
         ORDER by b.bill_id DESC LIMIT 1");
        return $sql->row()->pur_ref_no;
	}
	function get_max_bill($id_branch,$FromDt,$ToDt)
	{
	    $sql=$this->db->query("SELECT b.sales_ref_no
        FROM ret_billing b
        Where b.sales_ref_no IS NOT NULL AND b.sales_ref_no!=''
        ".($FromDt != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
         ORDER by b.bill_id DESC LIMIT 1");
        return $sql->row()->sales_ref_no;
	}
	function get_min_bill($id_branch,$FromDt,$ToDt)
	{
	    $sql=$this->db->query("SELECT b.sales_ref_no,b.bill_no,b.bill_id
        FROM ret_billing b
        Where b.sales_ref_no IS NOT NULL AND b.sales_ref_no!=''
        ".($FromDt != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
        ORDER by b.bill_id ASC LIMIT 1");
        return $sql->row()->sales_ref_no;
	}
	//Monthly sales  report
	//old metal analyse
    function get_old_metal_type()
    {
        $sql=$this->db->query("SELECT * FROM ret_old_metal_type");
        return $sql->result_array();
    }
	function getOldMetalAnalyse($data){
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
		$old_matel_detail = array();
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $metal_type=explode(",",$data['old_metal_type']);
        if(sizeof($metal_type)>1)
        {
            $id_old_metal=str_replace(","," or bill_old.id_old_metal_type =",$data['old_metal_type']);
            $old_metal_type=" and (bill_old.id_old_metal_type=".$id_old_metal.")";
        }
        else
        {
            $old_metal_type=" and bill_old.id_old_metal_type=".$data['old_metal_type'];
        }
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        //print_r($old_metal_type);exit;
		$old_matel_query = $this->db->query("SELECT
						   concat(c.firstname,' ',if(c.lastname!=NULL,c.lastname,'')) as customer,
						   bill_no,bill_old.gross_wt,
						   ifnull(bill_old.dust_wt,0.000) as dust_wt,ifnull(bill_old.stone_wt,0.000) as stone_wt,
						   (ifnull(bill_old.gross_wt,0.000) - ifnull(bill_old.stone_wt,0.000) - ifnull(bill_old.dust_wt,0.000)) as pure_wt,
						   ifnull(bill_old.wast_wt,0.000) as wast_wt,
						   ifnull(bill_old.net_wt,0.000) as net_wt,
						   round((ifnull(bill_old.dust_wt,0.000) - ifnull(bill_old.stone_wt,0.000)),3) as less_wt,
                           if(d.item_type = 1, 'Ornament', if(d.item_type = 2, 'Coin', if(d.item_type = 3, 'Bar',''))) as receiveditem,if(bill_old.metal_type =1,'Gold','Silver') as metal_type,
						   bill_old.stone_wt, bill_old.dust_wt,d.wastage_percent,DATE_FORMAT(bill_date,'%d-%m-%Y') as bill_date,
						   rate_per_grm, rate,
						   '' as purity, if(bill_old.purpose=1,'Sale','Purchase' ) as purpose,
						   b.name as branch,IFNULL(d.est_id,'-') as est_id,emp.firstname as emp_name,e.esti_no,bill.bill_id,t.metal_type as old_metal_type_name,t.id_metal_type as old_metal_type,
						   IFNULL(bill_old.old_metal_rate,0) as goldrate_24ct,IFNULL(stn.dia_wt,0) as dia_wt,ifnull(bill_old.touch,0.00) as touch
						   FROM ret_bill_old_metal_sale_details as bill_old
							LEFT JOIN ret_billing as bill ON bill.bill_id = bill_old.bill_id
                            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
							LEFT JOIN ret_estimation_old_metal_sale_details d on d.old_metal_sale_id=bill_old.esti_old_metal_sale_id
							LEFT JOIN ret_old_metal_type t on t.id_metal_type=bill_old.id_old_metal_type
							LEFT JOIN customer c ON c.id_customer = bill.bill_cus_id
							LEFT JOIN branch as b ON b.id_branch = bill.id_branch
							left join ret_estimation e on e.estimation_id=d.est_id
							left join employee emp on emp.id_employee=e.created_by
                            LEFT JOIN (SELECT IFNULL(SUM(st.wt),0) as dia_wt,st.old_metal_sale_id,s.metal_type,s.bill_id
							FROM ret_billing_item_stones st
							LEFT JOIN ret_bill_old_metal_sale_details s ON s.old_metal_sale_id = st.old_metal_sale_id
							LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
							LEFT JOIN ret_uom m ON m.uom_id = stnd.uom_id
							LEFT JOIN ret_stone_type t ON t.id_stone_type = stnd.stone_type
							WHERE t.stone_type=1 and s.old_metal_sale_id IS NOT NULL
							GROUP by s.bill_id) as stn ON stn.bill_id = bill_old.bill_id
						    WHERE bill.bill_id is not null and bill.bill_status=1
						    ".($branch!='' && $branch !='0' ? " and bill.id_branch in (".$branch.") " :'' )."
                            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
						   ".($data['metal'] != '' && $data['metal']>0 ? ' and bill_old.metal_type ='.$data['metal']: '')."
						   ".($data['old_metal_type'] != '' ? "$old_metal_type" : '')."
						   ".($data['dt_range'] != '' ? ' and date(bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." ORDER BY metal_type,bill_old.bill_id");
		//print_r($this->db->last_query());exit;
		$result = $old_matel_query->result_array();
        foreach ($result as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
        }
		foreach($result as $r){
			$old_matel_detail['item_details'][$r['old_metal_type_name']][] = $r;
		}
		$old_matel_detail['metal_rate']=$this->get_metal_rates();
		return $old_matel_detail;
	}
	function get_metal_rates()
	{
	    $sql=$this->db->query("SELECT * FROM metal_rates ORDER by id_metalrates DESC LIMIT 1");
	    return $sql->row_array();
	}
    //old metal analyse
    //Village wise sales
    function getActiveZone($id_branch)
    {
        $sql=$this->db->query("SELECT * from village_zone ".($id_branch!='' ? " where id_branch=".$id_branch."" :'')."");
        return $sql->result_array();
    }
    function get_design_wise_sales_details($data,$from_weight,$to_weight)
    {
        $sql=$this->db->query("SELECT IFNULL(p.product_name,'') as product_name,IFNULL(SUM(d.piece),0) as total_pcs,IFNULL(SUM(d.gross_wt),0) as total_gwt,IFNULL(SUM(d.net_wt),0) as total_nwt,IFNULL(SUM(d.item_cost),0) as total_cost,IFNULL(v.village_name,'') as village_name, v.id_village,
        d.product_id,des.design_name
        FROM village v
        LEFT JOIN customer c ON c.id_village=v.id_village
        LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_design_master des ON des.design_no=d.design_id
        WHERE b.bill_status=1 and d.product_id is not null
        AND d.net_wt BETWEEN ".$from_weight." AND ".$to_weight."
         ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_product']!='' ? " and d.product_id=".$data['id_product']."" :'')."
         ".($data['id_village']!='' ? " and c.id_village=".$data['id_village']."" :'')."
         ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        GROUP by d.design_id
        ORDER by p.pro_id");
        //print_r($this->db->last_query());exit;
        $result= $sql->result_array();
        return $result;
    }
    function cusSalesDetails($id_village,$FromDt,$ToDt)
    {
        $return_data=array();
        $sql=$this->db->query("SELECT c.firstname as cus_name,c.mobile,c.id_village,v.village_name,br.name as branch_name,IFNULL(z.name,'') as zone_name,
        IFNULL(s.item_cost,0) as item_cost,g.gold,s.silver,IFNULL(g.tot_gross_wt,0) as sales_gold_gwt,IFNULL(s.tot_gross_wt,0) as sales_silver_gwt,
        IFNULL(old.total_gwt,0) as old_gold_wt,IFNULL(old_s.total_gwt,0) as old_silver_wt,IFNULL(ret_g.total_gwt,0) as return_gold,IFNULL(ret_s.total_gwt,0) as return_silver,
        IFNULL(mrp.item_cost,0) as mrp_cost
        FROM ret_billing b
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT join village v on v.id_village=c.id_village
        LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN village_zone z on z.id_zone=v.id_zone
        LEFT join(SELECT c.id_village,b.bill_cus_id,sum(d.gross_wt) as tot_gross_wt,(d.item_cost) as item_cost,v.village_name,m.metal as gold
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=cat.id_metal
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        WHERE d.bill_det_id is NOT null and m.id_metal=1 and b.bill_status=1 and b.bill_id is not null
        ".($FromDt != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
        group by b.bill_cus_id) as g ON g.bill_cus_id=b.bill_cus_id
        LEFT join(SELECT c.id_village,b.bill_cus_id,sum(d.item_cost) as item_cost,sum(d.gross_wt) as tot_gross_wt,v.village_name,m.metal as silver
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=cat.id_metal
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        WHERE d.bill_det_id is NOT null and m.id_metal=2 and b.bill_status=1 and b.bill_id is not null
        ".($FromDt != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
        group by b.bill_cus_id) as s ON s.bill_cus_id=b.bill_cus_id
        LEFT JOIN(SELECT b.bill_cus_id,sum(s.gross_wt) as total_gwt,m.metal,c.id_village
        FROM ret_billing b
        LEFT JOIN ret_bill_old_metal_sale_details s ON s.bill_id=b.bill_id
        LEFT JOIN metal m ON m.id_metal=s.metal_type
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        WHERE s.metal_type=1 AND s.old_metal_sale_id is not null and b.bill_status=1 and b.bill_id is not null
        ".($FromDt != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
        group by b.bill_cus_id) as old on old.bill_cus_id=b.bill_cus_id
        LEFT JOIN(SELECT b.bill_cus_id,sum(s.gross_wt) as total_gwt,m.metal,c.id_village
        FROM ret_billing b
        LEFT JOIN ret_bill_old_metal_sale_details s ON s.bill_id=b.bill_id
        LEFT JOIN metal m ON m.id_metal=s.metal_type
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        WHERE s.metal_type=2 AND s.old_metal_sale_id is not null and b.bill_status=1 and b.bill_id is not null
        ".($FromDt != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
        group by b.bill_cus_id) as old_s on old_s.bill_cus_id=b.bill_cus_id
        LEFT JOIN(SELECT b.bill_cus_id,SUM(d.gross_wt) as total_gwt,m.metal,c.id_village
        FROM ret_billing b
        LEFT JOIN ret_bill_return_details r ON r.bill_id=b.bill_id
        LEFT JOIN ret_bill_details d on d.bill_det_id=r.ret_bill_det_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=cat.id_metal
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        WHERE m.id_metal=1 and b.bill_cus_id IS not null and d.status=2
        ".($data['dt_range'] != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
        group by b.bill_cus_id) as ret_g on ret_g.bill_cus_id=b.bill_cus_id
        LEFT JOIN(SELECT b.bill_cus_id,SUM(d.gross_wt) as total_gwt,m.metal,c.id_village
        FROM ret_billing b
        LEFT JOIN ret_bill_return_details r ON r.bill_id=b.bill_id
        LEFT JOIN ret_bill_details d on d.bill_det_id=r.ret_bill_det_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=cat.id_metal
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        WHERE m.id_metal=2 and b.bill_cus_id IS not null and d.status=2
        ".($data['dt_range'] != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
        group by b.bill_cus_id) as ret_s on ret_s.bill_cus_id=b.bill_cus_id
        LEFT join(SELECT c.id_village,b.bill_cus_id,sum(d.gross_wt) as tot_gross_wt,SUM(d.item_cost) as item_cost,v.village_name,m.metal as gold
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=cat.id_metal
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        WHERE d.bill_det_id is NOT null and p.sales_mode=1 and b.bill_status=1
        ".($data['dt_range'] != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
       ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
        group by b.bill_cus_id) as mrp ON mrp.bill_cus_id=b.bill_cus_id
        WHERE b.bill_cus_id IS not null and b.bill_status=1 and b.bill_id is not null
        ".($FromDt != '' ? ' and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
        group by b.bill_cus_id");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
		return $result;
    }
    function get_scheme_account($data)
    {
        if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $sql=$this->db->query("SELECT c.id_customer,c.firstname as cus_name,c.mobile,IFNULL(v.village_name,'') as village_name,IFNULL(br.name,'') as branch_name,IFNULL(z.name,'') as zone_name,IFNULL(s.tot_acc,0) as tot_acc,IFNULL(bill.tot_bill,0) as tot_bill,IFNULL(act.active_acc,0) as active_acc,IFNULL(closed.closed_acc,0) as closed_acc
        FROM customer c
        LEFT JOIN village v ON v.id_village=c.id_village
        LEFT JOIN village_zone z ON z.id_zone=v.id_zone
        LEFT JOIN branch br ON br.id_branch=c.id_branch
        LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
        LEFT JOIN(SELECT sa.id_customer,COUNT(sa.id_scheme_account) as tot_acc FROM scheme_account sa LEFT JOIN customer c ON c.id_customer=sa.id_customer GROUP by sa.id_customer) as s ON s.id_customer=c.id_customer
        LEFT JOIN(SELECT sa.id_customer,COUNT(sa.id_scheme_account) as active_acc FROM scheme_account sa LEFT JOIN customer c ON c.id_customer=sa.id_customer where sa.active=1 GROUP by sa.id_customer) as act ON act.id_customer=c.id_customer
        LEFT JOIN(SELECT sa.id_customer,COUNT(sa.id_scheme_account) as closed_acc FROM scheme_account sa LEFT JOIN customer c ON c.id_customer=sa.id_customer where sa.active=0 and sa.is_closed=1 GROUP by sa.id_customer) as closed ON closed.id_customer=c.id_customer
        LEFT JOIN (SELECT b.bill_cus_id,COUNT(b.bill_cus_id) as tot_bill FROM ret_billing b LEFT JOIN customer c ON c.id_customer=b.bill_cus_id GROUP by b.bill_cus_id) as bill ON bill.bill_cus_id=c.id_customer
        where c.id_customer is not null
        ".($data['dt_range'] != '' ? ' and date(c.date_add) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? " and c.id_branch=".$data['id_branch']."" : '')."
        ".($data['id_village'] != '' && $data['id_village'] >0 ? " and c.id_village=".$data['id_village']."" : '')."
        ".($data['id_zone'] != '' && $data['id_zone'] >0 ? " and z.id_zone=".$data['id_zone']."" : '')."
        Group by c.id_customer");
        $result = $sql->result_array();
		//print_r($this->db->last_query());exit;
		return $result;
    }
    //Village wise sales
    //Customer History
    function get_customer_details($mobile)
    {
        $data = array();
        $accounts=$this->db->query("select s.id_scheme_account,IFNULL(s.scheme_acc_number,'Not Allocated') as scheme_acc_number,s.account_name,DATE_FORMAT(s.start_date,'%d-%m-%Y') as start_date,
        sc.scheme_name,sc.code,if(sc.scheme_type=0,'Amount',if(sc.scheme_type=1,'Weight',if(sc.scheme_type=3,'FLEXIBLE_AMOUNT','Amount To Weight')))as scheme_type,
        FORMAT(if(sc.scheme_type=1,sc.max_weight,if(sc.scheme_type=3 && sc.max_amount!=0,sc.max_amount,if(sc.scheme_type=3 && sc.max_amount=0,(sc.max_weight*(SELECT m.goldrate_22ct FROM metal_rates m  order by id_metalrates Desc LIMIT 1)),sc.amount))),2) as amount,
        sc.scheme_type  as scheme_types,
        sc.total_installments,if(s.is_closed =0,'Active','Closed') as status,s.date_add,cs.currency_symbol,
        IFNULL(IF(s.is_opening=1,IFNULL(s.paid_installments,0)+ IFNULL(if(sc.scheme_type = 1 and sc.min_weight != sc.max_weight, COUNT(Distinct Date_Format(pay.date_payment,'%Y%m')), sum(pay.no_of_dues)),0), if(sc.scheme_type = 1 and sc.min_weight != sc.max_weight or sc.scheme_type=3, COUNT(Distinct Date_Format(pay.date_payment,'%Y%m')), sum(pay.no_of_dues))) ,0)
        as paid_installments
        from scheme_account s
        left join customer c on (s.id_customer=c.id_customer)
        left join scheme sc on (sc.id_scheme=s.id_scheme)
        left join payment pay on (pay.id_scheme_account=s.id_scheme_account  and (pay.payment_status=2 or pay.payment_status=1))
        left join branch b on (b.id_branch=s.id_branch)
        join chit_settings cs
        Where c.mobile=".$mobile."
        group by s.id_scheme_account");
        $data['accounts']=$accounts->result_array();
        $cus=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,IFNULL(cus.email,'-') as email,IFNULL(a.address1,'-') as address1,
        IFNULL(a.address2,'-') as address2,IFNULL(a.address3,'-') as address3,IFNULL(c.name,'-') as county_name,IFNULL(s.name,'-') as state_name,IFNULL(ct.name,'-') as city_name,IFNULL(cus.cus_img,'') as cus_img,IF(cus.is_vip=1,'Yes','NO') as vip_cus
        FROM customer cus
        LEFT JOIN address a ON a.id_address=cus.id_address
        LEFT JOIN country c ON c.id_country=a.id_country
        LEFT JOIN state s ON s.id_state=a.id_state
        LEFT JOIN city ct ON ct.id_city=a.id_city
        WHERE cus.mobile=".$mobile."");
        $data['customer']=$cus->row_array();
        $sales=$this->db->query("SELECT b.bill_id,IFNULL(g_wt.tot_gold,0) as gold_wt,IFNULL(s_wt.tot_silver,0) as silver_wt,
        IFNULL(fixed_rate.tot_fixed,0) as mrp_amount,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
        b.tot_bill_amount,if(b.bill_status=1,'Success','Cancelled') as bill_status
        FROM ret_billing b
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        left JOIN (select sum(d.net_wt) as tot_gold,b.bill_id from ret_billing b
                  left join customer c ON c.id_customer=b.bill_cus_id
                  left JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  left join ret_product_master as pro on pro.pro_id=d.product_id
                  left join ret_category as cat on cat.id_ret_category=pro.cat_id
                  left join metal as m on m.id_metal=cat.id_metal WHERE b.bill_status=1
                  and m.id_metal=1 and d.bill_det_id is NOT NULL and c.mobile=".$mobile." GROUP BY b.bill_id) as g_wt
                  ON g_wt.bill_id=b.bill_id
        left JOIN (select sum(d.net_wt)as tot_silver,b.bill_id from ret_billing b
                  left join customer c ON c.id_customer=b.bill_cus_id
                  left JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  left join ret_product_master as pro on pro.pro_id=d.product_id
                  left join ret_category as cat on cat.id_ret_category=pro.cat_id
                  left join metal as m on m.id_metal=cat.id_metal WHERE b.bill_status=1
                  and m.id_metal=2 and d.bill_det_id is NOT NULL and c.mobile=".$mobile." GROUP BY b.bill_id) as s_wt
                  ON s_wt.bill_id=b.bill_id
        left JOIN (select sum(d.item_cost)as tot_fixed,b.bill_id from ret_billing b
                  left join customer c ON c.id_customer=b.bill_cus_id
                  left JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  left join ret_product_master as pro on pro.pro_id=d.product_id
                  left join ret_category as cat on cat.id_ret_category=pro.cat_id
                  left join metal as m on m.id_metal=cat.id_metal WHERE b.bill_status=1
                  and pro.sales_mode=1 and d.bill_det_id is NOT NULL and c.mobile=".$mobile." GROUP BY b.bill_id) as fixed_rate
                  ON fixed_rate.bill_id=b.bill_id
        WHERE b.bill_status=1 and d.bill_det_id is NOT null and c.mobile= ".$mobile." GROUP by b.bill_id");
        // print_r($this->db->last_query());exit;
        $sales_sql=$sales->result_array();
        foreach ($sales_sql as $sale){
            $sale['bill_no'] =$this->get_bill_no_format_detail($sale['bill_id']);
            $data['sales'][]= $sale;
        }
        $purchase=$this->db->query("SELECT c.id_customer,date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_id,if(b.bill_status=1,'Success','Cancelled') as bill_status,SUM(bill_old.rate) as tot_pur_amt
        FROM ret_bill_old_metal_sale_details bill_old
        LEFT JOIN ret_billing b ON b.bill_id=bill_old.bill_id
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        WHERE c.mobile=".$mobile." GROUP by bill_old.bill_id");
        // $data['purchase']=$purchase->result_array();
        $purchase_sql=$purchase->result_array();
        foreach ($purchase_sql as $purchase){
            $purchase['bill_no'] =$this->get_bill_no_format_detail($purchase['bill_id']);
            $data['purchase'][]= $purchase;
        }
        $credit=$this->db->query("SELECT b.bill_id,b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,if(b.credit_status=1,'Paid','Pending') as credit_status,(b.tot_bill_amount-tot_amt_received) as due_amount
        FROM ret_billing b
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        WHERE b.is_credit=1 AND c.mobile=".$mobile."");
        // $data['credit']=$credit->result_array();
        $credit_sql=$credit->result_array();
        foreach ($credit_sql as $credit){
            $credit['bill_no'] =$this->get_bill_no_format_detail($credit['bill_id']);
            $data['credit'][]= $credit;
        }
        return $data;
    }
    //Customer History
    function get_modules($code)
    {
        $sql=$this->db->query("SELECT * FROM modules WHERE m_code='".$code."'");
        return $sql->row_array();
    }
    //Unbilled Estimation
    function unbilled_estimation($data)
    {
        if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $return_data=array();
        $sql=$this->db->query("SELECT est.esti_no,est.estimation_id,c.firstname as cus_name,c.mobile,est.total_cost,date_format(est.estimation_datetime,'%d-%m-%Y') as est_date,
        emp.firstname as emp_name
        FROM ret_estimation_items e
        LEFT JOIN ret_estimation est ON est.estimation_id=e.esti_id
        LEFT JOIN customer c ON c.id_customer=est.cus_id
        LEFT JOIN employee emp on emp.id_employee=est.created_by
        WHERE e.purchase_status=0
        ".($data['dt_range'] != '' ? ' and date(est.estimation_datetime) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? " and est.id_branch=".$data['id_branch']."" : '')."
        GROUP by e.esti_id");
        //print_r($this->db->last_query());exit;
        $result=$sql->result_array();
        foreach($result as $items)
        {
            $return_data[]=array(
                            'esti_no'       =>$items['esti_no'],
                            'estimation_id' =>$items['estimation_id'],
                            'cus_name'      =>$items['cus_name'],
                            'mobile'        =>$items['mobile'],
                            'total_cost'    =>$items['total_cost'],
                            'est_date'      =>$items['est_date'],
                            'emp_name'      =>$items['emp_name'],
                            'est_details'   =>$this->get_estimation_details($items['estimation_id']),
                         );
        }
        return $return_data;
    }
    function get_estimation_details($estimation_id)
    {
        $sql=$this->db->query("SELECT p.product_name,IFNULL(des.design_name,'') as design_name,est.item_cost,ifnull(est.tag_id,'-') as tag_id,ifnull(est.net_wt,0) as net_wt
        FROM ret_estimation_items est
        LEFT JOIN ret_product_master p ON p.pro_id=est.product_id
        LEFT JOIN ret_design_master des ON des.design_no=est.design_id
        WHERE est.est_item_id is not null AND est.purchase_status=0 and est.esti_id=".$estimation_id."");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //Unbilled Estimation
    //Karigar wise sales report
    function karigar_wise_sales($id_product)
    {
        $sql=$this->db->query("SELECT SUM(d.no_of_piece) as total_lot_pcs,SUM(d.gross_wt) as tot_lot_wt,k.firstname as kaigar_name,IFNULL(l.gold_smith,'') as gold_smith,IFNULL(s.tot_pcs,0) as total_sold_pcs,
        IFNULL(s.tot_gwt,0) as total_sold_gwt
        FROM ret_lot_inwards l
        LEFT JOIN ret_lot_inwards_detail d ON d.lot_no=l.lot_no
        LEFT JOIN ret_karigar k ON k.id_karigar=l.gold_smith
        LEFT JOIN(SELECT i.gold_smith,SUM(tag.piece) as tot_pcs,SUM(tag.gross_wt) as tot_gwt FROM ret_taging tag LEFT JOIN ret_lot_inwards i ON i.lot_no=tag.tag_lot_id
        WHERE tag.tag_status=1 ".($id_product!='' ? " and tag.product_id=".$id_product."" :'')." GROUP by i.gold_smith) as s ON s.gold_smith=l.gold_smith and l.gold_smith is not null
        where l.gold_smith is not null ".($id_product!='' ? " and d.lot_product=".$id_product."" :'')."
        GROUP by l.gold_smith order by l.gold_smith");
        //print_r($this->db->last_query());exit;
        $result= $sql->result_array();
        foreach($result as $items)
        {
            $data[]=array(
                         'gold_smith'           =>$items['gold_smith'],
                         'kaigar_name'          =>$items['kaigar_name'],
                         'total_received_pcs'   =>$items['total_lot_pcs'],
                         'total_received_weight'=>$items['tot_lot_wt'],
                         'total_sold_pcs'       =>$items['total_sold_pcs'],
                         'total_sold_gwt'       =>$items['total_sold_gwt'],
                         'sales_details'        =>($items['gold_smith']!='' ? $this->get_product_wise_sales($items['gold_smith'],$id_product):''),
                         'lot_details'          =>$this->get_received_details($items['gold_smith'],$id_product),
                        );
        }
        return $data;
    }
    function get_product_wise_sales($gold_smith,$id_product)
    {
        $sql=$this->db->query("SELECT p.product_name,IFNULL(SUM(tag.piece),0) as tot_pcs,IFNULL(SUM(tag.gross_wt),0) as tot_gwt
        FROM ret_taging tag
        LEFT JOIN ret_lot_inwards i ON i.lot_no=tag.tag_lot_id
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        WHERE tag.tag_status=1 AND i.gold_smith=".$gold_smith."
        ".($id_product!='' ? " and tag.product_id=".$id_product."" :'')."
        GROUP by tag.product_id");
        return $sql->result_array();
    }
    function get_received_details($gold_smith,$id_product)
    {
        $sql=$this->db->query("SELECT SUM(d.no_of_piece) as tot_pcs,IFNULL(SUM(d.gross_wt),0) as tot_gwt,p.product_name
        FROM ret_lot_inwards i
        LEFT JOIN ret_lot_inwards_detail d ON d.lot_no=i.lot_no
        LEFT JOIN ret_product_master p ON p.pro_id=d.lot_product
        where i.gold_smith=".$gold_smith."
        ".($id_product!='' ? " and d.lot_product=".$id_product."" :'')."
        GROUP by d.lot_product");
        return $sql->result_array();
    }
    //Karigar wise sales report
    //Lot History
    function getLotDetails()
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        $sql=$this->db->query("SELECT l.lot_no,SUM(d.no_of_piece) as total_lot_pcs,SUM(d.gross_wt) as tot_lot_wt,k.firstname as kaigar_name,IFNULL(l.gold_smith,'') as gold_smith,IFNULL(s.tot_pcs,0) as total_sold_pcs,
        IFNULL(s.tot_gwt,0) as total_sold_gwt,	IFNULL(l.po_id,'') as po_id,IFNULL(pur.po_ref_no,'-') as pur_ref_no,IFNULL(date_format(pur.po_date,'%d-%m-%Y'),'-')as po_date,
        cat.name as category_name
        FROM ret_lot_inwards l
        LEFT JOIN ret_lot_inwards_detail d ON d.lot_no=l.lot_no
        LEFT JOIN ret_karigar k ON k.id_karigar=l.gold_smith
        LEFT JOIN ret_category cat on cat.id_ret_category=l.id_category
        LEFT JOIN ret_purchase_order pur ON pur.po_id=l.po_id
        LEFT JOIN(SELECT i.lot_no,SUM(tag.piece) as tot_pcs,SUM(tag.gross_wt) as tot_gwt FROM ret_taging tag LEFT JOIN ret_lot_inwards i ON i.lot_no=tag.tag_lot_id
        WHERE tag.tag_status=1 GROUP by i.lot_no) as s ON s.lot_no=l.lot_no and l.lot_no is not null
        where l.lot_no is not null
        GROUP by l.lot_no order by l.lot_no DESC");
        //print_r($this->db->last_query());exit;
        $result= $sql->result_array();
        foreach($result as $items)
        {
            $data[]=array(
                         'pur_ref_no'           =>$items['pur_ref_no'],
                          'po_date'             =>$items['po_date'],
                          'lot_no'               =>$items['lot_no'],
                         'gold_smith'           =>$items['gold_smith'],
                         'kaigar_name'          =>$items['kaigar_name'],
                         'total_received_pcs'   =>$items['total_lot_pcs'],
                         'total_received_weight'=>$items['tot_lot_wt'],
                         'total_sold_pcs'       =>$items['total_sold_pcs'],
                         'total_sold_gwt'       =>$items['total_sold_gwt'],
                         'category_name'        =>$items['category_name'],
                        );
        }
        return $data;
    }
    function getLotWiseSales($tag_lot_id)
    {
        $sql=$this->db->query("SELECT des.design_name,tag.tag_id,tag.tag_code,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date,p.product_name,IFNULL(tag.piece,0) as piece,IFNULL(tag.gross_wt,0) as gross_wt,IFNULL(tag.net_wt,0) as net_wt,
        IF(tag.tag_status=0,'On Sale',if(tag.tag_status=1,'Sold Out',IF(tag.tag_status=2,'Deleted',IF(tag.tag_status=3,'Other Issue',if(tag.tag_status=4,'In Transit','Deleted For Stock'))))) as tag_status_name,tag.tag_status,
        subDes.sub_design_name,br.name as branch_name
        FROM ret_taging tag
        LEFT JOIN ret_lot_inwards i ON i.lot_no=tag.tag_lot_id
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        LEFT JOIN ret_design_master as des ON des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=tag.id_sub_design
        LEFT JOIN branch br on br.id_branch=tag.current_branch
        WHERE tag.tag_lot_id=".$tag_lot_id."");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //Lot History
    //Green Tag
    function getGreenTagDetails($data)
    {
        $sql=$this->db->query("SELECT est.estimation_id,est.esti_no,b.bill_id,b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,emp.firstname as emp_name,emp.emp_code,tag.tag_id,tag.tag_code,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date,
        p.product_name,d.item_cost,tag.gross_wt,tag.net_wt,m.id_metal
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        LEFT JOIN ret_estimation_items e ON e.tag_id=d.tag_id
        LEFT JOIN ret_estimation est ON est.estimation_id=e.esti_id
        LEFT JOIN employee emp ON emp.id_employee=est.created_by
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
        LEFT JOIN metal m on m.id_metal=cat.id_metal
        WHERE tag.tag_status=1 AND tag.tag_mark=1 and b.bill_status=1 AND  d.status=1 and e.purchase_status=1
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".( $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch'] : '')."
        ".( $data['id_category']!='' && $data['id_category'] >0 ? ' and p.cat_id='.$data['id_category'] : '')."
        ".( $data['id_metal']!='' && $data['id_metal'] >0 ? ' and cat.id_metal='.$data['id_metal'] : '')."
        ");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //Green Tag
     //monthly sales comparision
    function getMonthlySalesDetails($id_product)
    {
        $return_data=array();
        $products=$this->db->query("SELECT SUM(d.net_wt) as net_wt,DATE_FORMAT(b.bill_date,'%m') as bill_date,DATE_FORMAT(b.bill_date,'%M-%Y') as bill_month
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        WHERE b.bill_status=1
        ".($id_product!='' ? " and d.product_id=".$id_product."" :'')."
        GROUP by DATE_FORMAT(b.bill_date,'%m') ORDER by b.bill_id ASC");
        $prod_details= $products->result_array();
        foreach($prod_details as $items)
        {
            $return_data['pro_details'][]=array(
                        'x'=>$items['bill_date'],
                        'y'=>$items['net_wt'],
                       );
        }
        $metal=$this->db->query("SELECT SUM(d.net_wt) as total_weight,m.metal as metal_name
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=cat.id_metal
        WHERE b.bill_status=1 GROUP by m.id_metal");
        $metal_details= $metal->result_array();
        foreach($metal_details as $items)
        {
            $return_data['metal_details'][]=array(
                        'label'=>$items['metal_name'],
                        'value'=>$items['total_weight'],
                        'color'=>'#3c8dbc',
                       );
        }
        return $return_data;
    }
    //monthly sales comparision
    //Intransit Details
    function getIntransitDetails()
    {
        $sql1=$this->db->query("SELECT branch_trans_code,`branch_transfer_id`,fb.name as from_branch,tb.name as to_branch,bt.`pieces`,bt.`grs_wt`,bt.`net_wt`,`status`,date_format(bt.created_time,'%d-%m-%Y') as created_time,if( product_short_code = '' or product_short_code is null ,product_name ,CONCAT(product_short_code ,' - ',product_name) ) as product,is_other_issue,
                if(bt.transfer_item_type=1,'Tagged','Non Tagged') as transfer_item_type
				FROM `ret_branch_transfer` bt
					Left join ret_brch_transfer_tag_items tag on tag.transfer_id=bt.branch_transfer_id
					Left join ret_taging t on t.tag_id=tag.tag_id
				    Left join ret_product_master p on p.pro_id = t.product_id
					Left join branch fb on fb.id_branch = bt.transfer_from_branch
					Left join branch tb on tb.id_branch = bt.transfer_to_branch
			 	WHERE bt.status=2 and bt.transfer_item_type=1 ".($_POST['id_branch']!='' && $_POST['id_branch']>0 ? " and bt.transfer_to_branch=".$_POST['id_branch']."" :'')." group by tag.transfer_id");
	    $tagged= $sql1->result_array();
	    $sql2=$this->db->query("SELECT branch_trans_code,`branch_transfer_id`,fb.name as from_branch,tb.name as to_branch,bt.`pieces`,bt.`grs_wt`,bt.`net_wt`,`status`,date_format(bt.created_time,'%d-%m-%Y') as created_time,if( product_short_code = '' or product_short_code is null ,product_name ,CONCAT(product_short_code ,' - ',product_name) ) as product,is_other_issue,
                if(bt.transfer_item_type=1,'Tagged','Non Tagged') as transfer_item_type
				FROM `ret_branch_transfer` bt
					left join ret_lot_inwards_detail d on d.id_lot_inward_detail=bt.id_lot_inward_detail
				    Left join ret_product_master p on p.pro_id = d.lot_product
					Left join branch fb on fb.id_branch = bt.transfer_from_branch
					Left join branch tb on tb.id_branch = bt.transfer_to_branch
			 	WHERE bt.status=2 and bt.transfer_item_type=2 ".($_POST['id_branch']!='' && $_POST['id_branch']>0 ? " and bt.transfer_to_branch=".$_POST['id_branch']."" :'')." ");
	    //print_r($this->db->last_query());exit;
		$non_tagged= $sql2->result_array();
		return array_merge($tagged,$non_tagged);
    }
    //Intransit Details
    //credit pending
     function get_credit_pending_details_14_02_2024($data)
    {
        $return_data=array();
		$credit_detail = array();
		$credit_detai2 = array();
		$sql=$this->db->query("SELECT b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,DATE_FORMAT(b.credit_due_date,'%d-%m-%Y') as credit_due_date,b.tot_bill_amount,b.tot_amt_received,b.bill_cus_id,c.mobile,c.firstname as cus_name,
		if(b.credit_status=1,'Paid','Pending') as credit_status,br.name as branch_name,b.tot_bill_amount,(b.tot_bill_amount-b.tot_amt_received-IFNULL(ret.credit_due_amt,0)) as bal_amt,b.credit_disc_amt,IFNULL(ret.credit_due_amt,0) as credit_due_amt,IFNULL(ret.credit_ret_amt,0) as credit_ret_amt
			from ret_billing b
			LEFT JOIN customer c on c.id_customer=b.bill_cus_id
			LEFT JOIN branch br on br.id_branch=b.id_branch
            LEFT JOIN(SELECT IFNULL((b.credit_due_amt),0) as credit_due_amt,
            r.ret_bill_id,IFNULL(b.credit_ret_amt,0) as credit_ret_amt
            FROM ret_bill_return_details r
            LEFT JOIN ret_billing b ON b.bill_id = r.bill_id
            WHERE b.bill_status = 1
            GROUP BY r.ret_bill_id) as ret ON ret.ret_bill_id = b.bill_id
			where  b.bill_id is not null and b.is_credit=1  and b.bill_status=1  and b.bill_type!=8 and b.credit_status=2 and b.bill_type!=12
			".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
			".($data['id_customer'] != '' && $data['id_customer'] >0 ? ' and b.bill_cus_id='.$data['id_customer']: '')."
			and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
			ORDER BY b.bill_cus_id");
		$result = $sql->result_array();
		foreach($result as $r){
		    $paid_amount=$this->get_credit_collection_details($r['bill_id']);
			$credit_detail[] = array(
			                    'type'              =>0,
								'bill_no'           =>$r['bill_no'],
								'bill_date'         =>$r['bill_date'],
								'cus_name'          =>$r['cus_name'],
								'mobile'            =>$r['mobile'],
								'branch_name'       =>$r['branch_name'],
								'tot_bill_amount'   =>$r['tot_bill_amount'],
								'credit_due_amt'    =>$r['credit_due_amt'],
								'credit_ret_amt'    =>$r['credit_ret_amt'],
								'bal_amt'           =>$r['bal_amt']-$paid_amount,
								'due_amount'        =>$r['tot_bill_amount']-$r['tot_amt_received'],
								'paid_amount'       =>$paid_amount,
								'bill_id'           =>$r['bill_id'],
								'credit_collection' =>$this->getCreditCollection($r['bill_id'])
							);
		}
		$issue_sql=$this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no as bill_no,cus.mobile,r.amount as due_amount,
        DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date,'' as credit_due_date,IFNULL(r.amount-IFNULL(coll.paid_amt,0),0) as bal_amt,
        IFNULL(coll.paid_amt,0) as paid_amount,cus.firstname as cus_name,br.name as branch_name,'1' as type,'0' as credit_ret_amt,r.amount as tot_bill_amount
        FROM ret_issue_receipt r
        LEFT JOIN branch br on br.id_branch=r.id_branch
        LEFT JOIN (SELECT IFNULL(SUM(c.received_amount+c.discount_amt),0) as paid_amt,c.receipt_for
        FROM ret_issue_receipt r
        LEFT JOIN ret_issue_credit_collection_details c ON c.id_issue_receipt=r.id_issue_receipt
        where r.bill_status=1
        GROUP by c.receipt_for) as coll ON coll.receipt_for=r.id_issue_receipt
        LEFT JOIN customer cus ON cus.id_customer=r.id_customer
        WHERE r.type=1  and r.bill_status=1 and (r.issue_type=2 or r.issue_type=4)
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
        and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')  ");
        //print_r($this->db->last_query());exit;
        $result1 = $issue_sql->result_array();
        	foreach($result1 as $r)
        	{
        	    $issueCreditDetails = $this->get_IssueCreditCollectionDetails($r['bill_id']);
        	    $r['credit_collection']=$issueCreditDetails;
        	    $credit_detai2[]=$r;
        	}
		//echo "<pre>"; print_r($credit_detai2);exit;
		$return_data=array_merge($credit_detail,$credit_detai2);
		return $return_data;
    }
    function get_credit_pending_details($data)
    {
        $return_data=array();
		$credit_detail = array();
		$credit_detai2 = array();
		$sql=$this->db->query("SELECT b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,DATE_FORMAT(b.credit_due_date,'%d-%m-%Y') as credit_due_date,b.tot_bill_amount,b.tot_amt_received,b.bill_cus_id,c.mobile,c.firstname as cus_name,
		if(b.credit_status=1,'Paid','Pending') as credit_status,br.name as branch_name,b.tot_bill_amount,(b.tot_bill_amount-b.tot_amt_received-IFNULL(ret.credit_due_amt,0)) as bal_amt,b.credit_disc_amt,IFNULL(ret.credit_due_amt,0) as credit_due_amt,IFNULL(ret.credit_ret_amt,0) as credit_ret_amt,IFNULL(v.village_name,'-') as village_name,IFNULL(ct.name,'-') as city_name,IFNULL(a.address1,'-') as address
        ,IFNULL(b.credit_reference,'-') as credit_reference
			from ret_billing b
			LEFT JOIN customer c on c.id_customer=b.bill_cus_id
            LEFT JOIN address a on a.id_customer=c.id_customer
			LEFT JOIN city ct on ct.id_city=a.id_city
			LEFT JOIN village v on v.id_village=c.id_village
			LEFT JOIN branch br on br.id_branch=b.id_branch
            LEFT JOIN(SELECT IFNULL((b.credit_due_amt),0) as credit_due_amt,
            r.ret_bill_id,IFNULL(b.credit_ret_amt,0) as credit_ret_amt
            FROM ret_bill_return_details r
            LEFT JOIN ret_billing b ON b.bill_id = r.bill_id
            WHERE b.bill_status = 1
            GROUP BY r.ret_bill_id) as ret ON ret.ret_bill_id = b.bill_id
			where  b.bill_id is not null and b.is_credit=1 and b.bill_status=1  and b.bill_type!=8 and b.credit_status=2 and b.bill_type!=12
			".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
			".($data['id_customer'] != '' && $data['id_customer'] >0 ? ' and b.bill_cus_id='.$data['id_customer']: '')."
            ".($data['credit_reference'] != ''  ? ' and b.credit_reference="'.$data['credit_reference'].'"': '')."
            ".($data['filter_type']!=0 ? " and date(b.credit_due_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."' " : '')."
			ORDER BY b.bill_cus_id");
        // echo $this->db->last_query();exit;
		$result = $sql->result_array();
		foreach($result as $r){
		    $paid_amount=$this->get_credit_collection_details($r['bill_id']);
			$credit_detail[] = array(
			                    'type'              =>0,
								'bill_no'           =>$this->get_bill_no_format_detail($r['bill_id']),
								'bill_date'         =>$r['bill_date'],
								'cus_name'          =>$r['cus_name'],
								'mobile'            =>$r['mobile'],
								'branch_name'       =>$r['branch_name'],
								'tot_bill_amount'   =>$r['tot_bill_amount'],
								'credit_due_amt'    =>$r['credit_due_amt'],
								'credit_ret_amt'    =>$r['credit_ret_amt'],
								'bal_amt'           =>$r['bal_amt']-$paid_amount,
								'due_amount'        =>$r['tot_bill_amount']-$r['tot_amt_received'],
								'paid_amount'       =>$paid_amount,
								'bill_id'           =>$r['bill_id'],
                                'city_name'         =>$r['city_name'],
								'address'           =>$r['address'],
								'village_name'      =>$r['village_name'],
                                'credit_reference'      =>$r['credit_reference'],
								'credit_collection' =>$this->getCreditCollection($r['bill_id'])
							);
		}
		$issue_sql=$this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no as bill_no,cus.mobile,r.amount as due_amount,
        DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date,'' as credit_due_date,IFNULL(r.amount-IFNULL(coll.paid_amt,0),0) as bal_amt,
        IFNULL(coll.paid_amt,0) as paid_amount,cus.firstname as cus_name,br.name as branch_name,'1' as type,'0' as credit_ret_amt,r.amount as tot_bill_amount,
        IFNULL(v.village_name,'-') as village_name,IFNULL(ct.name,'-') as city_name,IFNULL(a.address1,'-') as address
        FROM ret_issue_receipt r
        LEFT JOIN branch br on br.id_branch=r.id_branch
        LEFT JOIN (SELECT IFNULL(SUM(c.received_amount+c.discount_amt),0) as paid_amt,c.receipt_for
        FROM ret_issue_receipt r
        LEFT JOIN ret_issue_credit_collection_details c ON c.id_issue_receipt=r.id_issue_receipt
        where r.bill_status=1
        GROUP by c.receipt_for) as coll ON coll.receipt_for=r.id_issue_receipt
        LEFT JOIN customer cus ON cus.id_customer=r.id_customer
        LEFT JOIN address a on a.id_customer=cus.id_customer
        LEFT JOIN city ct on ct.id_city=a.id_city
        LEFT JOIN village v on v.id_village=cus.id_village
        WHERE r.type=1  and r.bill_status=1 and (r.issue_type=2 or r.issue_type=4)
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
        and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')  ");
        //print_r($this->db->last_query());exit;
        $result1 = $issue_sql->result_array();
        	foreach($result1 as $r)
        	{
        	    $issueCreditDetails = $this->get_IssueCreditCollectionDetails($r['bill_id']);
                $r['credit_reference']='-';
        	    $r['credit_collection']=$issueCreditDetails;
        	    $credit_detai2[]=$r;
        	}
		//echo "<pre>"; print_r($credit_detai2);exit;
		$return_data=array_merge($credit_detail,$credit_detai2);
		return $return_data;
    }
    function get_IssueCreditCollectionDetails($bill_id)
    {
        $sql=$this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no,date_format(r.bill_date,'%d-%m-%Y') as bill_date,r.amount as tot_amt_received,
        coll.discount_amt as credit_disc_amt,'0' as old_metal_amount,'1' as type
        FROM ret_issue_receipt r
        LEFT JOIN ret_issue_credit_collection_details coll ON coll.id_issue_receipt=r.id_issue_receipt
        WHERE r.receipt_type=1 and r.bill_status=1 AND coll.receipt_for=".$bill_id."");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    function get_credit_collection_details($bill_id)
    {
        $return_data=array();
        $total_bill_amount=0;
        $credit_disc_amt=0;
    	$data=$this->db->query("SELECT b.bill_id,b.bill_no,b.bill_type,b.ref_bill_id,b.tot_amt_received,b.credit_disc_amt,
    	b.tot_bill_amount,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date
    	 From ret_billing b
    	 where b.bill_status=1 and b.ref_bill_id=".$bill_id."");
        $items=$data->result_array();
		$chit_adj = $this->db->query("SELECT IFNULL(SUM(c.utilized_amt),0) as utilized_amt
            FROM ret_billing_chit_utilization c
            LEFT JOIN ret_billing b ON b.bill_id = c.bill_id
            WHERE b.bill_status = 1 AND b.ref_bill_id = ".$bill_id."");
		$chit_adj_amt = $chit_adj->row_array();
        $sql2 = $this->db->query("SELECT b.ref_bill_id,IFNULL(SUM(s.rate),0) as purchase_amount
                  FROM ret_billing b
                  LEFT JOIN ret_bill_old_metal_sale_details s ON s.bill_id = b.bill_id
                  WHERE b.ref_bill_id = ".$bill_id."");
        $old_metal_amount = $sql2->row()->purchase_amount;
        foreach($items as $item)
        {
            $total_bill_amount  += $item['tot_amt_received'];
            $credit_disc_amt    += $item['credit_disc_amt'];
        }
        return $total_bill_amount+$old_metal_amount+$credit_disc_amt+$chit_adj_amt['utilized_amt'];
    }
    //credit pending
    //stock and sales
    function stock_and_sales_details($data)
    {
        $return_data=array();
        if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $lot=$this->db->query("SELECT tag.tag_lot_id,p.product_name,IFNULL(SUM(tag.gross_wt),0) as total_wt,SUM(tag.piece) as tot_pcs,b.name as branch_name,date_format(tag.tag_datetime,'%d-%m-%Y') as inw_date,tag.id_branch,tag.current_branch
        FROM ret_taging tag
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        LEFT JOIN branch b on b.id_branch=tag.current_branch
        WHERE date(tag.tag_datetime)  BETWEEN '".$FromDt."' AND '".$ToDt."'
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and tag.id_branch=".$data['id_branch']."" :'')."
        GROUP by tag.tag_lot_id,tag.current_branch");
        $return_data['lot_details']=$lot->result_array();
        $branch_inw=$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,date_format(b.created_time,'%d-%m-%Y') as transfer_date,b.transfer_item_type,
        IF(b.status=1,'Yet to Approve',if(b.status=2,'Intransit',if(b.status=3,'Rejected','Downloaded'))) as bt_status,fb.name as from_branch,tb.name as to_branch,b.pieces
        FROM ret_branch_transfer b
        LEFT JOIN branch fb on fb.id_branch=b.transfer_from_branch
        LEFT JOIN branch tb on tb.id_branch=b.transfer_to_branch
        WHERE b.added_type=1 and is_other_issue=0 AND date(b.created_time) BETWEEN '".$FromDt."' AND '".$ToDt."'
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.transfer_to_branch=".$data['id_branch']."" :'')."");
         $return_data['branch_inw_details']=$branch_inw->result_array();
        $branch_out=$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,date_format(b.created_time,'%d-%m-%Y') as transfer_date,b.transfer_item_type,
        IF(b.status=1,'Yet to Approve',if(b.status=2,'Intransit',if(b.status=3,'Rejected','Downloaded'))) as bt_status,fb.name as from_branch,tb.name as to_branch,b.pieces
        FROM ret_branch_transfer b
        LEFT JOIN branch fb on fb.id_branch=b.transfer_from_branch
        LEFT JOIN branch tb on tb.id_branch=b.transfer_to_branch
        WHERE b.added_type=1 and is_other_issue=0 AND date(b.created_time) BETWEEN '".$FromDt."' AND '".$ToDt."'
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.transfer_from_branch=".$data['id_branch']."" :'')."");
         $return_data['branch_out_details']=$branch_out->result_array();
        $other_issue=$this->db->query("SELECT b.branch_transfer_id,b.branch_trans_code,date_format(b.created_time,'%d-%m-%Y') as transfer_date,b.transfer_item_type,
        IF(b.status=1,'Yet to Approve',if(b.status=2,'Intransit',if(b.status=3,'Rejected','Downloaded'))) as bt_status,fb.name as from_branch,tb.name as to_branch,b.pieces
        FROM ret_branch_transfer b
        LEFT JOIN branch fb on fb.id_branch=b.transfer_from_branch
        LEFT JOIN branch tb on tb.id_branch=b.transfer_to_branch
        WHERE b.added_type=1 and is_other_issue=1 AND date(b.created_time) BETWEEN '".$FromDt."' AND '".$ToDt."'
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.transfer_from_branch=".$data['id_branch']."" :'')."");
         $return_data['other_issue_details']=$other_issue->result_array();
        $sales_details=$this->db->query("SELECT p.product_name,IFNULL(SUM(d.gross_wt),0) as tot_sale_wt,SUM(d.piece) as tot_pcs,SUM(d.item_cost) as sale_amt
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        WHERE b.bill_status=1 AND date(b.bill_date) BETWEEN '".$FromDt."' AND '".$ToDt."'
         ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        GROUP by d.product_id");
        $return_data['sales_details']=$sales_details->result_array();
        return $return_data;
    }
    //stock and sales
     //incentive report
    function get_incentive_report($data)
    {
        $sql=$this->db->query("SELECT wa.id_wallet_account,wa.wallet_acc_number,(IFNULL(trans.tot_credit,0)-IFNULL(debit.tot_debit,0)) as total_value,wa.idemployee,concat(e.firstname,ifnull(concat('-',e.emp_code),'')) as emp_name,e.mobile,IFNULL(b.name,'') as branch_name
        FROM wallet_account wa
        LEFT JOIN employee e on e.id_employee=wa.idemployee
        LEFT JOIN branch b ON b.id_branch=e.login_branches
        LEFT JOIN (
        		  SELECT SUM(t.value) as tot_credit,t.id_wallet_account
        		  FROM wallet_transaction t
        		  WHERE t.transaction_type=0 ".($data['from_date']!='' ? " and date(t.date_transaction) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."' " :'')."
        GROUP by t.id_wallet_account) trans ON trans.id_wallet_account=wa.id_wallet_account
        LEFT JOIN (
        		  SELECT SUM(t.value) as tot_debit,t.id_wallet_account
        		  FROM wallet_transaction t
        		  WHERE t.transaction_type=1 ".($data['from_date']!='' ? " and date(t.date_transaction) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."' " :'')."
        GROUP by t.id_wallet_account) debit ON debit.id_wallet_account=wa.id_wallet_account
        GROUP by wa.id_wallet_account
        HAVING idemployee IS not NULL");
       // print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    function incentive_emp_list($id_wallet_account)
    {
        $sql=$this->db->query("SELECT wt.id_wallet_transaction,if(wt.transaction_type=0,wt.value,concat('-',wt.value)) as value,if(wt.transaction_type=0,'green','red') as color,if(wt.transaction_type=0,'Credit','Debit') as transaction_type,date_format(wt.date_transaction,'%d-%m-%Y') as date_transaction,wt.description,wt.bill_id,tag.tag_code,tag.tag_id,
        e.emp_code,e.id_employee,IFNULL(b.bill_no,'') as bill_no,e.firstname as emp_name,e.emp_code,rpm.product_name,wt.description,
        IFNULL(wt.id_sch_ac,'') as id_sch_ac,wt.type
        FROM wallet_transaction wt
        LEFT JOIN wallet_account a ON a.id_wallet_account=wt.id_wallet_account
        LEFT JOIN employee e ON e.id_employee=a.idemployee
        LEFT JOIN ret_taging tag ON tag.tag_id=wt.ref_no
        LEFT JOIN ret_billing b on b.bill_id=wt.bill_id
        LEFT JOIN ret_product_master rpm ON rpm.pro_id=tag.product_id
        WHERE wt.id_wallet_account=".$id_wallet_account."");
        return $sql->result_array();
    }
    //incentive report
    //monthly sales comparision
    function getVillageWiseSales($data)
    {
        $return_data=array();
        $sql=$this->db->query("SELECT SUM(d.net_wt) as total_net_wt,m.metal,date_format(b.bill_date,'%M') as bill_month,br.name as branch_name,v.village_name,z.name as zone_name,
        IFNULL(c.id_village,'') as id_village,b.id_branch,if(p.sales_mode=1,SUM(d.item_cost),0) as tot_fixed_amt
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        LEFT JOIN village_zone z ON z.id_zone=v.id_zone
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=cat.id_metal
        LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
        WHERE b.bill_status=1 AND DATE_FORMAT(b.bill_date,'%Y')='".$data['year']."'
        AND (m.id_metal=1 or m.id_metal=2)
        ".($data['id_village']!='' ? " and c.id_village=".$data['id_village']."" :'')."
        ".($data['id_branch']!='' && $data['id_branch']>0? " and b.id_branch=".$data['id_branch']."" :'')."
        GROUP by m.id_metal,c.id_village,b.id_branch,p.sales_mode,MONTH(b.bill_date)");
        $result=$sql->result_array();
        foreach($result as $r){
			$return_data[$r['village_name']][$r['branch_name']][$r['bill_month']][] = $r;
		}
        return $return_data;
    }
    function get_monthly_sales_details($data)
    {
        $sql=$this->db->query("SELECT d.net_wt as total_net_wt,d.gross_wt,m.metal,date_format(b.bill_date,'%d-%m-%Y') as bill_date,br.name as branch_name,
        v.village_name,z.name as zone_name,IFNULL(c.id_village,'') as id_village,b.id_branch,b.bill_no,b.bill_id,c.firstname as cus_name,c.mobile,
        p.product_name,if(p.sales_mode=1,d.item_cost,0) as tot_fixed_amt
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN village v ON v.id_village=c.id_village
        LEFT JOIN village_zone z ON z.id_zone=v.id_zone
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
        LEFT JOIN metal m ON m.id_metal=cat.id_metal
        LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
        WHERE b.bill_status=1 AND DATE_FORMAT(b.bill_date,'%Y-%m')='".($data['year'].'-'.$data['month'])."'
        ".($data['sales_mode']!='' ? " and p.sales_mode=".$data['sales_mode']."" : '')."
        ".($data['id_metal']!='' && $data['sales_mode']==2 ? " and m.id_metal=".$data['id_metal']."" :'')."
        ".($data['id_village']!='' ? " and c.id_village=".$data['id_village']."" :'')."
        ".($data['id_branch']!='' && $data['id_branch']>0? " and b.id_branch=".$data['id_branch']."" :'')."
        ");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //monthly sales comparision
     //Telecalling Module
    function get_telecalling_cus_det($post)
    {
        $FromDt=$this->input->post('from_date');
        $ToDt=$this->input->post('to_date');
        $id_zone=$this->input->post('id_zone');
        $id_village=$this->input->post('id_village');
        $id_branch=$this->input->post('id_branch');
        $sql=$this->db->query("SELECT c.firstname,c.id_customer,c.mobile,v.village_name,b.name as branch_name,IFNULL(esti.tot_est,0) as estimation_no,
        IFNULL(bill_tot.bill_count,0) as bill_count,IFNULL(tot_acc.tot_acc,0) as tot_account,IFNULL(iactive.tot_acc,0)as inactive_acount,
        IFNULL(tot_gold.gold_wt,0) as gold_wt,IFNULL(tot_silver.silver_wt,0) as silver_wt,IFNULL(closed_chit.closed_count,0) as closed_count,IFNULL(tot_payment.pay_amount,0) as tot_amount,
        IFNULL(fixed_rate.item_cost,0) as tot_fixed_rate,IFNULL(active_acc.tot_acc,0) as active_acc,DATE_FORMAT(max(bill.bill_date),'%d-%m-%Y') as last_billdate,z.name as zone_name,
        IF(c.is_vip=1,'VIP Customer','') as vip_customer
        from ret_billing bill
        left join customer c on (c.id_customer=bill.bill_cus_id)
        left join branch b on (b.id_branch=c.id_branch)
        LEFT JOIN village v on (v.id_village=c.id_village)
        LEFT JOIN village_zone z on (z.id_zone=v.id_zone)
        left join (select count(est.estimation_id) as tot_est,est.cus_id from ret_estimation est
                   left join customer as c on c.id_customer=est.cus_id where cus_id is not null
                   GROUP by cus_id)as esti on esti.cus_id=c.id_customer
        left join (select COUNT(bill.bill_id) as bill_count,bill.bill_cus_id from ret_billing as bill
            left join customer as c on c.id_customer=bill.bill_cus_id
            where bill.bill_status=1
            GROUP by bill.bill_cus_id) as bill_tot on bill_tot.bill_cus_id=c.id_customer
        left join(select count(sa.id_scheme_account) as tot_acc,sa.id_customer,c.mobile from scheme_account sa
            left join customer c on (c.id_customer=sa.id_customer)
            where sa.scheme_acc_number is not null GROUP by sa.id_customer) as tot_acc on tot_acc.id_customer=c.id_customer
        left join(select count(sa.id_scheme_account) as tot_acc,sa.id_customer,c.mobile from scheme_account sa
            left join customer c on (c.id_customer=sa.id_customer)
            where sa.scheme_acc_number is not null and sa.is_closed=0 GROUP by sa.id_customer) as active_acc on active_acc.id_customer=c.id_customer
        left join(select count(sa.scheme_acc_number) as closed_count,sa.id_customer,c.mobile from scheme_account sa
            left join customer c on (c.id_customer=sa.id_customer)
            where sa.is_closed=1 GROUP by sa.id_customer) as closed_chit on closed_chit.id_customer=c.id_customer
        left join (SELECT COUNT(sa.id_scheme_account) as tot_acc,
            TIMESTAMPDIFF(month, max(p.date_add), current_date()) as month_ago,sa.id_customer
            FROM scheme_account sa
            LEFT JOIN payment p ON p.id_scheme_account=sa.id_scheme_account
            LEFT JOIN scheme s ON s.id_scheme=sa.id_scheme
            LEFT JOIN customer cus ON cus.id_customer=sa.id_customer
            WHERE sa.is_closed=0
            GROUP by sa.id_customer HAVING month_ago>3) as iactive on iactive.id_customer=c.id_customer
        left join(select sum(bill_det.net_wt) as gold_wt,c.id_customer from ret_billing as bill
            left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
            left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
            left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
            left join metal as m on(m.id_metal=cat.id_metal)
            left join customer as c on(c.id_customer=bill.bill_cus_id)
            left join branch b on (b.id_branch=c.id_branch)
            LEFT join village v on (v.id_village=c.id_village)
            LEFT JOIN village_zone z on (z.id_zone=v.id_zone)
            where bill.bill_status=1 and m.id_metal=1
            ".($FromDt != '' ? 'and date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
            ".($id_zone != '' && $id_zone >0 ? " and z.id_zone=".$id_zone."" : '')."
            ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
            group by c.id_customer) as tot_gold on tot_gold.id_customer=c.id_customer
        left join(SELECT sum(bill_det.net_wt) as silver_wt,c.id_customer from ret_billing as bill
            left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
            left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
            left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
            left join metal as m on(m.id_metal=cat.id_metal)
            left join customer as c on(c.id_customer=bill.bill_cus_id)
            left join branch b on (b.id_branch=c.id_branch)
            LEFT join village v on (v.id_village=c.id_village)
            LEFT JOIN village_zone z on (z.id_zone=v.id_zone)
            where bill.bill_status=1 and m.id_metal=2
            ".($FromDt != '' ? 'and date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
            ".($id_zone != '' && $id_zone >0 ? " and z.id_zone=".$id_zone."" : '')."
            ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
            group by c.id_customer) as tot_silver on tot_silver.id_customer=c.id_customer
         left join(SELECT sum(bill_det.item_cost) as item_cost,c.id_customer from ret_billing as bill
            left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
            left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
            left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
            left join metal as m on(m.id_metal=cat.id_metal)
            left join customer as c on(c.id_customer=bill.bill_cus_id)
            left join branch b on (b.id_branch=c.id_branch)
            LEFT join village v on (v.id_village=c.id_village)
            LEFT JOIN village_zone z on (z.id_zone=v.id_zone)
            where bill.bill_status=1 and pro.sales_mode=1
            ".($FromDt != '' ? 'and date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
            ".($id_zone != '' && $id_zone >0 ? " and z.id_zone=".$id_zone."" : '')."
            ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
            group by c.id_customer) as fixed_rate on fixed_rate.id_customer=c.id_customer
        left join(select sum(p.payment_amount) as pay_amount,c.id_customer,c.mobile from customer as c
            left join scheme_account as sa on(sa.id_customer=c.id_customer)
            left join payment as p on (p.id_scheme_account=sa.id_scheme_account)
            group by c.id_customer) as tot_payment on tot_payment.id_customer=c.id_customer
            where bill.bill_type!=12
            ".($FromDt != '' ? ' and date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
            ".($id_zone != '' && $id_zone >0 ? " and z.id_zone=".$id_zone."" : '')."
            ".($id_village != '' && $id_village >0 ? " and c.id_village=".$id_village."" : '')."
            and bill.bill_cus_id is not null
            GROUP BY c.id_customer" );
            return $sql->result_array();
    }
    //Telecalling Module
    function get_feedbackReport()
    {
        $data=$this->db->query("SELECT c.firstname,c.mobile,c.id_customer,max(cus_feed.feedback_date) feedback_date,e.firstname feedback_takenby from customer_feedback cus_feed
        left join customer as c on (c.id_customer=cus_feed.id_customer)
        left join employee as e on(e.id_employee=cus_feed.feedback_taken_by) group by c.id_customer order by c.id_customer desc");
        return $data->result_array();
    }
    function get_feedbackById($id){
        $data=$this->db->query("SELECT cus_feed.id_customer,cus_feed.comments,mas.name,cus_feed_res.id_feedback,cus_feed_res.feedback_response from customer_feedback cus_feed
        LEFT JOIN customer_feedback_response as cus_feed_res on(cus_feed_res.id_cus_feedback=cus_feed.id_cus_feedback)
        left join customer_feedback_master as mas on (mas.id_feedback=cus_feed_res.id_feedback)
                where cus_feed.id_customer=".$id. " order by cus_feed_res.id_feedback desc");
        return $data->result_array();
    }
    //Customer Edit Log
    function get_customer_edit_log($data)
	{
	    $FromDt = $data['from_date'];
		$ToDt = $data['to_date'];
	    $sql=$this->db->query("SELECT cel.id_customer,cel.previous_firstname,cel.previous_lastname,cel.previous_mobile,cel.previous_email,cel.updated_firstname,cel.updated_lastname,cel.updated_mobile,cel.updated_email,cel.previous_address1,cel.updated_address1,cel.updated_on,emp.firstname
	    from customer_edit_log cel
		left join employee as emp on (emp.id_employee=cel.updated_by)
        WHERE
        ".($FromDt != '' && $ToDt!=''? 'date(cel.updated_on) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
	}
    //Customer Edit Log
     //Green Tag Return Report STARTS
    function get_gt_return_report()
    {
        $sql=$this->db->query("SELECT est.estimation_id,est.esti_no,b.bill_id,b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,emp.firstname as emp_name,emp.emp_code,tag.tag_id,tag.tag_code,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date,tag.tag_status,
        p.product_name,d.item_cost,tag.gross_wt,tag.net_wt,m.id_metal
        FROM ret_bill_return_details r
        LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
        LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        LEFT JOIN ret_estimation_items e ON e.est_item_id=d.esti_item_id
        LEFT JOIN ret_estimation est ON est.estimation_id=e.esti_id
        LEFT JOIN employee emp ON emp.id_employee=est.created_by
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
        LEFT JOIN metal m on m.id_metal=cat.id_metal
        WHERE tag.tag_status=6 AND tag.tag_mark=1
        ");
       // print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //Green Tag Return Report ENDS
   //Dashboard Reports
      function dashboard_EstimationList($from_date,$to_date,$type,$id_branch)
    {
        switch($type)
        {
            case "1": // type 1 is created estimation , 2 is converted estimation
                    $data=$this->db->query("SELECT esti_no,c.firstname,est.estimation_id, DATE_format(est.created_time,'%d-%m-%Y %h:%m') as date, est.total_cost	FROM ret_estimation as est
                left join customer as c on (c.id_customer=est.cus_id)
                ".($from_date != '' ? 'where date(est.estimation_datetime) BETWEEN "'.$from_date.'" AND "'.$to_date.'"' : '')."
                ".($id_branch != '' && $id_branch>0  ? " and est.id_branch=".$id_branch."" :'')." order by esti_no desc");
                return $data->result_array();
            break;
            case "2":
                $data=$this->db->query("SELECT est.esti_no, c.firstname,est.estimation_id,DATE_format(est.created_time,'%d-%m-%Y') as date,est.total_cost
                FROM ret_estimation as est
                LEFT JOIN ret_estimation_items AS estitm ON estitm.esti_id = est.estimation_id
                left join customer as c on (c.id_customer=est.cus_id)
                WHERE estitm.purchase_status = 1
                ".($from_date != '' ? 'and date(est.estimation_datetime) BETWEEN "'.$from_date.'" AND "'.$to_date.'"' : '')."
                ".($id_branch != '' && $id_branch>0  ? " and est.id_branch=".$id_branch."" :'')." GROUP BY estitm.esti_id  order by est.esti_no desc");
                return $data->result_array();
            break;
        }
    }
    /*function dashboard_salesList($from_date,$to_date,$type,$id_branch)
    {
        switch($type)
        {
            case "1": // 1 is gold sales list, 2 is silver, 3 is mrp amount
                $data = $this->db->query("SELECT bill_det.net_wt,bill.bill_id,bill_det.item_cost as tot_bill_amount,
                c.firstname,bill.bill_no,pro.product_name,bill_det.piece,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date from ret_billing as bill
                left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
                left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                left join metal as m on(m.id_metal=cat.id_metal)
                left join branch b on (b.id_branch=bill.id_branch)
                left join customer c on (c.id_customer=bill.bill_cus_id)
                where bill.bill_status=1 and m.id_metal=1  ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
                and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' order by bill.bill_no DESC");
                return $data->result_array();
            break;
            case "2":
                $data = $this->db->query("SELECT bill_det.net_wt,bill.bill_id,bill_det.item_cost as tot_bill_amount,c.firstname,bill.bill_no,pro.product_name,bill_det.piece,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date from ret_billing as bill
                left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
                left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                left join metal as m on(m.id_metal=cat.id_metal)
                left join branch b on (b.id_branch=bill.id_branch)
                left join customer c on (c.id_customer=bill.bill_cus_id)
                where bill.bill_status=1 and m.id_metal=2 ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
                and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' order by bill.bill_no DESC");
                return $data->result_array();
            break;
            case "3":
                $data = $this->db->query("SELECT bill_det.net_wt,bill.bill_id,bill_det.item_cost as tot_bill_amount,c.firstname,bill.bill_no,pro.product_name,bill_det.piece,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date from ret_billing as bill
                left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
                left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                left join metal as m on(m.id_metal=cat.id_metal)
                left join branch b on (b.id_branch=bill.id_branch)
                left join customer c on (c.id_customer=bill.bill_cus_id)
                where bill.bill_status=1 and pro.sales_mode=1 ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
                and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' order by bill.bill_no DESC");
                return $data->result_array();
            break;
            case "4":
                $data=$this->db->query("SELECT bill.bill_id,bill.bill_no,bill_stn.stone_id,bill_stn.pieces as piece,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date,
                bill_stn.wt as net_wt,bill_stn.price as tot_bill_amount,stn.stone_name as product_name,
                c.firstname
                from ret_billing_item_stones bill_stn
                Left Join ret_billing bill on bill.bill_id=bill_stn.bill_id
                left join ret_stone stn on stn.stone_id=bill_stn.stone_id
                left join branch b on (b.id_branch=bill.id_branch)
                left join customer c on (c.id_customer=bill.bill_cus_id)
                where stn.stone_type=1 ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
                and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' order by bill.bill_no DESC");
                return $data->result_array();
        }
    }*/
    function dashboard_salesList($from_date,$to_date,$type,$id_branch)
    {
        if($type == 'mrp'){
                $data = $this->db->query("SELECT bill_det.net_wt,bill.bill_id,bill_det.item_cost as tot_bill_amount,c.firstname,bill.bill_no,pro.product_name,bill_det.piece,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date from ret_billing as bill
                left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
                left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                left join metal as m on(m.id_metal=cat.id_metal)
                left join branch b on (b.id_branch=bill.id_branch)
                left join customer c on (c.id_customer=bill.bill_cus_id)
                where bill.bill_status=1 and pro.sales_mode=1 ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
                and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' order by bill.bill_no DESC");
        }else if($type == 'daimond'){
                    $data=$this->db->query("SELECT bill.bill_id,bill.bill_no,bill_stn.stone_id,bill_stn.pieces as piece,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date,
                    bill_stn.wt as net_wt,bill_stn.price as tot_bill_amount,stn.stone_name as product_name,
                    c.firstname
                    from ret_billing_item_stones bill_stn
                    Left Join ret_billing bill on bill.bill_id=bill_stn.bill_id
                    left join ret_stone stn on stn.stone_id=bill_stn.stone_id
                    left join branch b on (b.id_branch=bill.id_branch)
                    left join customer c on (c.id_customer=bill.bill_cus_id)
                    where stn.stone_type=1 ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
                    and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' order by bill.bill_no DESC");
        }else {
            $data = $this->db->query("SELECT bill_det.net_wt,bill.bill_id,bill_det.item_cost as tot_bill_amount,
            c.firstname,bill.bill_no,pro.product_name,bill_det.piece,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date from ret_billing as bill
            left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
            left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
            left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
            left join metal as m on(m.id_metal=cat.id_metal)
            left join branch b on (b.id_branch=bill.id_branch)
            left join customer c on (c.id_customer=bill.bill_cus_id)
            where bill.bill_status=1 and m.id_metal=$type ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
            and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' order by bill.bill_no DESC");
        }
                return $data->result_array();
    }
    function dashboard_greentagList($from_date,$to_date,$id_branch)
    {
        $sql=$this->db->query("SELECT IFNULL(tag.gross_wt,0) as gross_wt,tag.net_wt,IFNULL(d.piece,0) as piece,c.firstname,pro.product_name,DATE_FORMAT(b.bill_date,'%d-%m-%Y') bill_date,b.bill_id,b.bill_no,d.piece,b.tot_bill_amount,m.id_metal
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        left join ret_product_master as pro on(pro.pro_id=d.product_id)
         left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
         left join metal as m on(m.id_metal=cat.id_metal)
         left join customer c on (c.id_customer=b.bill_cus_id)
        WHERE tag.tag_status=1 AND tag.tag_mark=1
        and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."");
        return $sql->result_array();
    }
    function dashboard_greentagList_incent($from_date,$to_date,$id_branch)
    {
        $sql=$this->db->query("SELECT b.bill_id,b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,emp.firstname as emp_name,emp.emp_code,tag.tag_id,tag.tag_code,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        LEFT JOIN ret_estimation_items e ON e.tag_id=d.tag_id
        LEFT JOIN ret_estimation est ON est.estimation_id=e.esti_id
        LEFT JOIN employee emp ON emp.id_employee=est.created_by
        WHERE tag.tag_status=1 AND tag.tag_mark=1
        and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
         ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."");
        //  print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    function dashboard_oldmetalList($from_date,$to_date,$type,$id_branch)
    {
        $sql=$this->db->query("SELECT if(oldmp.metal_type=1,'GOLD',IF(oldmp.metal_type=2,'SILVER','')) as metal_type,c.firstname,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date,bill.bill_id,bill.bill_no,
		ifnull(net_wt,0) as weight, ifnull(rate,0) amount FROM ret_bill_old_metal_sale_details oldmp
		LEFT JOIN ret_billing as bill ON bill.bill_id = oldmp.bill_id
        left  join customer c on (c.id_customer=bill.bill_cus_id)
        where oldmp.metal_type=".$type." and bill.bill_status=1
        and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
        ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')." order by bill.bill_date desc");
        return $sql->result_array();
    }
    function dashboard_creditsalesList($from_date,$to_date,$type,$id_branch)
    {
        switch($type){
            case "1": // case 1 is credit issue, 2 is credit collection
                $sql=$this->db->query("SELECT  ifnull(tot_bill_amount-tot_amt_received,0) as amount,c.firstname,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') as bill_date,bill.bill_no,bill.bill_id
                FROM ret_billing as bill
                left join customer c on (c.id_customer=bill.bill_cus_id)
                WHERE bill.bill_type != 8 and bill.is_credit=1 and bill.bill_status=1
                and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')." order by bill.bill_date desc");
                return $sql->result_array();
            break;
            case "2":
                $sql=$this->db->query("SELECT ifnull(tot_bill_amount,0) as amount,c.firstname,DATE_FORMAT(bill.bill_date,'%d-%m-%Y') bill_date,bill.bill_no,bill.bill_id from ret_billing as bill
                left join customer as c on(c.id_customer=bill.bill_cus_id)
                WHERE bill.ref_bill_id is not null and bill.bill_status=1 and bill.bill_type = 8
                and date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')." order by bill.bill_date desc");
                return $sql->result_array();
            break;
        }
    }
    function dashboard_virtualsalesList($from_date,$to_date,$type,$id_branch)
    {
        switch($type)
        {
            case "1":  // case 1 is home sales , 2 is partly sales
                $sql=$this->db->query("SELECT ifnull((d.gross_wt),0) as gross_wt,
                ifnull((d.item_cost),0) as item_cost,
                ifnull((d.piece),0) as pcs , c.firstname, b.bill_no,b.bill_id,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date
                FROM ret_billing b
                LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                LEFT JOIN ret_estimation_items e ON e.est_item_id=d.esti_item_id
                left join customer c on (c.id_customer=b.bill_cus_id)
                WHERE d.esti_item_id IS NOT null AND d.tag_id is null
                AND e.item_type =2 and b.bill_status = 1
                and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')." order by b.bill_date desc");
                // print_r($this->db->last_query());exit;
                return $sql->result_array();
            break;
            case "2":
                $sql=$this->db->query("SELECT ifnull((d.gross_wt),0) as gross_wt,
                ifnull((d.item_cost),0) as item_cost,
                ifnull((d.piece),0) as pcs ,b.bill_no,b.bill_id,
                c.firstname,b.bill_date,d.item_cost,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date
                FROM ret_billing b
                LEFT JOIN ret_bill_details d ON d.bill_id = b.bill_id
                LEFT JOIN ret_estimation_items e ON e.est_item_id=d.esti_item_id
                LEFT JOIN ret_estimation est ON est.estimation_id=e.esti_id
                LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
                left join customer c on(c.id_customer=b.bill_cus_id)
                WHERE d.tag_id IS NOT null AND d.is_partial_sale=1 and
                b.bill_status = 1
                and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')." order by b.bill_date desc");
                return $sql->result_array();
            break;
        }
    }
    function dashboard_salereturnList($from_date,$to_date,$id_branch)
    {
        $sql=$this->db->query("select IFNULL((d.gross_wt),0) as wt,c.firstname, IFNULL((d.piece),0) as pcs,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date, b.bill_no,b.bill_id,d.gross_wt from ret_bill_details as d
        left join ret_billing as b on(b.bill_id=d.bill_id)
        left join customer as c on(c.id_customer=b.bill_cus_id)
        where d.status=2 and b.bill_status=1
        and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
		".($id_branch!='' && $id_branch>0 ?  " and b.id_branch=".$id_branch."" :'')." ");
        return $sql->result_array();
    }
    function dashboard_taglotList($from_date,$to_date,$type,$id_branch)
    {
        switch($type)
        {
            case "1": // case 1 is lot , 2 is tag
                $sql=$this->db->query("SELECT ifnull(sum(d.no_of_piece),0) piece,k.firstname,l.lot_no,ifnull(sum(d.gross_wt),0) gross_wt,date_format(lot_date,'%d-%m-%Y') as date FROM ret_lot_inwards l
                left JOIN ret_lot_inwards_detail d on d.lot_no=l.lot_no
                left join ret_karigar k on k.id_karigar=l.gold_smith
                where date(l.lot_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and l.created_branch=1 ".$id_branch."" :'')." GROUP by l.lot_no order by lot_date desc");
                // print_r($this->db->last_query());exit;
                return $sql->result_array();
            break;
            case "2":
                $sql=$this->db->query("SELECT ifnull((tag.piece),0) piece ,tag.tag_code,p.product_name,des.design_name,tag.net_wt,ifnull((tag.gross_wt),0) gross_wt,DATE_FORMAT(tag_datetime,'%d-%m-%Y')as date FROM ret_taging tag
                left join ret_product_master  as p on (p.pro_id=tag.product_id)
                left join ret_design_master as des on (des.design_no=tag.design_id)
                where tag.id_branch=1 and tag.tag_status!=2
                and date(tag.tag_datetime) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' order by tag_datetime desc");
                return $sql->result_array();
            break;
        }
    }
    function dashboard_giftcardList($from_date,$to_date,$type,$id_branch)
    {
        switch($type)
        {
            case "1":
                $sql=$this->db->query("SELECT ifnull((amount),0) amount,c.firstname,DATE_FORMAT(gc.date_add,'%d-%m-%Y')as date FROM gift_card as gc
                left join customer c on (c.id_customer=gc.purchased_by) WHERE status = 2
                and date(gc.date_add) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and gc.id_branch= ".$id_branch."" :'')." order by date desc");
                return $sql->result_array();
            break;
            case "2":
                $sql=$this->db->query(" SELECT ifnull((amount),0) amount,c.firstname,DATE_FORMAT(gc.date_add,'%d-%m-%Y')as date FROM gift_card as gc
                left join customer c on (c.id_customer=gc.purchased_by) WHERE status = 0
                and date(gc.date_add) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and gc.id_branch= ".$id_branch."" :'')." order by date desc");
                return $sql->result_array();
            break;
            case "3":
                $sql=$this->db->query("SELECT ifnull((amount),0) amount,c.firstname,DATE_FORMAT(gc.date_add,'%d-%m-%Y')as date FROM gift_card as gc
                left join customer c on (c.id_customer=gc.purchased_by) where free_card = 2
                and date(gc.date_add) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and gc.id_branch= ".$id_branch."" :'')." order by date desc");
                return $sql->result_array();
            break;
        }
    }
    function dashboard_customerorderList($from_date,$to_date,$type,$id_branch)
    {
        switch($type)
        {
            case "1": // case 1 is created, 2 is allocated, 3 is pending, 4 is delivery ready, 5 is delivered
                $sql=$this->db->query("SELECT (d.totalitems) as piece,b.name branch,DATE_FORMAT(c.order_date,'%d-%m-%Y') as order_date,d.orderno,pro.product_name,d.weight,d.rate
                FROM customerorder c
                left join branch b on (b.id_branch=c.order_from)
                LEFT JOIN customerorderdetails d ON d.id_customerorder=c.id_customerorder
                left join ret_product_master as pro on(pro.pro_id=d.id_product)
                WHERE date(c.order_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and c.order_from= ".$id_branch."" :'')." and c.order_for='2' and d.orderstatus = 0 order by c.order_from desc");
                return $sql->result_array();
            break;
            case "2":
                $sql=$this->db->query("SELECT (d.totalitems) as piece,b.name branch,DATE_FORMAT(c.order_date,'%d-%m-%Y') as order_date,d.orderno,pro.product_name,d.weight,d.rate
                FROM customerorder c
                LEFT JOIN customerorderdetails d ON d.id_customerorder=c.id_customerorder
                left join branch b on (b.id_branch=c.order_from)
                left join ret_product_master as pro on(pro.pro_id=d.id_product)
                WHERE date(c.order_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and c.order_from= ".$id_branch."" :'')." and c.order_for='2' and d.orderstatus = 3 order by c.order_from desc");
                return $sql->result_array();
            break;
            case "3":
                $sql=$this->db->query("SELECT (d.totalitems) as piece,b.name branch,DATE_FORMAT(c.order_date,'%d-%m-%Y') as order_date,d.orderno,pro.product_name,d.weight,d.rate
                FROM customerorder c
                LEFT JOIN customerorderdetails d ON d.id_customerorder=c.id_customerorder
                left join branch b on (b.id_branch=c.order_from)
                left join ret_product_master as pro on(pro.pro_id=d.id_product)
                WHERE date(c.order_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and c.order_from= ".$id_branch."" :'')." and c.order_for='2' and d.orderstatus <= 2 order by c.order_from desc");
                return $sql->result_array();
            break;
            case "4":
                $sql=$this->db->query("SELECT (d.totalitems) as piece,b.name branch,DATE_FORMAT(c.order_date,'%d-%m-%Y') as order_date,d.orderno,pro.product_name,d.weight,d.rate
                FROM customerorder c
                LEFT JOIN customerorderdetails d ON d.id_customerorder=c.id_customerorder
                left join branch b on (b.id_branch=c.order_from)
                left join ret_product_master as pro on(pro.pro_id=d.id_product)
                WHERE date(c.order_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and c.order_from= ".$id_branch."" :'')." and c.order_for='2' and d.orderstatus = 4 order by c.order_from desc");
                return $sql->result_array();
            break;
            case "5":
                $sql=$this->db->query("SELECT (d.totalitems) as piece,b.name branch,DATE_FORMAT(c.order_date,'%d-%m-%Y') as order_date,d.orderno,pro.product_name,d.weight,d.rate
                FROM customerorder c
                LEFT JOIN customerorderdetails d ON d.id_customerorder=c.id_customerorder
                left join branch b on (b.id_branch=c.order_from)
                left join ret_product_master as pro on(pro.pro_id=d.id_product)
                WHERE date(c.order_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                ".($id_branch!='' && $id_branch>0 ? " and c.order_from= ".$id_branch."" :'')." and c.order_for='2' and d.orderstatus = 5 order by c.order_from desc");
                return $sql->result_array();
            break;
        }
    }
     //Old Metal Opening stock
    function get_OpeningStockDetails()
    {
        $sql=$this->db->query("SELECT s.id_metal_stock,s.closing_wt,s.closing_purity,mt.metal as metal_name,t.metal_type as metal_type,emp.firstname as emp_name,date_format(s.date,'%d-%m-%Y') as date_add,s.closing_amt
        FROM ret_purchase_item_stock s
        LEFT JOIN metal mt ON mt.id_metal=s.id_metal
        LEFT JOIN ret_old_metal_type t ON t.id_metal_type=s.id_metal_category
        LEFT JOIN employee emp ON emp.id_employee=s.created_by
        WHERE s.stock_type=3");
        return $sql->result_array();
    }
    function get_metal_stock_details($data)
    {
        //print_r($data);exit;
        $return_data=array();
        $day_closing=$this->getBranchDayClosingData($data['id_branch']);
        $date=($day_closing['is_day_closed']==1 ? $day_closing['entry_date']:date("Y-m-d"));
        $d1 = date_create($data['from_date']);
        $d2 = date_create($data['to_date']);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        $op_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        if($data['report_type']==1) // SALES RETURN
        {
            if(($FromDt!=$date) && ($ToDt!=$date))
            {
                    $sql = $this->db->query("SELECT p.product_name,p.pro_id,s.op_blc_pcs,s.op_blc_gwt,s.op_blc_nwt,s.inw_pcs,
                    s.inw_gwt,s.inw_nwt,s.out_ward_pcs as outward_pcs,s.outward_gwt,s.outward_nwt,
                    s.closing_gwt,s.closing_nwt as closing_nwt,s.closing_pcs
                    From ret_purchase_item_stock s
                    LEFT JOIN ret_product_master p on p.pro_id=s.id_product
                    where date(s.date) BETWEEN '$FromDt' AND '$ToDt' and s.stock_type=2
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and s.id_branch=".$data['id_branch']."" :'')."
                    Having closing_pcs>0");
                    //print_r($this->db->last_query());exit;
                    $return_data=$sql->result_array();
            }
            else
            {
                    $sql=$this->db->query("SELECT p.product_name,p.pro_id,
                    IFNULL(op_blc.closing_gwt,0) as op_blc_gwt,IFNULL(op_blc.closing_nwt,0) as op_blc_nwt,IFNULL(op_blc.closing_pcs,0) as op_blc_pcs,
                    IFNULL(inw.inw_pcs,0) as inw_pcs,IFNULL(inw.inw_gwt,0) as inw_gwt,IFNULL(inw.inw_nwt,0) as inw_nwt,
                    IFNULL(out_ward.br_out_pcs,0) as br_out_pcs,IFNULL(out_ward.br_out_gwt,0) as br_out_gwt,IFNULL(out_ward.br_out_nwt,0) as br_out_nwt
                    FROM ret_product_master p
                    LEFT JOIN(SELECT IFNULL(SUM(m.closing_gwt),0) as closing_gwt,IFNULL(SUM(m.closing_pcs),0) as closing_pcs,IFNULL(SUM(m.closing_nwt),0) as closing_nwt,p.pro_id
                    FROM ret_purchase_item_stock m
                    LEFT JOIN ret_product_master p ON p.pro_id=m.id_product
                    where (date(m.date) BETWEEN '".date('Y-m-d',strtotime($op_date))."' AND '".date('Y-m-d',strtotime($op_date))."') and (m.stock_type=2)
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m.id_branch=".$data['id_branch']."" :'')."
                    GROUP by p.pro_id) as op_blc ON op_blc.pro_id=p.pro_id
                    LEFT JOIN(SELECT IFNULL(SUM(tag.piece),0) as inw_pcs,IFNULL(SUM(tag.gross_wt),0) as inw_gwt,IFNULL(SUM(tag.net_wt),0) as inw_nwt,p.pro_id
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_taging tag ON tag.tag_id=l.tag_id
                    LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                    LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
                    LEFT JOIN ret_bill_details d on d.tag_id=tag.tag_id
                    LEFT JOIN ret_billing b on b.bill_id=l.bill_id
                    WHERE tag.tag_status=6  and (l.item_type=2) and b.bill_status=1
                    and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
                    GROUP by p.pro_id) AS inw ON inw.pro_id=p.pro_id
                    LEFT JOIN(SELECT IFNULL(SUM(tag.piece),0) as br_out_pcs,IFNULL(SUM(tag.gross_wt),0) as br_out_gwt,IFNULL(SUM(tag.net_wt),0) as br_out_nwt,p.pro_id
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_taging tag ON tag.tag_id=l.tag_id
                    LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                    LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
                    WHERE (l.item_type=2) and (l.status=2 or l.status=3)
                    and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
                    GROUP by p.pro_id) AS out_ward ON out_ward.pro_id=p.pro_id
                    WHERE p.pro_id is NOT NULL order by p.pro_id ASC");
                    //print_r($this->db->last_query());exit;
                    $result=$sql->result_array();
                    foreach($result as $items)
                    {
                        $closing_gwt=number_format($items['op_blc_gwt']+$items['inw_gwt']-$items['br_out_gwt'],3,'.','');
                        $closing_nwt=number_format($items['op_blc_nwt']+$items['inw_nwt']-$items['br_out_nwt'],3,'.','');
                        if($closing_gwt>0 || $closing_nwt>0 || $items['inw_pcs']>0 || $items['br_out_pcs']>0)
                        {
                            $return_data[]=array(
                                            'product_name'=>$items['product_name'],
                                            'pro_id'=>$items['pro_id'],
                                            'op_blc_pcs'=>$items['op_blc_pcs'],
                                            'op_blc_gwt'=>$items['op_blc_gwt'],
                                            'op_blc_nwt'=>$items['op_blc_nwt'],
                                            'inw_pcs'=>$items['inw_pcs'],
                                            'inw_gwt'=>$items['inw_gwt'],
                                            'inw_nwt'=>$items['inw_nwt'],
                                            'outward_pcs'=>$items['br_out_pcs'],
                                            'outward_gwt'=>$items['br_out_gwt'],
                                            'outward_nwt'=>$items['br_out_nwt'],
                                            'closing_pcs'=>($items['op_blc_pcs']+$items['inw_pcs']-$items['br_out_pcs']),
                                            'closing_gwt'=>($items['op_blc_gwt']+$items['inw_gwt']-$items['br_out_gwt']),
                                            'closing_nwt'=>($items['op_blc_nwt']+$items['inw_nwt']-$items['br_out_nwt']),
                                            );
                        }
                    }
            }
        }
        else if($data['report_type']==2) // PARTLY SALE
        {
            if(($FromDt!=$date) && ($ToDt!=$date))
            {
                $sql = $this->db->query("SELECT p.product_name,p.pro_id,s.op_blc_pcs,s.op_blc_gwt,s.op_blc_nwt,s.inw_pcs,
                    s.inw_gwt,s.inw_nwt,s.out_ward_pcs as outward_pcs,s.outward_gwt,s.outward_nwt,
                    s.closing_gwt,s.closing_nwt as closing_nwt,s.closing_pcs
                    From ret_purchase_item_stock s
                    LEFT JOIN ret_product_master p on p.pro_id=s.id_product
                    where date(s.date) BETWEEN '$FromDt' AND '$ToDt' and s.stock_type=3
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and s.id_branch=".$data['id_branch']."" :'')."
                    ");
                    //print_r($this->db->last_query());exit;
                    $return_data=$sql->result_array();
            }
            else
            {
                    $sql=$this->db->query("SELECT p.product_name,p.pro_id,
                    IFNULL(op_blc.closing_gwt,0) as op_blc_gwt,IFNULL(op_blc.closing_nwt,0) as op_blc_nwt,IFNULL(op_blc.closing_pcs,0) as op_blc_pcs,
                    IFNULL(inw.inw_pcs,0) as inw_pcs,IFNULL(inw.inw_gwt,0) as inw_gwt,IFNULL(inw.inw_nwt,0) as inw_nwt,
                    IFNULL(out_ward.br_out_pcs,0) as br_out_pcs,IFNULL(out_ward.br_out_gwt,0) as br_out_gwt,IFNULL(out_ward.br_out_nwt,0) as br_out_nwt
                    FROM ret_product_master p
                    LEFT JOIN(SELECT IFNULL(SUM(m.closing_gwt),0) as closing_gwt,IFNULL(SUM(m.closing_pcs),0) as closing_pcs,IFNULL(SUM(m.closing_nwt),0) as closing_nwt,p.pro_id
                    FROM ret_purchase_item_stock m
                    LEFT JOIN ret_product_master p ON p.pro_id=m.id_product
                    where (date(m.date) BETWEEN '".date('Y-m-d',strtotime($op_date))."' AND '".date('Y-m-d',strtotime($op_date))."') and (m.stock_type=3)
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m.id_branch=".$data['id_branch']."" :'')."
                    GROUP by p.pro_id) as op_blc ON op_blc.pro_id=p.pro_id
                    LEFT JOIN(
                    SELECT IFNULL(SUM(l.gross_wt),0) as inw_gwt,'0' as inw_nwt,p.pro_id,'0' as inw_pcs
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_bill_details d ON d.bill_det_id=l.sold_bill_det_id
                    LEFT JOIN ret_partlysold tag ON tag.sold_bill_det_id=d.bill_det_id
                    LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
                    LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                    LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                    WHERE d.is_partial_sale=1 and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    AND b.bill_status=1 and l.item_type=3 and (l.status=1)
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
                    GROUP by p.pro_id
                    ) AS inw ON inw.pro_id=p.pro_id
                    LEFT JOIN(SELECT SUM(l.gross_wt) as  br_out_gwt,'0' as br_out_pcs,'0' as br_out_nwt,p.pro_id
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_bill_details d ON d.tag_id=l.tag_id
                    LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
                    LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
                    LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                    WHERE l.item_type=3 and (l.status=2 or l.status=3) and b.bill_status=1 and d.item_type=0
                    and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                   ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
                    GROUP by p.pro_id) as out_ward ON out_ward.pro_id=p.pro_id
                    WHERE p.pro_id is NOT NULL order by p.pro_id ASC");
                    //print_r($this->db->last_query());exit;
                    $result=$sql->result_array();
                    foreach($result as $items)
                    {
                        $closing_gwt=number_format($items['op_blc_gwt']+$items['inw_gwt']-$items['br_out_gwt'],3,'.','');
                        $closing_nwt=number_format($items['op_blc_nwt']+$items['inw_nwt']-$items['br_out_nwt'],3,'.','');
                        if($closing_gwt!=0 || $closing_nwt!=0 || $items['inw_gwt']!=0 || $items['br_out_gwt']!=0)
                        {
                            $return_data[]=array(
                                            'product_name'=>$items['product_name'],
                                            'pro_id'=>$items['pro_id'],
                                            'op_blc_pcs'=>$items['op_blc_pcs'],
                                            'op_blc_gwt'=>$items['op_blc_gwt'],
                                            'op_blc_nwt'=>$items['op_blc_nwt'],
                                            'inw_pcs'=>$items['inw_pcs'],
                                            'inw_gwt'=>$items['inw_gwt'],
                                            'inw_nwt'=>$items['inw_nwt'],
                                            'outward_pcs'=>$items['br_out_pcs'],
                                            'outward_gwt'=>$items['br_out_gwt'],
                                            'outward_nwt'=>$items['br_out_nwt'],
                                            'closing_pcs'=>($items['op_blc_pcs']+$items['inw_pcs']-$items['br_out_pcs']),
                                            'closing_gwt'=>($items['op_blc_gwt']+$items['inw_gwt']-$items['br_out_gwt']),
                                            'closing_nwt'=>($items['op_blc_nwt']+$items['inw_nwt']-$items['br_out_nwt']),
                                            );
                        }
                    }
            }
        }
        else if($data['report_type']==3) // OLD METAL
        {
            if(($FromDt!=$date) && ($ToDt!=$date))
            {
                $sql = $this->db->query("SELECT t.id_old_metal_cat as id_metal_type,s.op_blc_pcs,s.op_blc_gwt,s.op_blc_nwt,s.inw_pcs,
                s.inw_gwt,s.inw_nwt,s.out_ward_pcs as br_out_pcs,s.outward_gwt as br_out_gwt,s.outward_nwt as br_out_nwt,
                s.closing_gwt,s.closing_nwt as closing_nwt,t.old_metal_cat as metal_type
				From ret_purchase_item_stock s
				LEFT JOIN ret_old_metal_category t on t.id_old_metal_cat=s.id_old_metal_type
				where date(s.date) BETWEEN '$FromDt' AND '$ToDt' and s.stock_type=0
				 ".($data['id_branch']!='' && $data['id_branch']>0 ? " and s.id_branch=".$data['id_branch']."" :'')." ");
				//print_r($this->db->last_query());exit;
				$result=$sql->result_array();
				$return_data=$result;
            }
            else
            {
                    $sql=$this->db->query("SELECT t.id_old_metal_cat as id_metal_type,t.old_metal_cat as metal_type,
                    (IFNULL(inw.inw_gwt,0)+IFNULL(adv_inw.inw_gwt,0)) as inw_gwt,(IFNULL(inw.inw_nwt,0)+IFNULL(adv_inw.inw_nwt,0)) as inw_nwt,
                    IFNULL(op_blc.closing_nwt,0) as op_blc_nwt,IFNULL(op_blc.closing_gwt,0) as op_blc_gwt,
                    IFNULL(br_out.br_out_gwt,0) as br_out_gwt,IFNULL(br_out.br_out_nwt,0) as br_out_nwt,
                    IFNULL(retag.br_out_gwt,0) as retag_gwt,IFNULL(retag.br_out_nwt,0) as retag_nwt
                    FROM ret_old_metal_category t
                    LEFT JOIN(SELECT IFNULL(SUM(m.closing_gwt),0) as closing_gwt,IFNULL(SUM(m.closing_nwt),0) as closing_nwt,m.id_old_metal_type
                    FROM ret_purchase_item_stock m
                    where (date(m.date) BETWEEN '".date('Y-m-d',strtotime($op_date))."' AND '".date('Y-m-d',strtotime($op_date))."')
                    and m.stock_type=0
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m.id_branch=".$data['id_branch']."" :'')."
                    GROUP by m.id_old_metal_type) as op_blc ON op_blc.id_old_metal_type=t.id_old_metal_cat
                    LEFT JOIN(SELECT IFNULL(SUM(s.gross_wt),0) as inw_gwt,IFNULL(SUM(s.net_wt),0) as inw_nwt,e.id_old_metal_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_bill_old_metal_sale_details s ON s.old_metal_sale_id=l.old_metal_sale_id
                    LEFT JOIN ret_estimation_old_metal_sale_details e ON e.old_metal_sale_id=s.esti_old_metal_sale_id
                    LEFT JOIN ret_billing b ON b.bill_id=s.bill_id
                    WHERE b.bill_status=1 and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
                    GROUP by e.id_old_metal_category) as inw ON inw.id_old_metal_category=t.id_old_metal_cat
                    LEFT JOIN (SELECT IFNULL(SUM(s.gross_wt),0) as inw_gwt,IFNULL(SUM(s.net_wt),0) as inw_nwt,s.id_old_metal_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_issue_receipt i ON i.id_issue_receipt=l.id_issue_receipt
                    LEFT JOIN ret_adv_receipt_weight w ON w.id_issue_receipt=i.id_issue_receipt
                    LEFT JOIN ret_estimation_old_metal_sale_details s ON s.old_metal_sale_id=w.est_old_metal_sale_id
                    WHERE s.purchase_status=3 AND i.bill_status=1 and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
                    GROUP by s.id_old_metal_category) as adv_inw ON adv_inw.id_old_metal_category=t.id_old_metal_cat
                    LEFT JOIN(SELECT IFNULL(SUM(s.gross_wt),0) as br_out_gwt,IFNULL(SUM(s.net_wt),0) as br_out_nwt,e.id_old_metal_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_bill_old_metal_sale_details s ON s.old_metal_sale_id=l.old_metal_sale_id
                    LEFT JOIN ret_estimation_old_metal_sale_details e ON e.old_metal_sale_id=s.esti_old_metal_sale_id
                    LEFT JOIN ret_billing b ON b.bill_id=s.bill_id
                    WHERE b.bill_status=1 and (l.status=2 or l.status=3) and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
                    GROUP by e.id_old_metal_category) as br_out ON br_out.id_old_metal_category=t.id_old_metal_cat
                    LEFT JOIN(SELECT IFNULL(SUM(s.gross_wt),0) as br_out_gwt,IFNULL(SUM(s.net_wt),0) as br_out_nwt,e.id_old_metal_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_bill_old_metal_sale_details s ON s.old_metal_sale_id=l.old_metal_sale_id
                    LEFT JOIN ret_estimation_old_metal_sale_details e ON e.old_metal_sale_id=s.esti_old_metal_sale_id
                    WHERE (l.status=4) and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
                    GROUP by e.id_old_metal_category) as retag ON retag.id_old_metal_category=t.id_old_metal_cat
                    GROUP by t.id_old_metal_cat");
                    //print_r($this->db->last_query());exit;
                    $result=$sql->result_array();
                    foreach($result as $items)
                    {
                        $closing_gwt=number_format(($items['op_blc_gwt']+$items['inw_gwt']-$items['br_out_gwt']-$items['retag_gwt']),3,'.','');
                        $closing_nwt=number_format(($items['op_blc_nwt']+$items['inw_nwt']-$items['br_out_nwt']-$items['retag_nwt']),3,'.','');
                        if($closing_gwt!='' || $closing_nwt!='')
                        {
                            $return_data[]=array(
                                            'metal_type'    =>$items['metal_type'],
                                            'inw_gwt'       =>$items['inw_gwt'],
                                            'inw_nwt'       =>$items['inw_nwt'],
                                            'op_blc_nwt'    =>$items['op_blc_nwt'],
                                            'op_blc_gwt'    =>$items['op_blc_gwt'],
                                            'br_out_gwt'    =>$items['br_out_gwt']+$items['retag_gwt'],
                                            'br_out_nwt'    =>$items['br_out_nwt']+$items['retag_nwt'],
                                            'closing_gwt'   =>number_format(($items['op_blc_gwt']+$items['inw_gwt']-$items['br_out_gwt']),3,'.',''),
                                            'closing_nwt'   =>number_format(($items['op_blc_nwt']+$items['inw_nwt']-$items['br_out_nwt']),3,'.',''),
                                            );
                        }
                    }
            }
        }
        else if($data['report_type']==4) // OLD METAL PROCESS
        {
            if(($FromDt!=$date) && ($ToDt!=$date))
            {
                $sql=$this->db->query("SELECT c.name as metal_type,m.op_blc_nwt,m.op_blc_gwt,
                m.inw_gwt,m.inw_nwt,m.outward_gwt as br_out_gwt,m.outward_nwt as br_out_nwt,
                m.closing_gwt,m.closing_nwt
                FROM ret_purchase_item_stock m
                LEFT JOIN ret_category c ON c.id_ret_category=m.id_ret_category
                WHERE date(m.date) BETWEEN '$FromDt' AND '$ToDt' AND m.stock_type=4
                 ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m.id_branch=".$data['id_branch']."" :'')." ");
                //print_r($this->db->last_query());exit;
                $result=$sql->result_array();
                foreach($result as $items)
                {
                    if($items['closing_gwt']>0 || $items['closing_nwt']>0)
                    {
                        $return_data[]=$items;
                    }
                }
            }
            else
            {
                    $sql=$this->db->query("SELECT c.id_ret_category,c.name as metal_type,
                    IFNULL(op_blc.closing_gwt,0) as op_blc_gwt,IFNULL(op_blc.closing_nwt,0) as op_blc_nwt,
                    (IFNULL(process_inw.inw_nwt,0)+IFNULL(testing_process_inw.inw_nwt,0)+IFNULL(refining_process_inw.inw_nwt,0)) as inw_nwt,
                    (IFNULL(process_out.process_out_wt,0)+IFNULL(refining_out.process_out_wt,0)) as out_ward_nwt
                    FROM ret_category c
                    LEFT JOIN(SELECT IFNULL(SUM(m.closing_gwt),0) as closing_gwt,IFNULL(SUM(m.closing_nwt),0) as closing_nwt,m.id_ret_category
                    FROM ret_purchase_item_stock m
                    where (date(m.date) BETWEEN '".date('Y-m-d',strtotime($op_date))."' AND '".date('Y-m-d',strtotime($op_date))."')
                    and m.stock_type=4  ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m.id_branch=".$data['id_branch']."" :'')."
                    GROUP by m.id_ret_category) as op_blc ON op_blc.id_ret_category=c.id_ret_category
                    LEFT JOIN (SELECT IFNULL((d.received_wt),0) as inw_nwt,d.received_category as id_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_old_metal_process p ON p.id_old_metal_process=l.id_old_metal_process
                    LEFT JOIN ret_old_metal_melting m ON m.id_old_metal_process=p.id_old_metal_process
                    LEFT JOIN ret_old_metal_melting_recd_details d on d.id_melting=m.id_melting
                    WHERE l.id_old_metal_process IS NOT NULL AND l.item_type=4 and d.received_category IS NOT NULL
                    and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
                    GROUP by d.received_category) as process_inw ON process_inw.id_category=c.id_ret_category
                    LEFT JOIN (SELECT IFNULL(SUM(t.received_wt),0) as inw_nwt,d.received_category as id_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_old_metal_testing t ON t.id_old_metal_process_receipt=l.id_old_metal_process
                    LEFT JOIN ret_old_metal_melting_recd_details d on d.id_melting_recd=t.id_melting_recd
                    LEFT JOIN ret_old_metal_process p ON p.id_old_metal_process=l.id_old_metal_process
                    WHERE l.id_old_metal_process IS NOT NULL AND l.item_type=4
                    and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
                    AND l.status=1 AND p.process_for=2
                    GROUP by d.received_category) as testing_process_inw ON testing_process_inw.id_category=c.id_ret_category
                    LEFT JOIN(SELECT IFNULL(SUM(d.received_wt),0) as inw_nwt,d.received_category as id_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_old_metal_refining ref ON ref.id_old_metal_process_receipt=l.id_old_metal_process
                    LEFT JOIN ret_old_metal_refining_details d ON d.id_metal_refining=ref.id_metal_refining
                    WHERE l.id_old_metal_process IS NOT NULL AND l.item_type=4 and d.received_category IS NOT NULL
                    and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
                    GROUP by d.received_category) as refining_process_inw on refining_process_inw.id_category=c.id_ret_category
                    LEFT JOIN (SELECT p.id_old_metal_process,IFNULL(SUM(t.net_wt),0) as process_out_wt,d.received_category as id_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_old_metal_testing t ON t.id_old_metal_process=l.id_old_metal_process
                    LEFT JOIN ret_old_metal_process p ON p.id_old_metal_process=t.id_old_metal_process
                    LEFT JOIN ret_old_metal_melting_recd_details d on d.id_melting_recd=t.id_melting_recd
                    WHERE l.item_type=5 AND p.process_for=1 and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
                    GROUP by d.received_category) as process_out ON process_out.id_category=c.id_ret_category
                    LEFT JOIN (SELECT p.id_old_metal_process,IFNULL(SUM(t.received_wt),0) as process_out_wt,d.received_category as id_category
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_old_metal_refining r ON r.id_old_metal_process=l.id_old_metal_process
                    LEFT JOIN ret_old_metal_testing t ON t.id_metal_testing=r.id_metal_testing
                    LEFT JOIN ret_old_metal_melting_recd_details d on d.id_melting_recd=t.id_melting_recd
                    LEFT JOIN ret_old_metal_melting m ON m.id_melting=d.id_melting
                    LEFT JOIN ret_old_metal_process p ON p.id_old_metal_process=l.id_old_metal_process
                    WHERE l.item_type=5 AND d.melting_status=4 AND p.process_for=1 and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
                    GROUP by d.received_category) as refining_out ON refining_out.id_category=c.id_ret_category
                    ");
                    //print_r($this->db->last_query());exit;
                    $result=$sql->result_array();
                    foreach($result as $items)
                    {
                        $closing_gwt=number_format(($items['op_blc_nwt']+$items['inw_nwt']-$items['out_ward_nwt']),3,'.','');
                        $closing_nwt=number_format(($items['op_blc_nwt']+$items['inw_nwt']-$items['out_ward_nwt']),3,'.','');
                        if($closing_gwt>0 || $closing_nwt>0 || $items['inw_nwt']>0 || $items['out_ward_nwt']>0)
                        {
                            $return_data[]=array(
                                            'metal_type'    =>$items['metal_type'],
                                            'inw_gwt'       =>$items['inw_nwt'],
                                            'inw_nwt'       =>$items['inw_nwt'],
                                            'op_blc_nwt'    =>$items['op_blc_nwt'],
                                            'op_blc_gwt'    =>$items['op_blc_nwt'],
                                            'br_out_gwt'    =>$items['out_ward_nwt'],
                                            'br_out_nwt'    =>$items['out_ward_nwt'],
                                            'closing_gwt'   =>number_format(($items['op_blc_nwt']+$items['inw_nwt']-$items['out_ward_nwt']),3,'.',''),
                                            'closing_nwt'   =>number_format(($items['op_blc_nwt']+$items['inw_nwt']-$items['out_ward_nwt']),3,'.',''),
                                            );
                        }
                    }
            }
        }
        else if($data['report_type']==5) // BULLION PURCHASE
        {
            if(($FromDt!=$date) && ($ToDt!=$date))
            {
                    $sql = $this->db->query("SELECT p.product_name,p.pro_id,s.op_blc_pcs,s.op_blc_gwt,s.op_blc_nwt,s.inw_pcs,
                    s.inw_gwt,s.inw_nwt,s.out_ward_pcs as outward_pcs,s.outward_gwt,s.outward_nwt,
                    s.closing_gwt,s.closing_nwt as closing_nwt,s.closing_pcs
                    FROM ret_purchase_item_stock s
                    LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
                    where (date(s.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($date))."') and (s.stock_type=1)
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and s.id_branch=".$data['id_branch']."" :'')."
                    GROUP by p.pro_id");
                    //print_r($this->db->last_query());exit;
                    $result=$sql->result_array();
                    $return_data=$result;
            }
            else
            {
                    $sql=$this->db->query("SELECT p.product_name,p.pro_id,
                    IFNULL(op_blc.closing_gwt,0) as op_blc_gwt,IFNULL(op_blc.closing_nwt,0) as op_blc_nwt,IFNULL(op_blc.closing_pcs,0) as op_blc_pcs,
                    IFNULL(inw.inw_pcs,0) as inw_pcs,IFNULL(inw.inw_gwt,0) as inw_gwt,IFNULL(inw.inw_nwt,0) as inw_nwt,
                    outward.out_pcs as br_out_pcs,IFNULL(outward.out_gwt,0) as br_out_gwt,IFNULL(outward.out_nwt,0) as br_out_nwt
                    FROM ret_product_master p
                    LEFT JOIN(SELECT IFNULL(SUM(m.closing_gwt),0) as closing_gwt,IFNULL(SUM(m.closing_pcs),0) as closing_pcs,IFNULL(SUM(m.closing_nwt),0) as closing_nwt,p.pro_id
                    FROM ret_purchase_item_stock m
                    LEFT JOIN ret_product_master p ON p.pro_id=m.id_product
                    where (date(m.date) BETWEEN '".date('Y-m-d',strtotime($op_date))."' AND '".date('Y-m-d',strtotime($op_date))."') and (m.stock_type=1)
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m.id_branch=".$data['id_branch']."" :'')."
                    GROUP by p.pro_id) as op_blc ON op_blc.pro_id=p.pro_id
                    LEFT JOIN(
                    SELECT '0' as inw_pcs,IFNULL(SUM(l.gross_wt),0) as inw_gwt,IFNULL(SUM(l.net_wt),0) as inw_nwt,l.id_product as pro_id
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_product_master p ON p.pro_id=l.id_product
                    WHERE l.item_type=6 and l.status=1
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
                    and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    GROUP by p.pro_id
                    ) AS inw ON inw.pro_id=p.pro_id
                    LEFT JOIN(
                    SELECT '0' as out_pcs,IFNULL(SUM(l.gross_wt),0) as out_gwt,IFNULL(SUM(l.net_wt),0) as out_nwt,l.id_product as pro_id
                    FROM ret_purchase_items_log l
                    LEFT JOIN ret_product_master p ON p.pro_id=l.id_product
                    WHERE l.item_type=6 and l.status=3
                    ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
                    and (date(l.date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                    GROUP by p.pro_id
                    ) AS outward ON outward.pro_id=p.pro_id
                    WHERE p.pro_id is NOT NULL order by p.pro_id ASC");
                    //print_r($this->db->last_query());exit;
                    $result=$sql->result_array();
                    foreach($result as $items)
                    {
                        $closing_gwt=($items['op_blc_gwt']+$items['inw_gwt']-$items['br_out_gwt']);
                        $closing_nwt=($items['op_blc_nwt']+$items['inw_nwt']-$items['br_out_nwt']);
                        if($closing_gwt!=0 || $closing_nwt!=0)
                        {
                            $return_data[]=array(
                                            'product_name'=>$items['product_name'],
                                            'pro_id'=>$items['pro_id'],
                                            'op_blc_pcs'=>$items['op_blc_pcs'],
                                            'op_blc_gwt'=>$items['op_blc_gwt'],
                                            'op_blc_nwt'=>$items['op_blc_nwt'],
                                            'inw_pcs'=>$items['inw_pcs'],
                                            'inw_gwt'=>$items['inw_gwt'],
                                            'inw_nwt'=>$items['inw_nwt'],
                                            'outward_pcs'=>$items['br_out_pcs'],
                                            'outward_gwt'=>$items['br_out_gwt'],
                                            'outward_nwt'=>$items['br_out_nwt'],
                                            'closing_pcs'=>($items['op_blc_pcs']+$items['inw_pcs']-$items['br_out_pcs']),
                                            'closing_gwt'=>number_format($closing_gwt,3,'.',''),
                                            'closing_nwt'=>number_format($closing_nwt,3,'.',''),
                                            );
                        }
                    }
            }
        }
        return $return_data;
    }
    //Metal Stock Details
    //Purchase bills report start here
    function get_purchasebills_details($data)
    {
    	$d1     = date_create($data['from_date']);
    	$d2     = date_create($data['to_date']);
    	$FromDt = date_format($d1,"Y-m-d");
    	$ToDt   = date_format($d2,"Y-m-d");
    	$type   = !empty($data['type']) ? $data['type'] : 0;
    	$karigar= !empty($data['karigar']) ? $data['karigar'] : 0;
    	$return_data = array();
		$multiple_metal = implode(' , ', $data['id_metal']);
		if($multiple_metal != '')
		{
			$id_metal = $multiple_metal;
		}else{
			$id_metal = $data['id_metal'];
		}
		if($data['report_type']==1)
		{
			$sql    = $this->db->query("SELECT pitm.po_item_id,p.po_id, p.po_ref_no, date_format(p.po_date,'%d-%m-%Y') as po_date, k.firstname as karigar,
			p.ewaybillno, k.contactno1 as mobile, concat(ifnull(k.address1,''), ifnull(k.address2,'')) as address,
			pitm.gross_wt, pitm.less_wt, pitm.net_wt, ifnull(pitm.item_wastage, 0) as item_wastage,
			pitm.purchase_touch, pitm.no_of_pcs, ifnull(grn.grn_ref_no, '') as grn_ref_no,
			if(pitm.mc_type = 1, 'Per Grm', 'Per Pc') as mc_type, ifnull(pitm.mc_value, 0) as mc_value,
			c.name as category_name,pur.purity, pr.product_name, des.design_name,
			sd.sub_design_name, item_pure_wt as purewt , fix_rate_per_grm,
			item_cost,IFNULL((total_tax),0) as total_tax,ifnull(posti.stwt, 0) stwt, ifnull(stn.stamount, 0) as stamount,
			ifnull(pooitm.otherwt, 0) as otherwt, ifnull(pooitm.otheramt, 0) as otheramount,ifnull(pitm.remark,'') as remark,
			IFNULL(m.uom_name,'') as uom_name,e.firstname as emp_name,ifnull(nt.stwt, 0) nt_stwt,pr.stone_type
			FROM ret_purchase_order_items as pitm
			LEFT JOIN  ret_purchase_order p ON p.po_id = pitm.po_item_po_id
			LEFT JOIN  ret_grn_entry grn ON grn.grn_id = p.po_grn_id
			LEFT JOIN ret_karigar k ON k.id_karigar=p.po_karigar_id
			LEFT JOIN ret_category c on c.id_ret_category=pitm.po_item_cat_id
			LEFT JOIN ret_product_master pr ON pr.pro_id = pitm.po_item_pro_id
			LEFT JOIN ret_design_master des ON des.design_no = pitm.po_item_des_id
			LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = pitm.po_item_sub_des_id
			LEFT JOIN ret_purity pur on pur.id_purity = pitm.id_purity
			LEFT JOIN ret_uom m ON m.uom_id = pitm.uom
			LEFT JOIN employee e ON e.id_employee = p.created_by
            LEFT JOIN (SELECT po_item_id, sum(po_stone_wt) as stwt, sum(po_stone_amount) as stamount
				FROM ret_po_stone_items as po
				LEFT JOIN ret_stone as st ON st.stone_id = po.po_stone_id
				WHERE st.stone_type = 1
			GROUP BY po.po_item_id) as posti ON posti.po_item_id = pitm.po_item_id
            LEFT JOIN (SELECT po_item_id, sum(po_stone_wt) as stwt, sum(po_stone_amount) as stamount
				FROM ret_po_stone_items as po
				LEFT JOIN ret_stone as st ON st.stone_id = po.po_stone_id
				WHERE st.stone_type != 1
			GROUP BY po.po_item_id) as nt ON nt.po_item_id = pitm.po_item_id
			LEFT JOIN (SELECT po_item_id, sum(po_stone_wt) as stwt, sum(po_stone_amount) as stamount
				FROM ret_po_stone_items as po
				LEFT JOIN ret_stone as st ON st.stone_id = po.po_stone_id
			GROUP BY po.po_item_id) as stn ON stn.po_item_id = pitm.po_item_id
			LEFT JOIN (SELECT po_item_id, sum(po_other_item_gross_weight) as otherwt, sum(po_other_item_amount) as otheramt
				FROM ret_po_other_item  as itm
			GROUP BY itm.po_item_id) as pooitm ON pooitm.po_item_id = pitm.po_item_po_id
            WHERE p.is_approved = 1 and p.bill_status=".$data['bill_type']." and (date(p.po_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
			".($type !='' ? " and c.cat_type =".$type."" :'')."
			".($karigar !='' ? " and p.po_karigar_id =".$karigar."" :'')."
			".($data['id_category'] != '' && $data['id_category'] != 0 ? " and pitm.po_item_cat_id =".$data['id_category']."" :'')."
			".($data['id_product'] != '' && $data['id_product'] != 0 ? " and pitm.po_item_pro_id =".$data['id_product']."" :'')."
			".($data['id_design'] != '' && $data['id_design'] != 0 ? " and pitm.po_item_des_id =".$data['id_design']."" :'')."
			".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and pitm.po_item_sub_des_id =".$data['id_sub_design']."" :'')."
			".($id_metal != '' && $id_metal != 0 ? " and c.id_metal  in (".$id_metal.")" :'')."
            ".($data['grn_type'] != 0 && $data['grn_type'] != '' ? " and grn.grn_type =".$data['grn_type']."" :'')."
			");
			/*foreach($response_data as $key => $val){
			$response_data[$key]['billitems'] =   $this->get_purchase_billsitem_details($val['po_id']);
			}*/
		}
		else
		{
			$sql   = $this->db->query("SELECT pitm.po_item_id,p.po_id, p.po_ref_no, date_format(p.po_date,'%d-%m-%Y') as po_date, k.firstname as karigar,
            p.ewaybillno, k.contactno1 as mobile, concat(ifnull(k.address1,''), ifnull(k.address2,'')) as address,
            IFNULL(SUM(pitm.gross_wt),0) as gross_wt,  IFNULL(SUM(pitm.less_wt),0) as less_wt, IFNULL(SUM(pitm.net_wt),0) as net_wt, ifnull(SUM(pitm.item_wastage), 0) as item_wastage,
            IFNULL(SUM(pitm.purchase_touch),0) as purchase_touch,  IFNULL(SUM(pitm.no_of_pcs),0) as no_of_pcs , ifnull(grn.grn_ref_no, '') as grn_ref_no,
            if(pitm.mc_type = 1, 'Per Grm', 'Per Pc') as mc_type, ifnull(SUM(pitm.mc_value),0) as mc_value,
            c.name as category_name, pur.purity as  purity, pr.product_name, des.design_name,
            sd.sub_design_name, IFNULL(SUM(pitm.item_pure_wt),0) as purewt , IFNULL((pitm.fix_rate_per_grm),0) as fix_rate_per_grm,
            IFNULL(SUM(item_cost),0) as item_cost,IFNULL(SUM(total_tax),0) as total_tax, ifnull(posti.stwt, 0) stwt, ifnull(stn.stamount, 0) as stamount,
            ifnull(pooitm.otherwt, 0) as otherwt, ifnull(pooitm.otheramt, 0) as otheramount,ifnull(pitm.remark,'') as remark,
			e.firstname as emp_name,ifnull(nt.stwt, 0) nt_stwt,pr.stone_type
            FROM ret_purchase_order_items as pitm
            LEFT JOIN  ret_purchase_order p ON p.po_id = pitm.po_item_po_id
            LEFT JOIN  ret_grn_entry grn ON grn.grn_id = p.po_grn_id
            LEFT JOIN ret_karigar k ON k.id_karigar=p.po_karigar_id
            LEFT JOIN ret_category c on c.id_ret_category=pitm.po_item_cat_id
            LEFT JOIN ret_product_master pr ON pr.pro_id = pitm.po_item_pro_id
            LEFT JOIN metal mt ON mt.id_metal = c.id_metal
            LEFT JOIN ret_design_master des ON des.design_no = pitm.po_item_des_id
            LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = pitm.po_item_sub_des_id
            LEFT JOIN ret_purity pur on pur.id_purity = pitm.id_purity
			LEFT JOIN employee e ON e.id_employee = p.created_by
            LEFT JOIN (SELECT itm.po_item_po_id, sum(po_stone_wt) as stwt, sum(po_stone_amount) as stamount
                FROM ret_po_stone_items as po
				LEFT JOIN ret_purchase_order_items itm ON itm.po_item_id = po.po_item_id
				LEFT JOIN ret_category c ON c.id_ret_category = itm.po_item_cat_id
                LEFT JOIN ret_stone as st ON st.stone_id = po.po_stone_id
                WHERE st.stone_type = 1
				".($id_metal != '' && $id_metal != 0 ? " and c.id_metal  in (".$id_metal.")" :'')."
				".($data['id_category'] != '' && $data['id_category'] != 0 ? " and itm.po_item_cat_id =".$data['id_category']."" :'')."
				".($data['id_product'] != '' && $data['id_product'] != 0 ? " and itm.po_item_pro_id =".$data['id_product']."" :'')."
				".($data['id_design'] != '' && $data['id_design'] != 0 ? " and itm.po_item_des_id =".$data['id_design']."" :'')."
				".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and itm.po_item_sub_des_id =".$data['id_sub_design']."" :'')."
            GROUP BY itm.po_item_po_id) as posti ON posti.po_item_po_id = pitm.po_item_po_id
            LEFT JOIN (SELECT itm.po_item_po_id, sum(po_stone_wt) as stwt, sum(po_stone_amount) as stamount
                FROM ret_po_stone_items as po
                LEFT JOIN ret_purchase_order_items itm ON itm.po_item_id = po.po_item_id
                LEFT JOIN ret_category c ON c.id_ret_category = itm.po_item_cat_id
                LEFT JOIN ret_stone as st ON st.stone_id = po.po_stone_id
                WHERE st.stone_type != 1
                ".($id_category != '' && $id_category != 0 ? " and itm.po_item_cat_id in (".$id_category.")" :'')."
                ".($id_metal != '' && $id_metal != 0 ? " and c.id_metal  in (".$id_metal.")" :'')."
                ".($data['id_product'] != '' && $data['id_product'] != 0 ? " and itm.po_item_pro_id =".$data['id_product']."" :'')."
                ".($data['id_design'] != '' && $data['id_design'] != 0 ? " and itm.po_item_des_id =".$data['id_design']."" :'')."
                ".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and itm.po_item_sub_des_id =".$data['id_sub_design']."" :'')."
            GROUP BY itm.po_item_po_id) as nt ON nt.po_item_po_id = pitm.po_item_po_id
            LEFT JOIN (SELECT itm.po_item_po_id, sum(po_stone_wt) as stwt, sum(po_stone_amount) as stamount
                FROM ret_po_stone_items as po
				LEFT JOIN ret_purchase_order_items itm ON itm.po_item_id = po.po_item_id
				LEFT JOIN ret_category c ON c.id_ret_category = itm.po_item_cat_id
                LEFT JOIN ret_stone as st ON st.stone_id = po.po_stone_id
				where itm.po_item_po_id IS NOT NULL
				".($id_metal != '' && $id_metal != 0 ? " and c.id_metal  in (".$id_metal.")" :'')."
				".($data['id_category'] != '' && $data['id_category'] != 0 ? " and itm.po_item_cat_id =".$data['id_category']."" :'')."
				".($data['id_product'] != '' && $data['id_product'] != 0 ? " and itm.po_item_pro_id =".$data['id_product']."" :'')."
				".($data['id_design'] != '' && $data['id_design'] != 0 ? " and itm.po_item_des_id =".$data['id_design']."" :'')."
				".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and itm.po_item_sub_des_id =".$data['id_sub_design']."" :'')."
            GROUP BY itm.po_item_po_id) as stn ON stn.po_item_po_id = pitm.po_item_po_id
            LEFT JOIN (SELECT r.po_item_po_id, sum(po_other_item_gross_weight) as otherwt, sum(po_other_item_amount) as otheramt
                FROM ret_po_other_item  as itm
				LEFT JOIN ret_purchase_order_items r ON r.po_item_id = itm.po_item_id
            GROUP BY r.po_item_po_id) as pooitm ON pooitm.po_item_po_id = pitm.po_item_po_id
            WHERE p.is_approved = 1 and p.bill_status=".$data['bill_type']." and (date(p.po_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            ".($karigar !='' ? " and p.po_karigar_id =".$karigar."" :'')."
            ".($data['id_category'] != '' && $data['id_category'] != 0 ? " and pitm.po_item_cat_id =".$data['id_category']."" :'')."
            ".($data['id_product'] != '' && $data['id_product'] != 0 ? " and pitm.po_item_pro_id =".$data['id_product']."" :'')."
            ".($data['id_design'] != '' && $data['id_design'] != 0 ? " and pitm.po_item_des_id =".$data['id_design']."" :'')."
            ".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and pitm.po_item_sub_des_id =".$data['id_sub_design']."" :'')."
            ".($data['bill_type'] != '' && $data['bill_type'] != 0 ? " and p.bill_status =".$data['bill_type']."" :'')."
            ".($id_metal != '' && $id_metal != 0 ? " and c.id_metal  in (".$id_metal.")" :'')."
            ".($data['grn_type'] != 0 && $data['grn_type'] != '' ? " and grn.grn_type =".$data['grn_type']."" :'')."
            GROUP BY p.po_id");
		}
    	$response_data = $sql->result_array();
    	foreach($response_data as $key => $val){
    	$return_data[$val['po_ref_no']][] =   $val;
    	}
    	foreach($return_data as $key => $grndata){
    	foreach($grndata as $gkey => $gval){
    	if($gkey > 0){
    	$return_data[$key][$gkey]["karigar"] = "";
    	$return_data[$key][$gkey]["mobile"] = "";
    	$return_data[$key][$gkey]["po_date"] = "";
    	$return_data[$key][$gkey]["address"] = "";
    	$return_data[$key][$gkey]["po_ref_no"] = "";
    	$return_data[$key][$gkey]["ewaybillno"] = "";
    	}
    	}
    	}
    	return $return_data;
    }
    function get_grnbills_details($data)
    {
        $d1     = date_create($data['from_date']);
        $d2     = date_create($data['to_date']);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt   = date_format($d2,"Y-m-d");
        $type   = !empty($data['type']) ? $data['type'] : 0;
        $karigar= !empty($data['karigar']) ? $data['karigar'] : 0;
        $return_data = array();
        if($data['report_type']==2)
        {
            $sql    = $this->db->query("SELECT grnitm.grn_item_id,grn.grn_id,grn.grn_id, grn_karigar_id, kr.firstname as karigar, IFNULL(kr.gst_number,'') as gst_number, kr.contactno1 as mobile,
            concat(ifnull(kr.address1,''), ifnull(kr.address2,'')) as address,
            st.name as statename, ifnull(kr.pan_no, '') as panno, date_format(grn_date, '%d-%m-%Y') as grndate, grn_ref_no, IFNULL(grn_supplier_ref_no,'') as grn_supplier_ref_no,
            date_format(grn_ref_date, '%d-%m-%Y') as grn_ref_date, grn_other_charges, grn_discount, grn_purchase_amt, grn_purchase_wt,
            grn_pay_tds_percent, grn_pay_tds_value, grn_other_charges_tds_percent,  grn_other_charges_tds_value,
            IFNULL(cat.name,'') as category, cat.hsn_code, IFNULL(grn_gross_wt,0) as grn_gross_wt,IFNULL(grn_less_wt,0) as grn_less_wt,IFNULL(grn_wastage,0) as grn_wastage,IFNULL(grn_net_wt,0) as grn_net_wt,IFNULL(grn_no_of_pcs,0) as grn_no_of_pcs,IFNULL(grn_rate_per_grm,0) as grn_rate_per_grm,
            ifnull(grn_item_cost,0) as grn_item_cost, IFNULL(grn_item_gst_rate,0) as grn_item_gst_rate, IFNULL(grn_item_gst_value,0) as gsttaxpercent, IFNULL(grn_item_cgst,0) as grn_item_cgst, IFNULL(grn_item_sgst,0) as grn_item_sgst, IFNULL(grn_item_igst,0) as grn_item_igst,
            ifnull(grnchr.othercharge,0) as grnothercharge, ifnull(grnchr.chargewithtax,0) as otherchargewithtax,
            ifnull(grnchr.chargegst,0) as otherchargegst, ifnull(grnchr.chargecgst,0) as otherchargecgst, ifnull(grnchr.chargesgst,0) as otherchargesgst,
            ifnull(grnchr.chargeigst,0) as otherchargeigst,
            ifnull(grnst.stwt,0) as grnstonewt, ifnull(grnst.stamount,0) as grndiaamount,
            ifnull(grnom.otherwt,0) as grnomweight, ifnull(grnom.otheramt,0) as grnomamount, grn_tcs_percent, grn_tcs_value, grn_round_off,IFNULL(grnitm.grn_item_gst_value,'') as grn_item_gst_value
            FROM ret_grn_entry grn
            LEFT JOIN ret_grn_items as grnitm  ON grnitm.grn_item_grn_id = grn.grn_id
            LEFT JOIN (SELECT crg.grn_id, sum(grn_charge_value) as othercharge, sum(char_with_tax) as chargewithtax,
            sum(total_tax) as chargegst, sum(cgst_cost) as chargecgst, sum(sgst_cost) as chargesgst, sum(igst_cost) as chargeigst
            FROM ret_grn_other_charges as crg
            GROUP BY crg.grn_id) as grnchr ON grnchr.grn_id = grnitm.grn_item_grn_id
            LEFT JOIN (SELECT grn_item_id, sum(wt) as stwt, sum(amount) as stamount
            FROM ret_grn_item_stone as grst
            LEFT JOIN ret_stone as st ON st.stone_id = grst.stone_id
            WHERE st.stone_type = 1
            GROUP BY grst.grn_item_id) as grnst ON grnst.grn_item_id = grnitm.grn_item_id
            LEFT JOIN (SELECT grn_itms_id, sum(grn_other_itm_grs_weight) as otherwt, sum(grn_other_itm_amount) as otheramt
            FROM ret_grn_other_metals as grmt
            GROUP BY grmt.grn_itms_id) as grnom ON grnom.grn_itms_id = grnitm.grn_item_id
            LEFT JOIN ret_category as cat ON cat.id_ret_category = grnitm.grn_item_cat_id
            LEFT JOIN ret_karigar as kr ON kr.id_karigar = grn.grn_karigar_id
            LEFT JOIN state as st ON st.id_state = kr.id_state
            WHERE (date(grn_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            and grn.grn_bill_status = 1
            ".($type !='' ? " and cat.cat_type =".$type."" :'')."
            ".($data['grn_type']!=0 ? " and grn.grn_type=".$data['grn_type']."" :'')."
            ".($karigar !='' ? " and grn_karigar_id =".$karigar."" :'')."
            ".($data['id_category'] != '' && $data['id_category'] != 0 ? " and grnitm.grn_item_cat_id =".$data['id_category']."" :'')."
            ".($data['bill_type'] ==1 ? "Having grn_item_igst > 0" :($data['bill_type']==2 ? " Having grn_item_cgst>0" :''))."");
            $response_data = $sql->result_array();
        }else
        {
            $sql = $this->db->query("SELECT grnitm.grn_item_id,grn.grn_id, grn_karigar_id, kr.firstname as karigar,IFNULL(kr.gst_number,'') as gst_number, kr.contactno1 as mobile,
            concat(ifnull(kr.address1,''), ifnull(kr.address2,'')) as address,
            st.name as statename, ifnull(kr.pan_no, '') as panno, date_format(grn_date, '%d-%m-%Y') as grndate, grn_ref_no, IFNULL(grn_supplier_ref_no,'') as grn_supplier_ref_no,
            date_format(grn_ref_date, '%d-%m-%Y') as grn_ref_date, grn_other_charges, grn_discount, grn_purchase_amt, grn_purchase_wt,
            grn_pay_tds_percent, grn_pay_tds_value, grn_other_charges_tds_percent,  grn_other_charges_tds_value,
            '' as category, cat.hsn_code,IFNULL(SUM(grn_gross_wt),0) as grn_gross_wt,IFNULL(SUM(grn_less_wt),0) as grn_less_wt, '' as grn_wastage,IFNULL(SUM(grn_net_wt),0) as grn_net_wt, IFNULL(SUM(grn_no_of_pcs),0) as grn_no_of_pcs,
            IFNULL(SUM(grn_item_cost),0) as grn_item_cost,IFNULL(SUM(grn_item_gst_rate),0) as grn_item_gst_rate, IFNULL(SUM(grn_item_cgst),0) as grn_item_cgst,IFNULL(SUM(grn_item_sgst),0) as grn_item_sgst,IFNULL(SUM(grn_item_igst),0) as grn_item_igst,
            ifnull(grnchr.othercharge,0) as grnothercharge, ifnull(grnchr.chargewithtax,0) as otherchargewithtax,
            ifnull(grnchr.chargegst,0) as otherchargegst, ifnull(grnchr.chargecgst,0) as otherchargecgst, ifnull(grnchr.chargesgst,0) as otherchargesgst,
            ifnull(grnchr.chargeigst,0) as otherchargeigst,
            ifnull(grnst.stwt,0) as grnstonewt, ifnull(grnst.stamount,0) as grndiaamount,
            ifnull(grnom.otherwt,0) as grnomweight, ifnull(grnom.otheramt,0) as grnomamount, grn_tcs_percent, grn_tcs_value, grn_round_off,IFNULL(grnitm.grn_item_gst_value,'') as grn_item_gst_value
            FROM ret_grn_entry grn
            LEFT JOIN ret_grn_items as grnitm  ON grnitm.grn_item_grn_id = grn.grn_id
            LEFT JOIN (SELECT crg.grn_id, sum(grn_charge_value) as othercharge, sum(char_with_tax) as chargewithtax,
            sum(total_tax) as chargegst, sum(cgst_cost) as chargecgst, sum(sgst_cost) as chargesgst, sum(igst_cost) as chargeigst
            FROM ret_grn_other_charges as crg
            GROUP BY crg.grn_id) as grnchr ON grnchr.grn_id = grnitm.grn_item_grn_id
            LEFT JOIN (SELECT i.grn_item_id, sum(wt) as stwt, sum(amount) as stamount,i.grn_item_grn_id
            FROM ret_grn_item_stone as grst
            LEFT JOIN ret_grn_items i ON i.grn_item_id = grst.grn_item_id
            LEFT JOIN ret_stone as st ON st.stone_id = grst.stone_id
            WHERE st.stone_type = 1
            GROUP BY i.grn_item_grn_id) as grnst ON grnst.grn_item_grn_id = grn.grn_id
            LEFT JOIN (SELECT grn_itms_id, sum(grn_other_itm_grs_weight) as otherwt, sum(grn_other_itm_amount) as otheramt
            FROM ret_grn_other_metals as grmt
            GROUP BY grmt.grn_itms_id) as grnom ON grnom.grn_itms_id = grnitm.grn_item_id
            LEFT JOIN ret_category as cat ON cat.id_ret_category = grnitm.grn_item_cat_id
            LEFT JOIN ret_karigar as kr ON kr.id_karigar = grn.grn_karigar_id
            LEFT JOIN state as st ON st.id_state = kr.id_state
            WHERE (date(grn_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
             and grn.grn_bill_status = 1
            ".($type !='' ? " and cat.cat_type =".$type."" :'')."
            ".($karigar !='' ? " and grn_karigar_id =".$karigar."" :'')."
            ".($data['grn_type']!=0 ? " and grn.grn_type=".$data['grn_type']."" :'')."
            ".($data['id_category'] != '' && $data['id_category'] != 0 ? " and grnitm.grn_item_cat_id =".$data['id_category']."" :'')."
            GROUP BY grn.grn_id
            ".($data['bill_type'] ==1 ? "Having grn_item_igst > 0" :($data['bill_type']==2 ? " Having grn_item_cgst>0" :''))."
            ORDER BY grn.grn_id DESC");
             $response_data = $sql->result_array();
        }
        //echo "<pre>";print_r($this->db->last_query());exit;
        foreach($response_data as $key => $val){
                $val['grn_charges_details'] = $this->get_grn_charges_details($val['grn_id']);
                    if($val['grn_item_id']!='')
                    {
                        $val['other_metal_details'] = $this->get_grn_other_metal_details($val['grn_item_id']);
                    }else
                    {
                        $val['other_metal_details']=[];
                    }
                $return_data[$val['grn_ref_no']][] =   $val;
            }
            foreach($return_data as $key => $grndata){
                foreach($grndata as $gkey => $gval){
                    if($gkey > 0){
                        $return_data[$key][$gkey]["karigar"] = "";
                        $return_data[$key][$gkey]["mobile"] = "";
                        $return_data[$key][$gkey]["grndate"] = "";
                        $return_data[$key][$gkey]["address"] = "";
                        $return_data[$key][$gkey]["statename"] = "";
                        $return_data[$key][$gkey]["panno"] = "";
                        $return_data[$key][$gkey]["gst_number"] = "";
                        $return_data[$key][$gkey]["grn_supplier_ref_no"] = "";
                        $return_data[$key][$gkey]["grn_ref_date"] = "";
                        $return_data[$key][$gkey]["grn_other_charges"] = 0;
                        $return_data[$key][$gkey]["grn_discount"] = 0;
                    }
                }
            }
        return $return_data;
    }
    function get_charges()
    {
        $sql = $this->db->query("SELECT * FROM ret_charges");
        return $sql->result_array();
    }
    function get_grn_charges_details($grn_id)
    {
        $sql = $this->db->query("SELECT r.id_charge,r.name_charge,IFNULL(ch.charge_value,0) as grn_charge_value
        FROM ret_charges  r
        LEFT JOIN (SELECT IFNULL((SUM(c.grn_charge_value)),0) as charge_value,c.grn_charge_id
        FROM ret_grn_other_charges c
        WHERE c.grn_id = ".$grn_id."
        GROUP BY c.grn_charge_id) as ch ON ch.grn_charge_id = r.id_charge
        GROUP BY r.id_charge
        ORDER BY r.id_charge ASC");
        return $sql->result_array();
    }
    function get_return_charges_details($pur_return_id)
    {
        $sql = $this->db->query("SELECT r.id_charge,r.name_charge,IFNULL(ch.charge_value,0) as charge_value
        FROM ret_charges  r
        LEFT JOIN (SELECT IFNULL((SUM(c.pur_ret_charge_value)),0) as charge_value,itm.pur_ret_id,c.pur_ret_charge_id
        FROM ret_purchase_return_other_charges c
		LEFT JOIN ret_purchase_return_items itm ON itm.pur_ret_itm_id = c.pur_ret_itm_id
        WHERE itm.pur_ret_id = ".$pur_return_id."
        GROUP BY itm.pur_ret_id) as ch ON ch.pur_ret_charge_id = r.id_charge
        GROUP BY r.id_charge
        ORDER BY r.id_charge ASC");
        return $sql->result_array();
    }
    function get_grn_other_metal_details($grn_itms_id)
    {
        $sql = $this->db->query("SELECT m.grn_other_itm_grs_weight,m.grn_other_itm_amount,c.name as cat_name
        FROM ret_grn_other_metals m
        LEFT JOIN ret_category c ON c.id_ret_category = m.grn_other_itm_metal_id
        WHERE m.grn_itms_id = ".$grn_itms_id."");
        return $sql->result_array();
    }
     function get_tag_description($id)
    {
        $sql = $this->db->query("SELECT s.remark,s.id_tag_scanned
        FROM ret_tag_scanned s
        WHERE s.id_tag_scanned = ".$id."");
        return $sql->result_array();
    }
    function get_purchase_billsitem_details($po_id)
	{
	    $sql=$this->db->query("SELECT i.po_item_id,p.po_id,cat.name as category_name,pro.product_name,d.design_name,s.sub_design_name,
        i.no_of_pcs,i.gross_wt,i.mc_type,i.net_wt,IFNULL(i.mc_value,0) as mc_value,IFNULL(i.item_wastage,0) as item_wastage,IFNULL(i.less_wt,0) as less_wt,
        p.po_ref_no
        FROM ret_purchase_order p
        LEFT JOIN ret_purchase_order_items i ON i.po_item_po_id=p.po_id
        LEFT JOIN ret_product_master pro ON pro.pro_id=i.po_item_po_id
        LEFT JOIN ret_design_master d ON d.design_no=i.po_item_des_id
        LEFT JOIN ret_sub_design_master s ON s.id_sub_design=i.po_item_sub_des_id
        LEFT JOIN ret_category cat ON cat.id_ret_category=pro.cat_id
        WHERE p.po_id='".$po_id."'");
        return $sql->result_array();
	}
    //Purchase bills report end here
    //purchase return
    function get_purchase_return_details($data)
    {
        $d1     = date_create($data['from_date']);
        $d2     = date_create($data['to_date']);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt   = date_format($d2,"Y-m-d");
        $type   = !empty($data['type']) ? $data['type'] : 0;
        $return_data = array();
        $multiple_metal = implode(' , ', $data['id_metal']);
        if($multiple_metal != '')
        {
            $id_metal = $multiple_metal;
        }else{
            $id_metal = $data['id_metal'];
        }
        $karigar = implode(' , ', $data['karigar']);
        if($karigar != '')
        {
            $id_karigar = $karigar;
        }else{
            $id_karigar = $data['karigar'];
        }
        $category = implode(' , ', $data['id_category']);
        if($category != '')
        {
            $id_category = $category;
        }else{
            $id_category = $data['id_category'];
        }
        if($data['report_type']==1)
        {
        $sql = $this->db->query("SELECT r.pur_ret_ref_no,r.pur_return_id,IFNULL(date_format(r.pur_ret_created_on,'%d-%m-%Y'),'')as po_date,
            po.po_id,IFNULL(po.po_ref_no,'') as po_ref_no,k.firstname as karigar,po.ewaybillno,
            k.contactno1 as mobile, concat(ifnull(k.address1,''), ifnull(k.address2,'')) as address,
            IFNULL(c.pur_ret_gwt,0) as gross_wt,IFNULL(c.pur_ret_nwt,0) as net_wt,IFNULL(c.pur_ret_lwt,0) as less_wt,
            IFNULL(c.pur_ret_wastage,0) as item_wastage,
            IFNULL(c.pur_ret_pcs,0)as no_of_pcs,IFNULL(ct.name,'') as category_name,IFNULL(c.pur_ret_purchase_touch,'') as purchase_touch,
            IFNULL(c.pur_ret_purchase_touch,'') as purity,
            if(c.pur_ret_mc_type = 1, 'Per Grm', 'Per Pc') as mc_type, ifnull(c.pur_ret_mc_value, 0) as mc_value,
            IFNULL(pm.product_name,'') as product_name,IFNULL(des.design_name,'') as design_name,
            IFNULL(sub.sub_design_name,'') as sub_design_name,IFNULL(c.pur_ret_pur_wt,0) as purewt,
            IFNULL(c.pur_ret_rate,0) as fix_rate_per_grm,
            IFNULL(c.total_total_tax,0) as total_tax,IFNULL(s.diawt,0) as stwt,
            ifnull(r.pur_ret_remark,'') as remark,IFNULL(stn.ret_stone_amount,0) as stamount,
            stn.pur_ret_return_id,emp.firstname as emp_name,ifnull(nt.stnwt, 0) nt_stwt,
            ifnull(pooitm.otherwt,0) as otherwt, ifnull(pooitm.otheramt, 0) as otheramount,
            IFNULL(c.pur_ret_debit_note_amt,0) as item_cost,c.pur_ret_itm_id,
            tag.tag_code,If(r.pur_ret_convert_to=1,'Supplier',if(r.pur_ret_convert_to=2,'Manufaucturers',if(r.pur_ret_convert_to=3,' Approval Ledger',if(r.pur_ret_convert_to=4,'Stone Supplier','Abstract')))) as transaction_type,IFNULL(bt.branch_trans_code,'') as bt_number,pm.stone_type
            FROM ret_purchase_return_items c
            LEFT JOIN ret_purchase_return r ON r.pur_return_id = c.pur_ret_id
            LEFT JOIN ret_purchase_order_items pitm ON pitm.po_item_id = c.pur_ret_po_item_id
            LEFT JOIN ret_purchase_order po ON po.po_id = pitm.po_item_po_id
            LEFT JOIN ret_taging tag ON tag.tag_id = c.tag_id
            LEFT JOIN employee emp ON emp.id_employee= r.pur_ret_created_by
            LEFT JOIN ret_karigar k ON k.id_karigar = r.pur_ret_supplier_id
            LEFT JOIN state as st ON st.id_state = k.id_state
            LEFT JOIN ret_product_master pm  ON pm.pro_id = c.id_product
            LEFT JOIN ret_design_master des ON des.design_no=c.id_design
            LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=c.id_sub_design
            LEFT JOIN ret_category ct ON ct.id_ret_category = pm.cat_id
            LEFT JOIN ret_branch_transfer bt on bt.branch_transfer_id = c.branch_trans_id
            LEFT JOIN(SELECT IFNULL(SUM(s.ret_stone_wt),0) as diawt,s.pur_ret_return_id,
                    IFNULL(SUM(s.ret_stone_amount),0) as dia_wt_amount,c.pur_ret_itm_id
                    FROM ret_purchase_return_stone_items s
                    LEFT JOIN ret_stone as stn ON stn.stone_id = s.ret_stone_id
                    LEFT JOIN ret_purchase_return_items as c ON c.pur_ret_itm_id= s.pur_ret_return_id
                    WHERE stn.stone_type = 1
            GROUP BY c.pur_ret_itm_id) as s ON s.pur_ret_itm_id = c.pur_ret_itm_id
                LEFT JOIN(SELECT IFNULL(SUM(s.ret_stone_wt),0) as stnwt,s.pur_ret_return_id,
                    IFNULL(SUM(s.ret_stone_amount),0) as dia_wt_amount,c.pur_ret_itm_id
                    FROM ret_purchase_return_stone_items s
                    LEFT JOIN ret_stone as stn ON stn.stone_id = s.ret_stone_id
                    LEFT JOIN ret_purchase_return_items as c ON c.pur_ret_itm_id= s.pur_ret_return_id
                    WHERE stn.stone_type != 1
            GROUP BY c.pur_ret_itm_id) as nt ON nt.pur_ret_itm_id = c.pur_ret_itm_id
            LEFT JOIN(SELECT
                    IFNULL(SUM(s.ret_stone_wt),0) as ret_stone_wt,s.pur_ret_return_id,IFNULL(SUM(s.ret_stone_amount),0) as ret_stone_amount,
                    c.pur_ret_itm_id
                    FROM ret_purchase_return_stone_items s
                    LEFT JOIN ret_stone as stn ON stn.stone_id = s.ret_stone_id
                    LEFT JOIN ret_purchase_return_items as c ON c.pur_ret_itm_id= s.pur_ret_return_id
            GROUP BY c.pur_ret_itm_id) as stn ON stn.pur_ret_itm_id = c.pur_ret_itm_id
            LEFT JOIN (SELECT pur_ret_return_id, sum(ret_other_itm_grs_weight) as otherwt,
            sum(ret_other_itm_amount) as otheramt,c.pur_ret_itm_id
            FROM ret_purchase_return_other_metal  as itm
            LEFT JOIN ret_purchase_return_items as c ON c.pur_ret_itm_id= itm.pur_ret_return_id
            GROUP BY c.pur_ret_itm_id) as pooitm ON pooitm.pur_ret_itm_id = c.pur_ret_itm_id
            WHERE r.bill_status = ".$data['bill_type']."
            and date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
            ".($type !='' ? " and ct.cat_type =".$type."" :'')."
            ".($id_karigar !='' &&  $id_karigar !=0 ? " and r.pur_ret_supplier_id in(".$karigar.")" :'')."
            ".($id_category != '' && $id_category != 0 ? " and ct.id_ret_category  in (".$id_category.")" :'')."
            ".($data['id_product'] != '' && $data['id_product'] != 0 ? " and pm.pro_id =".$data['id_product']."" :'')."
            ".($data['id_design'] != '' && $data['id_design'] != 0 ? " and c.id_design =".$data['id_design']."" :'')."
            ".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and c.id_sub_design =".$data['id_sub_design']."" :'')."
            ".($id_metal != '' && $id_metal != 0 ? " and ct.id_metal  in (".$id_metal.")" :'')."
            ".($data['tag_code'] != ''  ? " and tag.tag_code = '".$data['tag_code']."' " :'')."
            ".($data['transcation_type']!='' && $data['transcation_type']!=0 ? "and r.pur_ret_convert_to=".$data['transcation_type']."" : '')."
            ".($data['purchase_type']!='' ? "and r.purchase_type=".$data['purchase_type']."" : '')."
            GROUP BY c.pur_ret_itm_id
            ORDER BY c.pur_ret_itm_id DESC");
        }
        else
        {
            $sql = $this->db->query("SELECT r.pur_ret_ref_no,r.pur_return_id,IFNULL(date_format(r.pur_ret_created_on,'%d-%m-%Y'),'' )as po_date,
            po.po_id,IFNULL(po.po_ref_no,'') as po_ref_no,k.firstname as karigar,po.ewaybillno,
            k.contactno1 as mobile, concat(ifnull(k.address1,''), ifnull(k.address2,'')) as address,
            IFNULL(SUM(c.pur_ret_gwt),0) as gross_wt,IFNULL(SUM(c.pur_ret_nwt),0) as net_wt,IFNULL(SUM(c.pur_ret_lwt),0) as less_wt,
            IFNULL(SUM(c.pur_ret_wastage),0) as item_wastage,IFNULL(SUM(c.pur_ret_purchase_touch),'') as purity,
            IFNULL(SUM(c.pur_ret_pcs),0)as no_of_pcs, IFNULL(ct.name,'')as category_name,IFNULL(SUM(c.pur_ret_purchase_touch),'') as purchase_touch,
            if(c.pur_ret_mc_type = 1, 'Per Grm', 'Per Pc') as mc_type, ifnull(c.pur_ret_mc_value, 0) as mc_value,
            IFNULL(pm.product_name,'') as product_name,IFNULL(des.design_name,'') as design_name,
            IFNULL(sub.sub_design_name,'') as sub_design_name,IFNULL(SUM(c.pur_ret_pur_wt),0) as purewt,
            IFNULL(SUM(c.pur_ret_rate),0) as fix_rate_per_grm,
            IFNULL(SUM(c.total_total_tax),0) as total_tax,IFNULL((s.diawt),0) as stwt,
            ifnull(r.pur_ret_remark,'') as remark,IFNULL(stn.ret_stone_amount,0) as stamount,
            emp.firstname as emp_name,ifnull((nt.stnwt), 0) nt_stwt,stn.pur_ret_return_id,
            ifnull(pooitm.otherwt,0) as otherwt, ifnull(pooitm.otheramt, 0) as otheramount,
            IFNULL(SUM(r.return_total_cost),0) as item_cost,
            If(r.pur_ret_convert_to=1,'Supplier',if(r.pur_ret_convert_to=2,'Manufaucturers',if(r.pur_ret_convert_to=3,' Approval Ledger',if(r.pur_ret_convert_to=4,'Stone Supplier','Abstract')))) as transaction_type,IFNULL(bt.branch_trans_code,'') as bt_number,pm.stone_type
            FROM ret_purchase_return_items c
            LEFT JOIN ret_purchase_return r ON r.pur_return_id = c.pur_ret_id
            LEFT JOIN ret_purchase_order_items pitm ON pitm.po_item_id = c.pur_ret_po_item_id
            LEFT JOIN ret_purchase_order po ON po.po_id = pitm.po_item_po_id
            LEFT JOIN ret_taging tag ON tag.tag_id = c.tag_id
            LEFT JOIN employee emp ON emp.id_employee= r.pur_ret_created_by
            LEFT JOIN ret_karigar k ON k.id_karigar = r.pur_ret_supplier_id
            LEFT JOIN state as st ON st.id_state = k.id_state
            LEFT JOIN ret_product_master pm  ON pm.pro_id = c.id_product
            LEFT JOIN ret_design_master des ON des.design_no=c.id_design
            LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=c.id_sub_design
            LEFT JOIN ret_category ct ON ct.id_ret_category = pm.cat_id
            LEFT JOIN ret_branch_transfer bt on bt.branch_transfer_id = c.branch_trans_id
            LEFT JOIN(SELECT IFNULL(SUM(s.ret_stone_wt),0) as diawt,s.pur_ret_return_id,
                IFNULL(SUM(s.ret_stone_amount),0) as dia_wt_amount,c.pur_ret_id
                FROM ret_purchase_return_stone_items s
                LEFT JOIN ret_stone as stn ON stn.stone_id = s.ret_stone_id
                LEFT JOIN ret_purchase_return_items as c ON c.pur_ret_itm_id= s.pur_ret_return_id
                LEFT JOIN ret_purchase_return r ON r.pur_return_id = c.pur_ret_id
                LEFT JOIN ret_product_master pm  ON pm.pro_id = c.id_product
                LEFT JOIN ret_category ct ON ct.id_ret_category = pm.cat_id
                WHERE stn.stone_type = 1 and r.bill_status = ".$data['bill_type']."
                and date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
                ".($id_karigar !='' &&  $id_karigar !=0 ? " and r.pur_ret_supplier_id in(".$karigar.")" :'')."
                ".($id_category != '' && $id_category != 0 ? " and ct.id_ret_category  in (".$id_category.")" :'')."
                ".($data['id_product'] != '' && $data['id_product'] != 0 ? " and pm.pro_id =".$data['id_product']."" :'')."
                ".($data['id_design'] != '' && $data['id_design'] != 0 ? " and c.id_design =".$data['id_design']."" :'')."
                ".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and c.id_sub_design =".$data['id_sub_design']."" :'')."
                ".($id_metal != '' && $id_metal != 0 ? " and ct.id_metal  in (".$id_metal.")" :'')."
                ".($data['transcation_type']!='' && $data['transcation_type']!=0 ? "and r.pur_ret_convert_to=".$data['transcation_type']."" : '')."
                ".($data['purchase_type']!='' && $data['purchase_type']!=0 ? "and r.purchase_type=".$data['purchase_type']."" : '')."
            GROUP BY c.pur_ret_id) as s ON s.pur_ret_id = r.pur_return_id
            LEFT JOIN(SELECT IFNULL(SUM(s.ret_stone_wt),0) as stnwt,s.pur_ret_return_id,
                IFNULL(SUM(s.ret_stone_amount),0) as dia_wt_amount,c.pur_ret_id
                FROM ret_purchase_return_stone_items s
                LEFT JOIN ret_stone as stn ON stn.stone_id = s.ret_stone_id
                LEFT JOIN ret_purchase_return_items as c ON c.pur_ret_itm_id= s.pur_ret_return_id
                LEFT JOIN ret_purchase_return r ON r.pur_return_id = c.pur_ret_id
                LEFT JOIN ret_product_master pm  ON pm.pro_id = c.id_product
                LEFT JOIN ret_category ct ON ct.id_ret_category = pm.cat_id
                WHERE stn.stone_type != 1 and r.bill_status = ".$data['bill_type']."
                and date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
                ".($id_karigar !='' &&  $id_karigar !=0 ? " and r.pur_ret_supplier_id in(".$karigar.")" :'')."
                ".($id_category != '' && $id_category != 0 ? " and ct.id_ret_category  in (".$id_category.")" :'')."
                ".($data['id_product'] != '' && $data['id_product'] != 0 ? " and pm.pro_id =".$data['id_product']."" :'')."
                ".($data['id_design'] != '' && $data['id_design'] != 0 ? " and c.id_design =".$data['id_design']."" :'')."
                ".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and c.id_sub_design =".$data['id_sub_design']."" :'')."
                ".($id_metal != '' && $id_metal != 0 ? " and ct.id_metal  in (".$id_metal.")" :'')."
                ".($data['transcation_type']!='' && $data['transcation_type']!=0 ? "and r.pur_ret_convert_to=".$data['transcation_type']."" : '')."
                ".($data['purchase_type']!='' ? "and r.purchase_type=".$data['purchase_type']."" : '')."
            GROUP BY c.pur_ret_id) as nt ON nt.pur_ret_id = r.pur_return_id
            LEFT JOIN(SELECT
                    IFNULL(SUM(s.ret_stone_wt),0) as ret_stone_wt,s.pur_ret_return_id,IFNULL(SUM(s.ret_stone_amount),0) as ret_stone_amount,c.pur_ret_id
                    FROM ret_purchase_return_stone_items s
                    LEFT JOIN ret_stone as stn ON stn.stone_id = s.ret_stone_id
                    LEFT JOIN ret_purchase_return_items as c ON c.pur_ret_itm_id= s.pur_ret_return_id
                    LEFT JOIN ret_purchase_return r ON r.pur_return_id = c.pur_ret_id
                    LEFT JOIN ret_product_master pm  ON pm.pro_id = c.id_product
                    LEFT JOIN ret_category ct ON ct.id_ret_category = pm.cat_id
                    WHERE r.bill_status = ".$data['bill_type']."
                    and date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
                    ".($id_karigar !='' &&  $id_karigar !=0 ? " and r.pur_ret_supplier_id in(".$karigar.")" :'')."
                    ".($id_category != '' && $id_category != 0 ? " and ct.id_ret_category  in (".$id_category.")" :'')."
                    ".($data['id_product'] != '' && $data['id_product'] != 0 ? " and pm.pro_id =".$data['id_product']."" :'')."
                    ".($data['id_design'] != '' && $data['id_design'] != 0 ? " and c.id_design =".$data['id_design']."" :'')."
                    ".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and c.id_sub_design =".$data['id_sub_design']."" :'')."
                    ".($id_metal != '' && $id_metal != 0 ? " and ct.id_metal  in (".$id_metal.")" :'')."
                    ".($data['transcation_type']!='' && $data['transcation_type']!=0 ? "and r.pur_ret_convert_to=".$data['transcation_type']."" : '')."
                    ".($data['purchase_type']!=''  ? "and r.purchase_type=".$data['purchase_type']."" : '')."
            GROUP BY c.pur_ret_id) as stn ON stn.pur_ret_id = r.pur_return_id
            LEFT JOIN (SELECT pur_ret_return_id, sum(ret_other_itm_grs_weight) as otherwt, sum(ret_other_itm_amount) as otheramt
                FROM ret_purchase_return_other_metal  as itm
            GROUP BY itm.pur_ret_return_id) as pooitm ON pooitm.pur_ret_return_id = r.pur_return_id
            WHERE r.bill_status = ".$data['bill_type']."
            and date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
            ".($type !='' ? " and ct.cat_type =".$type."" :'')."
            ".($id_karigar !='' &&  $id_karigar !=0 ? " and r.pur_ret_supplier_id in(".$karigar.")" :'')."
            ".($id_category != '' && $id_category != 0 ? " and ct.id_ret_category  in (".$id_category.")" :'')."
            ".($data['id_product'] != '' && $data['id_product'] != 0 ? " and pm.pro_id =".$data['id_product']."" :'')."
            ".($data['id_design'] != '' && $data['id_design'] != 0 ? " and c.id_design =".$data['id_design']."" :'')."
            ".($data['id_sub_design'] != '' && $data['id_sub_design'] != 0 ? " and c.id_sub_design =".$data['id_sub_design']."" :'')."
            ".($id_metal != '' && $id_metal != 0 ? " and ct.id_metal  in (".$id_metal.")" :'')."
            ".($data['tag_code'] != ''? " and tag.tag_code ='".$data['tag_code']."'" :'')."
            ".($data['transcation_type']!='' && $data['transcation_type']!=0 ? "and r.pur_ret_convert_to=".$data['transcation_type']."" : '')."
            ".($data['purchase_type']!='' ? "and r.purchase_type=".$data['purchase_type']."" : '')."
            GROUP BY r.pur_return_id
            ORDER BY r.pur_return_id DESC");
        }
        //print_r($this->db->last_query());exit;
        $response_data = $sql->result_array();
        foreach($response_data as $key => $val){
        $return_data[$val['po_ref_no']][] = $val;
        }
        /*foreach($return_data as $key => $grndata){
        foreach($grndata as $gkey => $gval){
        if($gkey > 0){
        $return_data[$key][$gkey]["karigar"] = "";
        $return_data[$key][$gkey]["mobile"] = "";
        $return_data[$key][$gkey]["po_date"] = "";
        $return_data[$key][$gkey]["address"] = "";
        $return_data[$key][$gkey]["po_ref_no"] = "";
        $return_data[$key][$gkey]["ewaybillno"] = "";
        }
        }
        }*/
        return $return_data;
    }
    // function get_purchase_return_details($data)
    // {
    //     $return_data = [];
	// 	$multiple_metal = implode(' , ', $data['metal']);
    //     if($multiple_metal != '')
	// 	{
	// 		$id_metal = $multiple_metal;
	// 	}else{
	// 		$id_metal = $data['metal'];
	// 	}
	// 	$multiple_category = implode(' , ', $data['id_category']);
    //     if($multiple_category != '')
	// 	{
	// 		$id_category = $multiple_category;
	// 	}else{
	// 		$id_category = $data['id_category'];
	// 	}
	// 	$sql = $this->db->query("SELECT r.pur_ret_ref_no,r.pur_return_id,date_format(r.bill_date,'%d-%m-%Y') as bill_date,
    //         k.contactno1 as mobile, concat(ifnull(k.address1,''), ifnull(k.address2,'')) as address,IFNULL(st.name,'') as state_name,
    //         '' as category_name,IFNULL(SUM(c.pur_ret_gwt),0) as gross_wt,IFNULL(SUM(c.pur_ret_nwt),0) as net_wt,
    //         IFNULL(SUM(c.total_total_tax),0) as total_tax,IFNULL(SUM(c.total_cgst_cost),0) as total_cgst,IFNULL(SUM(c.total_sgst_cost),0) as total_sgst,IFNULL(SUM(c.total_igst_cost),0) as total_igst,
    //         '' as pur_ret_tax_rate,(IFNULL(SUM(c.pur_ret_debit_note_amt),0)-IFNULL(SUM(c.total_total_tax),0)) as taxable_amount,
    //         IFNULL(SUM(c.pur_ret_debit_note_amt),0) as total_cost,IFNULL(s.diawt,0) as diawt,IFNULL(s.dia_wt_amount,0) as dia_wt_amount,IFNULL(stn.ret_stone_amount,0) as stone_amount,IFNULL(stn.ret_stone_wt,0) as stone_wt,IFNULL(k.gst_number,'') as gst_number,IFNULL(k.pan_no,'') as pan_no,k.firstname as karigar,
    //         r.pur_ret_discount,r.pur_ret_tds_percent,r.pur_ret_tds_value,r.pur_ret_other_charges_tds_percent,r.pur_ret_other_charges_tds_value,r.pur_ret_tcs_percent,r.pur_ret_tcs_value,r.pur_ret_round_off,r.return_total_cost,
    //         IFNULL(retchr.cgst_cost,0) as charges_cgst_cost,IFNULL(retchr.sgst_cost,0) as charges_sgst_cost,IFNULL(retchr.igst_cost,0) as charges_igst_cost,emp.firstname as emp_name
    //         FROM ret_purchase_return_items c
    //         LEFT JOIN ret_purchase_return r ON r.pur_return_id = c.pur_ret_id
	// 		LEFT JOIN employee emp ON emp.id_employee= r.pur_ret_created_by
    //         LEFT JOIN ret_karigar k ON k.id_karigar = r.pur_ret_supplier_id
    //         LEFT JOIN state as st ON st.id_state = k.id_state
	// 		LEFT JOIN ret_product_master pm  ON pm.pro_id = c.id_product
	// 		LEFT JOIN ret_category ct ON ct.id_ret_category = pm.cat_id
    //         LEFT JOIN(SELECT IFNULL(SUM(s.ret_stone_wt),0) as diawt,s.pur_ret_return_id,
	// 				 IFNULL(SUM(s.ret_stone_amount),0) as dia_wt_amount
    //                  FROM ret_purchase_return_stone_items s
    //                  LEFT JOIN ret_stone as stn ON stn.stone_id = s.pur_ret_stone_id
    //                  WHERE stn.stone_type = 1
    //         GROUP BY s.pur_ret_return_id) as s ON s.pur_ret_return_id = r.pur_return_id
    //         LEFT JOIN(SELECT
	// 				 IFNULL(SUM(s.ret_stone_wt),0) as ret_stone_wt,s.pur_ret_return_id,IFNULL(SUM(s.ret_stone_amount),0) as ret_stone_amount
    //                  FROM ret_purchase_return_stone_items s
    //                  LEFT JOIN ret_stone as stn ON stn.stone_id = s.pur_ret_stone_id
    //         GROUP BY s.pur_ret_return_id) as stn ON stn.pur_ret_return_id = r.pur_return_id
	// 		LEFT JOIN(SELECT
	// 				 IFNULL(SUM(rc.cgst_cost),0) as cgst_cost,IFNULL(SUM(rc.sgst_cost),0) as 		sgst_cost,IFNULL(SUM(rc.igst_cost),0) as igst_cost,
	// 				 rc.pur_ret_charge_tax,itm.pur_ret_id
	// 				 FROM ret_purchase_return_other_charges rc
	// 				 LEFT JOIN ret_purchase_return_items itm ON itm.pur_ret_itm_id = rc.pur_ret_itm_id
	// 		GROUP BY itm.pur_ret_id) as retchr ON retchr.pur_ret_id = r.pur_return_id
    //         WHERE r.bill_status = 1
    //         and date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
	// 		".($id_metal!='' && $id_metal>0 ? " and ct.id_metal in (".$id_metal.") " :'')."
	// 		".($id_category!='' && $id_category !='0' ? " and ct.id_ret_category in (".$id_category.") " :'' )."
    //         GROUP BY r.pur_return_id
    //         ORDER BY r.pur_return_id DESC");
	// 	//print_r($this->db->last_query());exit;
    //     $response_data = $sql->result_array();
    //     foreach($response_data as $key => $val){
    //         $val['return_charges_details'] = $this->get_return_charges_details($val['pur_return_id']);
    //         //$val['other_metal_details'] = $this->get_return_other_metal_details($val['pur_ret_cat_itm_id']);
    //         $val['other_metal_details'] = [];
    //         $return_data[$val['pur_ret_ref_no']][] =   $val;
    //     }
    //     foreach($return_data as $key => $keyval){
    //             foreach($keyval as $gkey => $gval){
    //                 if($gkey > 0){
    //                     $return_data[$key][$gkey]["karigar"] = "";
    //                     $return_data[$key][$gkey]["mobile"] = "";
    //                     $return_data[$key][$gkey]["bill_date"] = "";
    //                     $return_data[$key][$gkey]["address"] = "";
    //                     $return_data[$key][$gkey]["state_name"] = "";
    //                     $return_data[$key][$gkey]["pan_no"] = "";
    //                     $return_data[$key][$gkey]["gst_number"] = "";
    //                     $return_data[$key][$gkey]["pur_ret_discount"] = 0;
    //                 }
    //             }
    //         }
    //     //echo "<pre>";print_r($return_data);exit;
    //     return $return_data;
    // }
    function get_return_other_metal_details($pur_ret_cat_itm_id)
    {
        $sql = $this->db->query("SELECT c.name as cat_name,m.ret_other_itm_grs_weight,m.ret_other_itm_amount
        FROM ret_purchase_return_other_metal m
        LEFT JOIN ret_category c ON c.id_ret_category = m.ret_other_itm_metal_id
        WHERE m.pur_ret_return_id = ".$pur_ret_cat_itm_id."");
        return $sql->result_array();
    }
    //purchase return
    //Purchase bills QC report start here
    function get_purchasebillsqc_details($data)
    {
        $d1     = date_create($data['from_date']);
        $d2     = date_create($data['to_date']);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt   = date_format($d2,"Y-m-d");
        $sql=$this->db->query("SELECT SUM(p.no_of_pcs) as total_pcs,IFNULL(SUM(p.gross_wt),0) as gross_wt,IFNULL(SUM(p.less_wt),0) as less_wt,IFNULL(SUM(p.net_wt),0) as net_wt,
        emp.firstname as emp_name,date_format(i.created_at,'%d-%m-%Y') as date_add,ord.po_ref_no,if(d.status=0,'Issued','Completed') as qc_status,pro.product_name,des.design_name,s.sub_design_name,
        d.passed_pcs as qc_passed_pcs,d.passed_gwt as qc_passed_gwt,d.passed_lwt as qc_passed_lwt,d.passed_nwt as qc_passed_nwt,d.status,ifnull(kar.firstname,'') as karigar,d.failed_pcs as qc_failed_pcs,d.failed_gwt as qc_failed_gwt,d.failed_lwt as qc_failed_lwt,d.failed_nwt as qc_failed_nwt
        FROM ret_purchase_order_items p
        LEFT JOIN ret_po_qc_issue_details d ON d.po_item_id=p.po_item_id
        LEFT JOIN ret_purchase_order ord ON ord.po_id=p.po_item_po_id
        LEFT JOIN ret_karigar kar on kar.id_karigar = po_karigar_id
        LEFT JOIN ret_po_qc_issue_process i ON i.qc_process_id=d.qc_process_id
        LEFT JOIN employee emp ON emp.id_employee=i.qc_id_vendor
        LEFT JOIN ret_product_master pro ON pro.pro_id=p.po_item_pro_id
        LEFT JOIN ret_design_master des ON des.design_no=p.po_item_des_id
        LEFT JOIN ret_sub_design_master s ON s.id_sub_design=p.po_item_sub_des_id
        WHERE d.po_item_id IS NOT NULL AND i.qc_status= 1 AND
        (date(i.created_at) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($data['po_ref_no']!='' ? "and p.po_item_po_id=".$data['po_ref_no']."":"")."
        ".($data['id_karigar']!='' ? "and kar.id_karigar=".$data['id_karigar']."":"")."
        GROUP by d.po_item_id");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //Purchase bills QC report end here
    //Purchase bills HM report start here
    function get_purchasebillshm_details($data)
    {
        $d1     = date_create($data['from_date']);
        $d2     = date_create($data['to_date']);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt   = date_format($d2,"Y-m-d");
        $sql=$this->db->query("SELECT h.hm_ref_no,h.hm_process_pcs,h.hm_process_pcs,IFNULL(h.hm_process_gwt,0) as hm_process_gwt,IFNULL(h.hm_process_lwt,0) as hm_process_lwt,
	    IFNULL(h.hm_process_nwt,0) as hm_process_nwt,
	    k.firstname as karigar_name,date_format(h.hm_process_created_at,'%d-%m-%Y') as issue_date,
	    if(h.status=1,'Issued','Completed') as hm_status,h.status,IFNULL(h.total_hm_charges,0) as total_hm_charges
        FROM ret_po_halmark_process h
        LEFT JOIN ret_karigar k ON k.id_karigar=h.hm_vendor_id
        WHERE  (date(h.hm_process_created_at) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
         ".($data['id_karigar']!='' ? " and k.id_karigar=".$data['id_karigar']."":"")."");
        return $sql->result_array();
    }
    //Purchase bills HM report end here
    //Purchase Vs Sales wastage profit report
/*    function get_wastagewisepandlreport($post)
    {
        if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $sql = $this->db->query("SELECT tag.tag_code, billdet.bill_type, b.bill_type,b.bill_cus_id,b.pan_no,b.bill_no,
		billdet.wastage_percent as salewastage, billdet.piece,
        billdet.gross_wt as salegrosswt, billdet.net_wt as salenetwt,
        billdet.rate_per_grm as rate_per_grm,
        round((billdet.net_wt * (billdet.wastage_percent / 100)),4) as wastagewt,
        round((billdet.net_wt * (ifnull(puritm.item_wastage, 0) / 100)),4) as purwastagewt,
        (round((billdet.net_wt * (billdet.wastage_percent / 100)),4) - round((billdet.net_wt * (ifnull(puritm.item_wastage, 0) / 100)),4)) as wastageprofit,
        round((billdet.wastage_percent - ifnull(puritm.item_wastage, 0)),4) as profitwastper,
        billdet.mc_type, billdet.mc_value,
        if(billdet.mc_type = 1, round(billdet.piece*billdet.mc_value), round(billdet.gross_wt*billdet.mc_value)) as mcval,
		b.bill_id,b.bill_date,concat(c.mobile,'-',c.firstname) as cus_name,
		b.id_branch,b.tot_bill_amount,date_format(b.bill_date,'%d-%m-%y') as bill_date,
		b.ref_bill_id as ref_bill_id,IFNULL(b.tot_discount,0) as tot_discount,
        c.firstname as customer_name,c.mobile,
		br.name as branch_name,b.tot_amt_received,
		IFNULL(billdet.item_cost,0) as tot_ret_amt,
        ifnull(puritm.item_wastage, 0) as purwastage,
        ifnull(sup.firstname,'-') as karigar,
        pro.product_name as product_name, des.design_name as design_name,
        subDes.sub_design_name,IFNULL(tag.tag_purchase_cost,0) as tag_purchase_cost,IFNULL(billdet.item_cost,0) as item_cost,
        IFNULL(IFNULL(billdet.item_cost,0)-IFNULL(tag.tag_purchase_cost,0),0) as profitamt
		FROM ret_bill_details as billdet
		LEFT JOIN ret_billing as b ON b.bill_id = billdet.bill_id
		LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
		LEFT JOIN address a on a.id_customer=c.id_customer
		LEFT JOIN state s on s.id_state=a.id_state
		LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN ret_taging as tag ON tag.tag_id = billdet.tag_id
        LEFT JOIN ret_product_master as pro ON pro.pro_id = tag.product_id
		LEFT JOIN ret_design_master as des ON des.design_no =  tag.design_id
		LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=tag.id_sub_design
        LEFT JOIN ret_lot_inwards_detail as inwd ON inwd.id_lot_inward_detail = tag.id_lot_inward_detail
        LEFT JOIN ret_purchase_order_items as puritm ON puritm.lot_no = inwd.lot_no AND puritm.po_item_sub_des_id = tag.id_sub_design
        LEFT JOIN ret_purchase_order as pur ON pur.po_id = puritm.po_item_po_id
        LEFT JOIN ret_karigar as sup ON sup.id_karigar = pur.po_karigar_id
		where b.bill_status=1 AND billdet.tag_id IS NOT NULL
		 ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
		".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :''));
		$bill_details = $sql->result_array();
		//print_r($this->db->last_query());exit;
		$return_data = array();
		foreach ($bill_details as $value ) {
            $return_data[$value['karigar']][] = $value;
        }
		return $return_data;
    }*/
        //Purchase Vs Sales wastage profit report
        function get_wastagewisepandlreport($post)
        {
            $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
            if($_POST['dt_range'] != ''){
                $dateRange = explode('-',$_POST['dt_range']);
                $from = str_replace('/','-',$dateRange[0]);
                $to = str_replace('/','-',$dateRange[1]);
                $d1 = date_create($from);
                $d2 = date_create($to);
                $FromDt = date_format($d1,"Y-m-d");
                $ToDt = date_format($d2,"Y-m-d");
            }
            $sql = $this->db->query("SELECT tag.tag_code, billdet.bill_type, b.bill_type,b.bill_cus_id,b.pan_no,concat(br.short_name,'-SA-',mt.metal_code,'-',b.sales_ref_no) as bill_no,
            billdet.wastage_percent as salewastage, billdet.piece,
            billdet.gross_wt as salegrosswt, billdet.net_wt as salenetwt,
            billdet.rate_per_grm as rate_per_grm,
            round((billdet.net_wt * (billdet.wastage_percent / 100)),3) as wastagewt,
            round((billdet.net_wt * (ifnull(puritm.item_wastage, IFNULL(tag.lot_wastage_percentage,0)) / 100)),3) as purwastagewt,
            (round((billdet.net_wt * (billdet.wastage_percent / 100)),4) - round((billdet.net_wt * (ifnull(puritm.item_wastage,IFNULL(tag.lot_wastage_percentage,0) ) / 100)),3)) as wastageprofit,
            round((billdet.wastage_percent - ifnull(puritm.item_wastage,IFNULL(tag.lot_wastage_percentage,0))),2) as profitwastper,
            billdet.mc_type, billdet.mc_value,
            if(billdet.mc_type = 1, round(billdet.piece*billdet.mc_value), round(billdet.gross_wt*billdet.mc_value)) as mcval,
            b.bill_id,b.bill_date,concat(c.mobile,'-',c.firstname) as cus_name,
            b.id_branch,billdet.item_cost as tot_bill_amount,date_format(b.bill_date,'%d-%m-%y') as bill_date,
            b.ref_bill_id as ref_bill_id,IFNULL(b.tot_discount,0) as tot_discount,
            c.firstname as customer_name,c.mobile,
            br.name as branch_name,b.tot_amt_received,
            IFNULL(billdet.item_cost,0) as tot_ret_amt,
            ifnull(puritm.item_wastage, IFNULL(tag.lot_wastage_percentage,0)) as purwastage,round(billdet.item_cost-billdet.item_total_tax) as taxable_amt,billdet.item_total_tax,
            ifnull(sup.firstname,'-') as karigar,
            pro.product_name as product_name, des.design_name as design_name,
            subDes.sub_design_name,IFNULL(tag.tag_purchase_cost,0) as tag_purchase_cost,IFNULL(billdet.item_cost,0) as item_cost,
            IFNULL(IFNULL(billdet.item_cost,0)-IFNULL(tag.tag_purchase_cost,0),0) as profitamt,cat.tgrp_id,
            IFNULL(billdet.wastage_percent,0) as sales_wastage,IFNULL(billdet.rate_per_grm,0) as rate,billdet.mc_type,IFNULL(billdet.mc_value,0) as sales_mc_value,
            IFNULL(billdet.bill_discount,0) as bill_discount,billdet.calculation_based_on,IFNULL(billdet.net_wt,0) as net_wt,IFNULL(billdet.gross_wt,0) as gross_wt,
            IFNULL(puritm.item_wastage,IFNULL(tag.lot_wastage_percentage,0)) as item_wastage,IF(puritm.mc_type is null,if(tag.lot_mc_type=1,'Per Gram','Per Pcs'),if(puritm.mc_type=1,'Per Gram','Per Pcs')) as pur_mc_typ,IFNULL(puritm.mc_type,tag.lot_mc_type) as pur_mc_type,IFNULL(puritm.mc_value,IFNULL(tag.lot_making_charge,0)) as pur_mc_value,IFNULL(puritm.purchase_touch,IFNULL(tag.lot_purchase_touch,0)) as purchase_touch,IFNULL(puritm.fix_rate_per_grm,IFNULL(tag.lot_rate,0)) as fix_rate_per_grm,
            IFNULL(tag_stn.stn_amount,0) as stn_amt,IFNULL(tag_stn.dia_amount,0) as dia_amt,IFNULL(other_mt.amount,0) as other_met_amount,
            IFNULL(puritm.rate_calc_type,tag.lot_rate_calc_type) as ratecaltype,IFNULL(g.grn_type,tag.lot_calc_type) as grn_type,sup.karigar_type,
            IFNULL(tag_stn.sale_stn_amount,0) as sale_stn_amt,IFNULL(tag_stn.stn_pcs,0) as sale_stn_pcs,round(IFNULL(tag_stn.stn_wt,0),3) as sale_stn_wt,
            IFNULL(tag_stn.sale_dia_amt,0) as sale_dia_amt,round(IFNULL(tag_stn.dia_wt,0),2) as sale_dia_wt,IFNULL(tag_stn.dia_pcs,0) as sale_dia_pcs,IFNULL(puritm.pure_wt_calc_type,IFNULL(tag.lot_calc_type,0)) as karigar_calc_type,pro.tax_type,IFNULL(rtc.charge_value, 0) AS charge_value,IFNULL(sect.section_name,'') as section_name
            FROM ret_bill_details as billdet
            LEFT JOIN ret_billing as b ON b.bill_id = billdet.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
            LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
            LEFT JOIN address a on a.id_customer=c.id_customer
            LEFT JOIN state s on s.id_state=a.id_state
            LEFT JOIN branch br on br.id_branch=b.id_branch
            LEFT JOIN ret_taging as tag ON tag.tag_id = billdet.tag_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = tag.product_id
            LEFT JOIN ret_design_master as des ON des.design_no =  tag.design_id
            LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=tag.id_sub_design
            LEFT JOIN ret_lot_inwards_detail as inwd ON inwd.id_lot_inward_detail = tag.id_lot_inward_detail
            LEFT JOIN ret_lot_inwards l ON l.lot_no = tag.tag_lot_id
            LEFT JOIN ret_taging as ref_tag on ref_tag.tag_id = tag.ref_tag_id
            LEFT JOIN ret_purchase_order_items as puritm ON  puritm.po_item_sub_des_id = tag.id_sub_design and puritm.lot_no = IF(ref_tag.tag_id IS NULL,tag.tag_lot_id,ref_tag.tag_lot_id)
            LEFT JOIN ret_purchase_order as pur ON pur.po_id = puritm.po_item_po_id
            LEFT JOIN ret_karigar as sup ON sup.id_karigar = IFNULL(pur.po_karigar_id,l.gold_smith)
            LEFT JOIN ret_section sect on  sect.id_section = tag.id_section
            LEFT JOIN (SELECT tag_id, SUM(IFNULL(charge_value,0)) AS charge_value FROM ret_taging_charges GROUP BY tag_id) AS rtc ON rtc.tag_id = tag.tag_id
            left join metal mt on mt.id_metal=b.metal_type
            LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id
            LEFT JOIN ret_grn_entry g ON g.grn_id = pur.po_grn_id
            LEFT JOIN (SELECT billstn.bill_det_id,tag.tag_id,SUM(IF(m.uom_id=6 , round(IFNULL((if(billstn.stone_cal_type=1,(billstn.wt),(billstn.wt))*IFNULL(purstn.po_stone_rate,IFNULL(tagstn.pur_rate,0))),0),2),0)) as dia_amount,
		SUM(IF(m.uom_id!=6 , round(IFNULL((if(billstn.stone_cal_type=1,(billstn.wt),(billstn.wt))*IFNULL(purstn.po_stone_rate,IFNULL(tagstn.pur_rate,0))),0),2),0)) as stn_amount,
		IFNULL(purstn.po_stone_rate,IFNULL(tagstn.pur_rate,0)) as po_stone_rate,IFNULL(SUM(tagstn.wt),0) as tagstn_wt,IFNULL(SUM(IF(m.uom_id!=6,billstn.pieces,0)),0) as stn_pcs,
		IFNULL(SUM(IF(m.uom_id!=6,billstn.wt,0)),0) as stn_wt,SUM(IF(m.uom_id=6,billstn.wt,0)) as dia_wt,SUM(IF(m.uom_id=6,billstn.pieces,0)) as dia_pcs,SUM(IF(m.uom_id=6,billstn.price,0)) as sale_dia_amt,SUM(IF(m.uom_id!=6,billstn.price,0)) as sale_stn_amount
                        FROM ret_billing_item_stones billstn
                        LEFT JOIN ret_bill_details  billdet ON billstn.bill_det_id = billdet.bill_det_id
						LEFT JOIN ret_taging tag ON tag.tag_id = billdet.tag_id
						LEFT JOIN ret_taging as ref_tag on ref_tag.tag_id = tag.ref_tag_id
						LEFT JOIN (SELECT tagstn.tag_id,tagstn.stone_id ,pur_rate,wt FROM ret_taging_stone as tagstn GROUP BY tagstn.tag_id,tagstn.stone_id  ) tagstn ON tagstn.tag_id = billdet.tag_id and tagstn.stone_id = billstn.stone_id
						LEFT JOIN ret_stone st ON st.stone_id = billstn.stone_id
						LEFT JOIN ret_uom m ON m.uom_id = st.uom_id
						LEFT JOIN ret_lot_inwards l ON l.lot_no = IF(ref_tag.tag_id IS NULL,tag.tag_lot_id,ref_tag.tag_lot_id)
									LEFT JOIN (SELECT s.po_stone_rate,s.po_stone_id,r.po_item_po_id,r.po_item_pro_id,r.po_item_des_id,r.po_item_sub_des_id
											FROM ret_po_stone_items s
											LEFT JOIN ret_purchase_order_items r ON r.po_item_id = s.po_item_id
											GROUP BY s.po_stone_id,r.po_item_po_id,r.po_item_pro_id,r.po_item_des_id,r.po_item_sub_des_id) as purstn ON purstn.po_stone_id = tagstn.stone_id AND purstn.po_item_po_id = l.po_id AND purstn.po_item_pro_id = tag.product_id AND purstn.po_item_des_id = tag.design_id AND purstn.po_item_sub_des_id = tag.id_sub_design
				  GROUP BY billstn.bill_det_id) as tag_stn ON tag_stn.bill_det_id = billdet.bill_det_id
        LEFT JOIN (SELECT round(IFNULL((SUM(otr_mt.tag_other_itm_grs_weight)*IFNULL(other_met.po_other_item_rate,0)),0),2) as amount,otr_mt.tag_other_itm_tag_id
                FROM ret_tag_other_metals otr_mt
                LEFT JOIN ret_taging tag ON tag.tag_id = otr_mt.tag_other_itm_tag_id
                LEFT JOIN ret_lot_inwards l ON l.lot_no = tag.tag_lot_id
                LEFT JOIN ret_category c ON c.id_ret_category = l.id_category
                LEFT JOIN (
                    SELECT p.po_other_item_rate,p.po_item_metal,r.po_item_po_id,r.po_item_pro_id,r.po_item_des_id,r.po_item_sub_des_id
                    From ret_po_other_item p
                    LEFT JOIN ret_purchase_order_items r ON r.po_item_id = p.po_item_id
                    GROUP BY p.po_item_metal,r.po_item_po_id,r.po_item_pro_id,r.po_item_des_id,r.po_item_sub_des_id) as other_met ON other_met.po_item_metal = otr_mt.tag_other_itm_metal_id and other_met.po_item_po_id = l.po_id AND other_met.po_item_pro_id =tag.product_id AND other_met.po_item_des_id = tag.design_id AND other_met.po_item_sub_des_id = tag.id_sub_design
                GROUP BY otr_mt.tag_other_itm_tag_id) as other_mt ON other_mt.tag_other_itm_tag_id = tag.tag_id
            where b.bill_status=1 AND billdet.tag_id IS NOT NULL
             ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
             ".($post['id_metal']!='' && $post['id_metal']>0 ? " and cat.id_metal=".$post['id_metal']."" :'')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :''));
        //	print_r($this->db->last_query());exit;
            $bill_details = $sql->result_array();
            $return_data = array();
            foreach ($bill_details as $items ) {
                $mc_wast_amt = 0;
                $wast_wgt_amt = 0;
                $mc_amount = 0;
                $wastage_discount = 0;
                $mc_discount = 0;
                $watsge_wt = 0;
                $blc_discount = 0;
                $wastage_amount = 0;
                $discount_weight = 0;
                if($items['sales_wastage']>0){
                    $watsge_wt = ($items['sales_wastage']*$items['net_wt']/100);
                    $wastage_amount = (($items['sales_wastage']*$items['net_wt']/100)*$items['rate']);
                }
                if($items['sales_mc_value']>0)
                {
                    $mc_amount = ($items['mc_type']==1 ? $items['sales_mc_value'] :($items['sales_mc_value']*$items['gross_wt']));
                }
                if($wastage_amount < ($items['bill_discount']))
                {
                    $wastage_discount = $wastage_amount;
                    $blc_discount = (($items['bill_discount']) - ($wastage_discount));
                    if($blc_discount > 0)
                    {
                        if($mc_amount > 0)
                        {
                            if(($mc_amount)>($blc_discount))
                            {
                                $mc_discount = ($blc_discount);
                            }else
                            {
                                $mc_discount = (($mc_amount));
                            }
                        }
                        else
                        {
                            $mc_discount = 0;
                        }
                        $total_applied_discount = (($mc_discount)+($wastage_discount));
                        if($total_applied_discount < $items['bill_discount'])
                        {
                            $item_blc_discount  = (($items['bill_discount'])-($total_applied_discount));
                        }
                    }
                }
                else
                {
                    if($wastage_amount > $items['bill_discount'])
                    {
                        $wastage_discount = $items['bill_discount'];
                    }
                }
                if ($wastage_discount > 0) {
                    $discount_weight = number_format(($wastage_discount / $items['rate']), 3, '.', '');
                    $item_wastge_wt = number_format(($watsge_wt - $discount_weight), 3, '.', '');
                } else {
                    $item_wastge_wt = $watsge_wt;
                }
                if ($item_wastge_wt > 0) {
                    if ($items['calculation_based_on'] == 0) {
                        $wastage_percent = (($item_wastge_wt * 100) / $items['gross_wt']);
                    } else if ($items['calculation_based_on'] == 1 || $items['calculation_based_on'] == 2) {
                        $wastage_percent = (($item_wastge_wt * 100) / $items['net_wt']);
                    }
                } else {
                    $wastage_percent = $items['wastage_percent'];
                }
                if ($mc_discount > 0) {
                    $mc        = $mc_amount - $mc_discount;
                }else{
                    $mc = $mc_amount;
                }
                $items['wastageprofit'] = number_format(($items['wastageprofit']-$discount_weight),3,'.','');
                $items['wastagewt'] = number_format((($items['net_wt']*$wastage_percent)/100),3,'.','');
                $items['wastage_percent'] = number_format($wastage_percent,2,'.','');
                $items['wastage_disc_amt'] = number_format($wastage_discount,2,'.','');
                $items['discount_weight'] = number_format($discount_weight,3,'.','');
                $items['making_charge'] = number_format($mc,2,'.','');
                $items['mc_disc_amt'] = number_format($mc_discount,2,'.','');
                $items['profitwastper']= number_format(($wastage_percent-$items['item_wastage']),2,'.','');
                $item_cost = 0;
                $stone_price = $items['stn_amt'];
                $diamond_price = $items['dia_amt'];
                // if($items['stn_amt']>0)
                // {
                //     $stone_price = number_format((($items['stn_amt']) * ((100 + 3) / 100)),2,'.','');
                // }
                // if($items['dia_amt']>0)
                // {
                //     $diamond_price = number_format((($items['dia_amt']) * ((100 + 3) / 100)),2,'.','');
                // }
                $items['dia_amt'] = $diamond_price;
                $items['stn_amt'] = $stone_price;
 /*               if($items['grn_type']==1)
                {
                    $purewt = ((($items['net_wt']) * (($items['purchase_touch']) + ($items['item_wastage']))) / 100);
                    $total_mc_value  = ($items['pur_mc_type']==1 ? (($items['pur_mc_value'])*($items['gross_wt'])) :($items['pur_mc_value']));
                    if($items['karigar_type']==1)
                    {
                        $total_mc_value = (($total_mc_value)+((($total_mc_value*3))/100));
                    }
                    if($items['ratecaltype']==1)
                    {
                        $item_cost   = ((($purewt)*($items['fix_rate_per_grm']))+($total_mc_value)+($items['other_met_amount']) +($stone_price+$diamond_price));
                    }else
                    {
                        $item_cost   = (($items['piece']*$items['fix_rate_per_grm'])+($total_mc_value)+($items['other_met_amount'])+($stone_price+$diamond_price));
                    }
                }else{
                    $purewt = (($items['net_wt']*$items['purchase_touch'])/100);
                    $total_mc_value  = ($items['pur_mc_type']==1 ? (($items['pur_mc_value'])*($items['gross_wt'])) :($items['pur_mc_value']));
                    $total_wt = ((($items['net_wt'])*($items['item_wastage'])/100));
                    if($items['karigar_type']==1)
                    {
                        $total_mc_value = (($total_mc_value)+((($total_mc_value*3))/100));
                    }
                    if($items['ratecaltype']==1)
                    {
                        $item_cost   = (((($purewt)+($total_wt))*($items['fix_rate_per_grm']))+($total_mc_value)+($items['other_met_amount']) +($stone_price+$diamond_price));
                    }else
                    {
                        $item_cost   = ($items['piece']*$items['fix_rate_per_grm']);
                    }
                }*/
                $purchase_mc = $items['pur_mc_value'];
                $gross_wt = $items['gross_wt'];
                $tot_pcs = $items['piece'];
                $net_wt = $items['net_wt'];
                if($items['calculation_based_on'] ==0)
                {
                     $total_mc_value  = ($items['pur_mc_type']==1 ? $purchase_mc * $gross_wt : $purchase_mc * $tot_pcs);
                }
                else if($items['calculation_based_on'] ==1)
                {
                    $total_mc_value  = ($items['pur_mc_type']==1 ? $purchase_mc * $net_wt : $purchase_mc * $tot_pcs);
                }
                else if($items['calculation_based_on'] ==2)
                {
                    $total_mc_value  = ($items['pur_mc_type']==1 ? $purchase_mc * $gross_wt : $purchase_mc * $tot_pcs);
                }
                $purchase_touch = $items['purchase_touch'];
                $pur_wastage = $items['item_wastage'];
                $total_charges = $items['charge_value'];
                $stone = $stone_price+$diamond_price;
                $other_metal_amount = $items['other_met_amount'];
                $ratecaltype = $items['ratecaltype'];
                $rate = $items['fix_rate_per_grm'];
                if($items['karigar_calc_type']==1)
                {
                     $purewt =$net_wt * (($purchase_touch + $pur_wastage) / 100);
                }else if($items['karigar_calc_type']==2) //Net weight * touch
                {
                    $purewt = ((($net_wt) * (($purchase_touch)/100)));
                }
                else if($items['karigar_calc_type']==3) // ((net wt * 3%)*92%)
                {
                    $touch_weight       = ((($net_wt)*($purchase_touch)/100));
                    $wastage_touch      = (($touch_weight)*(($pur_wastage))/100);
                    $purewt             = (($touch_weight)+($wastage_touch));
                    // var touch_weight = parseFloat((parseFloat(pur_wastage) + parseFloat(purchase_touch)) / 100);
                    // var purewt =  parseFloat(parseFloat(touch_weight)*parseFloat(net_wt)).toFixed(3);
                }
                if($ratecaltype==1) // Rate Calc By Grm(Wt)
                {
                    $purchase_cost   = ((($purewt)*($rate))+($total_mc_value)+($other_metal_amount) + ($total_charges)+($stone));
                }else
                {
                    $purchase_cost   = ((($tot_pcs)*($rate))+($total_mc_value)+($other_metal_amount) + ($total_charges)+($stone));
                }
                 $purchase_cost_taxable =$purchase_cost;
                 $pur_total_tax_rate = 0;
                // tax_type = 1;
                $tax_type =  $items['tax_type'];
                 if($tax_type==1) // Inclusive of Tax
                 {
                    $items['pur_total_tax'] = $this->calculate_inclusiveGST($purchase_cost,$items['tgrp_id']);
                 }else
                 {
                    $items['pur_total_tax'] = $this->calculate_ExclusiveGST($purchase_cost,$items['tgrp_id']);
                    $purchase_cost+=$items['pur_total_tax'];
                }
                $items['tag_purchase_cost']= number_format($purchase_cost,2,'.','');
                $items['profitamt']= number_format($items['item_cost']-$purchase_cost,2,'.','');
                $items['purewt'] = $purewt;
                $items['total_mc_value'] = $total_mc_value;
               // $items['pur_total_tax'] = $this->calculate_inclusiveGST($items['tag_purchase_cost'],$items['tgrp_id']);
                 $items['bill_no'] = $this->get_bill_no_format_detail( $items['bill_id']);
                 if($post['group_by']== 1){
                    $return_data[$items['karigar']][] = $items;
                 }elseif($post['group_by']==2){
                    $return_data[$items['product_name']][] = $items;
                 }else{
                    $return_data[$items['section_name']][] = $items;
                 }
            }
            return $return_data;
        }
    function get_popaymentreport($data){
        $d1     = date_create($data['from_date']);
        $d2     = date_create($data['to_date']);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt   = date_format($d2,"Y-m-d");
        $karigar= !empty($data['karigar']) ? $data['karigar'] : 0;
        $sql    = $this->db->query("SELECT po.po_id, po.po_ref_no, k.firstname as karigar, podet.no_of_pcs as receivedpcs,
                            podet.gross_wt as received_gwt, podet.qc_passed_gwt, podet.qc_passed_pcs as passedpcs, podet.item_cost as item_cost ,
                            ifnull(payment.pay_amt, 0) paidamt
                            FROM ret_purchase_order as po
                            LEFT JOIN
                            (SELECT po_item_po_id as poitem_id, sum(no_of_pcs) as no_of_pcs, sum(gross_wt) as gross_wt,
                            sum(less_wt) as less_wt, sum(net_wt) as net_wt, sum(qc_failed_pcs) as qc_failed_pcs,
                            sum(qc_failed_gwt) as qc_failed_gwt, sum(qc_failed_nwt) as qc_failed_nwt,
                            sum(qc_failed_lwt) as qc_failed_lwt,
                            sum(qc_passed_gwt) as qc_passed_gwt,
                            sum(qc_passed_lwt) as qc_passed_lwt,
                            sum(qc_passed_pcs) as qc_passed_pcs,
                            sum(qc_passed_nwt) as qc_passed_nwt,
                            sum(po_returned_pcs) as po_returned_pcs,
                            sum(po_returned_wt) as po_returned_wt ,
                             sum(item_cost) as item_cost
                             FROM ret_purchase_order_items as puitm
                             GROUP BY po_item_po_id
                            ) as podet ON podet.poitem_id = po.po_id
                            LEFT JOIN (SELECT pay_po_id,
                            sum(pay_amt) as pay_amt
                             FROM ret_po_payment as paymet
                             GROUP BY pay_po_id) as payment ON payment.pay_po_id = po.po_id
                            LEFT JOIN ret_karigar k ON k.id_karigar=po.po_karigar_id
                            WHERE (date(po.po_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
                            ".($karigar !='' ? " and po.po_karigar_id =".$karigar."" :'')."
                 ");
        $response_data = $sql->result_array();
        /*foreach($response_data as $key => $val){
            $response_data[$key]['billitems'] =   $this->get_purchase_billsitem_details($val['po_id']);
        }*/
        return $response_data;
    }
    function getCustomerLedger()
    {
        $sql = $this->db->query("Select cusId, cusName, sum(round(Debit)) as Debit, sum(round(Credit)) as Credit,
                                concat(round(abs(sum(Debit) - sum(Credit))), if(sum(Debit) - sum(Credit) > 0 , ' Cr', ' Dr')) as balance
                                FROM ret_view_customer_ledger t group by cusId");
        $response_data = $sql->result_array();
        foreach($response_data as $key => $val){
            $response_data[$key]['statements']    =   $this->get_customer_ledger_statement_details($val['cusId']);
            //$response_data[$key]['statements']      =   [];
        }
        return $response_data;
    }
    function get_customer_ledger_statement_details($cusId)
    {
         $sql = $this->db->query("select s.*, @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance
                                from (select date_format(t.billDate, '%d-%m-%Y') as billDate, t.refNo, t.accType,  t.cusName, round(Debit) as Debit,
                                round(Credit) as Credit from ret_view_customer_ledger t where t.cusID = '".$cusId."' order by date(t.billDate) ) s,
                                (Select @RunningBalance:=0) rb ");
        return $sql->result_array();
    }
    function getCustomerLedgerTransaction($cusId)
    {
        $sql = $this->db->query("select s.*, @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance
                                from (select date_format(t.billDate, '%d-%m-%Y') as billDate, t.refNo, t.accType,  t.cusName, round(Debit) as Debit,
                                round(Credit) as Credit from ret_view_customer_ledger t where t.cusID = '".$cusId."' order by date(t.billDate) ) s,
                                (Select @RunningBalance:=0) rb ");
        return $sql->result_array();
    }
    //Supplier ledger  report
    function getSupplierLedger($requestData)
    {
        $ledger_type    = $requestData['ledgerType'];
        $party_id       = $requestData['partyId'];
        if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
        if(!empty($party_id)){ // For Particular user
            if($ledger_type == 1){ // Amount ledger
                /*$sql = $this->db->query("SELECT s.*, @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat('RS: ', round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance
                                from (SELECT date_format(spl.transdate, '%d-%m-%Y') as transdate, spl.ref_no, spl.accType,  spl.sup_name, round(debit) as Debit,
                                round(credit) as Credit from ret_view_supplier_amount_ledger spl where spl.sup_id = '".$party_id."' order by date(spl.transdate) ) s,
                                (Select @RunningBalance:=0) rb");*/
                $sql = $this->db->query("SELECT s.firstname, ifnull(date_format(s.transdate, '%d-%m-%Y'), '-')  as transdate, ifnull(s.ref_no, '-') as ref_no,
                                        if(s.accType = 1, 'GST Purchase', if(s.accType = 2, 'Payment', if(s.accType = 3, 'Sales', if(s.accType = 4, 'Debit Note', 'Credit Note')))) as accType, ifnull(round(s.Debit, 2), round(0, 2)) as Debit,
                                        ifnull(round(s.Credit,2), round(0,2)) as Credit,
                                        @RunningBalance as opening,
                                        concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round(((@RunningBalance + s.Debit) - s.Credit), 2) RunningBalance ,
                                        round(abs(round(@RunningBalance,2)) , 2) as balance,
                                        if(@RunningBalance > 0, 'Dr', 'Cr') as balancetype,
                                        @FirstRow:= @FirstRow + 1 as currow
                                        from (SELECT concat(sup.firstname, '-', sup.contactno1) as firstname, spl.transdate as transdate, spl.ref_no, spl.accType,
                                            round(sum(debit)) as Debit, round(sum(credit)) as Credit from ret_view_supplier_amount_ledger spl
                                            LEFT JOIN ret_karigar as sup ON sup.id_karigar = spl.sup_id
                                            where spl.sup_id = '".$party_id."' AND date(spl.transdate) between  '".$FromDt."' AND '".$ToDt."'
                                            GROUP BY ref_no order by date(spl.transdate) desc) s,
                                        (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(debit)) -
                                                        SUM(COALESCE(credit)) balance
                                                        FROM ret_view_supplier_amount_ledger
                                                        WHERE sup_id = '".$party_id."'
                                                        AND date(transdate) < '$FromDt'
                                                        AND date(transdate) >= '2022-03-31'
                                                        GROUP BY sup_id),0)) op,
                                        (Select @FirstRow:=0) fr ORDER BY s.transdate ASC");
                //echo $sql->num_rows();exit;
                if($sql->num_rows() == 0){ //If no row found will send opening balance and closing balance alone
                     $sql = $this->db->query("SELECT s.firstname, ifnull(date_format(s.transdate, '%d-%m-%Y'), '-')  as transdate, ifnull(s.ref_no, '-') as ref_no,
                                             if(s.accType = 1, 'GST Purchase', 'Payment') as accType, ifnull(round(s.Debit, 2), round(0,2)) as Debit,
                                             ifnull(round(s.Credit, 2), round(0, 2)) as Credit,
                                            @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening
                                                FROM ret_view_supplier_amount_ledger ospl where date(ospl.transdate) <  '".$FromDt."' ) as opening,
                                            concat(round(abs(round(@OpeningBalance,2)) , 2), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                            @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                            ifnull(round(abs(round(@RunningBalance,2)) , 2),0) as balance,
                                            ifnull(if(@RunningBalance > 0, 'Dr', 'Cr'),'') as balancetype,
                                            @FirstRow:= @FirstRow + 1 as currow
                                            from (SELECT concat(sup.firstname, '-', sup.contactno1) as firstname,spl.transdate as transdate, spl.ref_no, spl.accType,
                                            round(sum(debit)) as Debit, round(sum(credit)) as Credit from ret_view_supplier_amount_ledger spl
                                            LEFT JOIN ret_karigar as sup ON sup.id_karigar = spl.sup_id
                                            where spl.sup_id = '".$party_id."' AND date(spl.transdate) < '".$FromDt."' ) s,
                                            (Select @RunningBalance:=0) rb ,
                                            (Select @OpeningBalance:=0) op");
                }
                //echo $this->db->last_query();
                return $sql->result_array();
            }else if($ledger_type == 2){ // Metal Ledger
                /*$sql = $this->db->query("SELECT s.*, @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat('Grms: ', round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance
                                from (SELECT date_format(spl.transdate, '%d-%m-%Y') as transdate, sum(issue_wt) as issue_wt, group_concat(distinct(ifnull(purity, '91.600'))) as purity, spl.ref_no, spl.accType,  spl.sup_name, spl.metal, round(sum(debit)) as Debit,
                                round(sum(credit)) as Credit from ret_view_supplier_metal_ledger spl where spl.sup_id = '".$party_id."' GROUP BY ref_no, metid order by date(spl.transdate) ) s,
                                (Select @RunningBalance:=0) rb");*/
                $sql = $this->db->query("SELECT s.firstname, date_format(s.transdate, '%d-%m-%Y') as transdate, s.issue_wt as issue_wt, s.purity as purity, s.ref_no, s.accType,  s.metal, round(s.debit, 3) as Debit,
                                        round(s.credit, 3) as Credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening FROM ret_view_supplier_metal_ledger ospl
                                            where ospl.metid = s.metid AND date(ospl.transdate) <  date(s.transdate) AND ospl.sup_id = '".$party_id."' ) as opening,
                                        concat('Grms: ', round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round(if(@FirstRow = 0, ((@OpeningBalance + @RunningBalance + s.Debit) - s.Credit) , (@RunningBalance + s.Debit) - s.Credit), 3) RunningBalance ,
                                        concat('Grms: ', round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance ,
                                        @FirstRow:= @FirstRow + 1 as currow
                                        from (SELECT concat(sup.firstname, '-', sup.contactno1) as firstname,spl.unixtransdate, spl.transdate as transdate, sum(issue_wt) as issue_wt, group_concat(distinct(ifnull(purity, '91.600'))) as purity, spl.metid, spl.ref_no, spl.accType,
                                        spl.sup_name, spl.metal, round(sum(debit), 3) as Debit,
                                        round(sum(credit), 3) as Credit from ret_view_supplier_metal_ledger spl
                                        LEFT JOIN ret_karigar as sup ON sup.id_karigar = spl.sup_id
                                        where spl.sup_id = '".$party_id."' AND date(spl.transdate) between  '".$FromDt."' AND '".$ToDt."'
                                       GROUP BY date(spl.transdate), metid, ref_no order by unixtransdate ASC) s,
                                       (Select @RunningBalance:=0) rb,
                                       (Select @OpeningBalance:=0) op,
                                       (Select @FirstRow:=0) fr ORDER BY s.unixtransdate ASC");
                /*
                    $sql = $this->db->query("SELECT date_format(s.transdate, '%d-%m-%Y') as transdate, s.issue_wt as issue_wt, s.purity as purity, s.ref_no, s.accType,  s.metal, round(s.debit, 3) as Debit,
                                        round(s.credit, 3) as Credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening FROM ret_view_supplier_metal_ledger ospl
                                            where ospl.metid = s.metid AND date(ospl.transdate) <  date(s.transdate) ) as opening,
                                        concat('Grms: ', round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round(if(@FirstRow = 0, ((@OpeningBalance + @RunningBalance + s.Debit) - s.Credit) , (@RunningBalance + s.Debit) - s.Credit), 3) RunningBalance ,
                                        concat('Grms: ', round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance ,
                                        @FirstRow:= @FirstRow + 1 as currow
                                        from (SELECT spl.transdate as transdate, sum(issue_wt) as issue_wt, group_concat(distinct(ifnull(purity, '91.600'))) as purity, spl.metid, spl.ref_no, spl.accType,
                                        spl.sup_name, spl.metal, round(sum(debit), 3) as Debit,
                                        round(sum(credit), 3) as Credit from ret_view_supplier_metal_ledger spl
                                        where spl.sup_id = '".$party_id."' AND date(spl.transdate) between  '".$FromDt."' AND '".$ToDt."'
                                       GROUP BY date(spl.transdate), metid, ref_no order by date(spl.transdate) ASC) s,
                                       (Select @RunningBalance:=0) rb,
                                       (Select @OpeningBalance:=0) op,
                                       (Select @FirstRow:=0) fr ORDER BY s.transdate ASC");
                */
                //echo $this->db->last_query();exit;
                if($sql->num_rows() == 0){
                    $sql = $this->db->query("SELECT s.firstname, date_format(s.transdate, '%d-%m-%Y') as transdate, s.issue_wt as issue_wt, s.purity as purity, '-' as ref_no, 'Opening Of ' accType,
                                        s.metal, round(0, 3) as Debit,
                                        round(0, 3) as Credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening FROM ret_view_supplier_metal_ledger ospl
                                            where ospl.metid = s.metid AND date(ospl.transdate) <  '".$FromDt."' ) as opening,
                                        concat('Grms: ', round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 3) RunningBalance ,
                                        concat('Grms: ', round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance
                                        from (SELECT concat(sup.firstname, '-', sup.contactno1) as firstname,spl.transdate as transdate, sum(issue_wt) as issue_wt, group_concat(distinct(ifnull(purity, '91.600'))) as purity, spl.metid, spl.ref_no, spl.accType,
                                        spl.sup_name, spl.metal, round(sum(debit), 3) as Debit,
                                        round(sum(credit), 3) as Credit from ret_view_supplier_metal_ledger spl
                                        LEFT JOIN ret_karigar as sup ON sup.id_karigar = spl.sup_id
                                        where spl.sup_id = '".$party_id."' AND date(spl.transdate) < '".$FromDt."' GROUP BY metid) s,
                                       (Select @RunningBalance:=0) rb,
                                       (Select @OpeningBalance:=0) op");
                }
                //echo $this->db->last_query();
                return $sql->result_array();
            }
        }else{//For All user transaction
            if($ledger_type == 1){
                /*$sql = $this->db->query("SELECT ifnull(date_format(s.transdate, '%d-%m-%Y'), '-')  as transdate, ifnull(s.ref_no, '-') as ref_no,
                                        ifnull(s.accType, '-') as accType, ifnull(s.Debit, '0') as Debit, ifnull(s.Credit, 0) as Credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening
                                            FROM ret_view_supplier_amount_ledger ospl where date(ospl.transdate) <  date(s.transdate) ) as opening,
                                        concat('RS: ', round(abs(round(@OpeningBalance,2))), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round(if(@FirstRow = 0, @OpeningBalance + (@RunningBalance + s.Debit) - s.Credit, ((@RunningBalance + s.Debit) - s.Credit)), 2) RunningBalance ,
                                        concat('RS: ', round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance ,
                                        @FirstRow:= @FirstRow + 1 as currow
                                        from (SELECT spl.transdate as transdate, spl.ref_no, spl.accType,
                                            round(sum(debit)) as Debit, round(sum(credit)) as Credit from ret_view_supplier_amount_ledger spl
                                            where date(spl.transdate) between  '".$FromDt."' AND '".$ToDt."'
                                            GROUP BY date(spl.transdate) order by date(spl.transdate) desc) s,
                                        (Select @RunningBalance:=0) rb ,
                                        (Select @OpeningBalance:=0) op,
                                        (Select @FirstRow:=0) fr ORDER BY s.transdate ASC");*/
                $sql = $this->db->query("SELECT concat(sup.firstname, '-', sup.contactno1) as firstname, ifnull(date_format(lst.transdate, '%d-%m-%Y'), '-')  as transdate,
                                        '-' as ref_no, '' as particulars, '-' as accType,
                                        round(ifnull((SELECT ifnull(SUM(COALESCE(debit)) -
                                                    SUM(COALESCE(credit)),0) balance
                                                    FROM ret_view_supplier_amount_ledger
                                                    WHERE sup_id  = lst.sup_id
                                                    AND date(transdate) < '$FromDt'
                                                    AND date(transdate) >= '2022-03-31'
                                                    GROUP BY sup_id),0),2) as openingbalance
                                         , round(SUM(COALESCE(debit)),2) Debit
                                         , round(SUM(COALESCE(credit)),2) Credit,
                                        abs(round(SUM(COALESCE(debit)) - SUM(COALESCE(credit)),2)) as balance,
                                        if((SUM(COALESCE(debit)) - SUM(COALESCE(credit))) > 0, ' Dr', ' Cr') as balancetype
                                      FROM ret_view_supplier_amount_ledger as lst
                                     LEFT JOIN ret_karigar as sup ON sup.id_karigar = lst.sup_id
                                    where date(transdate) >= '2022-03-31'
                                    GROUP BY sup_id
                                    HAVING balance <> 0 ORDER BY SUM(COALESCE(debit))
                                         - SUM(COALESCE(credit)) desc LIMIT 1000");
                //echo $this->db->last_query();exit;
               /* $sql = $this->db->query("SELECT ifnull(date_format(s.transdate, '%d-%m-%Y'), '-')  as transdate, ifnull(s.ref_no, '-') as ref_no,
                                        ifnull(s.accType, '-') as accType, ifnull(s.Debit, '0') as Debit, ifnull(s.Credit, 0) as Credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening
                                            FROM ret_view_supplier_amount_ledger ospl where date(ospl.transdate) <  date(s.transdate) ) as opening,
                                        concat('RS: ', round(abs(round(@OpeningBalance,2))), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round(if(@FirstRow = 0, @OpeningBalance + (@RunningBalance + s.Debit) - s.Credit, ((@RunningBalance + s.Debit) - s.Credit)), 2) RunningBalance ,
                                        concat('RS: ', round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance ,
                                        @FirstRow:= @FirstRow + 1 as currow
                                        from (SELECT spl.transdate as transdate, spl.ref_no, spl.accType,
                                            round(sum(debit)) as Debit, round(sum(credit)) as Credit from ret_view_supplier_amount_ledger spl
                                            where date(spl.transdate) between  '".$FromDt."' AND '".$ToDt."'
                                            GROUP BY date(spl.transdate) order by date(spl.transdate) desc) s,
                                        (Select @RunningBalance:=0) rb ,
                                        (Select @OpeningBalance:=0) op,
                                        (Select @FirstRow:=0) fr ORDER BY s.transdate ASC"); */
                /*if($sql->num_rows() == 0){
                    $sql = $this->db->query("SELECT ifnull(date_format(s.transdate, '%d-%m-%Y'), '-')  as transdate, ifnull(s.ref_no, '-') as ref_no,
                                            ifnull(s.accType, '-') as accType, 0 as Debit, 0 as Credit,
                                            @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening
                                                FROM ret_view_supplier_amount_ledger ospl where date(ospl.transdate) <  '".$FromDt."' ) as opening,
                                            concat('RS: ', round(abs(round(@OpeningBalance,2))), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                            @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                            concat('RS: ', round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance ,
                                            @FirstRow:= @FirstRow + 1 as currow
                                            from (SELECT spl.transdate as transdate, spl.ref_no, spl.accType,
                                            round(sum(debit)) as Debit, round(sum(credit)) as Credit from ret_view_supplier_amount_ledger spl
                                            where date(spl.transdate) < '".$FromDt."' ) s,
                                            (Select @RunningBalance:=0) rb ,
                                            (Select @OpeningBalance:=0) op");
                }*/
                return $sql->result_array();
            }else{
                 $sql = $this->db->query("SELECT concat(sup.firstname, '-', sup.contactno1) as firstname, ifnull(date_format(lst.transdate, '%d-%m-%Y'), '-')  as transdate, '-' as ref_no,
                                        '' as particulars, '-' as accType, sum(issue_wt) as issue_wt,
                                        ifnull((SELECT ifnull(SUM(COALESCE(debit)) -
                                                    SUM(COALESCE(credit)),0) balance
                                                    FROM ret_view_supplier_metal_ledger
                                                    WHERE sup_id  = lst.sup_id
                                                    AND date(transdate) < '$FromDt'
                                                    AND date(transdate) >= '2022-03-31'
                                                    GROUP BY sup_id),0) as openingbalance
                                         , SUM(COALESCE(debit)) Debit
                                         , SUM(COALESCE(credit)) Credit
                                         , SUM(COALESCE(debit))
                                         - SUM(COALESCE(credit)) balance
                                      FROM ret_view_supplier_metal_ledger as lst
                                      LEFT JOIN ret_karigar as sup ON sup.id_karigar = lst.sup_id
                                    where date(transdate) between '".$FromDt."' AND '".$ToDt."'
                                    GROUP BY sup_id
                                    HAVING balance <> 0 ORDER BY SUM(COALESCE(debit))
                                         - SUM(COALESCE(credit)) desc LIMIT 1000");
                 /*$sql = $this->db->query("SELECT date_format(s.transdate, '%d-%m-%Y') as transdate, s.issue_wt as issue_wt, s.purity as purity, s.ref_no, s.accType,  s.metal, round(s.debit, 3) as Debit,
                                        round(s.credit, 3) as Credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening FROM ret_view_supplier_metal_ledger ospl
                                            where ospl.metid = s.metid AND date(ospl.transdate) <  date(s.transdate) ) as opening,
                                        concat('Grms: ', round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round(if(@FirstRow = 0, ((@OpeningBalance + @RunningBalance + s.Debit) - s.Credit) , (@RunningBalance + s.Debit) - s.Credit), 3) RunningBalance ,
                                        concat('Grms: ', round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance ,
                                        @FirstRow:= @FirstRow + 1 as currow
                                        from (SELECT spl.transdate as transdate, sum(issue_wt) as issue_wt, group_concat(distinct(ifnull(purity, '91.600'))) as purity, spl.metid, spl.ref_no, spl.accType,
                                        spl.sup_name, spl.metal, round(sum(debit), 3) as Debit,
                                        round(sum(credit), 3) as Credit from ret_view_supplier_metal_ledger spl
                                        where date(spl.transdate) between  '".$FromDt."' AND '".$ToDt."'
                                       GROUP BY date(spl.transdate), metid order by date(spl.transdate) ASC) s,
                                       (Select @RunningBalance:=0) rb,
                                       (Select @OpeningBalance:=0) op,
                                       (Select @FirstRow:=0) fr ORDER BY s.transdate ASC");  */
                /*if($sql->num_rows() == 0){
                    $sql = $this->db->query("SELECT date_format(s.transdate, '%d-%m-%Y') as transdate, s.issue_wt as issue_wt, s.purity as purity, '-' as ref_no, 'Opening Of ' accType,
                                        s.metal, round(0, 3) as Debit,
                                        round(0, 3) as Credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening FROM ret_view_supplier_metal_ledger ospl
                                            where ospl.metid = s.metid AND date(ospl.transdate) <  '".$FromDt."' ) as opening,
                                        concat('Grms: ', round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 3) RunningBalance ,
                                        concat('Grms: ', round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance
                                        from (SELECT spl.transdate as transdate, sum(issue_wt) as issue_wt, group_concat(distinct(ifnull(purity, '91.600'))) as purity, spl.metid, spl.ref_no, spl.accType,
                                        spl.sup_name, spl.metal, round(sum(debit), 3) as Debit,
                                        round(sum(credit), 3) as Credit from ret_view_supplier_metal_ledger spl
                                        where  date(spl.transdate) < '".$FromDt."' GROUP BY metid) s,
                                       (Select @RunningBalance:=0) rb,
                                       (Select @OpeningBalance:=0) op");
                }*/
                //echo $this->db->last_query();
                return $sql->result_array();
            }
        }
    }
    function getSmithTransactionList($requestData)
    {
        $ledger_type    = $requestData['ledgerType'];
        $party_id       = $requestData['partyId'];
        $metalType      = empty($requestData['metalType']) ? 0 : $requestData['metalType'];
        $group_by_required       = empty($requestData['group_by_required']) ? 0 : $requestData['group_by_required'];
        if($group_by_required && !empty($party_id)){
            $groupBy = "GROUP BY stone_type";
        }else if(empty($group_by_required) && !empty($party_id)){
            $groupBy = "";
        }else if(empty($party_id)){
            $groupBy = "GROUP BY customer_id";
        }
        if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
		$multiple_id_metal = implode(' , ', $requestData['id_metal']);
		if($multiple_id_metal != '')
		{
			$metal = $multiple_id_metal;
		}else{
			$metal = $requestData['id_metal'];
		}
        $return_data = array();
        if(!empty($party_id)){ // For Particular user
                     $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round((@RunningGRSWTBalance + s.IssueGrsWt) - s.ReceiptGrsWt, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round((@RunningNETWTBalance + s.IssueNetWt) - s.ReceiptNetWt, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round((@RunningPURWTBalance + s.IssuePureWt) - s.ReceiptPureWt, 3) RunningBalancePwt,
                                concat(round(abs(round(@RunningPURWTBalance,2)), 2), if(@RunningPURWTBalance > 0, ' Dr', ' Cr')) as purebalance
                                from (SELECT kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              category as particulars, referenceno as transrefno, trans_rec_type, ifnull(dispuom, '') as dispuom,
                                              round(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN trans_amount END,0), 2) as Debit,
                                              round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                    WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                    END,0), 2) as Credit,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0), 0) as IssuePcs,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0), 3) as IssueGrsWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0), 3) as IssueNetWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3) as IssuePureWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0), 0) as ReceiptPcs,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0), 3) as ReceiptGrsWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0), 3) as ReceiptNetWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3) as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_smith_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE customer_id = '".$party_id."'
                                    AND date(trans_date) between '$FromDt' AND '$ToDt' AND stone_type = '$metalType'
                                    ".($metalType > 0 ? " AND gross_wt > 0" :'')."
									".($metal!='' && $metal !='0' ? " and trans.id_metal in (".$metal.") " :'' )."
                                    $groupBy order by unixtransdate ASC ) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
                    if($sql->num_rows() == 0){
                        $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round((@RunningGRSWTBalance + s.IssueGrsWt) - s.ReceiptGrsWt, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round((@RunningNETWTBalance + s.IssueNetWt) - s.ReceiptNetWt, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round((@RunningPURWTBalance + s.IssuePureWt) - s.ReceiptPureWt, 3) RunningBalancePwt,
                                concat(round(abs(round(@RunningPURWTBalance,2)), 2), if(@RunningPURWTBalance > 0, ' Dr', ' Cr')) as purebalance
                                from (SELECT kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              category as particulars, referenceno as transrefno, trans_rec_type, ifnull(dispuom, '') as dispuom,
                                              0 as Debit,
                                              0 as Credit,
                                               0 as IssuePcs,
                                               0 as IssueGrsWt,
                                               0 as IssueNetWt,
                                               0 as IssuePureWt,
                                               0 as ReceiptPcs,
                                               0 as ReceiptGrsWt,
                                               0 as ReceiptNetWt,
                                               0 as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_smith_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE customer_id = '".$party_id."'
                                    AND stone_type = '$metalType'
                                    ".($metalType > 0 ? " AND gross_wt > 0" :'')."
									".($metal!='' && $metal !='0' ? " and trans.id_metal in (".$metal.") " :'' )."
                                    order by unixtransdate ASC LIMIT 1) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
                    }
                //echo $this->db->last_query();exit;
                $return_data = $sql->result_array();
        }else{
            $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round((@RunningGRSWTBalance + s.IssueGrsWt) - s.ReceiptGrsWt, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round((@RunningNETWTBalance + s.IssueNetWt) - s.ReceiptNetWt, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round((@RunningPURWTBalance + s.IssuePureWt) - s.ReceiptPureWt, 3) RunningBalancePwt,
                                concat(round(abs(round(@RunningPURWTBalance,2)), 2), if(@RunningPURWTBalance > 0, ' Dr', ' Cr')) as purebalance,
                                0 as purebalance, @CurrentUserId:= s.customer_id , @stoneType:= s.stone_type
                                from (SELECT stone_type, customer_id, kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              kr.firstname as particulars, referenceno as transrefno, trans_rec_type, ifnull(dispuom, '') as dispuom,
                                              SUM(round(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN trans_amount END,0), 2)) as Debit,
                                              SUM(round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                    WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                    END,0), 2)) as Credit,
                                               SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0), 0)) as IssuePcs,
                                               SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0), 3)) as IssueGrsWt,
                                               SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0), 3)) as IssueNetWt,
                                               SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3)) as IssuePureWt,
                                               SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0), 0)) as ReceiptPcs,
                                               SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0), 3)) as ReceiptGrsWt,
                                               SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0), 3)) as ReceiptNetWt,
                                               SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3)) as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_smith_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE date(trans_date) <= '$ToDt'   AND stone_type = '$metalType'
                                    ".($metalType > 0 ? " AND gross_wt > 0" :'')."
									".($metal!='' && $metal !='0' ? " and trans.id_metal in (".$metal.") " :'' )."
                                    $groupBy order by customer_id ASC) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_smith_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND stone_type = '$metalType'
                                                        ".($metalType > 0 ? " AND gross_wt > 0" :'')."
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
            $return_data = $sql->result_array();
        }
        return $return_data;
    }
    function getSupplierTransactionList220623($requestData)
    {
        $ledger_type    = $requestData['ledgerType'];
        $party_id       = $requestData['partyId'];
        if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
        $return_data = array();
        if(!empty($party_id)){ // For Particular user
                     $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round((@RunningGRSWTBalance + s.IssueGrsWt) - s.ReceiptGrsWt, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round((@RunningNETWTBalance + s.IssueNetWt) - s.ReceiptNetWt, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round((@RunningPURWTBalance + s.IssuePureWt) - s.ReceiptPureWt, 3) RunningBalancePwt,
                                concat(round(abs(round(@RunningPURWTBalance,3)), 3), if(@RunningPURWTBalance > 0, ' Dr', ' Cr')) as purebalance
                                from (SELECT kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              category as particulars, referenceno as transrefno, trans_rec_type,
                                              round(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN trans_amount END,0), 2) as Debit,
                                              round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                    WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                    END,0), 2) as Credit,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0), 0) as IssuePcs,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0), 3) as IssueGrsWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0), 3) as IssueNetWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3) as IssuePureWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0), 0) as ReceiptPcs,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0), 3) as ReceiptGrsWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0), 3) as ReceiptNetWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3) as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_supplier_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE customer_id = '".$party_id."'
                                    AND date(trans_date) between '$FromDt' AND '$ToDt'
                                    order by unixtransdate ASC ) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
                    //echo $this->db->last_query();exit;
                $return_data = $sql->result_array();
        }
        return $return_data;
    }
	function getSupplierTransactionList($requestData)
    {
        $ledger_type    = $requestData['ledgerType'];
        $party_id       = $requestData['partyId'];
        if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
        if($requestData['from_date'] != '' && $requestData['to_date'] != '' ){
            $FromDt = date('Y-m-d',strtotime($requestData['from_date']));
            $ToDt = date('Y-m-d',strtotime($requestData['to_date']));
            $data['dt_range'] =$FromDt;
           }
		$multiple_id_metal = implode(' , ', $requestData['id_metal']);
		if($multiple_id_metal != '')
		{
			$metal = $multiple_id_metal;
		}else{
			$metal = $requestData['id_metal'];
		}
        $return_data = array();
        if(!empty($party_id)){ // For Particular user
                    $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round(0, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round(0, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round(0, 3) RunningBalancePwt,
                               0 as purebalance
                                from (SELECT kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              category as particulars, referenceno as transrefno, trans_rec_type,
                                              round(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN trans_amount END,0), 2) as Debit,
                                              round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                    WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                    END,0), 2) as Credit,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0), 0) as IssuePcs,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0), 3) as IssueGrsWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0), 3) as IssueNetWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3) as IssuePureWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0), 0) as ReceiptPcs,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0), 3) as ReceiptGrsWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0), 3) as ReceiptNetWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3) as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_supplier_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE customer_id = '".$party_id."'
                                    AND date(trans_date) between '$FromDt' AND '$ToDt'
									".($metal!='' && $metal !='0' ? " and trans.id_metal in (".$metal.") " :'' )."
                                    order by unixtransdate ASC ) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
                    if($sql->num_rows() == 0){
                        $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round(0, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round(0, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round(0, 3) RunningBalancePwt,
                               0 as purebalance
                                from (SELECT kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              category as particulars, referenceno as transrefno, trans_rec_type,
                                              0 as Debit,
                                              0 as Credit,
                                              0 as IssuePcs,
                                              0 as IssueGrsWt,
                                              0 as IssueNetWt,
                                              0 as IssuePureWt,
                                              0 as ReceiptPcs,
                                              0 as ReceiptGrsWt,
                                              0 as ReceiptNetWt,
                                              0 as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_supplier_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE customer_id = '".$party_id."'
									".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                    order by unixtransdate ASC LIMIT 1) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
                    }
                //echo $this->db->last_query();exit;
                $return_data = $sql->result_array();
        }else{
            $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round(s.Debit - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round(0, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round(0, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round(0, 3) RunningBalancePwt,
                               0 as purebalance, @CurrentUserId:= s.customer_id
                                from (SELECT customer_id, kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              kr.firstname as particulars, referenceno as transrefno, trans_rec_type,
                                              SUM(round(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN trans_amount END,0), 2)) as Debit,
                                              SUM(round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                    WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                    END,0), 2)) as Credit,
                                              SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0), 0)) as IssuePcs,
                                              SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0), 3)) as IssueGrsWt,
                                              SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0), 3)) as IssueNetWt,
                                              SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3)) as IssuePureWt,
                                              SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0), 0)) as ReceiptPcs,
                                              SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0), 3)) as ReceiptGrsWt,
                                              SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0), 3)) as ReceiptNetWt,
                                              SUM(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3)) as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_supplier_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE date(trans_date) <= '$ToDt' AND kr.status_karigar = 1
                                    ".($metal!='' && $metal !='0' ? " and trans.id_metal in (".$metal.") " :'' )."
                                    GROUP BY customer_id order by customer_id ASC ) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_supplier_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
            $return_data = $sql->result_array();
        }
        return $return_data;
    }
    function getMetalwiseSupplierTransactionList($requestData)
    {
        $return_data = array();
        if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $sql = $this->db->query("SELECT s.customer_id, s.firstname,
                                SUM(if(ifnull(s.metal, '') = 'GOLD', (s.IssuePureWt - s.ReceiptPureWt), 0)) as goldwt,
                                SUM(if(ifnull(s.metal, '') = 'SILVER', (s.IssuePureWt - s.ReceiptPureWt), 0)) as silverwt,
                                SUM(if(ifnull(s.metal, '') = 'PLATINUM', (s.IssuePureWt - s.ReceiptPureWt), 0)) as platinumwt,
                                sum((round(s.Debit,2) - round(s.Credit,2))) as balanceamt
                                    from (SELECT customer_id, kr.firstname,
                                                sum(CAST(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN ifnull(trans_amount,0) END,0) AS DECIMAL(13,2))) as Debit,
                                                sum(round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                            WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                            END,0), 2)) as Credit,
                                                sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3)) as IssuePureWt,
                                                sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3)) as ReceiptPureWt,
                                                met.metal
                                from ret_view_supplier_approval_ledger as trans
                                LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                LEFT JOIN metal as met ON met.id_metal = trans.id_metal
                                WHERE date(trans_date) between <= '$ToDt'
                                GROUP BY customer_id, trans.id_metal  order by customer_id ASC) s GROUP BY s.customer_id");
        //echo $this->db->last_query();exit;
        $return_data = $sql->result_array();
        return $return_data;
    }
	function getSupplierApprovalTransactionList($requestData)
    {
        $ledger_type    = $requestData['ledgerType'];
        $party_id       = $requestData['partyId'];
        if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
		$multiple_id_metal = implode(' , ', $requestData['id_metal']);
		if($multiple_id_metal != '')
		{
			$metal = $multiple_id_metal;
		}else{
			$metal = $requestData['id_metal'];
		}
        $return_data = array();
        if(!empty($party_id)){ // For Particular user
                     $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round((@RunningGRSWTBalance + s.IssueGrsWt) - s.ReceiptGrsWt, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round((@RunningNETWTBalance + s.IssueNetWt) - s.ReceiptNetWt, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round((@RunningPURWTBalance + s.IssuePureWt) - s.ReceiptPureWt, 3) RunningBalancePwt,
                                concat(round(abs(round(@RunningPURWTBalance,3)), 3), if(@RunningPURWTBalance > 0, ' Dr', ' Cr')) as purebalance
                                from (SELECT kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              category as particulars, referenceno as transrefno, trans_rec_type,
                                              round(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN trans_amount END,0), 2) as Debit,
                                              round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                    WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                    END,0), 2) as Credit,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0), 0) as IssuePcs,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0), 3) as IssueGrsWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0), 3) as IssueNetWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3) as IssuePureWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0), 0) as ReceiptPcs,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0), 3) as ReceiptGrsWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0), 3) as ReceiptNetWt,
                                               round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3) as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_supplier_approval_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE customer_id = '".$party_id."'
									".($metal!='' && $metal !='0' ? " and trans.id_metal in (".$metal.") " :'' )."
                                    AND date(trans_date) between '$FromDt' AND '$ToDt'
                                    order by unixtransdate ASC ) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
                    //echo $this->db->last_query();exit;
                if($sql->num_rows() == 0){
                    $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round((@RunningGRSWTBalance + s.IssueGrsWt) - s.ReceiptGrsWt, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round((@RunningNETWTBalance + s.IssueNetWt) - s.ReceiptNetWt, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round((@RunningPURWTBalance + s.IssuePureWt) - s.ReceiptPureWt, 3) RunningBalancePwt,
                                concat(round(abs(round(@RunningPURWTBalance,3)), 3), if(@RunningPURWTBalance > 0, ' Dr', ' Cr')) as purebalance
                                from (SELECT kr.firstname, ifnull(kr.contactno1, kr.contactno2) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              category as particulars, referenceno as transrefno, trans_rec_type,
                                              0 as Debit,
                                              0 as Credit,
                                              0 as IssuePcs,
                                              0 as IssueGrsWt,
                                              0 as IssueNetWt,
                                              0 as IssuePureWt,
                                              0 as ReceiptPcs,
                                              0 as ReceiptGrsWt,
                                              0 as ReceiptNetWt,
                                              0 as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_supplier_approval_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE customer_id = '".$party_id."'
									".($metal!='' && $metal !='0' ? " and trans.id_metal in (".$metal.") " :'' )."
                                    order by unixtransdate ASC LIMIT 1) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        AND date(trans_date) < '$FromDt'
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = '".$party_id."'
                                                        AND date(trans_date) < '$FromDt'
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
                }
                $return_data = $sql->result_array();
        }else{
            $sql = $this->db->query("SELECT s.*,  @RunningBalance as opening,
                                @RunningBalance:= round((s.Debit - s.Credit), 2) RunningBalance ,
                                concat(round(abs(round(@RunningBalance,2)), 2), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance,
                                @RunningPURWTBalance as openingpure,
                                @RunningPCSBalance:= round((@RunningPCSBalance + s.IssuePcs) - s.ReceiptPcs, 0) RunningBalancePcs,
                                @RunningGRSWTBalance:= round((s.IssueGrsWt) - s.ReceiptGrsWt, 3) RunningBalanceGwt,
                                @RunningNETWTBalance:= round((s.IssueNetWt) - s.ReceiptNetWt, 3) RunningBalanceNwt,
                                @RunningPURWTBalance:= round((s.IssuePureWt) - s.ReceiptPureWt, 3) RunningBalancePwt,
                                concat(round(abs(round(@RunningPURWTBalance,3)), 3), if(@RunningPURWTBalance > 0, ' Dr', ' Cr')) as purebalance,
                                @CurrentUserId:= s.customer_id
                                from (SELECT customer_id, kr.firstname, ifnull(kr.contactno1, ifnull(kr.contactno2, '')) as mobile, rate, narration,
                                              date_format(trans_date, '%d-%m-%Y') as trans_date,
                                              ifnull(kr.firstname, '') as particulars, referenceno as transrefno, trans_rec_type,
                                              SUM(
      CAST(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN ifnull(trans_amount,0) END,0) AS DECIMAL(13,2))) as Debit,
                                              sum(round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                    WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                    END,0), 2)) as Credit,
                                            sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0), 0)) as IssuePcs,
                                            sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0), 3)) as IssueGrsWt,
                                            sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0), 3)) as IssueNetWt,
                                            sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3)) as IssuePureWt,
                                            sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0), 0)) as ReceiptPcs,
                                            sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0), 3)) as ReceiptGrsWt,
                                            sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0), 3)) as ReceiptNetWt,
                                            sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3)) as ReceiptPureWt,
                                            purchase_touch, trans_screen_id
                                            from ret_view_supplier_approval_ledger as trans
                                    LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                    WHERE date(trans_date) <= '$ToDt' AND kr.id_karigar IS NOT NULL AND kr.firstname IS NOT NULL AND kr.status_karigar = 1
                                    ".($metal!='' && $metal !='0' ? " and trans.id_metal in (".$metal.") " :'' )."
                                    GROUP BY customer_id order by customer_id ASC ) s,
                            (Select @RunningBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_type = 2) THEN trans_amount END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount END,0)) amtbalance
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id =  @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND customer_id IS NOT NULL
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb,
                            (Select @RunningPCSBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN no_of_pcs END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN no_of_pcs END,0)) balancepcs
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id =  @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND customer_id IS NOT NULL
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb1,
                            (Select @RunningGRSWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN gross_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN gross_wt END,0)) balancegrwwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt'  AND customer_id IS NOT NULL
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb2,
                            (Select @RunningNETWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN net_wt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN net_wt END,0)) balancenetwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND customer_id IS NOT NULL
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb3,
                            (Select @RunningPURWTBalance:=ifnull((SELECT SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0)) -
                                                        SUM(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0)) balancenpurwt
                                                        FROM ret_view_supplier_approval_ledger
                                                        WHERE customer_id = @CurrentUserId
                                                        AND date(trans_date) < '$FromDt' AND customer_id IS NOT NULL
														".($metal!='' && $metal !='0' ? " and id_metal in (".$metal.") " :'' )."
                                                        GROUP BY customer_id),0)) rb4
                                                        ");
            //echo $this->db->last_query();exit;
            $return_data = $sql->result_array();
        }
        return $return_data;
    }
    function getMetalwiseApprovalTransactionList($requestData){
        $return_data = array();
        if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $sql = $this->db->query("SELECT s.customer_id, s.firstname,
                                SUM(if(ifnull(s.metal, '') = 'GOLD', (s.IssuePureWt - s.ReceiptPureWt), 0)) as goldwt,
                                SUM(if(ifnull(s.metal, '') = 'SILVER', (s.IssuePureWt - s.ReceiptPureWt), 0)) as silverwt,
                                SUM(if(ifnull(s.metal, '') = 'PLATINUM', (s.IssuePureWt - s.ReceiptPureWt), 0)) as platinumwt,
                                sum((round(s.Debit,2) - round(s.Credit,2))) as balanceamt
                                    from (SELECT customer_id, kr.firstname,
                                                sum(CAST(COALESCE(CASE WHEN (trans_type = 2 AND trans_screen_id != 6) THEN ifnull(trans_amount,0) END,0) AS DECIMAL(13,2))) as Debit,
                                                sum(round(COALESCE(CASE WHEN (trans_type = 1) THEN trans_amount
                                                                            WHEN (trans_type = 2 AND trans_screen_id = 6) THEN trans_amount
                                                                            END,0), 2)) as Credit,
                                                sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 2) THEN purewt END,0), 3)) as IssuePureWt,
                                                sum(round(COALESCE(CASE WHEN (trans_rec_type = 1 AND trans_type = 1) THEN purewt END,0), 3)) as ReceiptPureWt,
                                                met.metal
                                from ret_view_supplier_approval_ledger as trans
                                LEFT JOIN ret_karigar as kr ON kr.id_karigar = trans.customer_id
                                LEFT JOIN metal as met ON met.id_metal = trans.id_metal
                                WHERE date(trans_date) <= '$ToDt' AND kr.id_karigar IS NOT NULL AND kr.status_karigar = 1
                                GROUP BY customer_id, trans.id_metal  order by customer_id ASC) s GROUP BY s.customer_id");
        //echo $this->db->last_query();exit;
        $return_data = $sql->result_array();
        return $return_data;
    }
    function getSmithAllTransactionList($requestData)
    {
        $ledger_type    = $requestData['ledgerType'];
        $party_id       = $requestData['partyId'];
        if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
        $return_data = array();
        if(!empty($party_id)){ // For Particular user
                $sql = $this->db->query("SELECT date_format(s.transdate, '%d-%m-%Y') as transdate, s.ref_no, s.accType, round(s.met_debit, 3) as met_debit,
                                        round(s.met_credit, 3) as met_credit, round(s.amt_debit, 3) as amt_debit,round(s.amt_credit, 3) as amt_credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.met_debit) - sum(ospl.met_credit) ,0) as opening FROM ret_view_smith_metal_amt_ledger ospl
                                            where date(ospl.unixtransdate) <  date(s.unixtransdate) AND ospl.sup_id = '".$party_id."' ) as metopening,
                                        @AmtOpeningBalance:=(SELECT ifnull(sum(ospl.amt_debit) - sum(ospl.amt_credit) ,0) as opening FROM ret_view_smith_metal_amt_ledger ospl
                                            where date(ospl.unixtransdate) <  date(s.unixtransdate) AND ospl.sup_id = '".$party_id."' ) as amtopening,
                                        concat(round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as met_openingbalance,
                                        concat(round(abs(round(@AmtOpeningBalance,3)), 3), if(@AmtOpeningBalance > 0, ' Dr', ' Cr')) as amt_openingbalance,
                                        @RunningBalance:= round(if(@FirstRow = 0, ((@OpeningBalance + @RunningBalance + s.met_debit) - s.met_credit) , (@RunningBalance + s.met_debit) - s.met_credit), 3) met_runningBalance,
                                        @AmtRunningBalance:= round(if(@AmtFirstRow = 0, ((@AmtOpeningBalance + @AmtRunningBalance + s.amt_debit) - s.amt_credit) , (@RunningBalance + s.amt_debit) - s.amt_credit), 3) amt_runningBalance,
                                        concat(round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Dr', ' Cr')) as met_balance,
                                        concat(round(abs(round(@AmtRunningBalance,3)), 3), if(@AmtRunningBalance > 0, ' Dr', ' Cr')) as amt_balance,
                                        @FirstRow:= @FirstRow + 1 as met_currow,
                                        @AmtFirstRow:= @AmtFirstRow + 1 as amt_currow
                                        from (
                                                SELECT spl.unixtransdate, spl.transdate as transdate, spl.ref_no, spl.accType,
                                                spl.sup_name, round(sum(met_debit), 3) as met_debit,
                                                round(sum(met_credit), 3) as met_credit,
                                                round(sum(amt_debit), 3) as amt_debit,
                                                round(sum(amt_credit), 3) as amt_credit from ret_view_smith_metal_amt_ledger spl
                                                where spl.sup_id = '".$party_id."' AND date(spl.transdate) between  '".$FromDt."' AND '".$ToDt."'
                                               GROUP BY date(spl.transdate), ref_no order by unixtransdate ASC
                                       ) s,
                                       (Select @RunningBalance:=0) mrb,
                                       (Select @OpeningBalance:=0) mop,
                                       (Select @AmtRunningBalance:=0) arb,
                                       (Select @AmtOpeningBalance:=0) aop,
                                       (Select @AmtFirstRow:=0) amtfr,
                                       (Select @FirstRow:=0) fr ORDER BY s.unixtransdate ASC");
                if($sql->num_rows() == 0){
                    $sql = $this->db->query("SELECT date_format(s.transdate, '%d-%m-%Y') as transdate, s.ref_no, s.accType, round(s.met_debit, 3) as met_debit,
                                        round(s.met_credit, 3) as met_credit, round(s.amt_debit, 3) as amt_debit,round(s.amt_credit, 3) as amt_credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.met_debit) - sum(ospl.met_credit) ,0) as opening FROM ret_view_smith_metal_amt_ledger ospl
                                            where date(ospl.unixtransdate) <  '".$FromDt."' AND ospl.sup_id = '".$party_id."' ) as metopening,
                                        @AmtOpeningBalance:=(SELECT ifnull(sum(ospl.amt_debit) - sum(ospl.amt_credit) ,0) as opening FROM ret_view_smith_metal_amt_ledger ospl
                                            where date(ospl.unixtransdate) <  '".$FromDt."' AND ospl.sup_id = '".$party_id."' ) as amtopening,
                                        concat(round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as met_openingbalance,
                                        concat(round(abs(round(@AmtOpeningBalance,3)), 3), if(@AmtOpeningBalance > 0, ' Dr', ' Cr')) as amt_openingbalance,
                                        @RunningBalance:= round(if(@FirstRow = 0, ((@OpeningBalance + @RunningBalance + s.met_debit) - s.met_credit) , (@RunningBalance + s.met_debit) - s.met_credit), 3) met_runningBalance,
                                        @AmtRunningBalance:= round(if(@AmtFirstRow = 0, ((@AmtOpeningBalance + @AmtRunningBalance + s.amt_debit) - s.amt_credit) , (@RunningBalance + s.amt_debit) - s.amt_credit), 3) amt_runningBalance,
                                        concat(round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Dr', ' Cr')) as met_balance,
                                        concat(round(abs(round(@AmtRunningBalance,3)), 3), if(@AmtRunningBalance > 0, ' Dr', ' Cr')) as amt_balance,
                                        @FirstRow:= @FirstRow + 1 as met_currow,
                                        @AmtFirstRow:= @AmtFirstRow + 1 as amt_currow
                                        from (
                                                SELECT spl.unixtransdate, spl.transdate as transdate, spl.ref_no, spl.accType,
                                                spl.sup_name, round(sum(met_debit), 3) as met_debit,
                                                round(sum(met_credit), 3) as met_credit,
                                                round(sum(amt_debit), 3) as amt_debit,
                                                round(sum(amt_credit), 3) as amt_credit from ret_view_smith_metal_amt_ledger spl
                                                where spl.sup_id = '".$party_id."' AND date(spl.transdate) < '".$FromDt."'
                                               GROUP BY date(spl.transdate), ref_no order by unixtransdate ASC
                                       ) s,
                                       (Select @RunningBalance:=0) mrb,
                                       (Select @OpeningBalance:=0) mop,
                                       (Select @AmtRunningBalance:=0) arb,
                                       (Select @AmtOpeningBalance:=0) aop,
                                       (Select @AmtFirstRow:=0) amtfr,
                                       (Select @FirstRow:=0) fr ORDER BY s.unixtransdate ASC");
                }
                //echo $this->db->last_query();
                /*foreach($sql->result_array() as $items)
                {
                    $return_data[$items['ref_no']][] = $items;
                }*/
                return $sql->result_array();
        }else{//For All user transaction
                 $sql = $this->db->query("SELECT date_format(s.transdate, '%d-%m-%Y') as transdate, s.sup_name, s.ref_no, s.accType,
                                        round(s.met_debit, 3) as met_debit, round(s.met_credit, 3) as met_credit,
                                        round(s.amt_debit, 3) as amt_debit,round(s.amt_credit, 3) as amt_credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.met_debit) - sum(ospl.met_credit) ,0) as opening FROM ret_view_smith_metal_amt_ledger ospl
                                            where ospl.sup_id = s.sup_id AND date(ospl.transdate) <  date(s.transdate) ) as metopening,
                                        @AmtOpeningBalance:=(SELECT ifnull(sum(ospl.amt_debit) - sum(ospl.amt_credit) ,0) as opening FROM ret_view_smith_metal_amt_ledger ospl
                                            where ospl.sup_id = s.sup_id AND date(ospl.transdate) <  date(s.transdate) ) as amtopening,
                                        concat('', round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as met_openingbalance ,
                                        concat('', round(abs(round(@AmtOpeningBalance,3)), 3), if(@AmtOpeningBalance > 0, ' Dr', ' Cr')) as amt_openingbalance ,
                                        @RunningBalance:= round(if(@FirstRow = 0, ((@OpeningBalance + @RunningBalance + s.met_debit) - s.met_credit) , (@RunningBalance + s.met_debit) - s.met_credit), 3) met_runningBalance,
                                        @AmtRunningBalance:= round(if(@AmtFirstRow = 0, ((@AmtOpeningBalance + @AmtRunningBalance + s.amt_debit) - s.amt_credit) , (@RunningBalance + s.amt_debit) - s.amt_credit), 3) amt_runningBalance,
                                        concat(round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Dr', ' Cr')) as met_balance,
                                        concat(round(abs(round(@AmtRunningBalance,3)), 3), if(@AmtRunningBalance > 0, ' Dr', ' Cr')) as amt_balance,
                                        @FirstRow:= @FirstRow + 1 as met_currow,
                                        @AmtFirstRow:= @AmtFirstRow + 1 as amt_currow
                                        from(
                                                SELECT spl.transdate as transdate, spl.ref_no, spl.accType,
                                                spl.sup_name, spl.sup_id, round(sum(met_debit), 3) as met_debit,
                                                round(sum(met_credit), 3) as met_credit,
                                                round(sum(amt_debit), 3) as amt_debit,
                                                round(sum(amt_credit), 3) as amt_credit
                                                from ret_view_smith_metal_amt_ledger spl
                                                where date(spl.transdate) between  '".$FromDt."' AND '".$ToDt."'
                                               GROUP BY spl.sup_id order by date(spl.transdate) ASC
                                        ) s,
                                       (Select @RunningBalance:=0) mrb,
                                       (Select @OpeningBalance:=0) mop,
                                       (Select @AmtRunningBalance:=0) arb,
                                       (Select @AmtOpeningBalance:=0) aop,
                                       (Select @AmtFirstRow:=0) amtfr,
                                       (Select @FirstRow:=0) fr ORDER BY s.transdate ASC");
                    //echo $this->db->last_query();exit;
                if($sql->num_rows() == 0){
                    /*$sql = $this->db->query("SELECT date_format(s.transdate, '%d-%m-%Y') as transdate, s.sup_name, '' as catname, s.issue_wt as issue_wt, '-' as ref_no, s.accType,
                                        s.metal, round(0, 3) as Debit,
                                        round(0, 3) as Credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.debit) - sum(ospl.credit) ,0) as opening FROM ret_view_smith_metal_ledger ospl
                                            where ospl.sup_id = s.sup_id AND date(ospl.transdate) <  '".$FromDt."' ) as opening,
                                        concat('Grms: ', round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as openingbalance ,
                                        @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 3) RunningBalance ,
                                        concat('', round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance
                                        from (SELECT spl.transdate as transdate, sum(issue_wt) as issue_wt, spl.metid, spl.ref_no, spl.accType,
                                        spl.sup_name, spl.sup_id, spl.catname, spl.metal, round(sum(debit), 3) as Debit,
                                        round(sum(credit), 3) as Credit from ret_view_smith_metal_ledger spl
                                        where  date(spl.transdate) < '".$FromDt."' GROUP BY spl.sup_id) s,
                                       (Select @RunningBalance:=0) rb,
                                       (Select @OpeningBalance:=0) op");*/
                    $sql = $this->db->query("SELECT date_format(s.transdate, '%d-%m-%Y') as transdate, s.sup_name, s.ref_no, s.accType,
                                        round(s.met_debit, 3) as met_debit, round(s.met_credit, 3) as met_credit,
                                        round(s.amt_debit, 3) as amt_debit,round(s.amt_credit, 3) as amt_credit,
                                        @OpeningBalance:=(SELECT ifnull(sum(ospl.met_debit) - sum(ospl.met_credit) ,0) as opening FROM ret_view_smith_metal_amt_ledger ospl
                                            where ospl.sup_id = s.sup_id AND date(ospl.transdate) <    '".$FromDt."' ) as metopening,
                                        @AmtOpeningBalance:=(SELECT ifnull(sum(ospl.amt_debit) - sum(ospl.amt_credit) ,0) as opening FROM ret_view_smith_metal_amt_ledger ospl
                                            where ospl.sup_id = s.sup_id AND date(ospl.transdate) <  '".$FromDt."' ) as amtopening,
                                        concat('Grms: ', round(abs(round(@OpeningBalance,3)), 3), if(@OpeningBalance > 0, ' Dr', ' Cr')) as met_openingbalance ,
                                        concat('Grms: ', round(abs(round(@AmtOpeningBalance,3)), 3), if(@AmtOpeningBalance > 0, ' Dr', ' Cr')) as amt_openingbalance ,
                                        @RunningBalance:= round(if(@FirstRow = 0, ((@OpeningBalance + @RunningBalance + s.met_debit) - s.met_credit) , (@RunningBalance + s.met_debit) - s.met_credit), 3) met_runningBalance,
                                        @AmtRunningBalance:= round(if(@AmtFirstRow = 0, ((@AmtOpeningBalance + @AmtRunningBalance + s.amt_debit) - s.amt_credit) , (@RunningBalance + s.amt_debit) - s.amt_credit), 3) amt_runningBalance,
                                        concat(round(abs(round(@RunningBalance,3)), 3), if(@RunningBalance > 0, ' Dr', ' Cr')) as met_balance,
                                        concat(round(abs(round(@AmtRunningBalance,3)), 3), if(@AmtRunningBalance > 0, ' Dr', ' Cr')) as amt_balance,
                                        @FirstRow:= @FirstRow + 1 as met_currow,
                                        @AmtFirstRow:= @AmtFirstRow + 1 as amt_currow
                                        from(
                                                SELECT spl.transdate as transdate, spl.ref_no, spl.accType,
                                                spl.sup_name, spl.sup_id, round(sum(met_debit), 3) as met_debit,
                                                round(sum(met_credit), 3) as met_credit,
                                                round(sum(amt_debit), 3) as amt_debit,
                                                round(sum(amt_credit), 3) as amt_credit
                                                from ret_view_smith_metal_amt_ledger spl
                                                where date(spl.transdate) <  '".$FromDt."'
                                               GROUP BY spl.sup_id order by date(spl.transdate) ASC
                                        ) s,
                                       (Select @RunningBalance:=0) mrb,
                                       (Select @OpeningBalance:=0) mop,
                                       (Select @AmtRunningBalance:=0) arb,
                                       (Select @AmtOpeningBalance:=0) aop,
                                       (Select @AmtFirstRow:=0) amtfr,
                                       (Select @FirstRow:=0) fr ORDER BY s.transdate ASC");
                }
                //echo $this->db->last_query();
                return $sql->result_array();
                /*foreach($sql->result_array() as $items)
                {
                    $return_data[$items['ref_no']][] = $items;
                }*/
        }
        return $return_data;
    }
    function getSupplierAmountClosingBalance($partyId)
    {
        $sql = $this->db->query("SELECT @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                            concat('RS: ', round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Dr', ' Cr')) as balance
                            from (SELECT round(sum(debit)) as Debit,
                            round(sum(credit)) as Credit from ret_view_supplier_amount_ledger spl where spl.sup_id = '".$party_id."' group by spl.sup_id) s,
                            (Select @RunningBalance:=0) rb");
        return $sql->result_row();
    }
    function getSupplierMetalClosingBalance($partyId)
    {
        $sql = $this->db->query("SELECT @RunningBalance:= round((@RunningBalance + s.Debit) - s.Credit, 2) RunningBalance ,
                            concat('Grms: ', round(abs(round(@RunningBalance,2))), if(@RunningBalance > 0, ' Cr', ' Dr')) as balance
                            from (SELECT round(sum(debit)) as Debit, round(sum(credit)) as Credit from ret_view_supplier_metal_ledger spl where spl.sup_id = '".$party_id."'
                            GROUP BY spl.sup_id) s,
                            (Select @RunningBalance:=0) rb");
        return $sql->result_row();
    }
    //Supplier ledger report
    //old tag import
    function old_updateData($update_data,$condtion_data,$table)
	{
			$this->db->where($condtion_data);
			$add_flag= $this->db->update($table,$update_data);
			return $add_flag;
	}
    function check_old_tag_code($old_tag_code){
        $sql=$this->db->query("SELECT import_tag_code from ret_old_tag_import where import_tag_code = '".$old_tag_code."'");
		//print_r($this->db->last_query());
        return $sql->num_rows();
    }
	function check_old_tag_code_mismatched($old_tag_code){
        $sql=$this->db->query("SELECT remarks as old_tag_id from ret_taging where tag_status = '0' and remarks = '".$old_tag_code."'");
		//print_r($this->db->last_query());
        return $sql->num_rows();
    }
    function get_old_sale_report_report($data){
		$data['from_date'] = date('Y-m-d',strtotime($data['from_date']));
        $data['to_date'] = date('Y-m-d',strtotime($data['to_date']));
		$sql=$this->db->query("select count(i.import_tag_code) as total, ifnull(upt_tag.updat_tag,0) as upt_tag,ifnull(mismatch.mis_tag,0) mis_tag,b.name,e.firstname,CAST(i.import_date AS DATE) import_date from ret_old_tag_import i
		left join branch b on b.id_branch=i.import_branch
		left join employee e on e.id_employee=i.import_by
		left join (SELECT count(import_tag_code) updat_tag,import_branch, CAST(import_date AS DATE) import_date from ret_old_tag_import where import_tag_status=1 and date(CAST(import_date AS DATE)) BETWEEN '".$data['from_date']."' and '".$data['to_date']."' GROUP by import_branch,cast(import_date as date)) upt_tag on upt_tag.import_branch=i.import_branch and CAST(upt_tag.import_date as date)=CAST(i.import_date as date)
		left join (SELECT count(import_tag_code) mis_tag,import_branch, CAST(import_date AS DATE) import_date from ret_old_tag_import where import_tag_status=2 and date(CAST(import_date AS DATE)) between '".$data['from_date']."' and '".$data['to_date']."' GROUP by import_branch,cast(import_date as date)) mismatch on mismatch.import_branch=i.import_branch and cast(mismatch.import_date as date)=cast(i.import_date as date)
		where date(CAST(i.import_date AS DATE)) between '".$data['from_date']."' and '".$data['to_date']."'
		GROUP by CAST(i.import_date AS DATE), i.import_branch");
				//print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    function get_current_branch($old_tag_code){
        $sql=$this->db->query("SELECT current_branch from ret_taging where remarks = '".$old_tag_code."'");
        return $sql->row()->current_branch;
    }
	function get_our_tag_code($old_tag_code){
        $sql=$this->db->query("SELECT tag_id from ret_taging where remarks = '".$old_tag_code."'");
        return $sql->row()->tag_id;
    }
	function get_day_close_date($id_branch){
        $sql=$this->db->query("SELECT entry_date from ret_day_closing where id_branch = '".$id_branch."'");
        return $sql->row()->entry_date;
    }
    function get_new_tag_current_branch($old_tag_code){
        $sql=$this->db->query("SELECT current_branch from ret_taging where tag_code = '".$old_tag_code."'");
        return $sql->row()->current_branch;
    }
	function get_our_new_tag_code($old_tag_code){
        $sql=$this->db->query("SELECT tag_id from ret_taging where tag_code = '".$old_tag_code."'");
        return $sql->row()->tag_id;
    }
    //old tag import
    //Available Metal Stock Details
    function get_available_metal_stock_details($data)
    {
        $return_Data=[];
            $sql=$this->db->query("SELECT IFNULL(SUM(s.gross_wt),0) as gross_wt,IFNULL(SUM(s.net_wt),0) as net_wt,
            IFNULL(SUM(s.rate),0) as amount,if(s.metal_type=1,'Old Metal Gold','Old Metal Silver') as type,c.old_metal_cat,e.id_old_metal_category
            FROM ret_bill_old_metal_sale_details s
            LEFT JOIN ret_estimation_old_metal_sale_details e ON e.old_metal_sale_id=s.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_category c ON c.id_old_metal_cat=e.id_old_metal_category
            LEFT JOIN ret_billing b ON b.bill_id=s.bill_id
            WHERE s.is_pocketed=0  AND b.bill_status=1 AND s.old_metal_sale_id IS NOT NULL
            ".($data['id_branch']!='' && $data['id_branch']>0 ? " and s.current_branch=".$data['id_branch']."" :'')."
            group by e.id_old_metal_category");
            //print_r($this->db->last_query());exit;
            $result=$sql->result_array();
            foreach($result as $items)
            {
                $return_Data[]=array(
                'item_type'         =>0,
                'type'              =>'OLD METAL',
                'gross_wt'			=>$items['gross_wt'],
                'rate'	            =>$items['amount'],
                'net_wt'			=>$items['net_wt'],
                'purity'			=>'-',
                'product_name'		=>$items['old_metal_cat'],
                'item_details'      =>$this->getOldMetalCatDetails($items['id_old_metal_category'],$data['id_branch']),
                );
            }
            $sales_return=$this->db->query("SELECT IFNULL(SUM(tag.gross_wt),0) as gross_wt,IFNULL(SUM(tag.net_wt),0) as net_wt,p.product_name,tag.product_id,mt.metal as metal_name,
            cat.id_metal
            FROM ret_taging tag
            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
            LEFT JOIN metal mt on mt.id_metal=cat.id_metal
            LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
            LEFT JOIN ret_purity pur ON pur.id_purity=tag.purity
            LEFT JOIN ret_bill_details d ON d.tag_id=tag.tag_id
            LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
            WHERE tag.tag_status=6 AND tag.tag_process=0
            ".($data['id_branch']!='' && $data['id_branch']>0 ? " and tag.current_branch=".$data['id_branch']."" :'' )."
            group by cat.id_metal");
           // print_r($this->db->last_query());exit;
            $sales_ret_result= $sales_return->result_array();
            foreach($sales_ret_result as $items)
            {
                $return_Data[]=array(
                'item_type'         =>0,
                'type'              =>'SALES RETURN',
                'gross_wt'			=>$items['gross_wt'],
                'rate'	            =>'-',
                'net_wt'			=>$items['net_wt'],
                'purity'			=>'-',
                'product_name'		=>$items['metal_name'],
                'item_details'      =>$this->get_sales_return_details($items['id_metal'],$data['id_branch']),
                );
            }
            $partlySale=$this->db->query("SELECT IFNULL(SUM(tag.gross_wt),0) as gross_wt,iFNULL(SUM(tag.net_wt),0) as net_wt,(IFNULL(SUM(tag.gross_wt),0)-IFNULL(sld.sold_gwt,0)) as blc_gwt,(IFNULL(SUM(tag.net_wt),0)-IFNULL(sld.sold_net_wt,0)) as blc_nwt,
            mt.metal as metal_name,cat.id_metal
            FROM ret_taging tag
            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
            LEFT JOIN metal mt on mt.id_metal=cat.id_metal
            LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
            left join ret_sub_design_master s on s.id_sub_design=tag.id_sub_design
            LEFT JOIN(
            SELECT SUM(s.sold_gross_wt) as sold_gwt,IFNULL(SUM(s.sold_net_wt),0) as sold_net_wt,cat.id_metal
                FROM ret_partlysold s
                LEFT JOIN ret_taging t ON t.tag_id=s.tag_id
                LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
                LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                LEFT JOIN metal mt on mt.id_metal=cat.id_metal
                LEFT JOIN ret_bill_details d ON d.bill_det_id=s.sold_bill_det_id
                LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
                WHERE b.bill_status=1 AND t.is_partial=1 AND d.is_partial_sale=1 and (t.tag_process = 0)  ".($data['id_branch']!='' && $data['id_branch']>0 ? " and t.current_branch=".$data['id_branch']."" :'' )."
            group by cat.id_metal
            ) as sld ON sld.id_metal=cat.id_metal
            WHERE tag.is_partial=1 and (tag.tag_process = 0)
            ".($data['id_branch']!='' && $data['id_branch']>0 ? " and tag.current_branch=".$data['id_branch']."" :'' )."
            group by cat.id_metal ");
            $partly_sale_result= $partlySale->result_array();
            //print_r($this->db->last_query());exit;
            foreach($partly_sale_result as $items)
            {
                $return_Data[]=array(
                'item_type'         =>1,
                'type'              =>'PARTLY SALE',
                'gross_wt'			=>$items['blc_gwt'],
                'rate'	            =>'-',
                'net_wt'			=>$items['blc_nwt'],
                'purity'			=>'-',
                'product_name'		=>$items['metal_name'],
                'item_details'      =>$this->get_partly_sale_details($items['id_metal'],$data['id_branch']),
                );
            }
            $sql1=$this->db->query("SELECT  s.id_stock_summary,IFNULL(SUM(s.gross_wt),0) as gross_wt,IFNULL(SUM(s.net_wt),0) as net_wt,c.name as category_name,p.product_name,s.purity
            FROM ret_purchase_item_stock_summary s
            LEFT JOIN ret_category c ON c.id_ret_category=s.id_ret_category
            LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
            WHERE s.id_ret_category IS NOT NULL
             ".($data['id_branch']!='' && $data['id_branch']>0  ? " and s.id_branch=".$data['id_branch']."" :'')."
            GROUP by s.id_ret_category,s.id_product,s.purity");
            $result= $sql1->result_array();
            foreach($result as $items)
            {
                $return_Data[]=array(
                'item_type'         =>2,
                'id_stock_summary'  =>$items['id_stock_summary'],
                'type'              =>$items['category_name'],
                'gross_wt'			=>$items['gross_wt'],
                'rate'	            =>'-',
                'net_wt'			=>$items['net_wt'],
                'purity'			=>$items['purity'],
                'product_name'		=>$items['product_name'],
                'item_details'      =>[],
                );
            }
           return $return_Data;
    }
    function getOldMetalCatDetails($id_old_metal_category,$id_branch)
    {
        $sql=$this->db->query("SELECT IFNULL((s.gross_wt),0) as gross_wt,IFNULL((s.net_wt),0) as net_wt,
        IFNULL((s.rate),0) as amount,if(s.metal_type=1,'Old Metal Gold','Old Metal Silver') as type,c.old_metal_cat,cus.mobile,cus.firstname as cus_name,date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_no,b.bill_id,br.name as bill_from,
        s.purity
        FROM ret_bill_old_metal_sale_details s
        LEFT JOIN ret_estimation_old_metal_sale_details e ON e.old_metal_sale_id=s.esti_old_metal_sale_id
        LEFT JOIN ret_old_metal_category c ON c.id_old_metal_cat=e.id_old_metal_category
        LEFT JOIN ret_billing b ON b.bill_id=s.bill_id
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        WHERE s.is_pocketed=0  AND b.bill_status=1 AND s.old_metal_sale_id IS NOT NULL
        ".($id_old_metal_category!='' ? " and e.id_old_metal_category=".$id_old_metal_category."" : " and  e.id_old_metal_category IS NULL")."
        ".($id_branch!='' && $id_branch>0 ? " and s.current_branch=".$id_branch."" :'')."");
        //print_r($this->db->last_query());exit;
        $result=$sql->result_array();
        return $result;
    }
    function get_sales_return_details($id_metal,$id_branch)
    {
        $sql=$this->db->query("SELECT tag.tag_id,tag.tag_code,tag.tag_type,tag.product_id,tag.design_id,tag.design_for,tag.purity,tag.size,tag.gross_wt,IFNULL(tag.net_wt,0) as net_wt,des.design_name,pur.purity,date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_no,b.bill_id,tag.sales_value, p.product_short_code,p.product_name,
        IFNULL(tag.	retail_max_wastage_percent,'') as retail_max_wastage_percent,tag.tag_mc_type,IFNULL(tag.tag_mc_value,0) as tag_mc_value,tag.id_sub_design,IFNULL(tag.sales_value,0) as sales_value,IFNULL(tag.sell_rate,0) as sell_rate,
        br.name as bill_from,cus.mobile,cus.firstname as cus_name
        FROM ret_taging tag
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
        LEFT JOIN metal mt on mt.id_metal=cat.id_metal
        LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
        LEFT JOIN ret_purity pur ON pur.id_purity=tag.purity
        LEFT JOIN ret_bill_details d ON d.tag_id=tag.tag_id
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        WHERE tag.tag_status=6 AND tag.tag_process=0
        ".($id_branch!='' && $id_branch>0 ? " and tag.current_branch=".$id_branch."" :'' )."
        ".($id_metal!='' && $id_metal>0 ? " and mt.id_metal=".$id_metal."" :'' )."
        group by tag.tag_id");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    function get_partly_sale_details($id_metal,$id_branch)
    {
        $sql=$this->db->query("SELECT IFNULL(SUM(tag.gross_wt),0) as gross_wt,iFNULL(SUM(tag.net_wt),0) as net_wt,(IFNULL(SUM(tag.gross_wt),0)-IFNULL(sld.sold_gwt,0)) as blc_gwt,(IFNULL(SUM(tag.net_wt),0)-IFNULL(sld.sold_net_wt,0)) as blc_nwt,
            mt.metal as metal_name,cat.id_metal,tag.tag_code,IFNULL(sld.sold_gwt,0) as sold_gwt,IFNULL(SUM(sld.sold_net_wt),0) as sold_nwt
            FROM ret_taging tag
            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
            LEFT JOIN metal mt on mt.id_metal=cat.id_metal
            LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
            left join ret_sub_design_master s on s.id_sub_design=tag.id_sub_design
            LEFT JOIN(SELECT SUM(s.sold_gross_wt) as sold_gwt,IFNULL(SUM(s.sold_net_wt),0) as sold_net_wt,s.tag_id
                FROM ret_partlysold s
                LEFT JOIN ret_taging t ON t.tag_id=s.tag_id
                LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
                LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                LEFT JOIN metal mt on mt.id_metal=cat.id_metal
                LEFT JOIN ret_bill_details d ON d.bill_det_id=s.sold_bill_det_id
                LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
                WHERE b.bill_status=1 AND t.is_partial=1
            group by t.tag_id) as sld ON sld.tag_id=tag.tag_id
            WHERE tag.is_partial=1 and (tag.tag_process = 0)
            ".($id_metal!='' && $id_metal>0 ? " and cat.id_metal=".$id_metal."" :'' )."
            ".($id_branch!='' && $id_branch>0 ? " and tag.current_branch=".$id_branch."" :'' )."
            group by tag.tag_id");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //Available Metal Stock Details
    //Advance Details Report
    function customerAdvanceReport($data)
    {
        $returnData=array();
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        $sql=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,br.name as branch_name,cus.id_customer,
        IFNULL(adv.advance_amount,0) as advance_amount,
        (IFNULL(utilized.amount,0) + IFNULL(chit_adj.chit_utilized_amount,0)) as utilized_amount,
        IFNULL(refund.refund_amount,0) as refund_amount,
        (IFNULL(adv.advance_amount,0)-IFNULL(utilized.amount,0)-IFNULL(chit_adj.chit_utilized_amount,0)-IFNULL(refund.refund_amount,0)-IFNULL(adv_trns.transfer_amount,0)) as balance_amount,
        IFNULL(adv_trns.transfer_amount,0) as transfer_amount,
		IFNULL(total_wt.tot_wt,0) received_weight,
         IFNULL(util_weight.util_wt,0) utilized_weight, IFNULL(total_wt.tot_wt,0)-IFNULL(util_weight.util_wt,0) as balance_weight
        FROM customer cus
        LEFT JOIN branch br ON br.id_branch=cus.id_branch
        LEFT JOIN (SELECT ir.id_customer,IFNULL(SUM(ir.amount),0) as advance_amount
                  FROM ret_issue_receipt ir
                  LEFT JOIN ret_day_closing day_close ON day_close.id_branch=ir.id_branch
                  WHERE ir.bill_status=1 AND (ir.receipt_type!=1)
                  ".($branch!='' && $branch !='0' ? " and ir.id_branch in (".$branch.") " :'' )."
                  ".($profile_settings['allow_bill_type']==3 ? " and (ir.is_eda=1 OR  ( IF(ir.is_eda=2,date(day_close.entry_date) = date(ir.bill_date),'') and ir.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and ir.is_eda=1" :" and ir.is_eda=2 and date(day_close.entry_date) = date(ir.bill_date)") )."         

                  AND (date(ir.bill_date)  BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                  GROUP by ir.id_customer) as adv ON adv.id_customer=cus.id_customer
        left join (select sum(u.utilized_amt) as amount,ir.id_issue_receipt,ir.id_customer
                            from ret_issue_receipt as ir
                            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=ir.id_branch
                            left JOIN ret_advance_utilized as u on u.id_issue_receipt=ir.id_issue_receipt
                            LEFT JOIN ret_billing bill on bill.bill_id=u.bill_id
                            where bill.bill_status=1 and u.adjusted_for = 1
                            ".($branch!='' && $branch !='0' ? " and ir.id_branch in (".$branch.") " :'' )."
                            ".($profile_settings['allow_bill_type']==3 ? " and (ir.is_eda=1 OR  ( IF(ir.is_eda=2,date(day_close.entry_date) = date(ir.bill_date),'') and ir.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and ir.is_eda=1" :" and ir.is_eda=2 and date(day_close.entry_date) = date(ir.bill_date)") )."         

                            AND (date(bill.bill_date)  BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                            GROUP by ir.id_customer) as utilized on utilized.id_customer=cus.id_customer
        left join (select sum(u.utilized_amt) as chit_utilized_amount,sa.id_customer
                    from ret_issue_receipt as ir
                    left JOIN ret_advance_utilized as u on u.id_issue_receipt=ir.id_issue_receipt
                    LEFT JOIN ret_day_closing day_close ON day_close.id_branch=ir.id_branch
                    LEFT JOIN payment p on p.id_payment=u.id_payment
                    LEFT JOIN scheme_account sa on sa.id_scheme_account = p.id_scheme_account
                    where p.payment_status=1 ".($branch!='' && $branch !='0' ? " and ir.id_branch in (".$branch.") " :'' )."
                    AND (date(ir.bill_date)  BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                    GROUP by sa.id_customer) as chit_adj on chit_adj.id_customer=cus.id_customer
        LEFT JOIN (select a.refund_receipt,IFNULL(SUM(a.refund_amount),0) as refund_amount,r.id_customer
        		   From ret_advance_refund a
        		   LEFT JOIN ret_issue_receipt r on r.id_issue_receipt=a.id_issue_receipt
                   LEFT JOIN ret_day_closing day_close ON day_close.id_branch=r.id_branch
        		   Where r.bill_status=1
                    ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR  ( IF(r.is_eda=2,date(day_close.entry_date) = date(r.bill_date),'') and r.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2 and date(day_close.entry_date) = date(r.bill_date)") )."         
        		   ".($branch!='' && $branch !='0' ? " and r.id_branch in (".$branch.") " :'' )."
        		   AND (date(r.bill_date)  BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        		   GROUP by r.id_customer) as refund on refund.id_customer=cus.id_customer
		LEFT JOIN(SELECT ir.id_customer,trn.transfer_receipt_id,IFNULL(SUM(trn.transfer_amount),0) as transfer_amount
                   FROM ret_advance_transfer trn
                   LEFT JOIN ret_issue_receipt ir ON ir.id_issue_receipt = trn.transfer_receipt_id
                   LEFT JOIN ret_issue_receipt r ON r.id_issue_receipt = trn.id_issue_receipt
                   LEFT JOIN ret_day_closing day_close ON day_close.id_branch=r.id_branch
                   LEFT JOIN customer c ON c.id_customer = ir.id_customer
				   Where r.bill_status=1
                    ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR  ( IF(r.is_eda=2,date(day_close.entry_date) = date(r.bill_date),'') and r.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2 and date(day_close.entry_date) = date(r.bill_date)") )."         
				   ".($branch!='' && $branch !='0' ? " and r.id_branch in (".$branch.") " :'' )."
        		   AND (date(r.bill_date)  BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                   GROUP BY c.id_customer) as adv_trns ON adv_trns.id_customer = cus.id_customer
		LEFT JOIN (SELECT IFNULL(sum(u.adj_weight),0) as util_wt ,ir.id_issue_receipt,ir.id_customer FROM ret_issue_receipt ir
                   LEFT JOIN ret_advance_utilized u ON ir.id_issue_receipt=u.id_issue_receipt
                   LEFT JOIN ret_billing b on b.bill_id=u.bill_id
                   LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
                   LEFT JOIN customer c ON c.id_customer = ir.id_customer
                  WHERE b.bill_status=1
                    ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
                  ".($branch!='' && $branch !='0' ? " and ir.id_branch in (".$branch.") " :'' )."
                  AND (date(ir.bill_date)  BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                   GROUP BY ir.id_customer) util_weight ON util_weight.id_customer=cus.id_customer
        LEFT JOIN (SELECT IFNULL(sum(ir.weight),0) as tot_wt ,ir.id_issue_receipt,ir.id_customer FROM ret_issue_receipt ir
                   LEFT JOIN customer c ON c.id_customer = ir.id_customer
                   LEFT JOIN ret_day_closing day_close ON day_close.id_branch=ir.id_branch
                  WHERE ir.bill_status=1 AND ir.id_customer is not null
                    ".($profile_settings['allow_bill_type']==3 ? " and (ir.is_eda=1 OR  ( IF(ir.is_eda=2,date(day_close.entry_date) = date(ir.bill_date),'') and ir.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and ir.is_eda=1" :" and ir.is_eda=2 and date(day_close.entry_date) = date(ir.bill_date)") )."         
                  ".($branch!='' && $branch !='0' ? " and ir.id_branch in (".$branch.") " :'' )."
                  AND (date(ir.bill_date)  BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                   GROUP BY ir.id_customer) total_wt ON total_wt.id_customer=cus.id_customer
        WHERE cus.id_customer IS NOT NULL
        ".($data['customer_id']!='' ? " and cus.id_customer = ".$data['customer_id']." " :'')."
        HAVING advance_amount>0");
        // print_r($this->db->last_query());exit();
        $result=$sql->result_array();
        foreach($result as $items)
        {
            $advance_details= $this->get_customer_advance_details($items['id_customer'],$data['from_date'],$data['to_date'],$data['id_branch']);
            $utilized_details= $this->get_customer_advance_utilized_details($items['id_customer'],$data['from_date'],$data['to_date'],$data['id_branch']);
            $refund_details= $this->get_customer_advance_refund_details($items['id_customer'],$data['from_date'],$data['to_date'],$data['id_branch']);
			$transfer_details= $this->get_customer_advance_transfer_details($items['id_customer'],$data['from_date'],$data['to_date'],$data['id_branch']);
            $returnData[]=array(
                               'cus_name'       =>$items['cus_name'],
                               'mobile'         =>$items['mobile'],
                               'advance_amount' =>$items['advance_amount'],
                               'utilized_amount'=>$items['utilized_amount'],
                               'refund_amount'  =>$items['refund_amount'],
							   'transfer_amount'  =>$items['transfer_amount'],
                               'balance_amount' =>$items['balance_amount'],
							   'received_weight' =>$items['received_weight'],
                               'utilized_weight' =>$items['utilized_weight'],
                               'balance_weight' =>$items['balance_weight'],
                               'advance_details'=>array_merge($advance_details,$utilized_details,$refund_details,$transfer_details),
                               );
        }
        return $returnData;
    }
    function get_customer_advance_details($id_customer,$from_date,$to_date,$id_branch)
    {
        $multiple_id_branch = implode(' , ', $id_branch);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $id_branch;
		}
        $sql=$this->db->query("select bill.bill_id,IFNULL(u.utilized_amt,0) as amount,ir.id_customer,bill.bill_no,'Utilized' as type,date_format(bill.bill_date,'%d-%m-%Y') as bill_date
                            from ret_issue_receipt as ir
                            left JOIN ret_advance_utilized as u on u.id_issue_receipt=ir.id_issue_receipt
                            LEFT JOIN ret_billing bill on bill.bill_id=u.bill_id
                            where bill.bill_status=1 and ir.id_customer=".$id_customer."
                            ".($branch!='' && $branch !='0' ? " and ir.id_branch in (".$branch.") " :'' )."
                            AND (date(bill.bill_date)  BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
                            ");
        //print_r($this->db->last_query());exit();
        return $sql->result_array();
    }
    function get_customer_advance_utilized_details($id_customer,$from_date,$to_date,$id_branch)
    {
        $multiple_id_branch = implode(' , ', $id_branch);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $id_branch;
		}
        $sql1=$this->db->query("SELECT ir.id_issue_receipt,ir.id_customer,IFNULL((ir.amount),0) as amount,IFNULL(ir.weight,0) weight,'Advance' as type,ir.bill_no,date_format(ir.bill_date,'%d-%m-%Y') as bill_date
        FROM ret_issue_receipt ir
        WHERE ir.bill_status=1 AND (ir.receipt_type=2 OR ir.receipt_type=3 OR ir.receipt_type=4)
        and ir.id_customer=".$id_customer."
        ".($branch!='' && $branch !='0' ? " and ir.id_branch in (".$branch.") " :'' )." AND
        (date(ir.bill_date)  BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
        ");
        $result1 = $sql1->result_array();
        $sql2 = $this->db->query("SELECT IFNULL(SUM(a.utilized_amt),0) as amount,date_format(p.date_payment,'%d-%m-%Y') as bill_date,p.id_payment,'CHIT' as type,p.receipt_no as bill_no,p.id_payment,
        p.id_scheme_account
        FROM ret_advance_utilized a
        LEFT JOIN payment p ON p.id_payment = a.id_payment
        LEFT JOIN scheme_account sa ON sa.id_scheme_account = p.id_scheme_account
        WHERE p.payment_status = 1 AND sa.id_customer = ".$id_customer."
        AND (date(p.date_payment)  BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
        GROUP by p.id_payment ");
        //print_r($this->db->last_query());exit();
        $result2 = $sql2->result_array();
        return array_merge($result1,$result2);
    }
    function get_customer_advance_refund_details($id_customer,$from_date,$to_date,$id_branch)
    {
        $multiple_id_branch = implode(' , ', $id_branch);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $id_branch;
		}
        $sql=$this->db->query("select r.id_issue_receipt,r.bill_no,a.refund_receipt,IFNULL((a.refund_amount),0) as amount,'Refund' as type,r.id_customer,date_format(r.bill_date,'%d-%m-%Y') as bill_date
        From ret_advance_refund a
        LEFT JOIN ret_issue_receipt r on r.id_issue_receipt=a.id_issue_receipt
        Where r.bill_status=1 and r.id_customer=".$id_customer."
        ".($branch!='' && $branch !='0' ? " and r.id_branch in (".$branch.") " :'' )." AND
        (date(r.bill_date)  BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
        ");
        return $sql->result_array();
    }
	function get_customer_advance_transfer_details($id_customer,$from_date,$to_date,$id_branch){
        $multiple_id_branch = implode(' , ', $id_branch);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $id_branch;
		}
        $sql =$this->db->query("SELECT  r.id_issue_receipt,r.bill_no,ir.id_customer,
        IFNULL(trn.transfer_amount,0) as amount,date_format(r.bill_date,'%d-%m-%Y') as bill_date,'Transfer'as type
        FROM ret_issue_receipt ir
        LEFT JOIN ret_advance_transfer trn ON trn.transfer_receipt_id = ir.id_issue_receipt
        LEFT JOIN ret_issue_receipt r ON r.id_issue_receipt = trn.id_issue_receipt
        where ir.id_customer = ".$id_customer."  AND trn.transfer_amount IS NOT NULL
        ".($branch!='' && $branch !='0' ? " and ir.id_branch in (".$branch.") " :'' )."");
        return $sql->result_array();
    }
    function get_advance_total($customer_id)
    {
        $sql=$this->db->query("select w.id_customer,ifnull(w.amount,0) as amount,c.firstname,w.id_ret_wallet,c.mobile
        from ret_wallet w
        left join customer c on (c.id_customer=w.id_customer)
        ".($customer_id!='' ? " where c.id_customer=".$customer_id."" :''));
        // print_r($this->db->last_query());exit();
        $data=$sql->result_array();
        foreach($data as $items)
        {
            $advance=$this->get_receipteddetails($items['id_ret_wallet']);
            $adv_amt=0;
            foreach($advance as $a)
            {
                $adv_amt+=$a['amount'];
                $branch=$a['branch_name'];
            }
            $utilized=$this->get_utilizeddetails($items['id_ret_wallet']);
            $uti_amt=0;
            foreach($utilized as $u)
            {
                $uti_amt+=$u['amount'];
            }
            $details=array_merge($advance,$utilized);
            $wallet_data[]=array(
            'id_customer'   =>$items['id_customer'],
            'amount'        =>$items['amount'],
            'firstname'     =>$items['firstname'],
            'id_ret_wallet' =>$items['id_ret_wallet'],
            'mobile'        =>$items['mobile'],
            'branch'        =>$branch,
            'advance_amt'   =>$adv_amt,
            'utilized_amt'  =>$uti_amt,
            'details'       =>$details,
            'advance'       =>$this->get_receipteddetails($items['id_ret_wallet']),
            'utilized'      =>$this->get_utilizeddetails($items['id_ret_wallet']),
            );
        }
        return $wallet_data;
    }
    function get_receipteddetails($id_wallet)
    {
        $sql=$this->db->query("SELECT w.id_customer,c.firstname,c.mobile,
        r.bill_no ,r.id_issue_receipt,
        DATE_FORMAT(r.bill_date,'%d-%m-%Y') bill_date,r.amount as amount,
        IF(wt.id_issue_receipt IS NULL, IF(transaction_type = 0, 'ADVANCED', 'UTILIZED'), IF(transaction_type = 0, 'Receipt', 'Issue')) as type,
        b.name as branch_name, IFNULL(r.refno, '-') as refno
        from ret_wallet w
        left join customer c on c.id_customer = w.id_customer
        left join ret_wallet_transcation wt on wt.id_ret_wallet = w.id_ret_wallet
        left join ret_issue_receipt r on r.id_issue_receipt = wt.id_issue_receipt
        LEFT JOIN branch b on b.id_branch = r.id_branch
        where w.id_ret_wallet = ".$id_wallet  );
        return $sql->result_array();
    }
    function get_utilizeddetails($id_wallet)
    {
        $sql=$this->db->query("SELECT c.id_customer,c.firstname ,c.mobile,
        b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') bill_date,
        au.utilized_amt as amount,w.id_ret_wallet,
        br.name as branch_name, '' as refno
        from ret_billing as b
        left join ret_advance_utilized au on au.bill_id=b.bill_id
        LEFT join customer c ON c.id_customer=b.bill_cus_id
        left join ret_wallet w on w.id_customer=c.id_customer
        LEFT JOIN branch br on br.id_branch=b.id_branch
        where b.bill_status=1 and b.bill_id is not null and au.utilized_amt is not null
        and w.id_ret_wallet=".$id_wallet);
        return $sql->result_array();
    }
    function get_mobileNumber($mob_no)
    {
        $sql=$this->db->query("SELECT concat(mobile,'-',firstname) as label,id_customer as value from customer
        where mobile like '%".$mob_no."%'");
        return $sql->result_array();
    }
    //Advance Details Report
    //Sales Return Report
    function get_sales_return($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $sales_return=$this->db->query("SELECT p.product_name,d.net_wt as net_wt,d.gross_wt as gross_wt,d.item_cost as item_cost,d.item_total_tax as item_total_tax,
        d.bill_discount as bill_discount,cat.name as category_name,d.piece as piece,d.rate_per_grm as sales_rate,p.sales_mode,b.bill_id,
        date_format(b.bill_date,'%d-%m-%Y') as bill_date,d.calculation_based_on,d.wastage_percent,
		CASE WHEN b.customer_name is not null then b.customer_name
            ELSE c.firstname END as customer,
		emp.firstname as emp_name,
        tag.tag_code,if(tag.tag_process=0,'-',if(tag.tag_process=1,'Retagged',if(tag.tag_process=2,'Other Issue',if(tag.tag_process=3,'Stock Adj',if(tag.tag_process=4,'Added to Non Tag',if(tag.tag_process=5,'Added to Accounts Stock','')))))) as tag_process,
        IFNULL(des.design_name,'') as design_name,IFNULL(s.sub_design_name,'') as sub_design_name,br.name as branch_name,
        emp.firstname as emp_name,emp.emp_code, concat(br.short_name, '-SR-' , IFNULL(CONCAT(m.metal_code,'-'),''), b.s_ret_refno) as s_ret_refno
        FROM ret_billing b
        LEFT JOIN ret_bill_return_details r ON r.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        LEFT JOIN metal m on m.id_metal=b.metal_type
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_design_master des ON des.design_no=d.design_id
        left join ret_sub_design_master s on s.id_sub_design=tag.id_sub_design
        LEFT JOIN ret_estimation_items est_itms on est_itms.est_item_id=d.esti_item_id
        Left join ret_estimation est on est.estimation_id=est_itms.esti_id
        LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
        LEFT JOIN customer c on c.id_customer=b.bill_cus_id
        LEFT JOIN employee emp on emp.id_employee=ifnull(est.created_by, b.created_by)
        WHERE d.bill_det_id IS NOT null and b.bill_status=1 And (b.bill_type=3 or b.bill_type=7)
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
        ".($data['metal'] != '' ? ' and b.metal_type ='.$data['metal']: '')."
        ".($FromDt!= '' && $ToDt!='' ? 'and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."");
       // print_r($this->db->last_query());exit;
        $item_details= $sales_return->result_array();
        foreach ($item_details as &$item) {
            $bill_id = $item['bill_id'];
            $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
        }
		return $item_details;
    }
    //Sales Return Report
    function dashboard_btList($from_date,$to_date,$type,$id_branch,$id_product)
    {
        switch($type)
        {
            case '1':
                $sql1=$this->db->query("SELECT pro.product_name,fb.name as from_branch_name,tb.name as to_branch_name,IFNULL((tag.piece),0) as tot_pcs,IFNULL((tag.gross_wt),0) as tot_gwt,
                IFNULL((tag.gross_wt),0) as tot_nwt,b.status
                FROM ret_branch_transfer b
                LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
                LEFT JOIN ret_taging tag ON tag.tag_id=t.tag_id
                LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
                LEFT JOIN branch fb ON fb.id_branch=b.transfer_from_branch
                LEFT JOIN branch tb ON tb.id_branch=b.transfer_to_branch
                WHERE b.status=1 AND tag.product_id IS NOT NULL
                ".($id_branch!='' && $id_branch>0 ?" and b.transfer_from_branch=".$id_branch."":'')."
                ".($id_product!='' ? " and tag.product_id=".$id_product."" :'')."");
                //print_r($this->db->last_query());exit;
                return $sql1->result_array();
            break;
            case '2':
                $sql2=$this->db->query("SELECT pro.product_name,fb.name as from_branch_name,tb.name as to_branch_name,IFNULL((tag.piece),0) as tot_pcs,IFNULL((tag.gross_wt),0) as tot_gwt,
                IFNULL((tag.gross_wt),0) as tot_nwt,b.status
                FROM ret_branch_transfer b
                LEFT JOIN ret_brch_transfer_tag_items t ON t.transfer_id=b.branch_transfer_id
                LEFT JOIN ret_taging tag ON tag.tag_id=t.tag_id
                LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
                LEFT JOIN branch fb ON fb.id_branch=b.transfer_from_branch
                LEFT JOIN branch tb ON tb.id_branch=b.transfer_to_branch
                WHERE b.status=2 AND tag.product_id IS NOT NULL
                ".($id_branch!='' && $id_branch>0 ?" and b.transfer_from_branch=".$id_branch."":'')."
                ".($id_product!='' ? " and tag.product_id=".$id_product."" :'')."");
                return $sql2->result_array();
            break;
        }
    }
    function get_tagged_stone($data)
    {
        $tag_stone=$this->db->query("SELECT s.tag_stone_id,s.tag_id, st.stone_name,s.stone_cal_type, uom.uom_name, pieces, wt, rate_per_gram, amount,s.stone_id,is_apply_in_lwt,
        t.product_id,t.design_id,t.id_sub_design,IFNULL(t.gross_wt,0) as gross_wt,IFNULL(t.net_wt,0) as net_wt,ifnull(t.tag_lot_id,'-') as lotno,DATE_FORMAT(t.tag_datetime,'%d-%m-%Y') as tag_date,t.tag_code,
        ifnull(kar.firstname,'-') as karigarname,p.product_name,cat.name as catname,d.design_name,sd.sub_design_name,b.name as branchname
        FROM ret_taging_stone as s
        LEFT JOIN ret_stone as st ON st.stone_id = s.stone_id
        LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
        LEFT JOIN ret_taging t on t.tag_id = s.tag_id
        LEFT JOIN ret_lot_inwards lot on lot.lot_no=t.tag_lot_id
        LEFT JOIN ret_karigar kar on kar.id_karigar=lot.gold_smith
        LEFT JOIN ret_product_master p on p.pro_id=t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
        LEFT JOIN metal m on m.id_metal=cat.id_metal
        LEFT JOIN ret_design_master d on d.design_no=t.design_id
        LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=t.id_sub_design
        LEFT JOIN branch b on b.id_branch=t.current_branch
        WHERE  t.tag_status = 0
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and t.current_branch=".$data['id_branch']."":'')."
        ".($data['id_category'] != '' && $data['id_category'] != 0 ? " and p.cat_id =".$data['id_category']."" :'')."
        ".($data['id_metal'] !='' && $data['id_metal'] !=0 ? " and m.id_metal=".$data['id_metal']."":'')."
        ".($data['id_design']!='' ? " and t.design_id=".$data['id_design']."" :'')."
        ".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
        ".($data['from_weight']!='' ?" and t.gross_wt>=".$data['from_weight']."" :'')."
        ".($data['to_weight']!='' ?" and t.gross_wt<=".$data['to_weight']."" :'')."
        ".($data['id_size']!='' ? " and t.size=".$data['id_size']."" :'')."");
        //print_r($this->db->last_query());exit;
        return $tag_stone->result_array();
    }
    function get_tagcategory($data)
    {
        $sql = $this->db->query("SELECT id_ret_category,name,description,id_metal,image FROM `ret_category` WHERE status = 1
        ".($data['id_metal'] !='' && $data['id_metal'] !=0 ? " and id_metal=".$data['id_metal']."":'')."");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    function get_acc_stock_details($data)
    {
        $sql=$this->db->query("SELECT if(l.transcation_type=0,'Credit','Debit') as trans_type,l.credit_type,l.ref_no,l.piece,if(l.transcation_type=1,concat('-','',l.gross_wt),l.gross_wt) as gross_wt,if(l.transcation_type=1,concat('-','',l.net_wt),l.net_wt)  as net_wt,l.transcation_type,
        p.product_name,l.debit_type,l.remarks,date_format(l.date_add,'%d-%m-%Y') as date_add
        FROM ret_purchase_item_stock_summary s
        LEFT JOIN ret_purchase_item_stock_summary_log l ON l.id_stock_summary=s.id_stock_summary
        LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
        WHERE s.id_stock_summary=".$data['id_stock_summary']."");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //Area Wise Analysis Report
    function product_analysis_details($data)
    {
        $return_data=array();
        $sql=$this->db->query("SELECT p.product_name,des.design_name,IFNULL(SUM(d.gross_wt),0) as tot_gwt,IFNULL(SUM(d.net_wt),0) as tot_nwt,IFNULL(SUM(tag.piece),0) as tot_pcs,
        IFNULL(SUM(d.item_cost),0) as tot_item_cost
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
        LEFT JOIN metal m ON m.id_metal=c.id_metal
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        WHERE tag.tag_status=1 AND b.bill_status=1 and d.status=1
        ".($data['id_village']!='' ? " and cus.id_village=".$data['id_village']."" :'')."
        ".($data['id_metal']!='' && $data['sales_mode']==2 ? " and c.id_metal=".$data['id_metal']."" :'')."
        ".($data['sales_mode']==1 ? " and p.sales_mode=".$data['sales_mode']."" :'')."
        ".($data['id_branch']!=''  && $data['id_branch']!=null && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        GROUP by tag.product_id,tag.design_id
        order by pro_id ASC");
        //print_r($this->db->last_query());exit;
        $result= $sql->result_array();
        foreach($result as $r){
			$return_data[$r['product_name']][] = $r;
		}
        return $return_data;
    }
    function get_crm_analysis_details($data)
    {
        $sql=$this->db->query("SELECT sa.id_scheme_account,sa.id_scheme,concat(s.code,' ',sa.scheme_acc_number) as acc_num,concat(cus.firstname,'',IFNULL(cus.lastname,'')) as cus_name,cus.mobile,
        s.scheme_name,if(sa.is_closed=1,'Closed','Active') as acc_status,pay.paid_installments,s.total_installments,v.village_name,pay.last_paid_date
        FROM scheme_account sa
        LEFT JOIN customer cus ON cus.id_customer=sa.id_customer
        LEFT JOIN village v ON v.id_village=cus.id_village
        LEFT JOIN scheme s ON s.id_scheme=sa.id_scheme
        LEFT JOIN (select s.total_installments,s.scheme_type,s.id_scheme,s.firstPayDisc_value,sa.id_scheme_account,IFNULL(IF(sa.is_opening=1,IFNULL(sa.paid_installments,0)+ IFNULL(if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues)),0), if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues))) ,0)as paid_installments,
        Date_Format(max(p.date_payment),'%d-%m-%Y') as last_paid_date
        FROM payment p
        left join scheme_account sa on sa.id_scheme_account=p.id_scheme_account
        left join scheme s on s.id_scheme=sa.id_scheme
        where p.payment_status=1 group by sa.id_scheme_account) as pay on pay.id_scheme_account=sa.id_scheme_account
        where sa.id_scheme_account is NOT NULL
        and sa.is_closed=".$data['acc_type']."
        ".($data['id_village']!='' ? " and cus.id_village=".$data['id_village']."" :'')."
        ".($data['id_branch']!='' && $data['acc_type']==0 ? " and sa.id_branch=".$data['id_branch']."" :'')."
        ".($data['id_branch']!='' && $data['acc_type']==1 ? " and sa.Closing_id_branch=".$data['id_branch']."" :'')."
        ".($data['from_date'] != '' && $data['to_date']!='' && $data['acc_type']==0 ?  ' and date(sa.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['from_date'] != '' && $data['to_date']!='' && $data['acc_type']==1 ?  ' and date(sa.closing_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ");
        //print_r($this->db->last_query());exit;
        $result= $sql->result_array();
        return $result;
    }
    function get_sales_analysis_details($data)
    {
        $return_data=array();
        $sql=$this->db->query("SELECT c.mobile,c.id_customer,concat(c.firstname,'',IFNULL(c.lastname,'')) as cus_name,
            IFNULL(g.tot_nwt,0) as tot_gold_wt,IFNULL(s.tot_nwt,0) as tot_silver_wt,IFNULL(mrp.tot_amt,0) as tot_amt,
            IFNULL(acc.tot_acc,0) as active_acc,IFNULL(closed.tot_acc,0) as closed_acc,IFNULL(bill.last_billdate,'') as last_billdate
            FROM customer c
            LEFT JOIN village v ON v.id_village=c.id_village
            LEFT JOIN(
                    SELECT DATE_FORMAT(max(b.bill_date),'%d-%m-%Y') as last_billdate,c.id_customer
                    FROM ret_billing b
                    LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
                    AND c.id_village=".$data['id_village']."
                    GROUP by c.id_customer) as bill on bill.id_customer=c.id_customer
            LEFT JOIN (
                SELECT SUM(d.net_wt) as tot_nwt,c.id_customer
                FROM customer c
                LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                WHERE b.bill_status=1 AND p.sales_mode=2 AND cat.id_metal=1 AND d.bill_det_id is NOT null and d.status=1
                AND c.id_village=".$data['id_village']."
                GROUP by c.id_customer) as g ON g.id_customer=c.id_customer
        LEFT JOIN (SELECT SUM(d.net_wt) as tot_nwt,c.id_customer
                  FROM customer c
                  LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                  LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                  LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                  LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                  WHERE b.bill_status=1 AND p.sales_mode=2 AND cat.id_metal=2 AND d.bill_det_id is NOT null and d.status=1
                  AND c.id_village=".$data['id_village']."
                  GROUP by b.bill_cus_id) as s ON s.id_customer=c.id_customer
        LEFT JOIN (SELECT SUM(d.item_cost) as tot_amt,c.id_customer
                  FROM customer c
                  LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                  LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                  LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                  LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                  WHERE b.bill_status=1 AND p.sales_mode=1 AND d.bill_det_id is NOT null and d.status=1
                  AND c.id_village=".$data['id_village']."
                  GROUP by c.id_customer) as mrp ON mrp.id_customer=c.id_customer
        LEFT JOIN (SELECT COUNT(sa.id_scheme_account) as tot_acc,c.id_customer
                  FROM customer c
                  LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
                  WHERE sa.is_closed=0 and sa.active=1 and sa.scheme_acc_number is not null
                  AND c.id_village=".$data['id_village']."
                  GROUP by c.id_customer) as acc ON acc.id_customer=c.id_customer
        LEFT JOIN (SELECT COUNT(sa.id_scheme_account) as tot_acc,c.id_customer
                  FROM customer c
                  LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
                  WHERE sa.is_closed=1 and sa.active=0
                  AND c.id_village=".$data['id_village']."
                  GROUP by c.id_customer) as closed ON closed.id_customer=c.id_customer
            WHERE c.id_village=".$data['id_village']." and c.id_village is not null
             ".($data['id_branch']!='' && $data['id_branch']>0 && $data['cus_type']==2 ? " and c.id_branch=".$data['id_branch']."" :'')."
             ".($data['from_date'] != '' && $data['to_date']!='' && $data['cus_type']==2 ? ' and date(c.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
            GROUP by c.id_customer");
         //print_r($this->db->last_query());exit;
        $result= $sql->result_array();
        return $result;
    }
    function get_customer_without_acc($data)
    {
        $sql=$this->db->query("SELECT (c.id_customer) as tot_cus,c.id_village,COUNT(sa.id_scheme_account) as tot_acc,c.firstname as cus_name,c.mobile,
        v.village_name,concat(s.code,' ',sa.scheme_acc_number) as acc_num,sa.id_scheme_account,date_format(sa.closing_date,'%d-%m-%Y') as closed_date
        FROM customer c
        LEFT JOIN village v on v.id_village=c.id_village
        LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
        LEFT JOIN scheme s on s.id_scheme=sa.id_scheme
        WHERE sa.is_closed=1 and c.id_village is not null AND c.id_customer NOT IN(SELECT acc.id_customer
        FROM scheme_account acc
        WHERE acc.is_closed=0)
        ".($data['id_village']!='' ? " and c.id_village=".$data['id_village']."" :'')."
        GROUP by sa.id_scheme_account");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
		return $result;
    }
    function sales_analysis_other_city($data)
    {
        $return_data=array();
        $sql=$this->db->query("SELECT v.village_name,v.id_village,IFNULL(cus.tot_cus,0) as tot_cus,IFNULL(without_acc.tot_cus,0) as without_acc,IFNULL(newcus.tot_cus,0) as totnew_cus,
        IFNULL(g.tot_nwt,0) as tot_gold_wt,IFNULL(s.tot_nwt,0) as tot_silver_wt,IFNULL(mrp.tot_amt,0) as tot_amt,
        IFNULL(acc.tot_acc,0) as active_acc,IFNULL(closed.tot_acc,0) as closed_acc,IFNULL(b.name,'') as branch_name
        FROM village v
        LEFT JOIN village_zone z ON z.id_zone=v.id_zone
        LEFT JOIN branch b on b.id_branch=z.id_branch
        LEFT JOIN (SELECT COUNT(c.id_customer) as tot_cus,c.id_village
                  FROM customer c
                  where c.id_village is not null
                  GROUP by c.id_village) as cus ON cus.id_village=v.id_village
        LEFT JOIN (SELECT COUNT(c.id_customer) as tot_cus,c.id_village
        FROM customer c
        LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
        WHERE sa.is_closed=1 and c.id_village is not null AND c.id_customer NOT IN(SELECT acc.id_customer
        FROM scheme_account acc
        WHERE acc.is_closed=0)
        GROUP by c.id_village) as without_acc ON without_acc.id_village=v.id_village
        LEFT JOIN (SELECT COUNT(c.id_customer) as tot_cus,c.id_village
                  FROM customer c
                  where c.id_village is not null
                  and date(c.date_add) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
                   ".($data['id_branch']!='' && $data['id_branch']>0 ? " and c.id_branch=".$data['id_branch']."" :'')."
                  GROUP by c.id_village) as newcus ON newcus.id_village=v.id_village
        LEFT JOIN (SELECT SUM(d.net_wt) as tot_nwt,c.id_village
                  FROM customer c
                  LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                  LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                  LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                  LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                  WHERE b.bill_status=1 AND p.sales_mode=2 AND cat.id_metal=1 AND d.bill_det_id is NOT null and d.status=1
                   ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
                   ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village) as g ON g.id_village=v.id_village
        LEFT JOIN (SELECT SUM(d.net_wt) as tot_nwt,c.id_village
                  FROM customer c
                  LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                  LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                  LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                  LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                  WHERE b.bill_status=1 AND p.sales_mode=2 AND cat.id_metal=2 AND d.bill_det_id is NOT null and d.status=1
                  ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
                  ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village) as s ON s.id_village=v.id_village
         LEFT JOIN (SELECT SUM(d.item_cost) as tot_amt,c.id_village
                  FROM customer c
                  LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                  LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                  LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                  LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                  WHERE b.bill_status=1 AND p.sales_mode=1 AND d.bill_det_id is NOT null and d.status=1
                  ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
                  ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village) as mrp ON mrp.id_village=v.id_village
        LEFT JOIN (SELECT COUNT(sa.id_scheme_account) as tot_acc,c.id_village,pay.paid_installments
                  FROM customer c
                  LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
                LEFT JOIN (select s.total_installments,s.scheme_type,s.id_scheme,s.firstPayDisc_value,sa.id_scheme_account,IFNULL(IF(sa.is_opening=1,IFNULL(sa.paid_installments,0)+ IFNULL(if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues)),0), if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues))) ,0)as paid_installments,
                Date_Format(max(p.date_payment),'%d-%m-%Y') as last_paid_date
                FROM payment p
                left join scheme_account sa on sa.id_scheme_account=p.id_scheme_account
                left join scheme s on s.id_scheme=sa.id_scheme
                where p.payment_status=1 group by sa.id_scheme_account) as pay on pay.id_scheme_account=sa.id_scheme_account
                  WHERE sa.is_closed=0 and sa.active=1 and sa.scheme_acc_number is not null
                   ".($data['id_branch']!='' && $data['id_branch']>0 ? " and sa.id_branch=".$data['id_branch']."" :'')."
                   ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(sa.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village
                  having pay.paid_installments>0) as acc ON acc.id_village=v.id_village
        LEFT JOIN (SELECT COUNT(sa.id_scheme_account) as tot_acc,c.id_village
                  FROM customer c
                  LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
                  WHERE sa.is_closed=1 and sa.active=0 and c.id_village is not null
                  ".($data['id_branch']!='' && $data['id_branch']>0 ? " and sa.Closing_id_branch=".$data['id_branch']."" :'')."
                  ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(sa.closing_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village) as closed ON closed.id_village=v.id_village
        where v.status=1
         ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch!=".$data['id_branch']."" :'')."
        order by v.id_village ASC");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $return_data[]=array(
                                'active_acc'    =>$items['active_acc'],
                                'branch_name'   =>$items['branch_name'],
                                'closed_acc'    =>$items['closed_acc'],
                                'id_village'    =>$items['id_village'],
                                'tot_amt'       =>$items['tot_amt'],
                                'tot_cus'       =>$items['tot_cus'],
                                'tot_gold_wt'   =>$items['tot_gold_wt'],
                                'tot_silver_wt' =>$items['tot_silver_wt'],
                                'totnew_cus'    =>$items['totnew_cus'],
                                'village_name'  =>$items['village_name'],
                                'without_acc'   =>$items['without_acc'],
                                //'branch_details'=>$this->sales_analysis_branchwise($items['id_village'],$data),
                                );
        }
		return $return_data;
    }
    function sales_analysis_report($data)
    {
        $return_data=array();
        $sql=$this->db->query("SELECT v.village_name,v.id_village,IFNULL(cus.tot_cus,0) as tot_cus,IFNULL(without_acc.tot_cus,0) as without_acc,IFNULL(newcus.tot_cus,0) as totnew_cus,
        IFNULL(g.tot_nwt,0) as tot_gold_wt,IFNULL(s.tot_nwt,0) as tot_silver_wt,IFNULL(mrp.tot_amt,0) as tot_amt,
        IFNULL(acc.tot_acc,0) as active_acc,IFNULL(closed.tot_acc,0) as closed_acc,IFNULL(b.name,'') as branch_name
        FROM village v
        LEFT JOIN village_zone z ON z.id_zone=v.id_zone
        LEFT JOIN branch b on b.id_branch=z.id_branch
        LEFT JOIN (SELECT COUNT(c.id_customer) as tot_cus,c.id_village
                  FROM customer c
                  where c.id_village is not null
                  GROUP by c.id_village) as cus ON cus.id_village=v.id_village
        LEFT JOIN (SELECT COUNT(c.id_customer) as tot_cus,c.id_village
        FROM customer c
        LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
        WHERE sa.is_closed=1 and c.id_village is not null AND c.id_customer NOT IN(SELECT acc.id_customer
        FROM scheme_account acc
        WHERE acc.is_closed=0)
        GROUP by c.id_village) as without_acc ON without_acc.id_village=v.id_village
        LEFT JOIN (SELECT COUNT(c.id_customer) as tot_cus,c.id_village
                  FROM customer c
                  where c.id_village is not null
                  and date(c.date_add) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
                   ".($data['id_branch']!='' && $data['id_branch']>0 ? " and c.id_branch=".$data['id_branch']."" :'')."
                  GROUP by c.id_village) as newcus ON newcus.id_village=v.id_village
        LEFT JOIN (SELECT SUM(d.net_wt) as tot_nwt,c.id_village
                  FROM customer c
                  LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                  LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                  LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                  LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                  WHERE b.bill_status=1 AND p.sales_mode=2 AND cat.id_metal=1 AND d.bill_det_id is NOT null and d.status=1
                   ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
                   ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village) as g ON g.id_village=v.id_village
        LEFT JOIN (SELECT SUM(d.net_wt) as tot_nwt,c.id_village
                  FROM customer c
                  LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                  LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                  LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                  LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                  WHERE b.bill_status=1 AND p.sales_mode=2 AND cat.id_metal=2 AND d.bill_det_id is NOT null and d.status=1
                  ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
                  ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village) as s ON s.id_village=v.id_village
         LEFT JOIN (SELECT SUM(d.item_cost) as tot_amt,c.id_village
                  FROM customer c
                  LEFT JOIN ret_billing b ON b.bill_cus_id=c.id_customer
                  LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                  LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
                  LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                  LEFT JOIN ret_category cat ON cat.id_ret_category=p.cat_id
                  WHERE b.bill_status=1 AND p.sales_mode=1 AND d.bill_det_id is NOT null and d.status=1
                  ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
                  ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village) as mrp ON mrp.id_village=v.id_village
        LEFT JOIN (SELECT COUNT(sa.id_scheme_account) as tot_acc,c.id_village,pay.paid_installments
                  FROM customer c
                  LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
                LEFT JOIN (select s.total_installments,s.scheme_type,s.id_scheme,s.firstPayDisc_value,sa.id_scheme_account,IFNULL(IF(sa.is_opening=1,IFNULL(sa.paid_installments,0)+ IFNULL(if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues)),0), if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues))) ,0)as paid_installments,
                Date_Format(max(p.date_payment),'%d-%m-%Y') as last_paid_date
                FROM payment p
                left join scheme_account sa on sa.id_scheme_account=p.id_scheme_account
                left join scheme s on s.id_scheme=sa.id_scheme
                where p.payment_status=1 group by sa.id_scheme_account) as pay on pay.id_scheme_account=sa.id_scheme_account
                  WHERE sa.is_closed=0 and sa.active=1 and sa.scheme_acc_number is not null
                   ".($data['id_branch']!='' && $data['id_branch']>0 ? " and sa.id_branch=".$data['id_branch']."" :'')."
                   ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(sa.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village
                  having pay.paid_installments>0) as acc ON acc.id_village=v.id_village
        LEFT JOIN (SELECT COUNT(sa.id_scheme_account) as tot_acc,c.id_village
                  FROM customer c
                  LEFT JOIN scheme_account sa ON sa.id_customer=c.id_customer
                  WHERE sa.is_closed=1 and sa.active=0 and c.id_village is not null
                  ".($data['id_branch']!='' && $data['id_branch']>0 ? " and sa.Closing_id_branch=".$data['id_branch']."" :'')."
                  ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(sa.closing_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
                  GROUP by c.id_village) as closed ON closed.id_village=v.id_village
        where v.status=1
         ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        order by v.id_village ASC");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $return_data[]=array(
                                'active_acc'    =>$items['active_acc'],
                                'branch_name'   =>$items['branch_name'],
                                'closed_acc'    =>$items['closed_acc'],
                                'id_village'    =>$items['id_village'],
                                'tot_amt'       =>$items['tot_amt'],
                                'tot_cus'       =>$items['tot_cus'],
                                'tot_gold_wt'   =>$items['tot_gold_wt'],
                                'tot_silver_wt' =>$items['tot_silver_wt'],
                                'totnew_cus'    =>$items['totnew_cus'],
                                'village_name'  =>$items['village_name'],
                                'without_acc'   =>$items['without_acc'],
                                //'branch_details'=>$this->sales_analysis_branchwise($items['id_village'],$data),
                                );
        }
		return $return_data;
    }
    //Area Wise Analysis Report
    //retag report details
    function get_retag_report_details($data)
    {
        $return_data=array();
        if($data['retag_report_type']==4)
        {
            $returnData = array();
            $sql=$this->db->query("SELECT p.id_process,b.name as branch_name,if(p.type=1,'Sales Return',if(p.type=3,'Partly Sale',if(p.type=4,'Old Metal',''))) as type,
            if(p.process_for=1,'Re-Tag',if(p.process_for=4,'Non Tag',if(p.process_for=3,'Other Issue',if(p.process_for=5,'Accounts Stock','')))) as process_for,date_format(p.date_add,'%d-%m-%Y') as date_add,
            IFNULL(pro.product_name,'') as product_name,IFNULL(des.design_name,'') as design_name,IFNULL(subDes.sub_design_name,'') as sub_design_name,
            IFNULL(cat.name,'') as cat_name,p.type as process_type,p.process_for as retag_process,
            IFNULL(m.metal ,'')as metal_name
            FROM ret_acc_stock_process p
            LEFT JOIN branch b ON b.id_branch=p.id_branch
            LEFT JOIN ret_product_master pro ON pro.pro_id=p.id_ret_product
            LEFT JOIN ret_category cat ON cat.id_ret_category=p.id_ret_category
            left join metal m on m.id_metal=cat.id_metal
            LEFT JOIN ret_design_master des ON des.design_no=p.id_design
            LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=p.id_sub_design
            where ".($data['from_date'] != '' && $data['to_date']!='' ? ' date(p.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
            ".($data['retag_report_type']!='' ? " and p.type=".$data['retag_report_type']."" :'')."
            ".($data['id_metal']!='' && $data['id_metal']!=0 ? " and cat.id_metal=".$data['id_metal']."" :'')."
            ORDER by p.id_process DESC");
            $result = $sql->result_array();
            foreach($result as $items)
            {
                $total_gross_weight=0;
                $total_net_weight=0;
                $old_metal_details=$this->getOldMetalItemDetails($data['from_date'],$data['to_date'],$items['id_process']);
                foreach($old_metal_details as $val)
                {
                    $total_gross_weight+=$val['gross_wt'];
                    $total_net_weight+=$val['net_wt'];
                }
                $items['weight']     = number_format($total_gross_weight,3,'.','');
                $items['net_weight'] = number_format($total_net_weight,3,'.','');
                $returnData[]=$items;
            }
        }
        else if($data['retag_report_type']==3)
        {
            $returnData = array();
            $sql=$this->db->query("SELECT p.id_process,b.name as branch_name,if(p.type=1,'Sales Return',if(p.type=3,'Partly Sale',if(p.type=4,'Old Metal',''))) as type,
            if(p.process_for=1,'Re-Tag',if(p.process_for=4,'Non Tag',if(p.process_for=3,'Other Issue',if(p.process_for=5,'Accounts Stock','')))) as process_for,date_format(p.date_add,'%d-%m-%Y') as date_add,
            IFNULL(pro.product_name,'') as product_name,IFNULL(des.design_name,'') as design_name,IFNULL(subDes.sub_design_name,'') as sub_design_name,
            IFNULL(cat.name,'') as cat_name,p.type as process_type,p.process_for as retag_process,IFNULL(d.gross_wt,0) as weight,IFNULL(d.net_wt,0) as net_weight,t.tag_code,
            IFNULL(kar.firstname,'') as karigar_name,ifnull(m.metal,'') as metal_name
            FROM ret_acc_stock_process_details d
            LEFT JOIN ret_acc_stock_process p ON p.id_process = d.id_process
            LEFT JOIN ret_taging t ON t.tag_id =d.ref_no
            LEFT JOIN branch b ON b.id_branch=p.id_branch
            LEFT JOIN ret_product_master pro ON pro.pro_id=p.id_ret_product
            LEFT JOIN ret_category cat ON cat.id_ret_category=p.id_ret_category
            left join metal m on m.id_metal=cat.id_metal
            LEFT JOIN ret_design_master des ON des.design_no=p.id_design
            LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=p.id_sub_design
            LEFT JOIN ret_lot_inwards l ON l.lot_no = t.tag_lot_id
            LEFT JOIN ret_karigar kar ON kar.id_karigar = l.gold_smith
            where  ".($data['from_date'] != '' && $data['to_date']!='' ? ' date(p.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
            ".($data['retag_report_type']!='' ? " and p.type=".$data['retag_report_type']."" :'')."
            ".($data['id_metal']!='' && $data['id_metal']!=0 ? " and cat.id_metal=".$data['id_metal']."" :'')."
            ORDER by p.id_process DESC");
            $returnData = $sql->result_array();
        }
        else if($data['retag_report_type']==1)
        {
            $sql=$this->db->query("SELECT p.id_process,date_format(p.date_add,'%d-%m-%Y') as date_add,IFNULL((tag.gross_wt),0) as gross_wt,IFNULL((tag.net_wt),0) as net_wt,
            pro.product_name as product,tag.tag_code as new_tag,ifnull(t.tag_code,'') as tag_no,
            ifnull(sr.bill_id,'') as bill_id,ifnull(sr.bill_id,'') as bill_id,ifnull(sr.branch,'') as branch,
            sr.bill_date as bill_date,if(p.type=1,'Sales Return',if(p.type=3,'Partly Sale',if(p.type=4,'Old Metal',''))) as type,
            if(p.process_for=1,'Re-Tag',if(p.process_for=4,'Non Tag',if(p.process_for=3,'Other Issue',if(p.process_for=5,'Accounts Stock','')))) as process_for,
            IFNULL(m.metal,'') as metal_name,IFNULL(kar.firstname,'') as karigar_name
            FROM ret_acc_stock_process_details d
            LEFT JOIN ret_acc_stock_process p ON p.id_process=d.id_process
            LEFT JOIN ret_taging tag ON tag.ref_tag_id=d.ref_no
            LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
            LEFT JOIN ret_category cat ON cat.id_ret_category=pro.cat_id
            left join metal m on m.id_metal=cat.id_metal
            LEFT JOIN ret_taging t on t.tag_id=d.ref_no
            LEFT JOIN ret_lot_inwards l ON l.lot_no = t.tag_lot_id
            LEFT JOIN ret_karigar kar ON kar.id_karigar = l.gold_smith
            Left join (SELECT r.bill_id,bill.s_ret_refno as bill_no,date_format(bill.bill_date,'%d-%m-%Y') as bill_date,br.name as branch,d.tag_id
            FROM ret_bill_details d
            LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
            LEFT JOIN ret_bill_return_details r ON r.ret_bill_det_id = d.bill_det_id
            LEFT JOIN ret_billing bill ON bill.bill_id = r.bill_id
            LEFT JOIN branch br ON br.id_branch = bill.id_branch
            WHERE b.bill_status = 1 AND d.status = 2 AND r.ret_bill_det_id IS NOT NULL) as sr on sr.tag_id = d.ref_no
            WHERE p.type=1
            ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(p.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
            ".($data['id_metal']!='' && $data['id_metal']!=0 ? " and cat.id_metal=".$data['id_metal']."" :'')."
            ");
            //print_r($this->db->last_query());exit;
            $ret= $sql->result_array();
            foreach($ret as $r){
                $r['bill_no'] = $this->get_bill_no_format_detail($r['bill_id']);
                $returnData[] =  $r;
            }
        }else if($data['retag_report_type']==5)
        {
            $sql=$this->db->query("SELECT p.id_process,date_format(p.date_add,'%d-%m-%Y') as date_add,IFNULL((d.gross_wt),0) as gross_wt,IFNULL((d.net_wt),0) as net_wt,
            pro.product_name as product,if(p.type=1,'Sales Return',if(p.type=3,'Partly Sale',if(p.type=4,'Old Metal',''))) as type,
            if(p.process_for=1,'Re-Tag',if(p.process_for=4,'Non Tag',if(p.process_for=3,'Other Issue',if(p.process_for=5,'Accounts Stock','')))) as process_for,
            b.s_ret_refno as bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,br.name as branch,'' as tag_no,'' as new_tag,b.bill_id,
            IFNULL(m.metal,'') as metal_name,IFNULL(kar.firstname,'') as karigar_name
            FROM ret_acc_stock_process_details d
            LEFT JOIN ret_acc_stock_process p ON p.id_process=d.id_process
            LEFT JOIN ret_taging t ON t.tag_id =d.ref_no
            LEFT JOIN ret_bill_return_details r ON r.ret_bill_det_id = d.ref_no
            LEFT JOIN ret_bill_details det ON det.bill_det_id =d.ref_no
            LEFT JOIN ret_billing b ON b.bill_id = r.bill_id
            LEFT JOIN ret_product_master pro ON pro.pro_id=det.product_id
            LEFT JOIN ret_category cat ON cat.id_ret_category=p.id_ret_category
            left join metal m on m.id_metal=cat.id_metal
            LEFT JOIN branch br ON br.id_branch = b.id_branch
            LEFT JOIN ret_lot_inwards l ON l.lot_no = t.tag_lot_id
            LEFT JOIN ret_karigar kar ON kar.id_karigar = l.gold_smith
            WHERE p.type=5
            ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(p.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
            ".($data['id_metal']!='' && $data['id_metal']!=0 ? " and cat.id_metal=".$data['id_metal']."" :'')."
            ");
            //print_r($this->db->last_query());exit;
            $returnData = $sql->result_array();
        }
        return $returnData;
    }
    function getSalesReturnRetag($from_date,$to_date,$id_process)
    {
        $sql=$this->db->query("SELECT IFNULL((tag.gross_wt),0) as gross_wt,IFNULL((tag.net_wt),0) as net_wt,
        pro.product_name as product,tag.tag_code as new_tagno,ifnull(t.tag_code,'') as tag_no,
        ifnull(sr.bill_no,'') as bill_no,ifnull(sr.bill_id,'') as bill_id,ifnull(sr.branch,'') as branch,
        sr.bill_date as bill_date
        FROM ret_acc_stock_process_details d
         LEFT JOIN ret_acc_stock_process p ON p.id_process=d.id_process
         LEFT JOIN ret_taging tag ON tag.ref_tag_id=d.ref_no
         LEFT JOIN ret_product_master pro ON pro.pro_id=tag.product_id
         LEFT JOIN ret_taging t on t.tag_id=d.ref_no
         Left join (SELECT r.bill_id,bill.s_ret_refno as bill_no,date_format(bill.bill_date,'%d-%m-%Y') as bill_date,br.name as branch,d.tag_id
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
        LEFT JOIN ret_bill_return_details r ON r.ret_bill_det_id = d.bill_det_id
        LEFT JOIN ret_billing bill ON bill.bill_id = r.bill_id
        LEFT JOIN branch br ON br.id_branch = bill.id_branch
        WHERE b.bill_status = 1 AND d.status = 2 AND r.ret_bill_det_id IS NOT NULL) as sr on sr.tag_id = d.ref_no
         WHERE p.type=1
        ".($from_date != '' && $to_date!='' ? ' and date(p.date_add) BETWEEN "'.date('Y-m-d',strtotime($from_date)).'" AND "'.date('Y-m-d',strtotime($to_date)).'"' : '')." ");
        // print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    function getOldMetalItemDetails($from_date,$to_date,$id_process)
    {
        $sql=$this->db->query("SELECT s.old_metal_sale_id,s.gross_wt,s.net_wt,date_format(p.date_add,'%d-%m-%Y') as date_add,
        br.name as branch_name,b.bill_id
        FROM ret_bill_old_metal_sale_details s
        LEFT JOIN ret_acc_stock_process_details d ON d.ref_no=s.old_metal_sale_id
        LEFT JOIN ret_acc_stock_process p ON p.id_process=d.id_process
        LEFT JOIN ret_billing b ON b.bill_id=s.bill_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        WHERE p.type=4 AND s.old_metal_sale_id IS NOT NULL and p.id_process=".$id_process."
        ".($from_date != '' && $to_date!='' ? ' and date(p.date_add) BETWEEN "'.date('Y-m-d',strtotime($from_date)).'" AND "'.date('Y-m-d',strtotime($to_date)).'"' : '')."
        ");
        $data = $sql->result_array();
        foreach($data as $d){
            $d['bill_no'] =$this->get_bill_no_format_detail($d['bill_id']);
            $return_date[] =$d;
        }
        return $return_date;
    }
    function getPartlySaleDetails($from_date,$to_date,$id_process)
    {
        $sql=$this->db->query("SELECT tag.gross_wt,IFNULL(sld.sold_gwt,0) as sold_gwt,(tag.gross_wt-IFNULL(sld.sold_gwt,0)) as blc_gross_wt,tag.tag_id,tag.tag_code,
        p.product_name,IFNULL(s.sub_design_name,'-') as sub_design_name,des.design_name,sld.branch_name,
        (tag.net_wt-IFNULL(sld.sold_net_wt,0)) as blc_net_wt
        FROM ret_acc_stock_process_details a
        LEFT JOIN ret_acc_stock_process pr ON pr.id_process=a.id_process
        LEFT JOIN ret_taging tag ON tag.tag_id=a.ref_no
        LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
        LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
        left join ret_sub_design_master s on s.id_sub_design=tag.id_sub_design
        LEFT JOIN(SELECT SUM(s.sold_gross_wt) as sold_gwt,IFNULL(SUM(s.sold_net_wt),0) as sold_net_wt,s.tag_id,br.name as branch_name
        FROM ret_partlysold s
        LEFT JOIN ret_taging t ON t.tag_id=s.tag_id
        LEFT JOIN ret_bill_details d ON d.bill_det_id=s.sold_bill_det_id
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        WHERE b.bill_status=1 AND t.is_partial=1
        GROUP by s.tag_id) as sld ON sld.tag_id=tag.tag_id
        WHERE tag.is_partial=1 AND pr.type=3 and pr.id_process=".$id_process."
        ".($from_date != '' && $to_date!='' ? ' and date(pr.date_add) BETWEEN "'.date('Y-m-d',strtotime($from_date)).'" AND "'.date('Y-m-d',strtotime($to_date)).'"' : '')."
        ");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //retag report details
    //PO ITEM WISE REPORT
    function get_PurchaseItemwise($data)
    {
        $returnData=array();
        $sql=$this->db->query("SELECT p.po_ref_no,pro.product_name,IFNULL(des.design_name,'') as design_name,
        IFNULL(subDes.sub_design_name,'') as sub_design_name,date_format(p.po_date,'%d-%m-%Y') as po_date,ord.gross_wt,IFNULL(ord.less_wt,0) as less_wt,IFNULL(ord.net_wt,0) as net_wt,
        IFNULL(ord.item_wastage,'')as item_wastage,IFNULL(ord.no_of_pcs,'0') as no_of_pcs,
        IFNULL(ord.mc_value,0) as mc_value,if(ord.mc_type=1,'Per Gram','Per Piece') as mc_type,IFNULL(ord.fix_rate_per_grm,'') as fix_rate_per_grm,
        ord.item_cost,IFNULL(st.po_stn_wt,0) as po_stn_wt,IFNULL(st.po_stone_amount,0) as po_stone_amount,ord.po_item_id
        FROM ret_purchase_order p
        LEFT JOIN ret_purchase_order_items ord ON ord.po_item_po_id=p.po_id
        LEFT JOIN ret_product_master pro ON pro.pro_id=ord.po_item_pro_id
        LEFT JOIN ret_design_master des ON des.design_no=ord.po_item_des_id
        LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=ord.po_item_sub_des_id
        LEFT JOIN(SELECT IFNULL(SUM(s.po_stone_wt),0) as po_stn_wt,s.po_item_id,IFNULL(SUM(s.po_stone_amount),0) as po_stone_amount
        FROM ret_po_stone_items s
        LEFT JOIN ret_purchase_order_items i ON i.po_item_id=s.po_item_id
        GROUP by s.po_item_id) as st ON st.po_item_id=ord.po_item_id
        WHERE ord.po_item_id IS NOT NULL
        ".($data['id_karigar']!='' && $data['id_karigar']!=0 ? " and p.po_karigar_id=".$data['id_karigar']."" :'')."
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(p.po_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_product']!='' && $data['id_product']!=0 ? " and ord.po_item_pro_id=".$data['id_product']."" :'')."
        ".($data['id_design']!='' && $data['id_design']!=0 ? " and ord.po_item_des_id=".$data['id_design']."" :'')."
        ".($data['id_sub_design']!='' && $data['id_sub_design']!=0 ? " and ord.po_item_sub_des_id=".$data['id_sub_design']."" :'')."
        ORDER by ord.po_item_id DESC");
        $result = $sql->result_array();
		foreach($result as $r){
		    $r['stone_details']=$this->get_po_stone_details($r['po_item_id']);
			$returnData[$r['po_ref_no']][] = $r;
		}
		return $returnData;
    }
    function get_po_stone_details($po_item_id)
    {
        $sql=$this->db->query("SELECT s.po_item_id,s.po_stone_pcs,s.po_stone_wt,s.po_stone_rate,s.po_stone_amount,st.stone_name
        FROM ret_po_stone_items s
        LEFT JOIN ret_stone st ON st.stone_id=s.po_stone_id
        WHERE s.po_item_id=".$po_item_id."");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //PO ITEM WISE REPORT
    //sales import
    function get_sales_import($data)
    {
        $sql=$this->db->query("SELECT date_format(b.bill_date,'%d-%m-%Y') as INVOICEDATE,SUBSTRING_INDEX(b.sales_ref_no,'/',-2) as INVOICENO,'SA' as VOUCHERTYPE,
        '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,
        IFNULL(del.address1,'') as ADRESS1,IFNULL(del.address2,'') as ADRESS2,IFNULL(del.address3,'') as ADRESS3,
        cus.mobile as CONTACTNO,cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME,
        d.piece as QTY,d.rate_per_grm as RATE,(d.item_cost-d.item_total_tax) as VALUE,'' as SALESTAX,
        IFNULL(d.item_total_tax,0) as SALESTAXAMT,d.gross_wt as WEIGHT,d.item_cost as TOTAL,IFNULL(b.remark,'') as REMARKS,IFNULL(d.gross_wt,0) as GROSSWT,IFNULL(d.net_wt,0) as NETWT,
        '' as SERVICEAMT,'' as PRODUCTGROUP
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_product_master pro ON pro.pro_id=d.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
        WHERE b.bill_status=1 and b.sales_ref_no IS NOT NULL
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        ");
        return $sql->result_array();
    }
    //sales import
    //Purchase import
    function get_purchase_import_details($data)
    {
        $sql=$this->db->query("SELECT date_format(b.bill_date,'%d-%m-%Y') as INVOICEDATE,b.pur_ref_no as INVOICENO,'PURCHASE' as VOUCHERTYPE,
        '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,
        IFNULL(del.address1,'') as ADRESS1,IFNULL(del.address2,'') as ADRESS2,IFNULL(del.address3,'') as ADRESS3,cus.mobile as CONTACTNO,'1' as QTY,IFNULL(s.rate,0) as VALUE,IFNULL(s.rate_per_grm,0) as RATE,
        '0' as SALESTAX,'0' as SALESTAXAMT,IFNULL(s.net_wt,0) as WEIGHT,IFNULL(s.rate,0) as TOTAL,
        IFNULL(b.remark,'') as REMARKS,IFNULL(s.gross_wt,0) as GRSWT,IFNULL(s.net_wt,0) as NETWT,
        IFNULL(cat.metal_type,'') as PRODUCTNAME,'' as PRODUCTGROUP,'' as PRODUCTCODE
        FROM ret_bill_old_metal_sale_details s
        LEFT JOIN ret_estimation_old_metal_sale_details est ON est.old_metal_sale_id=s.esti_old_metal_sale_id
        LEFT JOIN ret_old_metal_type cat ON cat.id_metal_type=est.id_old_metal_type
        LEFT JOIN ret_billing b ON b.bill_id=s.bill_id
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
        WHERE b.bill_status=1 and b.pur_ref_no IS NOT NULL
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        ");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
    //Purchase import
    //payment mode import
    function get_payment_mode_import($data)
    {
        $sql=$this->db->query("SELECT date_format(b.bill_date,'%d-%m-%Y') as bill_date,cus.firstname as PARTICULAR,
        b.bill_no as bill_id,IFNULL(bill_det.gross_wt,0) as GRSWT,IFNULL(bill_det.taxable_amt,0) as AMOUNT,
        IFNULL(bill_det.GST,0) as GST,IFNULL(cash_pay.csh_amt,0) as CASH,IFNULL(card_pay.card_amt,0) as card_amt,
        IFNULL(chq_pay.cheque_amt,0) as CHEQUE,IFNULL(chit.amount,0) as SCHEME,'0' as SCH_BONUS,'0' as SCH_PRIZE,IFNULL(adv.utilized_amt,0) as ADVANCE,'0' as DISCOUNT,
        if(b.is_credit=1,(b.tot_bill_amount-b.tot_amt_received),0) as DUE,IFNULL(b.round_off_amt,0) as OTHERS,'0' as sales_return,'0' as gold_pur,'0' as sil_pur,'0' as plat_pur,'0' as dia_pur,'0' as stn_pur
        FROM ret_billing b
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN (SELECT b.bill_id,IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.item_cost)-SUM(d.item_total_tax),0) as taxable_amt,IFNULL(SUM(d.item_total_tax),0) as GST
                  FROM ret_bill_details d
                  LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
                  WHERE b.bill_status=1
                  GROUP by d.bill_id) as bill_det ON bill_det.bill_id=b.bill_id
        LEFT JOIN (SELECT IFNULL(SUM(p.payment_amount),0) as csh_amt,p.bill_id
                  FROM ret_billing_payment p
                  LEFT JOIN ret_billing b ON b.bill_id=p.bill_id
                  WHERE b.bill_status=1 AND p.payment_mode='Cash'
                  GROUP by p.bill_id) as cash_pay ON cash_pay.bill_id=b.bill_id
        LEFT JOIN (SELECT IFNULL(SUM(p.payment_amount),0) as card_amt,p.bill_id
                  FROM ret_billing_payment p
                  LEFT JOIN ret_billing b ON b.bill_id=p.bill_id
                  WHERE b.bill_status=1 AND (p.payment_mode='CC' OR p.payment_mode='DC')
                  GROUP by p.bill_id) as card_pay ON card_pay.bill_id=b.bill_id
        LEFT JOIN (SELECT IFNULL(SUM(p.payment_amount),0) as cheque_amt,p.bill_id
                  FROM ret_billing_payment p
                  LEFT JOIN ret_billing b ON b.bill_id=p.bill_id
                  WHERE b.bill_status=1 AND (p.payment_mode='CHQ' or p.payment_mode='NB' )
                  GROUP by p.bill_id) as chq_pay ON chq_pay.bill_id=b.bill_id
        LEFT JOIN (SELECT IFNULL(SUM(c.utilized_amt),0) as amount,c.bill_id
                  FROM ret_billing_chit_utilization c
                  LEFT JOIN ret_billing b ON b.bill_id=c.bill_id
                  WHERE b.bill_status=1 GROUP by c.bill_id) as chit ON chit.bill_id=b.bill_id
        LEFT JOIN(SELECT a.bill_id,IFNULL(SUM(a.utilized_amt),0) as utilized_amt
                 FROM ret_advance_utilized a
                 LEFT JOIN ret_billing b ON b.bill_id=a.bill_id
                 WHERE b.bill_status=1 GROUP by a.bill_id) as adv ON adv.bill_id=b.bill_id
        WHERE b.bill_status=1
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        HAVING AMOUNT>0");
        return $sql->result_array();
    }
    //payment mode import
    //stock rotation
    function get_stock_rotation_details($data)
    {
        $returnData=array();
        $sql=$this->db->query("SELECT pro.product_name,des.design_name,subDes.sub_design_name,wt.weight_description,IFNULL(wt.from_weight,'') as from_weight,
        IFNULL(wt.to_weight,'') as to_weight,m.id_product,m.id_design,m.id_sub_design,
        (SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
        WHERE d.tag_id IS NOT NULL AND b.bill_status=1
        and b.id_branch = '".$data['id_branch']."'
        and t.product_id = m.id_product
        and t.design_id = m.id_design
        and t.id_sub_design = m.id_sub_design
        and d.gross_wt BETWEEN wt.from_weight and wt.to_weight
        and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."') as gross_wt,
        (SELECT IFNULL(SUM(d.piece),0) as piece
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
        WHERE d.tag_id IS NOT NULL AND b.bill_status=1
        and b.id_branch = '".$data['id_branch']."'
        and t.product_id = m.id_product
        and t.design_id = m.id_design
        and t.id_sub_design = m.id_sub_design
        and d.gross_wt BETWEEN wt.from_weight and wt.to_weight
        and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."') as piece
        FROM ret_sub_design_mapping m
        LEFT JOIN ret_product_master pro ON pro.pro_id=m.id_product
        LEFT JOIN ret_design_master des ON des.design_no=m.id_design
        LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=m.id_sub_design
        LEFT JOIN ret_weight wt ON wt.id_product=m.id_product
        where pro.pro_id=".$data['id_product']."
        GROUP BY m.id_product,m.id_design,m.id_sub_design,wt.weight_description
        HAVING (piece > 0 OR gross_wt > 0)");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $sales_pcs  = $items['piece'];
            $sales_gwt  = $items['gross_wt'];
            /*$salesDetails = $this->get_StockRotationSales($items['id_product'],$items['id_design'],$items['id_sub_design'],$items['from_weight'],$items['to_weight'],$data['from_date'],$data['to_date'],$data['id_branch']);
            foreach($salesDetails as $sales)
            {
                $sales_pcs+=$sales['piece'];
                $sales_gwt+=$sales['gross_wt'];
            }*/
            if($sales_gwt>0)
            {
                $tot_rotation_stock = $this->get_weightranageStockRotations($items['id_product'],$items['id_design'],$items['id_sub_design'],$items['from_weight'],$items['to_weight'],$data['from_date'],$data['to_date'],$data['id_branch']);
                $returnData[]=array(
                               'product_name'       =>$items['product_name'],
                               'design_name'        =>$items['design_name'],
                               'sub_design_name'    =>$items['sub_design_name'],
                               'weight_description' =>$items['weight_description'],
                               'sales_pcs'          =>$sales_pcs,
                               'sales_gwt'          =>$sales_gwt,
                               'avg_stock_wt'       =>$tot_rotation_stock['gwt'],
                               'avg_stock_pcs'      =>$tot_rotation_stock['pcs'],
                               'no_of_rotation'     => $tot_rotation_stock['pcs'] > 0 ? number_format(($sales_pcs / $tot_rotation_stock['pcs']), 2, '.', '') : 0,
                               'no_of_rotation_wt'  => $tot_rotation_stock['gwt'] > 0 ? number_format(($sales_gwt / $tot_rotation_stock['gwt']), 3, '.', '') : 0,
                            );
            }
        }
        return $returnData;
    }
    function get_StockRotationSales($id_product,$id_design,$id_sub_design,$from_weight,$to_weight,$from_date,$to_date,$id_branch)
    {
        $sql=$this->db->query("SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
        WHERE d.tag_id IS NOT NULL AND b.bill_status=1
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        ".($id_product!='' ? " and t.product_id=".$id_product."" :'')."
        ".($id_design!='' ? " and t.design_id=".$id_design."" :'')."
        ".($id_sub_design!='' ? " and t.id_sub_design=".$id_sub_design."" :'')."
        ".($from_weight!='' && $to_weight!='' ? " and d.gross_wt BETWEEN '".$from_weight."' and '".$to_weight."'" :'')."
        ".($from_date != '' && $to_date!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($from_date)).'" AND "'.date('Y-m-d',strtotime($to_date)).'"' : '')."
        ");
        //print_r($this->db->last_query());exit;
        return  $sql->result_array();
    }
    function get_weightranageStockRotations($id_product,$id_design,$id_sub_design,$from_weight,$to_weight,$from_date,$to_date,$id_branch)
    {
        $total_rotataion = 0;
        $total_rotataion_gwt = 0;
        $stock_rotate_days = $this->getDateRangeArray($from_date, $to_date);
        foreach($stock_rotate_days as $skey => $sval){
            $sql = $this->db->query("SELECT sum(ifnull(tag.gross_wt,0)) as gross_wt,sum(ifnull(tag.piece,0)) as piece
                                    FROM ret_taging tag
                                    LEFT JOIN (SELECT m1.* FROM ret_taging_status_log m1
                                                LEFT JOIN ret_taging_status_log m2
                                                ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log)
                                            WHERE m2.id_tag_status_log IS NULL) l on l.tag_id = tag.tag_id
                                            ".($id_branch!='' && $id_branch!=0 ? " and l.to_branch =".$id_branch."" :'')." and l.status = 0
                                    WHERE date(l.date) <= '".$sval."' AND l.status = 0
                                    ".($id_product!='' ? " and tag.product_id =".$id_product."" :'')."
                                    ".($id_design!='' ? " and tag.design_id=".$id_design."" :'')."
                                    ".($id_sub_design!='' ? " and tag.id_sub_design =".$id_sub_design."" :'')."
                                    ".($from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN '".$from_weight."' and '".$to_weight."'" :'')."
                                     GROUP by tag.product_id, tag.design_id, tag.id_sub_design");
            if($sql->num_rows() > 0){
                $total_rotataion += $sql->row()->piece;
                $total_rotataion_gwt += $sql->row()->gross_wt;
            }
        }
        return array('pcs' => ($total_rotataion / sizeof($stock_rotate_days)), 'gwt' => $total_rotataion_gwt / sizeof($stock_rotate_days));
    }
    function getDateRangeArray($strDateFrom,$strDateTo)
    {
        // takes two dates formatted as YYYY-MM-DD and creates an
        // inclusive array of the dates between the from and to dates.
        // could test validity of dates here but I'm already doing
        // that in the main script
        $aryRange = [];
        $iDateFrom = mktime(1, 0, 0, substr($strDateFrom, 5, 2), substr($strDateFrom, 8, 2), substr($strDateFrom, 0, 4));
        $iDateTo = mktime(1, 0, 0, substr($strDateTo, 5, 2), substr($strDateTo, 8, 2), substr($strDateTo, 0, 4));
        if ($iDateTo >= $iDateFrom) {
            array_push($aryRange, date('Y-m-d', $iDateFrom)); // first entry
            while ($iDateFrom<$iDateTo) {
                $iDateFrom += 86400; // add 24 hours
                array_push($aryRange, date('Y-m-d', $iDateFrom));
            }
        }
        return $aryRange;
    }
    function get_stock_rotation_list($data)
    {
        $resutnData=array();
        $sql=$this->db->query("SELECT t.product_id,t.design_id,t.id_sub_design,p.product_name,des.design_name,subDes.sub_design_name,b.name as branch_name,c.name as category_name,
        IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
        IFNULL(inw_det.gross_wt,0) as inw_det_gwt,IFNULL(inw_det.net_wt,0) as inw_det_nwt,IFNULL(inw_det.piece,0) as inw_det_pcs,
        IFNULL(s.gross_wt,0) as sales_gwt,IFNULL(s.net_wt,0) as sales_nwt,IFNULL(s.piece,0) as sales_pcs,
        IFNULL(br_out.gross_wt,0) as brout_gross_wt,IFNULL(br_out.net_wt,0) as brout_nwt,IFNULL(br_out.piece,0) as brout_pcs,
        IFNULL(br_out_det.gross_wt,0) as br_out_det_gross_wt,IFNULL(br_out_det.net_wt,0) as br_out_det,IFNULL(br_out_det.piece,0) as br_out_det_pcs,
        IFNULL(sales.gross_wt,0) as s_gwt,IFNULL(sales.net_wt,0) as s_nwt,IFNULL(sales.piece,0) as s_pcs
		FROM ret_taging t
		LEFT JOIN ret_product_master p on p.pro_id=t.product_id
		LEFT JOIN ret_design_master des ON des.design_no=t.design_id
        LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=t.id_sub_design
		LEFT JOIN branch b on b.id_branch=t.current_branch
		left join ret_category c on c.id_ret_category=p.cat_id
		left join metal m on m.id_metal=c.id_metal
		LEFT JOIN (SELECT tag.tag_id,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id  and l.status=0 and l.to_branch=".$data['id_branch']."
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE  ".($data['from_date'] != ''? " date(l.date)<'".date('Y-m-d',strtotime($data['from_date']))."'" : '')."  And l.status=0
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and l.to_branch=".$data['id_branch']."" :'')."
        GROUP by tag.product_id,tag.design_id,tag.id_sub_design) INW on (INW.product_id=t.product_id AND INW.design_id=t.design_id AND INW.id_sub_design=t.id_sub_design)
		LEFT JOIN (SELECT b.tag_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,b.product_id,
		tag.design_id,tag.id_sub_design
		FROM ret_taging tag
		LEFT JOIN ret_bill_details b on b.tag_id=tag.tag_id
		lEFT JOIN ret_billing bill on bill.bill_id=b.bill_id
		LEFT JOIN ret_product_master prod on prod.pro_id=b.product_id
		WHERE  bill.bill_status=1
	    ".($data['from_date'] != ''? " and date(bill.bill_date)<'".date('Y-m-d',strtotime($data['from_date']))."'" : '')."
		 ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
		GROUP by b.product_id,tag.design_id,tag.id_sub_design) s ON (s.product_id=t.product_id AND s.design_id=t.design_id AND s.id_sub_design=t.id_sub_design)
        LEFT JOIN (SELECT b.tag_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,b.product_id,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id=tag.tag_id
        lEFT JOIN ret_billing bill on bill.bill_id=b.bill_id
        LEFT JOIN ret_product_master prod on prod.pro_id=b.product_id
        WHERE  bill.bill_status=1
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(bill.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
         ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
        GROUP by b.product_id,tag.design_id,tag.id_sub_design) sales ON (sales.product_id=t.product_id AND sales.design_id=t.design_id AND sales.id_sub_design=t.id_sub_design)
		LEFT JOIN (SELECT tag.tag_id,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id  and l.status=0 and l.to_branch=".$data['id_branch']."
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE  l.status=0 ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(l.date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and l.to_branch=".$data['id_branch']."" :'')."
        GROUP by tag.product_id,tag.design_id,tag.id_sub_design) inw_det on (inw_det.product_id=t.product_id AND inw_det.design_id=t.design_id AND inw_det.id_sub_design=t.id_sub_design)
		LEFT JOIN (
		SELECT tag.tag_id,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,
		tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=7 or l.status=8 or l.status=9) and l.from_branch=".$data['id_branch']."
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE ".($data['from_date'] != '' && $data['to_date']!='' ? ' date(l.date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=7 or l.status=8 or l.status=9)
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP by tag.product_id,tag.design_id,tag.id_sub_design
		) br_out_det on (br_out_det.product_id=t.product_id AND br_out_det.design_id=t.design_id AND br_out_det.id_sub_design=t.id_sub_design)
		LEFT JOIN (
		SELECT tag.tag_id,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,
		tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=7 or l.status=8 or l.status=9) and l.from_branch=".$data['id_branch']."
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        WHERE ".($data['from_date'] != ''? " date(l.date)<'".date('Y-m-d',strtotime($data['from_date']))."'" : '')."
        and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=7 or l.status=8 or l.status=9)
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP by tag.product_id,tag.design_id,tag.id_sub_design
		) br_out on (br_out.product_id=t.product_id AND br_out.design_id=t.design_id AND br_out.id_sub_design=t.id_sub_design)
		where t.tag_id is not null
		".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
        GROUP BY t.product_id,t.design_id,t.id_sub_design
        ORDER BY t.product_id ASC");
        //print_r($this->db->last_query());exit;
        $result =  $sql->result_array();
        $from_date = strtotime($data['from_date']);
        $to_date = strtotime($data['to_date']);
        $datediff = $to_date - $from_date;
        $num_of_days    = round($datediff / (60 * 60 * 24));
        foreach($result as $items)
        {
            $avg_stock = 0;
            $total_closing_pcs=0;
            $total_sales    =0;
            $opening_blc_pcs = ($items['inw_pcs']-$items['sales_pcs']-$items['brout_pcs']);
            $op_blc_gwt      = number_format(($items['inw_gwt']-$items['sales_gwt']-$items['brout_gross_wt']),3,'.','');
            $closing_pcs    = ($opening_blc_pcs+$items['inw_det_pcs']-$items['s_pcs']-$items['br_out_det_pcs']);
            $closing_gwt    = number_format(($op_blc_gwt+$items['inw_det_gwt']-$items['s_gwt']-$items['br_out_det_gross_wt']),3,'.','');
            $total_closing_pcs+= ($opening_blc_pcs+$items['inw_det_pcs']-$items['s_pcs']-$items['br_out_det_pcs']);
            $avg_stock      = ($total_closing_pcs/$num_of_days);
            $resutnData[]=array(
                               'branch_name'        =>$items['branch_name'],
                               'category_name'      =>$items['category_name'],
                               'design_id'          =>$items['design_id'],
                               'design_name'        =>$items['design_name'],
                               'id_sub_design'      =>$items['id_sub_design'],
                               'inw_pcs'            =>$items['inw_det_pcs'],
                               'inw_gwt'            =>$items['inw_det_gwt'],
                               'product_id'         =>$items['product_id'],
                               'product_name'       =>$items['product_name'],
                               'sales_gwt'          =>number_format($items['s_gwt']+$items['br_out_det_gross_wt'],3,'.',''),
                               'sales_pcs'          =>$items['s_pcs']+$items['br_out_det_pcs'],
                               'sub_design_name'    =>$items['sub_design_name'],
                               'op_blc_pcs'         =>$opening_blc_pcs,
                               'op_blc_gwt'         =>$op_blc_gwt,
                               'closing_pcs'        =>$closing_pcs,
                               'closing_gwt'        =>$closing_gwt,
                               'stock_rotation'     =>($closing_pcs!=0 ?(number_format($items['s_pcs']/$avg_stock)) :0),
                               );
        }
        return $resutnData;
    }
    //stock rotation
        //ACCOUNTS REPORTS
    function get_gst_abstract_details($data,$billing_for)
    {
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        $return_data=array();
        if($data['report'] == 1)
        {
            $sql=$this->db->query("SELECT d.bill_id,sum(d.piece) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,
                            IFNULL(sum(d.net_wt),0) as net_wt,sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(ifnull(d.total_sgst,0) + ifnull(d.total_cgst,0) + ifnull(d.total_igst,0)) as tax_amt,
                            sum(d.item_cost) as total_amount,IFNULL(m.metal,'') as metal_name,
                            IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,
                            IFNULL(sum(d.total_igst),0) as total_igst,p.product_name,br.name as branch_name,b.id_branch,c.name as category_name,p.cat_id,
                            IFNULL(ROUND(sum(b.round_off_amt),2), 0) as round_off, b.sales_ref_no,ifnull(stn.stn_wt,0) as less_wt,
                            concat(cus.firstname,' ',IFNULL(cus.lastname,'')) as cus_name,m.metal_code,
                            IFNULL(cus.gst_number,'') as gst_number,cus.mobile,
                            IFNULL(b.pan_no, ifnull(cus.pan, '')) as pan,
                            date_format(b.bill_date,'%d-%m-%Y') as bill_date, st.name as statename, br.short_name ,
							m.metal as metalname,tax.tax_percentage, IFNULL(p.hsn_code,'-') as hsn_code
                            FROM ret_billing b
                            LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                            LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                            LEFT JOIN branch br on br.id_branch=b.id_branch
                            LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                            LEFT JOIN metal m on m.id_metal=c.id_metal
                            LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                            LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                            LEFT JOIN state as st ON st.id_state = adr.id_state
                            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,p.cat_id, p.hsn_code
                                FROM ret_billing_item_stones st
                                LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
                                LEFT JOIN ret_product_master p ON p.pro_id=dt.product_id
                                LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                                LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
                                LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
                                LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
                                WHERE b.bill_status=1 AND s.stone_type=1
                                and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                            ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
                            GROUP by p.cat_id, p.hsn_code)  as stn ON stn.cat_id=p.cat_id AND stn.hsn_code = p.hsn_code
							LEFT JOIN (select i.tgi_taxcode,i.tgi_tgrpcode,
                                    m.tax_percentage as tax_percentage,
                                    i.tgi_calculation as tgi_calculation
                                    FROM ret_taxgroupitems i
                                    LEFT JOIN ret_taxmaster m on m.tax_id=i.tgi_taxcode) as tax on tax.tgi_tgrpcode=p.tgrp_id
                            WHERE b.bill_status=1 AND d.bill_id is not null AND b.is_eda = 1
                            and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                            ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
                            ".($billing_for!=''  && $billing_for>0 ? " and b.billing_for=".$billing_for."" :'')."
                            ".($data['gst_filter']>0 ? ($data['gst_filter']==1 ? " and d.total_igst>0 and d.item_total_tax != 0 " : " and d.total_sgst>0 and d.item_total_tax != 0  " ) :'and d.item_total_tax != 0 ')."
                            ".($data['id_category'] != '' && $data['id_category'] >0 ? ' and p.cat_id ='.$data['id_category']: '')."
                            ".($data['id_metal'] != '' && $data['id_metal'] >0 ? ' and c.id_metal ='.$data['id_metal']: '')."
                            group by p.cat_id, p.hsn_code");
                    //print_r($this->db->last_query());exit; and d.item_cost>0
        }
        else
         {
        $sql=$this->db->query("SELECT c.name as category_name,p.cat_id, b.sales_ref_no,b.bill_no,b.bill_id,
                    sum(d.piece) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,sum(d.item_cost-d.item_total_tax) as taxable_amt,
                    sum(ifnull(d.total_sgst,0) + ifnull(d.total_cgst,0) + ifnull(d.total_igst,0)) as tax_amt,
                    sum(d.item_cost) as total_amount, IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,
                    IFNULL(sum(d.total_igst),0) as total_igst,IFNULL(sum(b.round_off_amt), 0) as round_off,
                    p.product_name,br.name as branch_name,b.id_branch,ifnull(stn.stn_wt,0) as less_wt,concat(cus.firstname,' ',IFNULL(cus.lastname,'')) as cus_name,m.metal_code,
                     IFNULL(cus.gst_number,'') as gst_number,cus.mobile,IFNULL(m.metal,'') as metal_name,
                    IFNULL(b.pan_no, ifnull(cus.pan, '')) as pan,
                    date_format(b.bill_date,'%d-%m-%Y') as bill_date, st.name as statename, br.short_name ,
					m.metal as metalname,tax.tax_percentage,IFNULL(p.hsn_code,'-') as hsn_code
                    FROM ret_billing b
                    LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
                    LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
                    LEFT JOIN branch br on br.id_branch=b.id_branch
                    LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                    LEFT JOIN metal m on m.id_metal=c.id_metal
                    LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                    LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                    LEFT JOIN state as st ON st.id_state = adr.id_state
                        LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,p.cat_id,dt.bill_det_id, dt.bill_id
                        FROM ret_billing_item_stones st
                        LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
                        LEFT JOIN ret_product_master p ON p.pro_id=dt.product_id
                        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                        LEFT JOIN ret_billing bill ON bill.bill_id=dt.bill_id
                        LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
                        LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
                        WHERE bill.bill_status=1 AND s.stone_type=1
                        and (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                         ".($branch!='' && $branch !='0' ? " and bill.id_branch in (".$branch.") " :'' )."
                        GROUP by dt.bill_id)  as stn ON stn.bill_id = d.bill_id
					LEFT JOIN (select i.tgi_taxcode,i.tgi_tgrpcode,
                                    m.tax_percentage as tax_percentage,
                                    i.tgi_calculation as tgi_calculation
                                    FROM ret_taxgroupitems i
                                    LEFT JOIN ret_taxmaster m on m.tax_id=i.tgi_taxcode) as tax on tax.tgi_tgrpcode=p.tgrp_id
                    Where b.sales_ref_no IS NOT NULL AND b.sales_ref_no!='' and b.bill_status=1  AND d.bill_id is not null AND b.is_eda = 1
                    and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
                    ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
                    ".($billing_for!=''  && $billing_for>0 ? " and b.billing_for=".$billing_for."" :'')."
                    ".($data['gst_filter']>0 ? ($data['gst_filter']==1 ? " and d.total_igst>0 and d.item_total_tax != 0 " : " and d.total_sgst>0 and d.item_total_tax != 0  " ) :'and d.item_total_tax != 0 ')."
                    ".($data['id_category'] != '' && $data['id_category'] >0 ? ' and p.cat_id ='.$data['id_category']: '')."
                    ".($data['id_metal'] != '' && $data['id_metal'] >0 ? ' and c.id_metal ='.$data['id_metal']: '')."
                    group by b.bill_id,p.cat_id  ORDER BY `category_name` ASC ,b.sales_ref_no");
                    //print_r($this->db->last_query());exit; and d.item_cost>0
         }
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $return_data[$items['category_name']][]=array(
                                'bill_id'       =>$items['bill_id'],
                                'bill_date'     =>$items['bill_date'],
                                'branch_name'   =>$items['branch_name'],
                                'metal_code'    =>$items['metal_code'],
                                'cus_name'      =>$items['cus_name'],
                                'gst_number'    =>$items['gst_number'],
                                'pan'           =>$items['pan'],
                                'category_name' =>$items['category_name'],
                                'piece'         =>$items['piece'],
                                'gross_wt'      =>$items['gross_wt'],
                                'net_wt'        =>$items['net_wt'],
                                'metal_name'    =>$items['metal_name'],
                                'less_wt'       =>$items['less_wt'],
                                'taxable_amt'   =>$items['taxable_amt'],
                                'total_sgst'    =>$items['total_sgst'],
                                'total_cgst'    =>$items['total_cgst'],
                                'total_igst'    =>$items['total_igst'],
                                'tax_amt'       =>$items['tax_amt'],
                                'total_amount'  =>$items['total_amount'],
                                'round_off'     =>$items['round_off'],
                                'sales_ref_no'  =>$items['sales_ref_no'],
                                'statename'     =>$items['statename'],
                                'short_name'    =>$items['short_name'],
                                'hsn_code'      =>$items['hsn_code'],
								'tax_percentage'     => $items['tax_percentage'],
                                'metalname'     =>$items['metalname'],
                                'starting_bill' =>$this->getminMaxBills($branch,$data['from_date'],$data['to_date'],$items['cat_id'],'ASC',$billing_for,$data['gst_filter'],($items['hsn_code'] == '-' ? '' : $items['hsn_code'])),
                                'ending_bill'   =>$this->getminMaxBills($branch,$data['from_date'],$data['to_date'],$items['cat_id'],'DESC',$billing_for,$data['gst_filter'],($items['hsn_code'] == '-' ? '' : $items['hsn_code'])),
                            );
        }
        return $return_data;
    }
    function getminMaxBills($branch,$FromDt,$ToDt,$id_category,$type,$billing_for,$gst_filter,$hsn_code = '',$tax_group_id = 0)
	{
	    $sql=$this->db->query("SELECT b.sales_ref_no,b.bill_no
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        Where b.sales_ref_no IS NOT NULL AND b.sales_ref_no!='' and b.bill_status=1 and d.item_cost>0 and b.is_eda = 1
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($branch!='' && $branch>0 ? " and b.id_branch in (".$branch.") ":'')."
        ".($id_category!='' ? " and p.cat_id in (".$id_category.")" :'')."
        ".($billing_for!='' ? " and b.billing_for=".$billing_for."" :'')."
        " . (!empty($hsn_code) && $hsn_code != 0 ? "AND p.hsn_code IN ('" . str_replace(",", "','", $hsn_code) . "')" : '') . "
        ".($tax_group_id !=''  && $tax_group_id != 0 ? " and d.tax_group_id in (".$tax_group_id.")" :'')."
        ".($gst_filter>0 ? ($gst_filter==1 ? " and d.total_igst>0 and d.item_total_tax != 0 " : " and d.total_sgst>0 and d.item_total_tax != 0 " ) :' and d.item_total_tax != 0')."
        ORDER by b.bill_id ".$type." LIMIT 1");
        //print_r($this->db->last_query());exit;
        return $sql->row()->sales_ref_no;
	}
	function get_gst_abstract_overseas_details($data)
	{
	    $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
		$return_data=array();
        if($data['report']==1)
        {
        $sql=$this->db->query("SELECT d.bill_id,IFNULL(sum(b.round_off_amt), 0) as round_off,sum(d.piece) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(d.item_total_tax) as tax_amt,sum(d.item_cost) as total_amount,
        IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,IFNULL(sum(d.total_igst),0) as total_igst,p.product_name,br.name as branch_name,b.id_branch,c.name as category_name,p.cat_id,
        IFNULL(sum(b.round_off_amt), 0) as round_off,b.sales_ref_no,ifnull(stn.stn_wt,0) as less_wt,concat(cus.firstname,' ',IFNULL(cus.lastname,'')) as cus_name,m.metal_code,
        date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_id, st.name as statename,IFNULL(m.metal,'') as metal_name,
        IFNULL(b.pan_no, ifnull(cus.pan, '')) as pan, IFNULL(cus.gst_number,'') as gst_number , p.hsn_code, m.metal as metalname,tax.tax_percentage
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN metal m on m.id_metal=c.id_metal
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
        LEFT JOIN state as st ON st.id_state = adr.id_state
        LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,p.cat_id, p.hsn_code
            FROM ret_billing_item_stones st
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
            LEFT JOIN ret_product_master p ON p.pro_id=dt.product_id
            LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE b.bill_status=1 AND s.stone_type=1
            and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
            ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
            GROUP by p.cat_id, p.hsn_code)  as stn ON stn.cat_id=p.cat_id AND stn.hsn_code = p.hsn_code
		LEFT JOIN (select i.tgi_taxcode,i.tgi_tgrpcode,
		m.tax_percentage as tax_percentage,
		i.tgi_calculation as tgi_calculation
		FROM ret_taxgroupitems i
		LEFT JOIN ret_taxmaster m on m.tax_id=i.tgi_taxcode
        group by i.tgi_taxcode) as tax on tax.tgi_tgrpcode=p.tgrp_id
        WHERE b.bill_status=1 AND d.item_total_tax = 0 AND d.bill_id is not null and d.item_cost > 0 AND b.is_eda = 1
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
        group by p.cat_id, p.hsn_code");
        }
        else
        {
        $sql=$this->db->query("SELECT c.name as category_name,p.cat_id, b.sales_ref_no,b.bill_no,b.bill_id,
        sum(d.piece) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(d.item_total_tax) as tax_amt,sum(d.item_cost) as total_amount, IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,IFNULL(sum(d.total_igst),0) as total_igst,
        p.product_name,br.name as branch_name,b.id_branch,c.name as category_name,p.cat_id,IFNULL(sum(b.round_off_amt), 0) as round_off,ifnull(stn.stn_wt,0) as less_wt,
        concat(cus.firstname,' ',IFNULL(cus.lastname,'')) as cus_name,m.metal_code,IFNULL(m.metal,'') as metal_name,
        date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_id, st.name as statename,
        IFNULL(b.pan_no, ifnull(cus.pan, '')) as pan, IFNULL(cus.gst_number,'') as gst_number , p.hsn_code, m.metal as metalname,tax.tax_percentage
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN metal m on m.id_metal=c.id_metal
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
        LEFT JOIN state as st ON st.id_state = adr.id_state
        LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,p.cat_id,dt.bill_det_id
            FROM ret_billing_item_stones st
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
            LEFT JOIN ret_product_master p ON p.pro_id=dt.product_id
            LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_billing bill ON bill.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE bill.bill_status=1 AND s.stone_type=1
            and (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
             ".($branch!='' && $branch !='0' ? " and bill.id_branch in (".$branch.") " :'' )."
            GROUP by bill.bill_id)  as stn ON stn.bill_det_id=d.bill_det_id
		LEFT JOIN (select i.tgi_taxcode,i.tgi_tgrpcode,
		m.tax_percentage as tax_percentage,
		i.tgi_calculation as tgi_calculation
		FROM ret_taxgroupitems i
		LEFT JOIN ret_taxmaster m on m.tax_id=i.tgi_taxcode
        group by i.tgi_taxcode) as tax on tax.tgi_tgrpcode=p.tgrp_id
        Where b.sales_ref_no IS NOT NULL AND b.sales_ref_no!='' and b.bill_status=1 and d.item_cost > 0 AND b.is_eda = 1
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
        ".($billing_for!=''  && $billing_for>0 ? " and b.billing_for=".$billing_for."" :'')."
        and d.item_total_tax = 0
        group by b.bill_id,p.cat_id ORDER BY `category_name` ASC ,b.sales_ref_no");
        //print_r($this->db->last_query());exit;
        }
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $return_data[$items['category_name']][]=array(
                                'bill_id'       =>$items['bill_id'],
                                'bill_date'     =>$items['bill_date'],
                                'cus_name'      =>$items['cus_name'],
                                'branch_name'   =>$items['branch_name'],
                                'metal_code'   =>$items['metal_code'],
                                'category_name' =>$items['category_name'],
                                'metal_name' =>$items['metal_name'],
                                'piece'         =>$items['piece'],
                                'gross_wt'      =>$items['gross_wt'],
                                'net_wt'        =>$items['net_wt'],
                                'less_wt'        =>$items['less_wt'],
                                'taxable_amt'   =>$items['taxable_amt'],
                                'total_sgst'    =>$items['total_sgst'],
                                'total_cgst'    =>$items['total_cgst'],
                                'total_igst'    =>$items['total_igst'],
                                'tax_amt'       =>$items['tax_amt'],
								'round_off'   	=>$items['round_off'],
                                'total_amount'  =>$items['total_amount'],
                                'round_off'   	=>$items['round_off'],
                                'sales_ref_no'  =>$items['sales_ref_no'],
                                'gst_number'    =>$items['gst_number'],
                                'pan'           =>$items['pan'],
                                'statename'     => $items['statename'],
                                'hsn_code'      => $items['hsn_code'],
								'tax_percentage'     => $items['tax_percentage'],
                                'metalname'     => $items['metalname'],
                                'starting_bill' =>$this->getminMaxBillsOverSeas($branch,$data['from_date'],$data['to_date'],$items['cat_id'],'ASC',$billing_for,$data['gst_filter'], ($items['hsn_code'] == '-' ? '' : $items['hsn_code'])),
                                'ending_bill'   =>$this->getminMaxBillsOverSeas($branch,$data['from_date'],$data['to_date'],$items['cat_id'],'DESC',$billing_for,$data['gst_filter'], ($items['hsn_code'] == '-' ? '' : $items['hsn_code'])),
                               );
        }
        return $return_data;
	}
	function getminMaxBillsOverSeas($branch,$FromDt,$ToDt,$id_category,$type,$billing_for,$gst_filter,$hsn_code = '', $tax_group_id = 0)
	{
		// print_r($billing_for);exit;
	    $sql=$this->db->query("SELECT b.sales_ref_no,b.bill_no
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        Where b.sales_ref_no IS NOT NULL AND b.sales_ref_no!='' and b.bill_status=1 and d.item_cost>0 and b.is_eda = 1
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
        ".($branch!='' && $branch>0 ? " and b.id_branch in (".$branch.") ":'')."
        ".($id_category!='' ? " and p.cat_id in (".$id_category.")" :'')."
        ".($hsn_code !=''  && $hsn_code != 0 ? " and c.hsn_code in (".$hsn_code.")" :'')."
        ".($tax_group_id !=''  && $tax_group_id != 0 ? " and d.tax_group_id in (".$tax_group_id.")" :'')."
        ".($billing_for!='' ? " and b.billing_for=".$billing_for."" :'')."
		and d.item_total_tax = 0 ORDER by b.bill_id ".$type." LIMIT 1");
        // print_r($this->db->last_query());exit;
        return $sql->row()->sales_ref_no;
	}
    function getRepairCharges($data)
	{
		$return_data=[];
		$d1 = date_create($data['from_date']);
        $d2 = date_create($data['to_date']);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        if($data['report']==1)
        {
		$sql=$this->db->query("SELECT IFNULL(SUM(c.rate),0) as amount,IFNULL(SUM(c.weight),0) as weight, b.bill_no ,
		IFNULL(SUM(c.totalitems),0) as pcs ,cat.name , IFNULL(sum(c.total_sgst),0) as tot_sgst, IFNULL(sum(c.total_cgst),0) as tot_cgst, IFNULL(sum(c.total_igst),0) as tot_igst,
		IFNULL(sum(c.repair_tot_tax),0) as tot_tax, IFNULL(sum(c.rate),0) - IFNULL(sum(c.repair_tot_tax),0) as tot_taxable , pro.cat_id,
		IFNULL(sum(b.round_off_amt), 0) as round_off,IFNULL(cus.lastname,'') as cus_name,IFNULL(m.metal,'') as metal_name,
        date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_id, st.name as statename,
        IFNULL(b.pan_no, ifnull(cus.pan, '')) as pan, IFNULL(cus.gst_number,'') as gst_number,c.repair_percent as tax_percentage,IFNULL(pro.hsn_code,'-') as hsn_code
		from ret_billing b
		LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
		LEFT JOIN customerorderdetails c ON c.bill_id=b.bill_id
		LEFT JOIN ret_product_master as pro ON pro.pro_id = c.id_product
		LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN metal m on m.id_metal=cat.id_metal
		LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
        LEFT JOIN state as st ON st.id_state = adr.id_state
		WHERE b.bill_type=11 and b.bill_status=1 AND c.ortertype=3 and c.orderstatus = 5 AND b.is_eda = 1
		and (date(b.bill_date) BETWEEN '".date($FromDt)."' AND '".date($ToDt)."')
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."	 GROUP BY pro.cat_id, pro.hsn_code having amount>0");
        }
        else
        {
        $sql=$this->db->query("SELECT cat.name , pro.cat_id, b.bill_no , co.order_no,co.id_customerorder,
        IFNULL(SUM(c.rate),0) as amount,IFNULL(SUM(c.weight),0) as weight, IFNULL(SUM(c.totalitems),0) as pcs ,cat.name , IFNULL(sum(c.total_sgst),0) as tot_sgst, IFNULL(sum(c.total_cgst),0) as tot_cgst, IFNULL(sum(c.total_igst),0) as tot_igst, IFNULL(sum(c.repair_tot_tax),0) as tot_tax, IFNULL(sum(c.rate),0) - IFNULL(sum(c.repair_tot_tax),0) as tot_taxable,
        IFNULL(sum(b.round_off_amt), 0) as round_off,IFNULL(cus.lastname,'') as cus_name,
        date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.bill_id, st.name as statename,IFNULL(m.metal,'') as metal_name,
        IFNULL(b.pan_no, ifnull(cus.pan, '')) as pan, IFNULL(cus.gst_number,'') as gst_number,c.repair_percent as tax_percentage,IFNULL(pro.hsn_code,'-') as hsn_code
        from ret_billing b
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN customerorderdetails c ON c.bill_id=b.bill_id
        LEFT JOIN customerorder co ON co.id_customerorder=c.id_customerorder
        LEFT JOIN ret_product_master as pro ON pro.pro_id = c.id_product
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN metal m on m.id_metal=cat.id_metal
        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
        LEFT JOIN state as st ON st.id_state = adr.id_state
        WHERE b.bill_type=11 and b.bill_status=1 AND c.ortertype=3 and c.orderstatus=5 and b.tot_bill_amount > 0 AND b.is_eda = 1
        and (date(b.bill_date) BETWEEN '".date($FromDt)."' AND '".date($ToDt)."')
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )." group by b.bill_id ORDER BY `name` ASC ,b.bill_no");
        }
	    //print_r($this->db->last_query());exit;
		$result = $sql->result_array();
		foreach($result as $items)
        {
            $return_data[$items['name']][]=array(
                                'amount'       	=>$items['amount'],
                                'weight'   		=>$items['weight'],
                                'pcs' 			=>$items['pcs'],
                                'metal_name'    =>$items['metal_name'],
                                'name'         	=>$items['name'],
                                'tot_sgst'      =>$items['tot_sgst'],
                                'tot_cgst'      =>$items['tot_cgst'],
                                'tot_igst'   	=>$items['tot_igst'],
                                'tot_tax'    	=>$items['tot_tax'],
                                'tot_taxable'   =>$items['tot_taxable'],
                                'round_off'     =>$items['round_off'],
                                'bill_no'       =>$items['bill_no'],
                                'bill_id'       =>$items['bill_id'],
                                'cus_name'      =>$items['cus_name'],
                                'bill_date'     =>$items['bill_date'],
                                'gst_number'    =>$items['gst_number'],
                                'pan'           =>$items['pan'],
                                'statename'     => $items['statename'],
								'hsn_code'      => $items['hsn_code'],
                                'tax_percentage'=> $items['tax_percentage'],
                                'starting_bill' =>$this->getminMaxRepairBills($branch,$FromDt,$ToDt,$items['cat_id'],($items['hsn_code'] == '-' ? '' : $items['hsn_code']),'DESC'),
                                'ending_bill'   =>$this->getminMaxRepairBills($branch,$FromDt,$ToDt,$items['cat_id'],($items['hsn_code'] == '-' ? '' : $items['hsn_code']),'ASC'),
                               );
        }
		return $return_data;
    }
	function getminMaxRepairBills($id_branch,$FromDt,$ToDt,$id_category,$hsn_code,$type)
	{
		$sql=$this->db->query("SELECT cat.name , b.bill_no , co.order_no,co.id_customerorder
		from ret_billing b
				   LEFT JOIN customerorderdetails c ON c.bill_id=b.bill_id
				   LEFT JOIN customerorder co ON co.id_customerorder=c.id_customerorder
				   LEFT JOIN ret_product_master as pro ON pro.pro_id = c.id_product
					LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
				   WHERE b.bill_type=11 and b.bill_status=1 AND c.ortertype=3 and c.orderstatus=5 and b.tot_bill_amount > 0
				   and (date(b.bill_date) BETWEEN '".date($FromDt)."' AND '".date($ToDt)."')
        			 ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
        			".($id_category!='' ? " and pro.cat_id=".$id_category."" :'')."
                    ".($hsn_code!='' ? " and pro.hsn_code=".$hsn_code."" :'')."
					ORDER BY co.id_customerorder " . $type. " LIMIT 1");
					// print_r($this->db->last_query());exit;
					return $sql->row()->bill_no;
	}
    //gst abstract
    //SALES RETURN ABSTRACT
    function get_sals_return_details($data)
    {
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        $return_data=array();
		if($data['group_by']==0){
			$sql=$this->db->query("SELECT d.bill_id,sum(d.piece) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,
			sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(d.item_total_tax) as tax_amt,round(FLOOR(sum(d.item_cost)),2) as total_amount,
			IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,IFNULL(sum(d.total_igst),0) as total_igst,
			p.product_name,br.name as branch_name,b.id_branch,
			tag.tag_status,bill.bill_id as sales_bill_id,IFNULL(met.metal,'')as metal_name,
			date_format(bill.bill_date,'%d-%m-%Y') as sales_date,tag.tag_code,
			b.bill_id as ret_bill_id,date_format(b.bill_date,'%d-%m-%Y') as ret_bill_date,
			c.name as category_name,IFNULL(p.hsn_code,'-') as hsn_code, met.metal as metalname,
				sum(ifnull((SELECT sum(bs.wt) as totwt FROM ret_billing_item_stones bs
                                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                                WHERE st.stone_type = 1
                                                AND bs.bill_det_id = r.ret_bill_det_id), 0)) as tot_dia_wt,b.bill_id as ret_bil_id
			FROM ret_bill_return_details r
			LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
			LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
			LEFT JOIN ret_billing bill ON bill.bill_id=r.ret_bill_id
			LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
			LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
            LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN metal as met ON met.id_metal = c.id_metal
			LEFT JOIN branch br on br.id_branch=b.id_branch
			WHERE b.bill_status=1 AND (tag.tag_status = 6 OR d.tag_id IS NULL) AND b.is_eda = 1
			and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
			".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
			".($data['billing_for']!=''  && $data['billing_for']>0 ? " and b.billing_for=".$data['billing_for']."" :'')."
			".($data['id_category'] != '' && $data['id_category'] >0 ? ' and p.cat_id ='.$data['id_category']: '')."
            ".($data['id_metal'] != '' && $data['id_metal'] >0 ? ' and c.id_metal ='.$data['id_metal']: '')."
			GROUP BY bill.bill_id");
			//b.bill_no as ret_bill_no,
			//print_r($this->db->last_query());exit;
			$result = $sql->result_array();
			foreach($result as $r){
                $r['sales_bill_no'] = $this->get_bill_no_format_detail($r['bill_id']);
                $r['ret_bill_no'] = $this->get_bill_no_format_detail($r['ret_bil_id'],7);
				$return_data[$r['category_name']][] = $r;
			}
		}
		else{
			$sql=$this->db->query("SELECT c.name category_name,IFNULL(sum(d.piece),0) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,
			sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(d.item_total_tax) as tax_amt,round(FLOOR(sum(d.item_cost)),2) as total_amount,IFNULL(met.metal,'')as metal_name,
			IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,IFNULL(sum(d.total_igst),0) as total_igst,br.name as branch_name,b.id_branch,
			tag.tag_status,bill.bill_id as sales_bill_id,bill.bill_no as sales_bill_no,date_format(bill.bill_date,'%d-%m-%Y') as sales_date,
			concat(br.short_name, '-SR-' , b.s_ret_refno) as voucherno, IFNULL(p.hsn_code,'-') as hsn_code, met.metal as metalname,
			sum(ifnull((SELECT sum(bs.wt) as totwt FROM ret_billing_item_stones bs
                                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                                WHERE st.stone_type = 1
                                                AND bs.bill_det_id = r.ret_bill_det_id), 0)) as tot_dia_wt
			FROM ret_bill_return_details r
			LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
			LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
			LEFT JOIN ret_billing bill ON bill.bill_id=r.ret_bill_id
			LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
			LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
			LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
			LEFT JOIN metal as met ON met.id_metal = c.id_metal
			LEFT JOIN branch br on br.id_branch=b.id_branch
			WHERE b.bill_status=1 AND (tag.tag_status = 6 OR d.tag_id IS NULL) AND b.is_eda = 1
			and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
			".($data['billing_for']!=''  && $data['billing_for']>0 ? " and b.billing_for=".$data['billing_for']."" :'')."
			".($data['id_category'] != '' && $data['id_category'] >0 ? ' and p.cat_id ='.$data['id_category']: '')."
            ".($data['id_metal'] != '' && $data['id_metal'] >0 ? ' and c.id_metal ='.$data['id_metal']: '')."
			".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )." GROUP BY c.id_ret_category");
			// print_r($this->db->last_query());exit;
			$result = $sql->result_array();
			foreach($result as $r){
				$return_data[$r['category_name']][] = $r;
			}
		}
		return $return_data;
    }
    function get_card_collection_report($data)
    {
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        $return_data = [];
        $sql=$this->db->query("SELECT b.bill_id,date_format(b.bill_date,'%d-%m-%Y') as bill_date,concat(c.firstname,' ',IFNULL(c.lastname,'')) as cus_name,
        p.payment_amount,p.card_no,
        if(p.card_type=1,'Rupay',if(p.card_type=2,'Visa',if(p.card_type=3,'Mastro','Master'))) as card_name,p.card_no,br.name as branch_name,
        ifnull(payment_ref_number,'') as approvalno,
        ifnull(paydev.device_name, 0) as device_name,'' as id_scheme_account, 'billing' as report_type
        FROM ret_billing b
        LEFT JOIN ret_billing_payment p ON p.bill_id=b.bill_id
        LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = p.id_pay_device
        LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        LEFT JOIN bank a ON a.id_bank=p.id_bank
        LEFT JOIN metal as met ON met.id_metal = b.metal_type
        WHERE b.bill_status=1 AND p.payment_mode in ('CC','DC') AND  b.is_eda=1 AND
        (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."");
        //print_r($this->db->last_query());exit;
        $res_data=$sql->result_array();
        foreach($res_data as $d){
            $d['bill_no'] = $this->get_bill_no_format_detail($d['bill_id']);
            $result[] = $d;
        }
        $advance_amount=$this->db->query("select r.bill_no,r.id_issue_receipt,c.firstname as cus_name,
        if(rp.card_type=1,'Rupay',if(rp.card_type=2,'Visa',if(rp.card_type=3,'Mastro','Master'))) as card_name,
        rp.payment_amount,rp.payment_mode,rp.card_no,br.name as branch_name,DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date ,
        ifnull(payment_ref_number,'') as approvalno, ifnull(paydev.device_name, 0) as device_name,'' as id_scheme_account,'issue_receipt' as report_type
        from  ret_issue_receipt r
        left join ret_issue_rcpt_payment rp on rp.id_issue_rcpt=r.id_issue_receipt
        LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = rp.id_pay_device
        LEFT JOIN customer c ON c.id_customer=r.id_customer
        LEFT JOIN branch br on br.id_branch=r.id_branch
        where r.bill_status=1 and r.type=2 and rp.payment_mode in ('CC','DC') and r.is_eda=1
        and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($branch!='' && $branch !='0' ? " and r.id_branch in (".$branch.") " :'' )."");
        // print_r($this->db->last_query());exit;
        $result1=$advance_amount->result_array();
        //Chit card collections
        $card_sql = $this->db->query("SELECT bp.id_payment as bill_id,bp.id_payment as bill_no,
                            pmd.payment_amount,
                            cus.firstname as cus_name,cus.mobile,
                            DATE_FORMAT(bp.date_payment,'%d-%m-%Y') as bill_date,
                            IFNULL(pmd.payment_ref_number,'-') approvalno,br.name as branch_name,
                            pmd.card_no, if(pmd.card_type=1,'Rupay',if(pmd.card_type=2,'Visa',if(pmd.card_type=3,'Mastro','Master'))) as card_name, ifnull(paydev.device_name, 0) as device_name,bp.id_scheme_account,'' as report_type
                            from payment_mode_details pmd
                            left join payment as bp ON bp.id_payment = pmd.id_payment
                            LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = bp.id_scheme_account
                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device AND paydev.device_type = 1
                            LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme
                            LEFT JOIN customer as cus ON cus.id_customer = scacc.id_customer
                            left join branch as br on br.id_branch = bp.id_branch
                            WHERE pmd.payment_mode in ('CC','DC') AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND ifnull(bp.id_payGateway,0) = 0
                            and date(bp.date_payment) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                          ".($branch!='' && $branch !='0' ? " and bp.id_branch in (".$branch.") " :'' )."");
        //print_r($this->db->last_query());exit;
        $card_result=$card_sql->result_array();
        if(empty($data['source_type'])){
            $final_result2=array_merge($result,$result1, $card_result);
       }else if($data['source_type'] == 1){
            $final_result2 = array_merge($result, $result1);
       }else if($data['source_type'] == 2){
            $final_result2 = $card_result;
       }
        return $final_result2;
    }
    //CHEQUE COLLECTION REPORT
    // function get_cheque_collection_report($data)
    // {
    //     $cheque_detail = array();
    //         $multiple_id_branch = implode(' , ', $data['id_branch']);
    //         if($multiple_id_branch != '')
    //         {
    //             $branch = $multiple_id_branch;
    //         }else{
    //             $branch = $data['id_branch'];
    //         }
    //         if($_POST['dt_range'] != ''){
    //         $dateRange = explode('-',$_POST['dt_range']);
    //         $from = str_replace('/','-',$dateRange[0]);
    //         $to = str_replace('/','-',$dateRange[1]);
    //         $d1 = date_create($from);
    //         $d2 = date_create($to);
    //         $FromDt = date_format($d1,"Y-m-d");
    //         $ToDt = date_format($d2,"Y-m-d");
    //         }
    //         $entry_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
    //         $return_data = [];
    //         $sql=$this->db->query("SELECT b.bill_id,if(p.type=1,'Receipt','Issue') as type,b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,concat(c.firstname,' ',IFNULL(c.lastname,'')) as cus_name,p.payment_amount,
    //         a.short_code as bank_code,p.cheque_no,br.name as branch_name,p.payment_mode,IFNULL(date_format(p.cheque_date,'%d-%m-%Y'),'') as cheque_date
    //         FROM ret_billing b
    //         LEFT JOIN ret_billing_payment p ON p.bill_id=b.bill_id
    //         LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
    //         LEFT JOIN branch br ON br.id_branch=b.id_branch
    //         LEFT JOIN bank a ON a.id_bank=p.id_bank
    //         WHERE b.bill_status=1 AND p.cheque_no is NOT null
	// 		and (date(b.bill_date) BETWEEN '". $FromDt."' AND '".$ToDt."')
    //         ".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )." ");
    //         $result=$sql->result_array();
	// 		// foreach($result as $r){
	// 		// 	$return_data[$r['bank_code']][] = $r;
	// 		// }
	// 		$chq_advance = $this->db->query("SELECT r.id_issue_receipt,r.bill_no,if(p.type=1,'Receipt','Issue') as type,date_format(r.bill_date,'%d-%m-%Y') as bill_date,concat(c.firstname,' ',IFNULL(c.lastname,'')) as cus_name,p.payment_amount,
	// 		IFNULL(a.short_code,'-') as bank_code,p.cheque_no,br.name as branch_name,p.payment_mode,IFNULL(date_format(p.cheque_date,'%d-%m-%Y'),'') as cheque_date
	// 		FROM ret_issue_receipt r
	// 		LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
	// 		LEFT JOIN customer c ON c.id_customer=r.id_customer
	// 		LEFT JOIN branch br ON br.id_branch=r.id_branch
	// 		LEFT JOIN bank a ON a.id_bank=p.id_bank
	// 		WHERE r.bill_status=1 AND p.cheque_no is NOT null
	// 		and (date(r.bill_date) BETWEEN '". $FromDt."' AND '".$ToDt."')
	// 		".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )." ");
    //         $result1=$chq_advance->result_array();
    //         $cheque_detail['AFTER DAY CLOSING']=array_merge($result,$result1);
    //          $cheque_detail['BEFORE DAY CLOSING']=array_merge($result,$result1);
    //         return $cheque_detail;
    //         // print_r($this->db->last_query());exit;
    // }
// //CHEQUE COLLECTION REPORT
    function get_cheque_collection_report($data)
    {
        $cheque_detail= array();
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
            }
            $entry_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
            $before_day_closing=$this->db->query("SELECT b.bill_id,if(p.type=1,'Receipt','Issue') as type,date_format(b.bill_date,'%d-%m-%Y') as bill_date,concat(c.firstname,' ',IFNULL(c.lastname,'')) as cus_name,p.payment_amount,
            a.short_code as bank_code,p.cheque_no,br.name as branch_name,p.payment_mode,IFNULL(date_format(p.cheque_date,'%d-%m-%Y'),'') as cheque_date
            FROM ret_billing b
            LEFT JOIN ret_billing_payment p ON p.bill_id=b.bill_id
            LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
            LEFT JOIN branch br ON br.id_branch=b.id_branch
            LEFT JOIN bank a ON a.id_bank=p.id_bank
            WHERE b.bill_status=1 AND p.cheque_no is NOT null and b.is_eda=1
            ".($FromDt!= '' ? ' and (date(b.created_time) BETWEEN "'.$entry_date.'" AND "'.$entry_date.'") and date(b.bill_date)="'.$FromDt.'"' : '')."
            ".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )." ");
            // print_r($this->db->last_query());exit;
        	$res_data = $before_day_closing->result_array();
            $result['before_day_closing'] = array();
            foreach ($res_data as $r) {
                $r['bill_no'] = $this->get_bill_no_format_detail($r['bill_id']);
                $result['before_day_closing'][] = $r;
            }
            $after_day_closing=$this->db->query("SELECT b.bill_id,if(p.type=1,'Receipt','Issue') as type,b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,concat(c.firstname,' ',IFNULL(c.lastname,'')) as cus_name,p.payment_amount,
            a.short_code as bank_code,p.cheque_no,br.name as branch_name,p.payment_mode,IFNULL(date_format(p.cheque_date,'%d-%m-%Y'),'') as cheque_date
            FROM ret_billing b
            LEFT JOIN ret_billing_payment p ON p.bill_id=b.bill_id
            LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
            LEFT JOIN branch br ON br.id_branch=b.id_branch
            LEFT JOIN bank a ON a.id_bank=p.id_bank
            WHERE b.bill_status=1 AND p.cheque_no is NOT null and b.is_eda=1
            ".($FromDt!= ''  ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$FromDt.'") and date(b.created_time)="'.$FromDt.'" ' : '')."
            ".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )." ");
                // print_r($this->db->last_query());exit;
                $data_res = $after_day_closing->result_array();
                $result['after_day_closing'] = array();
                foreach ($data_res as $r) {
                    $r['bill_no'] = $this->get_bill_no_format_detail($r['bill_id']);
                    $result['after_day_closing'][] = $r;
                }
			// foreach($result as $r){
			// 	$return_data[$r['bank_code']][] = $r;
			// }
			$before_day_closing_chq_advance = $this->db->query("SELECT r.id_issue_receipt,r.bill_no,if(p.type=1,'Receipt','Issue') as type,date_format(r.bill_date,'%d-%m-%Y') as bill_date,concat(c.firstname,' ',IFNULL(c.lastname,'')) as cus_name,p.payment_amount,
			IFNULL(a.short_code,'-') as bank_code,p.cheque_no,br.name as branch_name,p.payment_mode,IFNULL(date_format(p.cheque_date,'%d-%m-%Y'),'') as cheque_date
			FROM ret_issue_receipt r
			LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
			LEFT JOIN customer c ON c.id_customer=r.id_customer
			LEFT JOIN branch br ON br.id_branch=r.id_branch
			LEFT JOIN bank a ON a.id_bank=p.id_bank
			WHERE r.bill_status=1 AND p.cheque_no is NOT null and r.is_eda=1
            ".($FromDt!= ''  ? ' and (date(r.created_on) BETWEEN "'.$entry_date.'" AND "'.$entry_date.'") and date(r.bill_date)="'.$FromDt.'"' : '')."
            ".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )." ");
            //  print_r($this->db->last_query());exit;
			$result1['chq_before_day_closing']=$before_day_closing_chq_advance->result_array();
            $after_day_closing_chq_advance = $this->db->query("SELECT r.id_issue_receipt,r.bill_no,if(p.type=1,'Receipt','Issue') as type,date_format(r.bill_date,'%d-%m-%Y') as bill_date,concat(c.firstname,' ',IFNULL(c.lastname,'')) as cus_name,p.payment_amount,
			IFNULL(a.short_code,'-') as bank_code,p.cheque_no,br.name as branch_name,p.payment_mode,IFNULL(date_format(p.cheque_date,'%d-%m-%Y'),'') as cheque_date
			FROM ret_issue_receipt r
			LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
			LEFT JOIN customer c ON c.id_customer=r.id_customer
			LEFT JOIN branch br ON br.id_branch=r.id_branch
			LEFT JOIN bank a ON a.id_bank=p.id_bank
			WHERE r.bill_status=1 AND p.cheque_no is NOT null and r.is_eda=1
			".($FromDt!= '' ? ' and (date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$FromDt.'") and date(r.created_on)="'.$FromDt.'"' : '')."
			".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )." ");
            // print_r($this->db->last_query());exit;
			$result1['chq_after_day_closing']=$after_day_closing_chq_advance->result_array();
			// $return_data=array_merge($result,$result1);
            // // print_r($this->db->last_query());exit;
			// return $return_data;
            $cheque_detail['AFTER DAY CLOSING']=array_merge($result['before_day_closing'],$result1['chq_before_day_closing']);
            $cheque_detail['BEFORE DAY CLOSING']=array_merge($result['after_day_closing'],$result1['chq_after_day_closing']);
            return $cheque_detail;
    }
    // function getNetbankingCollectionReport($from_date,$to_date,$id_branch,$nb_type,$nb_sorce ="")
	// {
	//     $multiple_id_branch = implode(' , ', $id_branch);
	// 	if($multiple_id_branch != '')
	// 	{
	// 		$branch = $multiple_id_branch;
	// 	}else{
	// 		$branch = $id_branch;
	// 	}
	// 	$sql=$this->db->query("SELECT ba.bank_name,IF(p.type=1,'Receipt','Issue') as payment_type,IF(NB_type=1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
    //                 		p.bill_id,b.bill_no,payment_mode,payment_amount,
    //                 		c.firstname,c.mobile,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
    //                 		IFNULL(p.payment_ref_number,'-') payment_ref_number,br.name,
    //                 		IFNULL(DATE_FORMAT(p.net_banking_date,'%d-%m-%Y'),'-') as payment_date
    //                 		from ret_billing_payment p
    //                 		left join ret_billing b on b.bill_id=p.bill_id
    //                 		left join customer c on c.id_customer=b.bill_cus_id
    //                 		left join branch as br on br.id_branch=b.id_branch
    //                 		LEFT JOIN bank ba ON ba.id_bank=p.id_bank
    //                 		WHERE payment_mode = 'NB' AND b.bill_status = 1
    //                 		and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
    //                 		".($nb_type !='' && $nb_type>0 ? " and p.NB_type = ".$nb_type." " :'' )."
    //                 		".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."");
	// 	// print_r($this->db->last_query());exit;
	// 	$result = $sql->result_array();
	// 	$advance_nb = $this->db->query("SELECT ba.bank_name,IF(rp.type=1,'Receipt','Issue') payment_type,IF(NB_type=1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
	// 	                    c.mobile,r.bill_no,r.id_issue_receipt,c.firstname,IFNULL(rp.payment_ref_number,'-') payment_ref_number,
	// 	                    rp.payment_amount,rp.payment_mode,rp.card_no,br.name,
    //         		        IFNULL(DATE_FORMAT(rp.net_banking_date,'%d-%m-%Y'),'-') as payment_date,DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date
    //         		        from  ret_issue_receipt r
    //         				left join ret_issue_rcpt_payment rp on rp.id_issue_rcpt=r.id_issue_receipt
    //         				LEFT JOIN customer c ON c.id_customer=r.id_customer
    //         				LEFT JOIN branch br on br.id_branch=r.id_branch
    //         				LEFT JOIN bank ba ON ba.id_bank=rp.id_bank
    //         				where r.bill_status = 1 and r.type=2 and rp.payment_mode = 'NB'
    //         				and date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
    //         				".($nb_type!='' && $nb_type>0 ? " and rp.NB_type = ".$nb_type." " :'' )."
    //         				".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )."
    //         				HAVING payment_amount > 0");
	// 			// print_r($this->db->last_query());exit;
	// 	$result1 = $advance_nb->result_array();
	// 	//Get offline chit payment details
	// 	$chit_nb_sql = $this->db->query("SELECT ba.bank_name,'Chit Receipt' as payment_type,IF(NB_type = 1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
    //                                     bp.id_payment as bill_id,bp.id_payment as bill_no,
    //                                     pmd.payment_mode,pmd.payment_amount,
    //                                     cus.firstname,cus.mobile,
    //                                     DATE_FORMAT(bp.date_payment,'%d-%m-%Y') as bill_date,
    //                                     IFNULL(pmd.payment_ref_number,'-') payment_ref_number,br.name,
    //                                     IFNULL(DATE_FORMAT(pmd.net_banking_date,'%d-%m-%Y'),'-') as payment_date
    //                                     from payment_mode_details pmd
    //                                     left join payment as bp ON bp.id_payment = pmd.id_payment
    //                                     LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = bp.id_scheme_account
    //                                     LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme
    //                                     LEFT JOIN customer as cus ON cus.id_customer = scacc.id_customer
    //                                     left join branch as br on br.id_branch = bp.id_branch
    //                                     LEFT JOIN bank ba ON ba.id_bank = pmd.id_bank
    //                                     WHERE pmd.payment_mode = 'NB' AND bp.payment_status = 1 AND pmd.payment_status =1 AND bp.receipt_no IS NOT NULL AND ifnull(bp.id_payGateway,0) = 0
    //                             		and date(bp.date_payment) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
    //                             		".($nb_type !='' && $nb_type>0 ? " and pmd.NB_type = ".$nb_type." " :'' )."
    //                             		".($branch!='' && $branch !='0' ? " and bp.id_branch in (".$branch.") " :'' )."");
	// 	//print_r($this->db->last_query());exit;
	// 	if(empty($nb_sorce)){
	// 	    $final_result2 = array_merge($result, $result1, $chit_nb_sql->result_array());
	// 	}else if($nb_sorce == 1){
	// 	     $final_result2 = array_merge($result, $result1);
	// 	}else if($nb_sorce == 2){
	// 	     $final_result2 = $chit_nb_sql->result_array();
	// 	}
	// 	foreach($final_result2 as $nb){
	// 		$return_data[$nb['bank_name']][] = $nb;
	// 	}
	// 	return $return_data;
	// }
    function getNetbankingCollectionReport_15_02_2024($dt_range,$id_branch,$nb_type,$nb_sorce ="")
	{
         $net_details = array();
         if($dt_range != ''){
            $dateRange = explode('-',$dt_range);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
		$entry_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
	    $multiple_id_branch = implode(' , ', $id_branch);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $id_branch;
		}
		$before_day_closing=$this->db->query("SELECT ba.bank_name,IF(p.type=1,'Receipt','Issue') as payment_type,IF(NB_type=1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
                    		p.bill_id,b.bill_no,payment_mode,payment_amount,
                    		c.firstname,c.mobile,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
                    		IFNULL(p.payment_ref_number,'-') payment_ref_number,br.name,
                    		IFNULL(DATE_FORMAT(p.net_banking_date,'%d-%m-%Y'),'-') as payment_date
                    		from ret_billing_payment p
                    		left join ret_billing b on b.bill_id=p.bill_id
                    		left join customer c on c.id_customer=b.bill_cus_id
                    		left join branch as br on br.id_branch=b.id_branch
                    		LEFT JOIN bank ba ON ba.id_bank=p.id_bank
                    		WHERE payment_mode = 'NB' AND b.bill_status = 1
                            ".($FromDt!= '' ? ' and (date(b.created_time) BETWEEN "'.$entry_date.'" AND "'.$entry_date.'") and date(b.bill_date)="'.$FromDt.'"' : '')."
                    		".($nb_type !='' && $nb_type>0 ? " and p.NB_type = ".$nb_type." " :'' )."
                    		".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."");
		// print_r($this->db->last_query());exit;
		$result['before_day_closing'] = $before_day_closing->result_array();
        $after_day_closing=$this->db->query("SELECT ba.bank_name,IF(p.type=1,'Receipt','Issue') as payment_type,IF(NB_type=1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
        p.bill_id,b.bill_no,payment_mode,payment_amount,
        c.firstname,c.mobile,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
        IFNULL(p.payment_ref_number,'-') payment_ref_number,br.name,
        IFNULL(DATE_FORMAT(p.net_banking_date,'%d-%m-%Y'),'-') as payment_date
        from ret_billing_payment p
        left join ret_billing b on b.bill_id=p.bill_id
        left join customer c on c.id_customer=b.bill_cus_id
        left join branch as br on br.id_branch=b.id_branch
        LEFT JOIN bank ba ON ba.id_bank=p.id_bank
        WHERE payment_mode = 'NB' AND b.bill_status = 1
        ".($FromDt!= ''  ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$FromDt.'") and date(b.created_time)="'.$FromDt.'" ' : '')."
        ".($nb_type !='' && $nb_type>0 ? " and p.NB_type = ".$nb_type." " :'' )."
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."");
        // print_r($this->db->last_query());exit;
        $result['after_day_closing'] = $after_day_closing->result_array();
		$before_day_closing_advance_nb = $this->db->query("SELECT ba.bank_name,IF(rp.type=1,'Receipt','Issue') payment_type,IF(NB_type=1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
		                    c.mobile,r.bill_no,r.id_issue_receipt,c.firstname,IFNULL(rp.payment_ref_number,'-') payment_ref_number,
		                    rp.payment_amount,rp.payment_mode,rp.card_no,br.name,
            		        IFNULL(DATE_FORMAT(rp.net_banking_date,'%d-%m-%Y'),'-') as payment_date,DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date
            		        from  ret_issue_receipt r
            				left join ret_issue_rcpt_payment rp on rp.id_issue_rcpt=r.id_issue_receipt
            				LEFT JOIN customer c ON c.id_customer=r.id_customer
            				LEFT JOIN branch br on br.id_branch=r.id_branch
            				LEFT JOIN bank ba ON ba.id_bank=rp.id_bank
            				where r.bill_status = 1 and r.type=2 and rp.payment_mode = 'NB'
                            ".($FromDt!= ''  ? ' and (date(r.created_on) BETWEEN "'.$entry_date.'" AND "'.$entry_date.'") and date(r.bill_date)="'.$FromDt.'"' : '')."
            				".($nb_type!='' && $nb_type>0 ? " and rp.NB_type = ".$nb_type." " :'' )."
            				".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )."
            				HAVING payment_amount > 0");
				// print_r($this->db->last_query());exit;
		$result1['advance_before_day_closing']= $before_day_closing_advance_nb->result_array();
        $after_day_closing_advance_nb = $this->db->query("SELECT ba.bank_name,IF(rp.type=1,'Receipt','Issue') payment_type,IF(NB_type=1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
        c.mobile,r.bill_no,r.id_issue_receipt,c.firstname,IFNULL(rp.payment_ref_number,'-') payment_ref_number,
        rp.payment_amount,rp.payment_mode,rp.card_no,br.name,
        IFNULL(DATE_FORMAT(rp.net_banking_date,'%d-%m-%Y'),'-') as payment_date,DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date
        from  ret_issue_receipt r
        left join ret_issue_rcpt_payment rp on rp.id_issue_rcpt=r.id_issue_receipt
        LEFT JOIN customer c ON c.id_customer=r.id_customer
        LEFT JOIN branch br on br.id_branch=r.id_branch
        LEFT JOIN bank ba ON ba.id_bank=rp.id_bank
        where r.bill_status = 1 and r.type=2 and rp.payment_mode = 'NB'
        ".($FromDt!= '' ? ' and (date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$FromDt.'") and date(r.created_on)="'.$FromDt.'"' : '')."
        ".($nb_type!='' && $nb_type>0 ? " and rp.NB_type = ".$nb_type." " :'' )."
        ".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )."
        HAVING payment_amount > 0");
    // print_r($this->db->last_query());exit;
        $result1['advance_after_day_closing']= $after_day_closing_advance_nb->result_array();
        //Get offline chit payment details
        $before_day_closing_chit_nb_sql = $this->db->query("SELECT ba.bank_name,'Chit Receipt' as payment_type,IF(NB_type = 1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
                                        bp.id_payment as bill_id,bp.id_payment as bill_no,
                                        pmd.payment_mode,pmd.payment_amount,
                                        cus.firstname,cus.mobile,
                                        DATE_FORMAT(bp.date_payment,'%d-%m-%Y') as bill_date,
                                        IFNULL(pmd.payment_ref_number,'-') payment_ref_number,br.name,
                                        IFNULL(DATE_FORMAT(pmd.net_banking_date,'%d-%m-%Y'),'-') as payment_date
                                        from payment_mode_details pmd
                                        left join payment as bp ON bp.id_payment = pmd.id_payment
                                        LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = bp.id_scheme_account
                                        LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme
                                        LEFT JOIN customer as cus ON cus.id_customer = scacc.id_customer
                                        left join branch as br on br.id_branch = bp.id_branch
                                        LEFT JOIN bank ba ON ba.id_bank = pmd.id_bank
                                        WHERE pmd.payment_mode = 'NB' AND bp.payment_status = 1 AND pmd.payment_status =1 AND bp.receipt_no IS NOT NULL AND ifnull(bp.id_payGateway,0) = 0
                                        ".($FromDt!= ''  ? ' and (date(bp.entry_date) BETWEEN "'.$entry_date.'" AND "'.$entry_date.'") and date(bp.date_payment)="'.$FromDt.'"' : '')."
                                		".($nb_type !='' && $nb_type>0 ? " and pmd.NB_type = ".$nb_type." " :'' )."
                                		".($branch!='' && $branch !='0' ? " and bp.id_branch in (".$branch.") " :'' )."");
		//print_r($this->db->last_query());exit;
        $chit_nb_sql['chit_before_day_closing']= $before_day_closing_chit_nb_sql->result_array();
        $after_day_closing_chit_nb_sql = $this->db->query("SELECT ba.bank_name,'Chit Receipt' as payment_type,IF(NB_type = 1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
        bp.id_payment as bill_id,bp.id_payment as bill_no,
        pmd.payment_mode,pmd.payment_amount,
        cus.firstname,cus.mobile,
        DATE_FORMAT(bp.date_payment,'%d-%m-%Y') as bill_date,
        IFNULL(pmd.payment_ref_number,'-') payment_ref_number,br.name,
        IFNULL(DATE_FORMAT(pmd.net_banking_date,'%d-%m-%Y'),'-') as payment_date
        from payment_mode_details pmd
        left join payment as bp ON bp.id_payment = pmd.id_payment
        LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = bp.id_scheme_account
        LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme
        LEFT JOIN customer as cus ON cus.id_customer = scacc.id_customer
        left join branch as br on br.id_branch = bp.id_branch
        LEFT JOIN bank ba ON ba.id_bank = pmd.id_bank
        WHERE pmd.payment_mode = 'NB' AND bp.payment_status = 1 AND pmd.payment_status =1 AND bp.receipt_no IS NOT NULL AND ifnull(bp.id_payGateway,0) = 0
        ".($FromDt!= '' ? ' and (date(bp.date_payment) BETWEEN "'.$FromDt.'" AND "'.$FromDt.'") and date(bp.entry_date)="'.$FromDt.'"' : '')."
        ".($nb_type !='' && $nb_type>0 ? " and pmd.NB_type = ".$nb_type." " :'' )."
        ".($branch!='' && $branch !='0' ? " and bp.id_branch in (".$branch.") " :'' )."");
           //print_r($this->db->last_query());exit;
        $chit_nb_sql['chit_after_day_closing']= $after_day_closing_chit_nb_sql->result_array();
        if (empty($nb_sorce)) {
            $final_result1 = array_merge($result['before_day_closing'], $result1['advance_before_day_closing'], $chit_nb_sql['chit_before_day_closing']);
            $final_result2 = array_merge($result['after_day_closing'], $result1['advance_after_day_closing'], $chit_nb_sql['chit_after_day_closing']);
        } elseif ($nb_sorce == 1) {
            $final_result1 = array_merge($result['before_day_closing'], $result1['advance_before_day_closing']);
            $final_result2 = array_merge($result['after_day_closing'], $result1['advance_after_day_closing']);
        } elseif ($nb_sorce == 2) {
            $final_result1 = $chit_nb_sql['chit_before_day_closing'];
            $final_result2 = $chit_nb_sql['chit_after_day_closing'];
        }
        $return_data['AFTER DAY CLOSING'] = $final_result1;
        $return_data['BEFORE DAY CLOSING'] = $final_result2;
        return $return_data;
	}
    function getNetbankingCollectionReport($from_date,$to_date,$id_branch,$nb_type,$nb_sorce ="",$id_bank,$id_device)
	{
	    $multiple_id_branch = implode(' , ', $id_branch);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $id_branch;
		}
		$sql=$this->db->query("SELECT IF(p.type=1,'Receipt','Issue') as payment_type,IF(NB_type=1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
                    		p.bill_id,payment_mode,payment_amount,
                    		c.firstname,c.mobile,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,
                    		IFNULL(p.payment_ref_number,'-') payment_ref_number,br.name,
                    		IFNULL(DATE_FORMAT(p.net_banking_date,'%d-%m-%Y'),'-') as payment_date ,
                            IFNULL(ba.bank_name,'')as bank_name,IFNULL(pd.device_name,'')as device_name
                    		from ret_billing_payment p
                    		left join ret_billing b on b.bill_id=p.bill_id
                            LEFT JOIN ret_bill_pay_device pd on pd.id_device=p.id_pay_device
                    		left join customer c on c.id_customer=b.bill_cus_id
                    		left join branch as br on br.id_branch=b.id_branch
                    		LEFT JOIN bank ba ON ba.id_bank=p.id_bank
                    		WHERE payment_mode = 'NB' AND b.bill_status = 1 and b.is_eda=1
                    		and date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                    		".($nb_type !='' && $nb_type>0 ? " and p.NB_type = ".$nb_type." " :'' )."
                    		".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
                            ".($id_bank!= '' && $id_bank >0 ? " and p.id_bank =".$id_bank." ": '')."
                            ".($id_device!= '' && $id_device >0 ? " and p.id_pay_device = ".$id_device."": '')."
                            ");
                //   print_r($this->db->last_query());exit;
		$res_data = $sql->result_array();
        foreach($res_data as $r){
            $r['bill_no'] = $this->get_bill_no_format_detail($r['bill_id']);
            $result[] = $r;
        }
		$advance_nb = $this->db->query("SELECT IF(rp.type=1,'Receipt','Issue') payment_type,
                            IF(NB_type=1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
		                    c.mobile,r.bill_no,r.id_issue_receipt,c.firstname,
                            IFNULL(rp.payment_ref_number,'-') payment_ref_number,
		                    rp.payment_amount,rp.payment_mode,rp.card_no,br.name,
            		        IFNULL(DATE_FORMAT(rp.net_banking_date,'%d-%m-%Y'),'-') as payment_date,
                            DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date,
                            IFNULL(ba.bank_name,'')as bank_name,IFNULL(pd.device_name,'')as device_name
            		        from  ret_issue_receipt r
            				left join ret_issue_rcpt_payment rp on rp.id_issue_rcpt=r.id_issue_receipt
                            LEFT JOIN ret_bill_pay_device pd on pd.id_device=rp.id_pay_device
            				LEFT JOIN customer c ON c.id_customer=r.id_customer
            				LEFT JOIN branch br on br.id_branch=r.id_branch
            				LEFT JOIN bank ba ON ba.id_bank=rp.id_bank
            				where r.bill_status = 1 and r.type=2 and rp.payment_mode = 'NB' AND r.is_eda=1
            				and date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
            				".($nb_type!='' && $nb_type>0 ? " and rp.NB_type = ".$nb_type." " :'' )."
            				".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )."
                            ".($id_bank!= '' && $id_bank >0 ? " and rp.id_bank =".$id_bank." ": '')."
                            ".($id_device!= '' && $id_device >0 ? " and rp.id_pay_device = ".$id_device."": '')."
                             HAVING payment_amount > 0");
				// print_r($this->db->last_query());exit;
		$result1 = $advance_nb->result_array();
		//Get offline chit payment details
		$chit_nb_sql = $this->db->query("SELECT ba.bank_name,'Chit Receipt' as payment_type,IF(NB_type = 1,'RTGS',if(nb_type=2,'IMPS','UPI')) as nb_type,
                                        bp.id_payment as bill_id,bp.id_payment as bill_no,
                                        pmd.payment_mode,pmd.payment_amount,
                                        cus.firstname,cus.mobile,
                                        DATE_FORMAT(bp.date_payment,'%d-%m-%Y') as bill_date,
                                        IFNULL(pmd.payment_ref_number,'-') payment_ref_number,br.name,
                                        IFNULL(DATE_FORMAT(pmd.net_banking_date,'%d-%m-%Y'),'-') as payment_date,
                                        IFNULL(ba.bank_name,'')as bank_name,IFNULL(pd.device_name,'') as device_name
                                        from payment_mode_details pmd
                                        left join payment as bp ON bp.id_payment = pmd.id_payment
                                        LEFT JOIN ret_bill_pay_device pd on pd.id_device=pmd.id_pay_device
                                        LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = bp.id_scheme_account
                                        LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme
                                        LEFT JOIN customer as cus ON cus.id_customer = scacc.id_customer
                                        left join branch as br on br.id_branch = bp.id_branch
                                        LEFT JOIN bank ba ON ba.id_bank = pmd.id_bank
                                        WHERE pmd.payment_mode = 'NB' AND pmd.payment_status = 1 AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND ifnull(bp.id_payGateway,0) = 0
                                		and date(bp.date_payment) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."'
                                		".($nb_type !='' && $nb_type>0 ? " and pmd.NB_type = ".$nb_type." " :'' )."
                                		".($branch!='' && $branch !='0' ? " and bp.id_branch in (".$branch.") " :'' )."
                                        ".($id_bank!= '' && $id_bank >0 ? " and pmd.id_bank =".$id_bank." ": '')."
                                        ".($id_device!= '' && $id_device >0 ? " and pmd.id_pay_device = ".$id_device."": '')."
                                        ");
		// print_r($this->db->last_query());exit;
		if(empty($nb_sorce)){
		    $final_result2 = array_merge($result, $result1, $chit_nb_sql->result_array());
		}else if($nb_sorce == 1){
		     $final_result2 = array_merge($result, $result1);
		}else if($nb_sorce == 2){
		     $final_result2 = $chit_nb_sql->result_array();
		}
		foreach($final_result2 as $nb){
			$return_data[$nb['bank_name']][] = $nb;
		}
		return $return_data;
	}
    function get_advance_receipt_report($data)
    {
    $multiple_id_branch = implode(' , ', $data['id_branch']);
    if($multiple_id_branch != '')
    {
    $branch = $multiple_id_branch;
    }else{
    $branch = $data['id_branch'];
    }
    $sql_orer_adjusted= $this->db->query("SELECT b.bill_no,b.bill_id,c.mobile,c.firstname,adv.advance_amount advance_adj,br.name,date_format(b.bill_date,'%d-%m-%Y') bill_date FROM ret_billing b
    LEFT JOIN ret_billing_advance adv ON adv.adjusted_bill_id=b.bill_id
    LEFT JOIN customer c ON c.id_customer=b.bill_cus_id
    LEFT JOIN branch br ON br.id_branch=b.id_branch
    WHERE b.bill_status=1 AND b.bill_type=9 and b.is_eda=1
    and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
    ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )." ");
    $sql=$this->db->query("select IFNULL(sum(au.utilized_amt),0) advance_adj,b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') bill_date,c.firstname ,c.mobile,br.name
    from ret_billing as b
    left join ret_advance_utilized au on au.bill_id=b.bill_id
    LEFT join customer c ON c.id_customer=b.bill_cus_id
    LEFT JOIN branch br on br.id_branch=b.id_branch
    where b.bill_status=1 and b.bill_id is not null and b.is_eda=1
    and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
    ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
    and au.utilized_amt is not null GROUP by b.bill_id");
    $first_array = $sql->result_array();
    $second_array = $sql_orer_adjusted->result_array();
    $final_array1 = array_merge($first_array,$second_array);
    $dataset['advance_utilized'] = $final_array1;
    $sql_order=$this->db->query("SELECT bill.bill_no,bill.bill_id ,date_format(bill.bill_date,'%d-%m-%Y') bill_date,c.firstname,c.mobile,b.name,bill.tot_amt_received amount FROM `ret_billing` bill
    LEFT JOIN customer c on c.id_customer=bill.bill_cus_id
    LEFT JOIN branch b on b.id_branch=bill.id_branch
    WHERE bill.bill_type=5 AND bill.bill_status=1 and bill.is_eda=1
    and (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
    ".($branch!='' && $branch !='0' ? " and bill.id_branch in (".$branch.") " :'' )." ");
    $sql_issued=$this->db->query("SELECT r.amount,(r.weight*r.rate_per_gram) as weight_amt,DATE_FORMAT(r.bill_date,'%d-%m-%Y') bill_date,r.bill_no,r.id_issue_receipt,c.firstname,c.mobile,b.name
    FROM ret_issue_receipt r
    LEFT JOIN customer c on c.id_customer=r.id_customer
    LEFT JOIN branch b on b.id_branch=r.id_branch
    WHERE r.type=2 and r.bill_status=1 and r.is_eda=1
    and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
    ".($branch!='' && $branch !='0' ? " and r.id_branch in (".$branch.") " :'' )." ");
    //    print_r($this->db->last_query());exit;
    $first_array = $sql_issued->result_array();
    $second_array = $sql_order->result_array();
    $final_array = array_merge($first_array,$second_array);
    $dataset['advance_receipt'] = $final_array;
    $order_bill_refund=$this->db->query("SELECT bill.bill_no,bill.bill_id ,date_format(bill.bill_date,'%d-%m-%Y') bill_date,c.firstname,c.mobile,b.name,ad.received_amount amount FROM `ret_billing` bill
    LEFT JOIN ret_billing_advance ad ON ad.adjusted_bill_id=bill.bill_id
    LEFT JOIN customer c on c.id_customer=bill.bill_cus_id
    LEFT JOIN branch b on b.id_branch=bill.id_branch
    WHERE bill.bill_type=12 AND bill.bill_status=1 AND ad.is_adavnce_adjusted=2 and bill.is_eda=1
    and (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
    ".($branch!='' && $branch !='0' ? " and bill.id_branch in (".$branch.") " :'' )." ");
    $receipt_refund=$this->db->query("SELECT sum(iss.refund_amount) as amount,
    DATE_FORMAT(r.bill_date,'%d-%m-%Y') bill_date,r.bill_no,r.id_issue_receipt,c.firstname,c.mobile,b.name
    FROM ret_issue_receipt r
    LEFT JOIN ret_advance_refund iss ON iss.id_issue_receipt=r.id_issue_receipt
    LEFT JOIN customer c on c.id_customer=r.id_customer
    LEFT JOIN branch b on b.id_branch=r.id_branch
    WHERE r.type=2 and r.bill_status=1 AND r.is_refunded=1 AND iss.id_issue_receipt is not null and r.is_eda=1
    and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
    ".($branch!='' && $branch !='0' ? " and r.id_branch in (".$branch.") " :'' )." GROUP by r.id_issue_receipt");
    $first_array = $order_bill_refund->result_array();
    $second_array = $receipt_refund->result_array();
    $final_array2 = array_merge($first_array,$second_array);
    $dataset['advance_refund'] = $final_array2;
    return $dataset;
    }
     function stock_details_categorywise($data)
    {
        if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
            $id_branch = $data['id_branch'];
            $day_closing=$this->getBranchDayClosingData($id_branch);
            $date=($day_closing['is_day_closed']==1 ? $day_closing['entry_date']:date("Y-m-d"));
			//echo "<pre>"; print_r($day_closing);
			//print_r($date);
			//exit;
                // Previous Date
            if(($FromDt!=$date) && ($ToDt!=$date))
        {
            $op_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
            $sql = $this->db->query("SELECT b.name as branch_name,p.product_name,c.id_ret_category,
            IFNULL(blc.piece,0) as op_blc_pcs,IFNULL(blc.gross_wt,0) as op_blc_gwt,IFNULL(blc.net_wt,0) as op_blc_nwt,sum(s.inw_pcs) as inw_pcs,sum(s.inw_gwt) as inw_gwt,sum(s.inw_nwt) as inw_nwt,
            sum(s.sold_pcs) as sold_pcs,sum(s.sold_gwt) as sold_gwt,sum(s.sold_nwt) as sold_nwt,
            Date_Format(s.date,'%d-%m-%Y') as date_add,sum(s.br_out_pcs) as br_out_pcs,
                            sum(s.br_out_gwt) as br_out_gwt, IFNULL((blc.piece),0) + IFNULL(sum(s.inw_pcs),0) - IFNULL(sum(s.sold_pcs),0) - IFNULL(sum(s.br_out_pcs),0) as closing_pcs, IFNULL(blc.gross_wt,0) + IFNULL(sum(s.inw_gwt),0) - IFNULL(sum(s.sold_gwt),0) - IFNULL(sum(s.br_out_gwt),0) as closing_gwt,'0' as in_trans_gwt,'0' as in_trans_pcs, IFNULL((blc.piece),0) + IFNULL(sum(s.inw_pcs),0) - IFNULL(sum(s.sold_pcs),0) - IFNULL(sum(s.br_out_pcs),0) as closing_stock,
            c.name as category_name,m.metal as metal_name
            From ret_stock_balance s
            LEFT JOIN ret_product_master p on p.pro_id=s.id_product
            left join ret_category c on c.id_ret_category=p.cat_id
            left join metal m on m.id_metal=c.id_metal
            lEFT JOIN branch b on b.id_branch=s.id_branch
                            LEFT JOIN (SELECT s.id_product as product_id,c.id_ret_category,sum(s.closing_gwt) as gross_wt,sum(s.closing_nwt) as net_wt,sum(s.closing_pcs) as piece,s.date
                            FROM ret_stock_balance s
                            LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE s.id_product is NOT null AND date(s.date)='$op_date' and s.type=1
                            ".($id_branch!='' ? " and s.id_branch=".$id_branch."" :'')."
            GROUP by c.id_ret_category) blc on blc.id_ret_category=c.id_ret_category
            where date(s.date) BETWEEN '$FromDt' AND '$ToDt'
                ".($data['id_branch']!='' ? " and s.id_branch=".$data['id_branch']."" :'')." and s.type=1
                and p.pro_id is not null and c.id_ret_category is not null GROUP by c.id_ret_category");
            $return_data=$sql->result_array();
			//print_r($this->db->last_query());exit;
			foreach($return_data as $value)
		{
			$dataset[] = array(
			'product_name' => $value['product_name'],
			'branch_name' => $value['branch_name'],
			'category_name' => $value['category_name'],
			'op_blc_gwt' => $value['op_blc_gwt'],
			'op_blc_nwt' => $value['op_blc_nwt'],
			'op_blc_pcs' => $value['op_blc_pcs'],
			'inw_gwt' => $value['inw_gwt'],
			'inw_nwt' => $value['inw_nwt'],
			'inw_pcs' => $value['inw_pcs'],
			'sold_gwt' => $value['sold_gwt'],
			'sold_nwt' => $value['sold_nwt'],
			'sold_pcs' => $value['sold_pcs'],
			'br_out_gwt' => $value['br_out_gwt'],
			'br_out_pcs' => $value['br_out_pcs'],
			'in_trans_gwt' => $value['in_trans_gwt'],
			'in_trans_pcs' => $value['in_trans_pcs'],
			'closing_pcs' => $value['closing_pcs'],
			'closing_gwt' => $value['closing_gwt'],
			'closing_stock' => $value['closing_stock'],
			'date_add' => $value['date_add'],
			'metal_name' => $value['metal_name'],
			'sub_product_details'  => $this->get_sub_products_details_previous_date($value['id_ret_category'],$op_date,$FromDt,$ToDt,$data['id_branch'])
			);
		}
		//echo 'pre';
		//print_r($dataset);
		//exit;
    	return $dataset;
            //echo"<pre>"; print_r($return_data);exit;
                   // return $return_data;
        }
        else{
            $id_branch = $data['id_branch'];
            $op_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
              $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,c.id_ret_category,
                    IFNULL(blc.gross_wt,0) as op_blc_gwt,IFNULL(blc.net_wt,0) as op_blc_nwt,IFNULL(blc.piece,0) as op_blc_pcs,
                    IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
                    IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
                    IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
                    IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,IFNULL(blc.piece,0) + IFNULL(INW.piece,0) - IFNULL(s.piece,0) - IFNULL(br_out.piece,0) as closing_pcs,
                            IFNULL(blc.gross_wt,0) + IFNULL(INW.gross_wt,0) - IFNULL(s.gross_wt,0) - IFNULL(br_out.gross_wt,0) as closing_gwt,
                            IFNULL(blc.piece,0) + IFNULL(INW.piece,0) - IFNULL(s.piece,0) - IFNULL(br_out.piece,0) - IFNULL(in_trans.piece,0) as closing_stock,
                    Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name
                    FROM ret_taging t
                    LEFT JOIN ret_product_master p on p.pro_id=t.product_id
                    LEFT JOIN branch b on b.id_branch=t.current_branch
                    left join ret_category c on c.id_ret_category=p.cat_id
                    left join metal m on m.id_metal=c.id_metal
                    LEFT JOIN (SELECT s.id_product as product_id,c.id_ret_category,sum(s.closing_gwt) as gross_wt,sum(s.closing_nwt) as net_wt,sum(s.closing_pcs) as piece,s.date
                            FROM ret_stock_balance s
                            LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
            left join ret_category c on c.id_ret_category=p.cat_id
                            WHERE s.id_product is NOT null AND date(s.date)='$op_date'
                            ".($id_branch!='' ? " and s.id_branch=".$id_branch."" :'')." and s.type=1
                            GROUP by c.id_ret_category) blc on blc.id_ret_category=c.id_ret_category
                    LEFT JOIN (SELECT tag.tag_id,c.id_ret_category,tag.product_id,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                            FROM ret_taging tag
                            LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and
							l.status=0
							".($id_branch!='' ? " and l.to_branch=".$id_branch."" :'')."
							LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
                            left join ret_category c on c.id_ret_category=prod.cat_id
                            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') And l.status=0
                             and l.to_branch=2
                             GROUP by c.id_ret_category) INW on INW.id_ret_category=c.id_ret_category
                    LEFT JOIN (SELECT b.tag_id,c.id_ret_category,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,b.product_id
                    FROM ret_taging tag
                    LEFT JOIN ret_bill_details b on b.tag_id=tag.tag_id
                    lEFT JOIN ret_billing bill on bill.bill_id=b.bill_id
                    LEFT JOIN ret_product_master prod on prod.pro_id=b.product_id
            left join ret_category c on c.id_ret_category=prod.cat_id
                    WHERE  bill.bill_status=1 and date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND b.product_id=prod.pro_id
                    ".($id_branch!='' ? " and bill.id_branch=".$id_branch." and tag.current_branch=".$id_branch."" :'')."
                    GROUP by c.id_ret_category) s ON s.id_ret_category=c.id_ret_category
                    LEFT JOIN (SELECT tag.tag_id,tag.product_id,c.id_ret_category,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                            FROM ret_taging tag
                            LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and l.from_branch=".$id_branch." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=11)
                            LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
            left join ret_category c on c.id_ret_category=prod.cat_id
                            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt')  and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=11)
                            ".($id_branch!='' ? " and l.from_branch=".$id_branch."" :'')."
                             GROUP by c.id_ret_category) br_out on br_out.id_ret_category=c.id_ret_category
                            LEFT JOIN (SELECT t.tag_id,t.product_id,c.id_ret_category,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name
                            FROM ret_taging_status_log l
                            LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
                            LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
                            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
                            ".($id_branch!='' ? " and l.to_branch=".$id_branch."" :'')."
                            GROUP by c.id_ret_category) in_trans on in_trans.id_ret_category=c.id_ret_category
                    where p.pro_id is not null and c.id_ret_category is not null GROUP by c.id_ret_category");
                // print_r($this->db->last_query());exit;
                    $data = $sql->result_array();
		//print_r($data);
		foreach($data as $value)
		{
			$dataset[] = array(
			'product_id' => $value['product_id'],
			'product_name' => $value['product_name'],
			'branch_name' => $value['branch_name'],
			'category_name' => $value['category_name'],
			'op_blc_gwt' => $value['op_blc_gwt'],
			'op_blc_nwt' => $value['op_blc_nwt'],
			'op_blc_pcs' => $value['op_blc_pcs'],
			'inw_gwt' => $value['inw_gwt'],
			'inw_nwt' => $value['inw_nwt'],
			'inw_pcs' => $value['inw_pcs'],
			'sold_gwt' => $value['sold_gwt'],
			'sold_nwt' => $value['sold_nwt'],
			'sold_pcs' => $value['sold_pcs'],
			'br_out_gwt' => $value['br_out_gwt'],
			'br_out_nwt' => $value['br_out_nwt'],
			'br_out_pcs' => $value['br_out_pcs'],
			'in_trans_gwt' => $value['in_trans_gwt'],
			'in_trans_nwt' => $value['in_trans_nwt'],
			'in_trans_pcs' => $value['in_trans_pcs'],
			'closing_pcs' => $value['closing_pcs'],
			'closing_gwt' => $value['closing_gwt'],
			'closing_stock' => $value['closing_stock'],
			'date_add' => $value['date_add'],
			'metal_name' => $value['metal_name'],
			'sub_product_details'  => $this->get_sub_products_details_multiple_date($value['id_ret_category'],$op_date,$FromDt,$ToDt,$id_branch)
			);
		}
		//echo 'pre';
		//print_r($dataset);
		//exit;
    	return $dataset;
        }
    }
    function get_categorywise_bt_report($data)
	{
	    $return_array = array();
		$multiple_id_branch = implode(' , ', $data['id_branch']);
		$multiple_transitemtype = implode(' , ', $data['transitemtype']);
		//var_dump($data['transitemtype']);exit;
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
		if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
        if($data['transtype'] == 1){ // Issue (Issue items to other branches from cost centre)
                $branch1 = $data['from_branch']; // Cost centre
                //BT tag item query
    		    $transitemtype[1] = $this->db->query("SELECT cat.name as category_name,
                                sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                                b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                                sum(ifnull(tag.sales_value,0)) as sales_value,
                                round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                    WHERE st.stone_type = 1
                                    AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt,
                                b.branch_transfer_id,
                                ifnull(date_format(b.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                ifnull(date_format(b.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                FROM ret_taging tag
                                LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                                LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                                LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                                LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                                LEFT JOIN branch br ON br.id_branch = b.transfer_from_branch
                                left JOIN branch brc ON brc.id_branch = b.transfer_to_branch
                                WHERE b.branch_transfer_id IS NOT null and b.is_other_issue = 0 AND b.status != 3
                                ".($FromDt!='' && $ToDt!='' ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                ".($branch1!='' && $branch1 !='0' ? " and b.transfer_from_branch in (".$branch1.") " :'' )."
                                ".($branch!='' && $branch !='0' ? " and b.transfer_to_branch in (".$branch.") " :'' )."
                                ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                GROUP by cat.id_ret_category,b.branch_trans_code");
                //BT non tag query
                    $transitemtype[2] = $this->db->query("SELECT pr.product_name as ItemName,
                                                    IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                    if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                    bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                    bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt,
                                                    bt.branch_transfer_id,
                                                    ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                    ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                    FROM `ret_branch_transfer` bt
                                                    LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                    LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                    LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                    LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                    LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                    left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                    WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL  AND bt.status != 3
                                                    ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                    ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                    ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                     ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                    GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                //BT purchase items sales return query
                 $transitemtype[3] = $this->db->query("SELECT pr.product_name as ItemName,
                                                            sum(trtag.gross_wt) as grs_wt,
                                                            ifnull(sum(trtag.net_wt),0) as net_wt,
                                                            ifnull(sum(tag.piece), 0) as piece,
                                                            bt.branch_trans_code as trans_code,
                                                            br.name as from_branch,brc.name as to_branch_name,
                                                            ifnull(sum(sales_value),0) as sales_value,
                                                            IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                            '0' as totaldiawt,
                                                            bt.branch_transfer_id,
                                                            ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                            ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                            FROM `ret_brch_transfer_old_metal` trtag
                                                            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                            LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                            LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                            LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                            LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                            left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                            WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2  AND bt.status != 3
                                                            ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                            ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                            ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                            GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                    //BT purchase items partly sale query
                    $transitemtype[4] = $this->db->query("SELECT pr.product_name as ItemName,
                                                            sum(trtag.gross_wt) as grs_wt,
                                                            ifnull(sum(trtag.net_wt),0) as net_wt,
                                                            ifnull(sum(tag.piece), 0) as piece,
                                                            bt.branch_trans_code as trans_code,
                                                            br.name as from_branch,brc.name as to_branch_name,
                                                            ifnull(sum(sales_value),0) as sales_value,
                                                            IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                            '0' as totaldiawt,
                                                            bt.branch_transfer_id,
                                                            ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                            ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                            FROM `ret_brch_transfer_old_metal` trtag
                                                            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                            LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                            LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                            LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                            LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                            left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                            WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3  AND bt.status != 3
                                                            ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                            ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                            ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                            GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                    //BT purchase items old metal query
                    $transitemtype[5] = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                    sum(osl.gross_wt) as grs_wt,
                                                    ifnull(sum(osl.net_wt),0) as net_wt,
                                                    ifnull(sum(osl.piece), 0) as piece,
                                                    ifnull(sum(osl.rate),0) as sales_value,
                                                    '' as HSNCode, oldt.metal_type as category_name,
                                                    round('0',3) as totaldiawt ,
                                                    bt.branch_trans_code as trans_code,
                                                    br.name as from_branch,brc.name as to_branch_name ,
                                                    bt.branch_transfer_id,
                                                    ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                    ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                    FROM `ret_brch_transfer_old_metal` trtag
                                                    LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                    LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                    LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                    LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                    LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                    left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                    WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1  AND bt.status != 3
                                                   ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                   ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                    ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                     ".($data['id_category']!='' && $data['id_category']>0 ? " and osl.metal_type = ".$data['id_category']." " :'' )."
                                                    GROUP BY oldt.id_metal_type, bt.branch_trans_code");
            foreach($data['transitemtype'] as $tkey => $tval){
                if($tval == 0){
                    $return_array = array_merge( $transitemtype[1]->result_array(),  $transitemtype[2]->result_array(),  $transitemtype[3]->result_array(), $transitemtype[4]->result_array(), $transitemtype[5]->result_array());
                }else{
                    $return_array = array_merge($return_array, $transitemtype[$tval]->result_array());
                }
            }
        }else if($data['transtype'] == 2){ // receipt (Receipt items from other branch to cost centre)
                $branch1 = $data['from_branch']; // Cost centre
                //BT tagged items
    		    $transitemtype[1] = $this->db->query("SELECT cat.name as category_name,
                                sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                                b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                                sum(ifnull(tag.sales_value,0)) as sales_value,
                                round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                    WHERE st.stone_type = 1
                                    AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt,
                                b.branch_transfer_id,
                                ifnull(date_format(b.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                ifnull(date_format(b.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                FROM ret_taging tag
                                LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                                LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                                LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                                LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                                LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                                left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                                WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                                ".($FromDt!='' && $ToDt!='' ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                ".($branch!='' && $branch !='0' ? " and b.transfer_from_branch in (".$branch.") " :'' )."
                                ".($branch1!='' && $branch1 !='0' ? " and b.transfer_to_branch in (".$branch1.") " :'' )."
                                ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                GROUP by cat.id_ret_category,b.branch_trans_code");
                //print_r($this->db->last_query());exit;
                //BT non tag items
                $transitemtype[2] = $this->db->query("SELECT pr.product_name as ItemName,
                                                    IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                    if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                    bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                    bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt,
                                                    bt.branch_transfer_id,
                                                    ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                    ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                    FROM `ret_branch_transfer` bt
                                                    LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                    LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                    LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                    LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                    LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                    left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                    WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                                    ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                    ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                    ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                     ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                    GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                //BT purchase items sales return query
                $transitemtype[3] = $this->db->query("SELECT pr.product_name as ItemName,
                                                            sum(tag.gross_wt) as grs_wt,
                                                            ifnull(sum(tag.net_wt),0) as net_wt,
                                                            ifnull(sum(tag.piece), 0) as piece,
                                                            bt.branch_trans_code as trans_code,
                                                            br.name as from_branch,brc.name as to_branch_name,
                                                            ifnull(sum(sales_value),0) as sales_value,
                                                            IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                            '0' as totaldiawt,
                                                            bt.branch_transfer_id,
                                                            ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                            ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                            FROM `ret_brch_transfer_old_metal` trtag
                                                            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                            LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                            LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                            LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                            LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                            left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                            WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                            ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                            ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                            ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                            GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                    //BT purchase items partly sale query
                    $transitemtype[4] = $this->db->query("SELECT pr.product_name as ItemName,
                                                            sum(tag.gross_wt) as grs_wt,
                                                            ifnull(sum(tag.net_wt),0) as net_wt,
                                                            ifnull(sum(tag.piece), 0) as piece,
                                                            bt.branch_trans_code as trans_code,
                                                            br.name as from_branch,brc.name as to_branch_name,
                                                            ifnull(sum(sales_value),0) as sales_value,
                                                            IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                            '0' as totaldiawt,
                                                            bt.branch_transfer_id,
                                                            ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                            ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                            FROM `ret_brch_transfer_old_metal` trtag
                                                            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                            LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                            LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                            LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                            LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                            left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                            WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                            ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                            ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                            ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                            GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                   //BT purchase items old metal query
                    $transitemtype[5] = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                    sum(osl.gross_wt) as grs_wt,
                                                    ifnull(sum(osl.net_wt),0) as net_wt,
                                                    ifnull(sum(osl.piece), 0) as piece,
                                                    ifnull(sum(osl.rate),0) as sales_value,
                                                    '' as HSNCode, oldt.metal_type as category_name,
                                                    round('0',3) as totaldiawt ,
                                                    bt.branch_trans_code as trans_code,
                                                    br.name as from_branch,brc.name as to_branch_name ,
                                                    bt.branch_transfer_id,
                                                    ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                    ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                    FROM `ret_brch_transfer_old_metal` trtag
                                                    LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                    LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                    LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                    LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                    LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                    left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                    WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                                   ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                   ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                    ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                     ".($data['id_category']!='' && $data['id_category']>0 ? " and osl.metal_type = ".$data['id_category']." " :'' )."
                                                    GROUP BY oldt.id_metal_type, bt.branch_trans_code");
                foreach($data['transitemtype'] as $tkey => $tval){
                    if($tval == 0){
                        $return_array = array_merge( $transitemtype[1]->result_array(),  $transitemtype[2]->result_array(),  $transitemtype[3]->result_array(), $transitemtype[4]->result_array(), $transitemtype[5]->result_array());
                    }else{
                        $return_array = array_merge($return_array, $transitemtype[$tval]->result_array());
                    }
                }
                /*if($data['transitemtype'] == 0){ // All the transaction
                    $result = array_merge($catquery->result_array(), $cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array(), $cat_non_tag_query->result_array());
                }else if($data['transitemtype'] == 1){ // To fetch Tagged item transactions
                    $result = $catquery->result_array();
                }else if($data['transitemtype'] == 2){ // To fetch non tag transaction
                    $result = $cat_non_tag_query->result_array();
                }else if($data['transitemtype'] == 3){ // To fetch all the purchase items
                    $result = array_merge($cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array());
                }else if($data['transitemtype'] == 4){ // To fetch purchase item of old metal
                     $result = $cat_purchase_non_tag_query->result_array();
                }else if($data['transitemtype'] == 5){ // To fetch purchase item of sales return
                     $result = $cat_purchase_query->result_array();
                }else if($data['transitemtype'] == 6){ // To fetch purchase item of partly sale
                     $result = $cat_purchase_query->result_array();
                }*/
        }
        return $return_array;
	}
    function get_categorywise_bt_report_on01082022($data)
	{
		$multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
		if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
        if($data['transtype'] == 1){ // Issue (Issue items to other branches from cost centre)
            $branch1 = $data['from_branch']; // Cost centre
		    $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            sum(ifnull(tag.sales_value,0)) as sales_value,
                            round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt,
                            b.branch_transfer_id,
                            ifnull(date_format(b.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                            ifnull(date_format(b.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch = b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch = b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue = 0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch1!='' && $branch1 !='0' ? " and b.transfer_from_branch in (".$branch1.") " :'' )."
                            ".($branch!='' && $branch !='0' ? " and b.transfer_to_branch in (".$branch.") " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
            $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        sum(ifnull(sales_value,0)) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        round('0',3) as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                ifnull(sum(osl.rate),0) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name ,
                                                bt.branch_transfer_id,
                                                ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                               ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                               ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                 ".($data['id_category']!='' && $data['id_category']>0 ? " and osl.metal_type = ".$data['id_category']." " :'' )."
                                                GROUP BY oldt.id_metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                               IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt,
                                                bt.branch_transfer_id,
                                                ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                 ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
        if($data['transitemtype'] == 0){ // All the transaction
            $result = array_merge($catquery->result_array(), $cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array(), $cat_non_tag_query->result_array());
        }else if($data['transitemtype'] == 1){ // To fetch Tagged item transactions
            $result = $catquery->result_array();
        }else if($data['transitemtype'] == 2){ // To fetch non tag transaction
            $result = $cat_non_tag_query->result_array();
        }else if($data['transitemtype'] == 3){ // To fetch all the purchase items
            $result = array_merge($cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array());
        }else if($data['transitemtype'] == 4){ // To fetch purchase item of old metal
             $result = $cat_purchase_non_tag_query->result_array();
        }else if($data['transitemtype'] == 5){ // To fetch purchase item of sales return
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
             $result = $cat_purchase_query->result_array();
        }else if($data['transitemtype'] == 6){ // To fetch purchase item of partly sale
            if($data['transtype'] == 0 || $data['transtype'] == ''){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }
             $result = $cat_purchase_query->result_array();
        }
        }else if($data['transtype'] == 2){ // receipt (Receipt items from other branch to cost centre)
            $branch1 = $data['from_branch']; // Cost centre
		    $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            sum(ifnull(tag.sales_value,0)) as sales_value,
                            round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt,
                            b.branch_transfer_id,
                            ifnull(date_format(b.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                            ifnull(date_format(b.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch!='' && $branch !='0' ? " and b.transfer_from_branch in (".$branch.") " :'' )."
                            ".($branch1!='' && $branch1 !='0' ? " and b.transfer_to_branch in (".$branch1.") " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
            $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        sum(ifnull(sales_value,0)) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        round('0',3) as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                ifnull(sum(osl.rate),0) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name ,
                                                bt.branch_transfer_id,
                                                ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                               ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                               ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                 ".($data['id_category']!='' && $data['id_category']>0 ? " and osl.metal_type = ".$data['id_category']." " :'' )."
                                                GROUP BY oldt.id_metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt,
                                                bt.branch_transfer_id,
                                                ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                 ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            if($data['transitemtype'] == 0){ // All the transaction
            $result = array_merge($catquery->result_array(), $cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array(), $cat_non_tag_query->result_array());
        }else if($data['transitemtype'] == 1){ // To fetch Tagged item transactions
            $result = $catquery->result_array();
        }else if($data['transitemtype'] == 2){ // To fetch non tag transaction
            $result = $cat_non_tag_query->result_array();
        }else if($data['transitemtype'] == 3){ // To fetch all the purchase items
            $result = array_merge($cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array());
        }else if($data['transitemtype'] == 4){ // To fetch purchase item of old metal
             $result = $cat_purchase_non_tag_query->result_array();
        }else if($data['transitemtype'] == 5){ // To fetch purchase item of sales return
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
             $result = $cat_purchase_query->result_array();
        }else if($data['transitemtype'] == 6){ // To fetch purchase item of partly sale
            if($data['transtype'] == 0 || $data['transtype'] == ''){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }
             $result = $cat_purchase_query->result_array();
        }
        }
        return $result;
	}
    function get_categorywise_bt_report_on_300721($data)
	{
		$multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
		if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
        if(empty($data['from_branch'])){
                $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(ifnull(tag.net_wt,0)) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            round(sum(ifnull(tag.sales_value,0)),2) as sales_value,
                            round(sum(ifnull((SELECT sum((bs.wt/5)) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),2) as totaldiawt,
                            b.branch_transfer_id,
                            ifnull(date_format(b.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                            ifnull(date_format(b.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch!='' && $branch !='0' ? " and (b.transfer_from_branch in (".$branch.") " :'' )."
                            ".($branch!='' && $branch !='0' ? " OR b.transfer_to_branch in (".$branch.")) " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        sum(ifnull(sales_value,0)) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        CAST(0 AS DECIMAL(6,2)) as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                sum(ifnull(osl.rate,0)) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name,
                                                bt.branch_transfer_id,
                                                ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                GROUP BY oldt.id_metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt,
                                                bt.branch_transfer_id,
                                                ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
        }else{
            $branch1 = $data['from_branch'];
		    $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            sum(ifnull(tag.sales_value,0)) as sales_value,
                            round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt,
                            b.branch_transfer_id,
                            ifnull(date_format(b.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                            ifnull(date_format(b.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch!='' && $branch !='0' ? " and b.transfer_from_branch in (".$branch.") " :'' )."
                            ".($branch1!='' && $branch1 !='0' ? " and b.transfer_to_branch in (".$branch1.") " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
            $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        sum(ifnull(sales_value,0)) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        round('0',3) as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                ifnull(sum(osl.rate),0) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name ,
                                                bt.branch_transfer_id,
                                                ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                               ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                               ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                 ".($data['id_category']!='' && $data['id_category']>0 ? " and osl.metal_type = ".$data['id_category']." " :'' )."
                                                GROUP BY oldt.id_metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt,
                                                bt.branch_transfer_id,
                                                ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                 ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
        }
        if($data['transitemtype'] == 0){ // All the transaction
            $result = array_merge($catquery->result_array(), $cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array(), $cat_non_tag_query->result_array());
        }else if($data['transitemtype'] == 1){ // To fetch Tagged item transactions
            $result = $catquery->result_array();
        }else if($data['transitemtype'] == 2){ // To fetch non tag transaction
            $result = $cat_non_tag_query->result_array();
        }else if($data['transitemtype'] == 3){ // To fetch all the purchase items
            $result = array_merge($cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array());
        }else if($data['transitemtype'] == 4){ // To fetch purchase item of old metal
             $result = $cat_purchase_non_tag_query->result_array();
        }else if($data['transitemtype'] == 5){ // To fetch purchase item of sales return
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
             $result = $cat_purchase_query->result_array();
        }else if($data['transitemtype'] == 6){ // To fetch purchase item of partly sale
            if($data['transtype'] == 0 || $data['transtype'] == ''){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt,
                                                        bt.branch_transfer_id,
                                                        ifnull(date_format(bt.approved_datetime, '%d-%m-%Y'), '') as approvedon,
                                                        ifnull(date_format(bt.dwnload_datetime, '%d-%m-%Y'), '') as downloadedon
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }
             $result = $cat_purchase_query->result_array();
        }
        return $result;
	}
    function get_categorywise_bt_report_23072022($data)
	{
		$multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
		 if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
       if(empty($data['from_branch']) || ($data['transtype'] == 0 || $data['transtype'] == '')){
		if($data['transtype'] == 0 || $data['transtype'] == ''){
                $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(ifnull(tag.net_wt,0)) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            round(sum(ifnull(tag.sales_value,0)),2) as sales_value,
                            round(sum(ifnull((SELECT sum((bs.wt/5)) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),2) as totaldiawt
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch!='' && $branch !='0' ? " and (b.transfer_from_branch in (".$branch.") " :'' )."
                            ".($branch!='' && $branch !='0' ? " OR b.transfer_to_branch in (".$branch.")) " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        sum(ifnull(sales_value,0)) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        CAST(0 AS DECIMAL(6,2)) as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                sum(ifnull(osl.rate,0)) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                GROUP BY osl.metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
		}else if($data['transtype'] == 1){//Inward
		    $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            sum(ifnull(tag.sales_value,0)) as sales_value,
                            round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch!='' && $branch !='0' ? " and b.transfer_to_branch in (".$branch.") " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
            $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        sum(ifnull(sales_value,0)) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        round('0',3) as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                ifnull(sum(osl.rate),0) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                               ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                GROUP BY osl.metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
		}else if($data['transtype'] == 2){ //Outward
		    $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            sum(ifnull(tag.sales_value,0)) as sales_value,
                            round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch!='' && $branch !='0' ? " and b.transfer_from_branch in (".$branch.") " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        round('0',3) as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                ifnull(sum(osl.rate),0) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                GROUP BY osl.metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                               ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
		}
        //echo $this->db->last_query();exit;
        //".($data['id_category']!='' && $data['id_category']>0 ? " and r.issue_cat_id = ".$data['id_category']." " :'' )."
        if($data['transitemtype'] == 0){ // All the transaction
            $result = array_merge($catquery->result_array(), $cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array(), $cat_non_tag_query->result_array());
        }else if($data['transitemtype'] == 1){ // To fetch Tagged item transactions
            $result = $catquery->result_array();
        }else if($data['transitemtype'] == 2){ // To fetch non tag transaction
            $result = $cat_non_tag_query->result_array();
        }else if($data['transitemtype'] == 3){ // To fetch all the purchase items
            $result = array_merge($cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array());
        }else if($data['transitemtype'] == 4){ // To fetch purchase item of old metal
             $result = $cat_purchase_non_tag_query->result_array();
        }else if($data['transitemtype'] == 5){ // To fetch purchase item of sales return
            if($data['transtype'] == 0 || $data['transtype'] == ''){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }else if($data['transtype'] == 1){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }else if($data['transtype'] == 2){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }
             $result = $cat_purchase_query->result_array();
        }else if($data['transitemtype'] == 6){ // To fetch purchase item of partly sale
            if($data['transtype'] == 0 || $data['transtype'] == ''){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }else if($data['transtype'] == 1){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }else if($data['transtype'] == 2){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }
             $result = $cat_purchase_query->result_array();
        }
	}else{
        $branch1 = $data['from_branch'];
		if($data['transtype'] == 1){//Inward
		    $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            sum(ifnull(tag.sales_value,0)) as sales_value,
                            round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch!='' && $branch !='0' ? " and b.transfer_from_branch in (".$branch.") " :'' )."
                            ".($branch1!='' && $branch1 !='0' ? " and b.transfer_to_branch in (".$branch1.") " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
            $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        sum(ifnull(sales_value,0)) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        round('0',3) as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                ifnull(sum(osl.rate),0) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                               ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                               ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                GROUP BY osl.metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code, br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.dwnload_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_to_branch in (".$branch1.") " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
		}else if($data['transtype'] == 2){ //Outward
		    $catquery = $this->db->query("SELECT cat.name as category_name,
                            sum(tag.gross_wt) as grs_wt,sum(tag.piece) as piece,sum(tag.net_wt) as net_wt,
                            b.branch_trans_code as trans_code,br.name as from_branch,brc.name as to_branch_name,
                            sum(ifnull(tag.sales_value,0)) as sales_value,
                            round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt
                            FROM ret_taging tag
                            LEFT JOIN ret_brch_transfer_tag_items t ON t.tag_id=tag.tag_id
                            LEFT JOIN ret_branch_transfer b ON b.branch_transfer_id=t.transfer_id
                            LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
                            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
                            LEFT JOIN branch br ON br.id_branch=b.transfer_from_branch
                            left JOIN branch brc ON brc.id_branch=b.transfer_to_branch
                            WHERE b.branch_transfer_id IS NOT null and b.is_other_issue=0
                            ".($FromDt!='' && $ToDt!='' ? " and (date(b.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                            ".($branch!='' && $branch !='0' ? " and b.transfer_to_branch in (".$branch.") " :'' )."
                            ".($branch1!='' && $branch1 !='0' ? " and b.transfer_from_branch in (".$branch1.") " :'' )."
                            ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                            GROUP by cat.id_ret_category,b.branch_trans_code");
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        round('0',3) as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type != 1
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                        ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
                $cat_purchase_non_tag_query = $this->db->query("SELECT oldt.metal_type as ItemName,
                                                sum(osl.gross_wt) as grs_wt,
                                                ifnull(sum(osl.net_wt),0) as net_wt,
                                                ifnull(sum(osl.piece), 0) as piece,
                                                ifnull(sum(osl.rate),0) as sales_value,
                                                '' as HSNCode, oldt.metal_type as category_name,
                                                round('0',3) as totaldiawt ,
                                                bt.branch_trans_code as trans_code,
                                                brc.name as from_branch,br.name as to_branch_name
                                                FROM `ret_brch_transfer_old_metal` trtag
                                                LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id
                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 3 AND trtag.item_type = 1
                                                ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                GROUP BY osl.metal_type, bt.branch_trans_code");
                $cat_non_tag_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                if(cat.id_metal = 1, round(mr.goldrate_22ct * bt.net_wt), round(mr.silverrate_1gm * bt.net_wt)) as sales_value,
                                                bt.grs_wt as grs_wt, bt.net_wt as net_wt, bt.pieces as piece,
                                                bt.branch_trans_code as trans_code,
                                                br.name as from_branch,brc.name as to_branch_name, round('0',3) as totaldiawt
                                                FROM `ret_branch_transfer` bt
                                                LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = bt.id_nontag_item
                                                LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product
                                                LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(bt.approved_datetime)
                                                LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                WHERE bt.transfer_item_type = 2 AND bt.id_nontag_item IS NOT NULL
                                               ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                ".($branch!='' && $branch !='0' ? " and bt.transfer_to_branch in (".$branch.") " :'' )."
                                                ".($branch1!='' && $branch1 !='0' ? " and bt.transfer_from_branch in (".$branch1.") " :'' )."
                                                GROUP BY cat.id_ret_category, bt.branch_trans_code ");
		}
        //echo $this->db->last_query();exit;
        //".($data['id_category']!='' && $data['id_category']>0 ? " and r.issue_cat_id = ".$data['id_category']." " :'' )."
        if($data['transitemtype'] == 0){ // All the transaction
            $result = array_merge($catquery->result_array(), $cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array(), $cat_non_tag_query->result_array());
        }else if($data['transitemtype'] == 1){ // To fetch Tagged item transactions
            $result = $catquery->result_array();
        }else if($data['transitemtype'] == 2){ // To fetch non tag transaction
            $result = $cat_non_tag_query->result_array();
        }else if($data['transitemtype'] == 3){ // To fetch all the purchase items
            $result = array_merge($cat_purchase_query->result_array(), $cat_purchase_non_tag_query->result_array());
        }else if($data['transitemtype'] == 4){ // To fetch purchase item of old metal
             $result = $cat_purchase_non_tag_query->result_array();
        }else if($data['transitemtype'] == 5){ // To fetch purchase item of sales return
            if($data['transtype'] == 0 || $data['transtype'] == ''){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }else if($data['transtype'] == 1){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }else if($data['transtype'] == 2){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 2
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }
             $result = $cat_purchase_query->result_array();
        }else if($data['transitemtype'] == 6){ // To fetch purchase item of partly sale
            if($data['transtype'] == 0 || $data['transtype'] == ''){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.created_time) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and (bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($branch!='' && $branch !='0' ? " OR bt.transfer_to_branch in (".$branch.")) " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }else if($data['transtype'] == 1){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }else if($data['transtype'] == 2){
                $cat_purchase_query = $this->db->query("SELECT pr.product_name as ItemName,
                                                        sum(tag.gross_wt) as grs_wt,
                                                        ifnull(sum(tag.net_wt),0) as net_wt,
                                                        ifnull(sum(tag.piece), 0) as piece,
                                                        bt.branch_trans_code as trans_code,
                                                        br.name as from_branch,brc.name as to_branch_name,
                                                        ifnull(sum(sales_value),0) as sales_value,
                                                        IFNULL(pr.hsn_code,'-') as HSNCode, cat.name as category_name,
                                                        '0' as totaldiawt
                                                        FROM `ret_brch_transfer_old_metal` trtag
                                                        LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id
                                                        LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id
                                                        LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id
                                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id
                                                        LEFT JOIN branch br ON br.id_branch=bt.transfer_from_branch
                                                        left JOIN branch brc ON brc.id_branch=bt.transfer_to_branch
                                                        WHERE bt.transfer_item_type = 3 AND trtag.item_type = 3
                                                        ".($FromDt!='' && $ToDt!='' ? " and (date(bt.approved_datetime) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."
                                                        ".($branch!='' && $branch !='0' ? " and bt.transfer_from_branch in (".$branch.") " :'' )."
                                                        ".($data['id_category']!='' && $data['id_category']>0 ? " and cat.id_ret_category = ".$data['id_category']." " :'' )."
                                                        GROUP BY cat.id_ret_category, bt.branch_trans_code ");
            }
             $result = $cat_purchase_query->result_array();
        }
	}
        return $result;
	}
    //ACCOUNTS REPORTS
    function get_ActiveDevicename()
    {
        $sql=$this->db->query("SELECT * from ret_bill_pay_device");
        return $sql->result_array();
    }
    function get_pay_device_bills($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
            }
        $sql=$this->db->query("SELECT b.bill_id,
		ifnull(sum(bp.payment_amount),0) as amount,b.id_branch,
        bp.id_pay_device,pd.device_name,br.name as branch,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
        IFNULL(bp.payment_ref_number,'') as payment_ref_number,'bill' as type
        from ret_billing b
        LEFT JOIN ret_billing_payment bp on bp.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_bill_pay_device pd on  pd.id_device=bp.id_pay_device
        LEFT JOIN branch br on br.id_branch=b.id_branch
        where b.bill_status=1 and bp.id_pay_device is not null
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
        ".($data['id_pay_device']!='' && $data['id_pay_device']!=0 ? " and bp.id_pay_device=".$data['id_pay_device']."" :'')."
        Group by b.bill_id;");
        //print_r($this->db->last_query());
        $data = $sql->result_array();
        foreach($data as $d){
            $d['bill_no'] = $this->get_bill_no_format_detail($d['bill_id']);
            $result[] = $d;
        }
        $sql1=$this->db->query("
        SELECT  ifnull(pmd.payment_amount,0) as amount , ifnull(paydev.device_name, '') as device_name,pmd.id_pay_device,br.name as branch,bp.payment_ref_number as payment_ref_number,date_format(bp.date_payment,'%d-%m-%Y') as bill_date, scacc.id_scheme_account as bill_no, pmd.id_payment as bill_id,'chit' as type
                            from payment_mode_details pmd
                            left join payment as bp ON bp.id_payment = pmd.id_payment
                            LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = bp.id_scheme_account
                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device
                            LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme
                            left join branch as br on br.id_branch = bp.id_branch
                            WHERE pmd.id_pay_device is not null and bp.payment_status = 1
                            ".($FromDt!= '' && $ToDt!='' ? ' and (date(bp.date_payment) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
                            ".($branch!='' && $branch !='0' ? " and br.id_branch in (".$branch.") " :'' )."
                            ".($data['id_pay_device']!='' && $data['id_pay_device']!=0 ? " and pmd.id_pay_device=".$data['id_pay_device']."" :'')."
                              group by bp.id_payment;
        ");
        $result1 = $sql1->result_array();
        $return_array = array_merge($result,$result1);
        return $return_array;
    }
    function get_stock_rotation_sales_details($data)
    {
        $multiple_weight_range = implode(' , ', $data['id_weight']);
		if($multiple_weight_range != '')
		{
			$id_weight = $multiple_weight_range;
		}else{
			$id_weight = $data['id_weight'];
		}
	    $returnData = array();
        $sql = $this->db->query("SELECT wt.id_weight,wt.from_weight,wt.to_weight,wt.weight_description,wt.id_product,wt.id_design,wt.id_sub_design,
        p.product_name,des.design_name,subDes.sub_design_name,IFNULL(s.min_pcs,0) as min_pcs,IFNULL(s.max_pcs,0) as max_pcs
        FROM ret_weight wt
        LEFT JOIN ret_product_master p ON p.pro_id = wt.id_product
        LEFT JOIN ret_design_master des ON des.design_no = wt.id_design
        LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design = wt.id_sub_design
        LEFT JOIN ret_reorder_settings s ON s.id_product = wt.id_product AND s.id_design = wt.id_design AND s.id_sub_design = wt.id_sub_design AND s.id_branch = ".$data['id_branch']." AND s.id_wt_range = wt.id_weight
        WHERE wt.from_weight IS NOT NULL AND wt.to_weight IS NOT NULL AND wt.id_product IS NOT NULL AND wt.id_design IS NOT NULL AND wt.id_sub_design IS NOT NULL
        ".($data['id_product']!='' ? " and wt.id_product=".$data['id_product']."" :'')."
        ".($data['id_design']!='' ? " and wt.id_design=".$data['id_design']."" :'')."
        ".($data['id_design']!='' ? " and wt.id_design=".$data['id_design']."" :'')."
        ".($data['id_sub_design']!='' ? " and wt.id_sub_design=".$data['id_sub_design']."" :'')."
        ");
        //echo $this->db->last_query();exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $sales_details = $this->weight_range_sale_det($items['id_product'],$items['id_design'],$items['id_sub_design'],$items['from_weight'],$items['to_weight'],$data['from_date'],$data['to_date'],$data['id_karigar'],$data['id_branch']);
            if($sales_details['piece'] > 0 || $sales_details['gross_wt'] > 0){
                $returnData[]=array(
                                   'id_weight'          =>$items['id_weight'],
                                   'weight_description' =>$items['weight_description'],
                                   'product_name'       =>$items['product_name'],
                                   'design_name'        =>$items['design_name'],
                                   'sub_design_name'    =>$items['sub_design_name'],
                                   'sales_pcs'          =>$sales_details['piece'],
                                   'sales_gwt'          =>$sales_details['gross_wt'],
                                   'min_pcs'            =>$items['min_pcs'],
                                   'max_pcs'            =>$items['max_pcs'],
                                   'age'                =>($sales_details['piece']>0 ?number_format($sales_details['age']/$sales_details['piece'],2,'.','') :0),
                                   );
            }
        }
        return $returnData;
    }
    function weight_range_sale_det($id_product,$id_design,$id_sub_design,$from_weight,$to_weight,$from_date,$to_date,$id_karigar, $id_branch)
    {
        $sql=$this->db->query("SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
        SUM(DATEDIFF(date(b.bill_date),date(t.tag_datetime))) AS age,k.firstname as supplier_name
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
        LEFT JOIN ret_lot_inwards l ON l.lot_no = t.tag_lot_id
        LEFT JOIN ret_karigar k ON k.id_karigar = l.gold_smith
        WHERE d.tag_id IS NOT NULL AND b.bill_status=1
        ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
        ".($id_product!='' ? " and t.product_id=".$id_product."" :'')."
        ".($id_design!='' ? " and t.design_id=".$id_design."" :'')."
        ".($id_sub_design!='' ? " and t.id_sub_design=".$id_sub_design."" :'')."
        ".($id_karigar!='' && $id_karigar!=0 ? " and l.gold_smith=".$id_karigar."" :'')."
        ".($from_weight!='' && $to_weight!='' ? " and d.gross_wt BETWEEN '".$from_weight."' and '".$to_weight."'" :'')."
        ".($from_date != '' && $to_date!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($from_date)).'" AND "'.date('Y-m-d',strtotime($to_date)).'"' : '')."
         ");
        /*if($id_product == 1 && $id_design == 1 && $id_sub_design == 28 && $from_weight == '8.501' && $to_weight == '10.5'){
            print_r($this->db->last_query());exit;
        }*/
        return  $sql->row_array();
    }
    function get_staff_chit_incentive_details($data)
	{
	    $returnData = array();
	    $sql=$this->db->query("SELECT e.id_employee,e.firstname as emp_name,e.emp_code,e.mobile,IFNULL(sch_join.total_acc,0) as tot_acc_joined,
	    IFNULL(sch_join.sch_join_amt,0) as sch_join_amt,IFNULL(clc.total_acc_closed,0) as total_acc_closed,
	    br.name as branch_name
        FROM employee e
        LEFT JOIN branch br ON br.id_branch = e.login_branches
        LEFT JOIN(SELECT sa.id_employee,s.emp_refferal_value,COUNT(sa.id_scheme_account) as total_acc,pay.paid_installments,IFNULL(SUM(s.emp_refferal_value),0) as sch_join_amt
        FROM scheme_account sa
        LEFT JOIN scheme s ON s.id_scheme = sa.id_scheme
            LEFT JOIN(select sa.id_scheme_account,IFNULL(IF(sa.is_opening=1,IFNULL(sa.paid_installments,0)+ IFNULL(if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues)),0), if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues))) ,0) as paid_installments
            FROM payment p
            left join scheme_account sa on sa.id_scheme_account=p.id_scheme_account
            left join scheme s on s.id_scheme=sa.id_scheme
            where p.payment_status=1
            GROUP by sa.id_scheme_account) as pay on pay.id_scheme_account = sa.id_scheme_account
        where date(sa.date_add) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
        GROUP by sa.id_employee
        HAVING pay.paid_installments>0) as sch_join ON sch_join.id_employee = e.id_employee
        LEFT JOIN(SELECT sa.id_employee,COUNT(sa.id_scheme_account) as total_acc_closed
        FROM scheme_account sa
        LEFT JOIN scheme s on s.id_scheme = sa.id_scheme
        WHERE sa.is_closed = 1
        and date(sa.closing_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."'
        GROUP by sa.id_employee
        ) AS clc ON clc.id_employee = e.id_employee
        WHERE e.id_employee IS NOT NULL AND e.active = 1
        ".($data['id_branch']!='' ?  " and e.login_branches=".$data['id_branch']."" :'')."
        HAVING tot_acc_joined >0 or total_acc_closed>0");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $clsoing_benefit_amt = 0;
            if($items['total_acc_closed']>0)
            {
                $clsoing_benefit_amt = $this->getSchemeClosedDetails($items['id_employee'],$data['from_date'],$data['to_date']);
            }
            $returnData[]=array(
                               'id_employee'        =>$items['id_employee'],
                               'emp_name'           =>$items['emp_name'],
                               'emp_code'           =>$items['emp_code'],
                               'branch_name'        =>$items['branch_name'],
                               'sch_join_amt'       =>$items['sch_join_amt'],
                               'tot_acc_joined'     =>$items['tot_acc_joined'],
                               'total_acc_closed'   =>$items['total_acc_closed'],
                               'closing_benefit_amt'=>number_format($clsoing_benefit_amt,2,'.',''),
                               'total_amount'       =>number_format($items['sch_join_amt']+$clsoing_benefit_amt,2,'.',''),
                               );
        }
        return $returnData;
	}
	function getSchemeClosedDetails($id_employee,$from_date,$to_date)
	{
	    $credit_amt = 0;
	    $sql=$this->db->query("SELECT date(sa.closing_date) as closing_date,sa.id_scheme_account,sa.id_scheme,s.closing_incentive_based_on,s.emp_incentive_closing,pay.paid_installments,sa.closing_weight
        FROM scheme_account sa
        LEFT JOIN scheme s ON s.id_scheme = sa.id_scheme
        LEFT JOIN(select sa.id_scheme_account,IFNULL(IF(sa.is_opening=1,IFNULL(sa.paid_installments,0)+ IFNULL(if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues)),0), if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues))) ,0) as paid_installments
        FROM payment p
        left join scheme_account sa on sa.id_scheme_account=p.id_scheme_account
        left join scheme s on s.id_scheme=sa.id_scheme
        where p.payment_status=1
        GROUP by sa.id_scheme_account) as pay on pay.id_scheme_account = sa.id_scheme_account
        WHERE sa.id_employee = ".$id_employee." AND sa.is_closed = 1
        and date(sa.closing_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."' ");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            if($items['emp_incentive_closing']==1)
            {
                $sch_close_benefits=$this->checkSchemeCloseBeiefits($items['id_scheme']);
                if($items['closing_incentive_based_on']==2)
                {
                    foreach($sch_close_benefits as $acc)
	                 {
	                     if(($acc['incentive_from']<=$items['closing_weight']) && ($data['closing_weight']<=$items['incentive_to']))
		                 {
		                     if($acc['type']==2) // in Percentage
		                     {
		                         $metal_rates=$this->getMetalRates($items['closing_date']);
		                         $credit_amt+=((($items['closing_weight']*$acc['value'])/100)*$metal_rates['goldrate_22ct']);
		                     }else
		                     {
		                         $credit_amt+=($acc['value']*$items['closing_weight']);
		                     }
		                 }
	                 }
                }else
                {
                          foreach($sch_close_benefits as $acc)
    	                  {
    	                       if(($acc['incentive_from']<=$items['paid_installments']))
    	                       {
    	                           if($items['closing_weight']>0)
    	                           {
    	                               $credit_amt+=($acc['value']*$items['closing_weight']);
    	                           }else
    	                           {
    	                               $credit_amt+=$acc['value'];
    	                           }
    	                       }
    	                  }
                }
            }
        }
        return $credit_amt;
	}
	function checkSchemeCloseBeiefits($id_scheme)
	{
	    $sql=$this->db->query("SELECT * FROM `emp_closing_incentive` WHERE id_scheme=".$id_scheme."");
	    return $sql->result_array();
	}
	function getMetalRates($closing_date)
	{
	    $sql=$this->db->query("SELECT m.goldrate_22ct FROM metal_rates m WHERE date(add_date)<='".date($closing_date)."'  order by id_metalrates Desc LIMIT 1");
	    //print_r($this->db->last_query());exit;
	    return $sql->row_array();
	}
	function get_employee_referred_acc_details($data)
	{
	    $returnData = array();
	    $sql = $this->db->query("SELECT sa.id_scheme_account,cus.firstname as cus_name,cus.mobile,concat(s.code,' - ',sa.scheme_acc_number) as acc_num,v.village_name as area_name,
	    date_format(sa.start_date,'%d-%m-%Y') as start_date,date_format(sa.closing_date,'%d-%m-%Y') as closing_date,sa.closing_balance,date(sa.closing_date) as closed_date,
	    IFNULL(s.emp_refferal_value,0) as join_benefit_value,s.emp_incentive_closing,sa.id_scheme,s.closing_incentive_based_on,IFNULL(sa.closing_weight,0) as closing_weight,
	    pay.paid_installments
        FROM scheme_account sa
        LEFT JOIN customer cus ON cus.id_customer = sa.id_customer
        LEFT JOIN scheme s ON s.id_scheme = sa.id_scheme
        LEFT JOIN village v ON v.id_village = cus.id_village
        LEFT JOIN(select sa.id_scheme_account,IFNULL(IF(sa.is_opening=1,IFNULL(sa.paid_installments,0)+ IFNULL(if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues)),0), if(s.scheme_type = 1 and s.min_weight != s.max_weight , COUNT(Distinct Date_Format(p.date_payment,'%Y%m')), sum(p.no_of_dues))) ,0) as paid_installments
        FROM payment p
        left join scheme_account sa on sa.id_scheme_account=p.id_scheme_account
        left join scheme s on s.id_scheme=sa.id_scheme
        where p.payment_status=1
        GROUP by sa.id_scheme_account) as pay on pay.id_scheme_account = sa.id_scheme_account
        where sa.id_scheme_account IS NOT NULL and sa.id_employee=".$data['id_employee']."
        ".($data['type']==1 ? " and date(sa.date_add) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."' " :'')."
        ".($data['type']==2 ? " and date(sa.closing_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."' " :'')."
        ");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $clsoing_benefit = 0;
            $scheme_benefit = 0;
            $per_gram_amount = $acc['value'];
            $rate_per_gram = 0;
            if($data['type']==2)
            {
                if($items['emp_incentive_closing']==1)
                {
                    $sch_close_benefits=$this->checkSchemeCloseBeiefits($items['id_scheme']);
                    if($items['closing_incentive_based_on']==2)
                    {
                        foreach($sch_close_benefits as $acc)
    	                 {
    	                     if(($acc['incentive_from']<=$items['closing_weight']) && ($data['closing_weight']<=$items['incentive_to']))
    		                 {
    		                     if($acc['type']==2) // in Percentage
    		                     {
    		                         $metal_rates=$this->getMetalRates($items['closed_date']);
    		                         $clsoing_benefit=((($items['closing_weight']*$acc['value'])/100)*$metal_rates['goldrate_22ct']);
    		                         $per_gram_amount = $acc['value'].'%';
    		                         $rate_per_gram = $metal_rates['goldrate_22ct'];
    		                     }else
    		                     {
    		                         $clsoing_benefit=($acc['value']*$items['closing_weight']);
    		                         $per_gram_amount=$acc['value'];
    		                     }
    		                 }
    	                 }
                    }else
                    {
                         foreach($sch_close_benefits as $acc)
    	                  {
    	                       if(($acc['incentive_from']<=$items['paid_installments']))
    	                       {
    	                           if($items['closing_weight']>0)
    	                           {
    	                               $clsoing_benefit=($acc['value']*$items['closing_weight']);
    	                               $scheme_benefit = $acc['value'];
    	                           }else
    	                           {
    	                               $clsoing_benefit=$acc['value'];
    	                               $scheme_benefit=$acc['value'];
    	                           }
    	                       }
    	                  }
                    }
                }
            }
            $returnData[]=array(
                               'acc_num'            =>$items['acc_num'],
                               'area_name'          =>$items['area_name'],
                               'closing_date'       =>$items['closing_date'],
                               'cus_name'           =>$items['cus_name'],
                               'id_scheme_account'  =>$items['id_scheme_account'],
                               'mobile'             =>$items['mobile'],
                               'start_date'         =>$items['start_date'],
                               'closing_balance'    =>$items['closing_balance'],
                               'paid_installments'  =>$items['paid_installments'],
                               'closing_weight'     =>$items['closing_weight'],
                               'rate_per_gram'      =>$rate_per_gram,
                               'clsoing_benefit'    =>(($data['type']==1 ? number_format($items['join_benefit_value'],2,'.','') :$scheme_benefit )),
                               'emp_incentive_amt'  =>number_format(($data['type']==1 ? $items['join_benefit_value'] :$clsoing_benefit ),2,'.',''),
                               );
        }
        return $returnData;
	}
    function get_karigar_metal_issue($data)
    {
        $issue=array();
        $multiple_id_metal = implode(' , ', $data['id_metal']);
		if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_karigar = implode(' , ', $data['id_karigar']);
		if($multiple_id_karigar != '')
		{
			$id_karigar = $multiple_id_karigar;
		}else{
			$id_karigar = $data['id_karigar'];
		}
        $multiple_id_category = implode(' , ', $data['id_category']);
		if($multiple_id_category != '')
		{
			$id_category = $multiple_id_category;
		}else{
			$id_category = $data['id_category'];
		}
        $multiple_id_product = implode(' , ', $data['id_product']);
		if($multiple_id_product != '')
		{
			$id_product = $multiple_id_product;
		}else{
			$id_product = $data['id_product'];
		}
        $report_type = $data['report_type'];
        if($report_type == 1)
        {
        $sql=$this->db->query("SELECT DATE_FORMAT(iss.met_issue_date,'%d-%m-%Y') as metal_issue_date,iss.met_issue_id,iss.met_issue_ref_id,iss.met_issue_karid,
            r.issue_metal_pur_wt as issue_metal_pur_wt,r.issue_metal_wt as issue_metal_wt,
        IFNULL(k.firstname,'') as karigar_name,IFNULL(m.metal,'') as metal,IFNULL(c.name,'') as category_name,
        IFNULL(p.product_name,'') as product_name,IFNULL(iss.remark,'') as remark,
        IFNULL(emp.firstname,'') as emp_name,IFNULL(po.po_ref_no,'') as po_no,
        IFNULL(DATE_FORMAT(po.po_date,'%d-%m-%Y'),'')as po_date, po.po_id,
        IF(iss.tag_issue_from=1,'Available Stock',IF(iss.tag_issue_from=2,'Sales Return','Partly Sales')) as issue_from,
        IFNULL(bt.branch_trans_code,'') as bt_number,IF(issue_uom_id=6,'CARAT','GRAM') as issue_uom,p.stone_type
        FROM  ret_karigar_metal_issue iss
        LEFT JOIN ret_karigar k ON k.id_karigar=iss.met_issue_karid
        LEFT JOIN employee emp ON emp.id_employee = iss.met_issue_created_by
        LEFT JOIN ret_karigar_metal_issue_details r on r.issue_met_parent_id=iss.met_issue_id
        LEFT JOIN ret_category c on c.id_ret_category=r.issue_cat_id
        LEFT JOIN ret_purchase_order_items po_itm on po_itm.po_item_id = r.po_item_id
        LEFT JOIN ret_purchase_order po on po.po_id = po_itm.po_item_po_id
        LEFT JOIN metal m on m.id_metal=r.issue_metal
        LEFT JOIN ret_product_master p on p.pro_id=r.issu_met_pro_id
        LEFT JOIN ret_branch_transfer bt on bt.branch_transfer_id = r.branch_trans_id
        WHERE iss.bill_status = ".$data['bill_type']." AND (date(iss.met_issue_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
          ".($id_category!='' && $id_category > 0 ? " and  r.issue_cat_id in (".$id_category.") " :'' )."
          ".($id_product!='' && $id_product > 0 ? " and  r.issu_met_pro_id in (".$id_product.") " :'' )."
          ".($id_metal!='' && $id_metal > 0 ? " and  r.issue_metal in (".$id_metal.") " :'' )."
          ".($id_karigar!='' && $id_karigar > 0 ? " and  iss.met_issue_karid in (".$id_karigar.") " :'' )."
          order by iss.met_issue_date asc " );
        }
        else{
        $sql=$this->db->query("SELECT DATE_FORMAT(iss.met_issue_date,'%d-%m-%Y') as metal_issue_date,iss.met_issue_id,iss.met_issue_ref_id,iss.met_issue_karid,
        SUM(r.issue_metal_pur_wt) as issue_metal_pur_wt,SUM(r.issue_metal_wt) as issue_metal_wt,
        IFNULL(k.firstname,'') as karigar_name,IFNULL(m.metal,'') as metal,IFNULL(c.name,'') as category_name,
        IFNULL(p.product_name,'') as product_name,IFNULL(iss.remark,'') as remark,
        IFNULL(emp.firstname,'') as emp_name,IFNULL(po.po_ref_no,'') as po_no,
        IFNULL(DATE_FORMAT(po.po_date,'%d-%m-%Y'),'')as po_date, po.po_id,
        IF(iss.tag_issue_from=1,'Available Stock',IF(iss.tag_issue_from=2,'Sales Return','Partly Sales')) as issue_from,
        IFNULL(bt.branch_trans_code,'') as bt_number,IF(issue_uom_id=6,'CARAT','GRAM') as issue_uom,p.stone_type
        FROM  ret_karigar_metal_issue iss
        LEFT JOIN ret_karigar k ON k.id_karigar=iss.met_issue_karid
        LEFT JOIN employee emp ON emp.id_employee = iss.met_issue_created_by
        LEFT JOIN ret_karigar_metal_issue_details r on r.issue_met_parent_id=iss.met_issue_id
        LEFT JOIN ret_category c on c.id_ret_category=r.issue_cat_id
        LEFT JOIN ret_purchase_order_items po_itm on po_itm.po_item_id = r.po_item_id
        LEFT JOIN ret_purchase_order po on po.po_id = po_itm.po_item_po_id
        LEFT JOIN metal m on m.id_metal=r.issue_metal
        LEFT JOIN ret_product_master p on p.pro_id=r.issu_met_pro_id
        LEFT JOIN ret_branch_transfer bt on bt.branch_transfer_id = r.branch_trans_id
        WHERE iss.bill_status = ".$data['bill_type']." and (date(iss.met_issue_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
          ".($id_category!='' && $id_category > 0 ? " and  r.issue_cat_id in (".$id_category.") " :'' )."
          ".($id_product!='' && $id_product > 0 ? " and  r.issu_met_pro_id in (".$id_product.") " :'' )."
          ".($id_metal!='' && $id_metal > 0 ? " and  r.issue_metal in (".$id_metal.") " :'' )."
          ".($id_karigar!='' && $id_karigar > 0 ? " and  iss.met_issue_karid in (".$id_karigar.") " :'' )."
          Group by iss.met_issue_ref_id
          order by iss.met_issue_date asc " );
        }
        //print_r($this->db->last_query());exit;
        $result =  $sql->result_array();
	   foreach($result as $items)
       {
              $issue[$items['met_issue_ref_id']][]=array(
                                'metal_issue_date'      =>$items['metal_issue_date'],
                                'met_issue_ref_id'      =>$items['met_issue_ref_id'],
                                'issue_metal_wt'        =>$items['issue_metal_wt'],
                                'issue_metal_pur_wt'    =>$items['issue_metal_pur_wt'],
                                'karigar_name'          =>$items['karigar_name'],
                                'metal_name'            =>$items['metal'],
                                'issue_from'            =>$items['issue_from'],
                                'category_name'         =>$items['category_name'],
                                'product_name'          =>$items['product_name'],
                                'po_no'                 =>$items['po_no'],
                                'po_date'               =>$items['po_date'],
                                'po_id'                 =>$items['po_id'],
                                'remark'                 =>$items['remark'],
                                'emp_name'               =>$items['emp_name'],
                                'bt_number'             =>$items['bt_number'],
                                'issue_uom'             =>$items['issue_uom'],
                                'stone_type'            =>$items['stone_type'],
                              //  'issue_detilas'         =>$this->get_issue_detials($items['met_issue_id'],$data['from_date'],$data['to_date'])
                           );
        }
           return $issue;
    }
     function get_issue_detials($id_issue_metal,$from_date,$to_date)
     {
        $sql_1=$this->db->query("SELECT r.issue_metal_wt,r.issue_metal_pur_wt, r.issue_metal,r.issue_cat_id,r.issue_pur_id,r.issu_met_pro_id,
         DATE_FORMAT(i.met_issue_date,'%d-%m-%Y') as metal_issue_date,m.metal,c.name as category_name,p.product_name
        FROM ret_karigar_metal_issue_details r
        LEFT JOIN ret_karigar_metal_issue i on i.met_issue_id=r.issue_met_parent_id
         LEFT JOIN ret_category c on c.id_ret_category=r.issue_cat_id
        LEFT JOIN metal m on m.id_metal=r.issue_metal
        LEFT JOIN ret_product_master p on p.pro_id=r.issu_met_pro_id
        WHERE  (date(i.met_issue_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."') AND
        r.issue_met_parent_id='".$id_issue_metal."'  ");
        //print_r($this->db->last_query());exit;
        return $sql_1->result_array();
     }
     function get_cus_details($post)
     {
         $FromDt=$this->input->post('from_date');
         $ToDt=$this->input->post('to_date');
         $id_zone=$this->input->post('id_zone');
         $id_village=$this->input->post('id_village');
         $id_branch=$this->input->post('id_branch');
         $data=$this->db->query("SELECT c.id_customer,c.id_branch,c.id_village,IF(c.lastname is null,c.firstname,concat(c.firstname,' ',c.lastname)) as cus_name,ifnull(c.pan,'-') as pan_no,c.gender,ifnull(date_format(c.date_of_wed,'%d-%m-%y'),'-') as wedding_date,c.mobile,c.id_village,ifnull(c.email,'-')as email,ifnull(date_format(c.date_of_birth,'%d-%m-%y'),'-') as date_of_birth,a.id_state,a.id_city,a.address1,ifnull(a.address2,'') as address2,ifnull(a.address3,'') as address3,ifnull(a.pincode,'') as pincode,
         ifnull(ci.name,'-' )as city_name,ifnull(s.name,'-') as state_name,ifnull(v.village_name,'-') as village,if(is_vip = 1,'Yes','No') as vip, ifnull(concat(vemp.firstname,' ',IF(vemp.lastname is not null, vemp.lastname,'-')),'-') as vip_marked,ifnull(c.aadharid,'') as aadhar
         from customer c
         left join address a on a.id_customer =c.id_customer
         left join village v on v.id_village =c.id_village
         left join city ci on ci.id_city =a.id_city
         left join employee vemp on vemp.id_employee = c.vip_up_by
         left join state s on s.id_state =a.id_state
         where c.id_customer IS NOT NULL
         ".($id_branch!='' && $id_branch!=0 ? " and c.id_branch=".$id_branch."" :'')."
         ".($post['is_vip']!='' ? " and c.is_vip=".$post['is_vip']."" :'')."
         ".($FromDt!='' && $ToDt!='' ? " and (date(c.date_add) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')" :'')."");
         //print_r($this->db->last_query());exit;
         return $data->result_array();
     }
    function get_stock_details_29_07_22($data)
    {
       $stock_detail = [];
       if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
        $group_by = $data['group_by'];//1-Product,2-Category
        $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
                        	IFNULL(blc.gross_wt,0) as op_blc_gwt,IFNULL(blc.net_wt,0) as op_blc_nwt,IFNULL(blc.piece,0) as op_blc_pcs,
                        	IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
                        	IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
                        	IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
                        	IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
                        	IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
                        	Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name
                        	FROM ret_taging t
                        	LEFT JOIN ret_product_master p on p.pro_id=t.product_id
                        	LEFT JOIN branch b on b.id_branch=t.current_branch
                        	left join ret_category c on c.id_ret_category=p.cat_id
                        	left join metal m on m.id_metal=c.id_metal
                        	LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                        	ifnull(SUM(tag.net_wt),0) as net_wt,
                        	ifnull(SUM(tag.piece),0) as piece
                        	FROM ret_taging_status_log m1
                        	LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) < '$FromDt')
                        	LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE m2.id_tag_status_log IS NULL
                        	".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                        	AND (m1.status = 0 or m1.status = 10 OR m1.status = 6) AND date(m1.date) < '$FromDt'
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") blc on ".($group_by==1 ? " blc.product_id = t.product_id " : " blc.cat_id = p.cat_id" )."
                            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE m2.id_tag_status_log IS NULL
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") INW on ".($group_by==1 ? " INW.product_id = t.product_id " : " INW.cat_id = p.cat_id" )."
                        	LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                        	SUM(b.piece) as piece,b.product_id,p.cat_id
                        	FROM ret_taging tag
                        	LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
                        	LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE bill.bill_status = 1 and
                        	(date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
                        	".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") s ON ".($group_by==1 ? " s.product_id = t.product_id " : "s.cat_id = p.cat_id" )."
                        	LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
                        		SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                        		FROM ret_taging tag
                        		LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12)
                        		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
                        	(l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12)
                        	".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
                        	 GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") br_out on ".($group_by==1 ? " br_out.product_id = t.product_id " : "br_out.cat_id = p.cat_id" )."
                        	LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
                        	ifnull(SUM(tag.net_wt),0) as net_wt,
                        	ifnull(SUM(tag.piece),0) as piece,p.cat_id
                        	FROM ret_taging_status_log m1
                        	LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '$ToDt')
                        	LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE m2.id_tag_status_log IS NULL
                        	".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                        	AND m1.status = 0 AND date(m1.date) <= '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") as current ON  ".($group_by==1 ? " current.product_id = t.product_id " : "current.cat_id = p.cat_id" )."
                        	LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name,
                        	p.cat_id
                        	FROM ret_taging_status_log l
                        	LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
                        	LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
                        	".($id_branch!='' ? " and l.from_branch=".$id_branch."" :'')."
                        	GROUP by ".($group_by==1 ? " t.product_id" :" p.cat_id")." ) in_trans on ".($group_by==1 ? " in_trans.product_id = t.product_id" : " in_trans.cat_id = p.cat_id" )."
                        	where t.tag_id is not null
                        	".($data['id_category']!='' && $data['id_category']!=0 ? " and p.cat_id=".$data['id_category']."" :'')."
                        	".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
                        	GROUP by ".($group_by==1 ? " t.product_id" :" p.cat_id")."
                        	order by c.sort,p.pro_id ASC");
            //print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            foreach($result as $r){
				$stock_detail[$r['metal_name']][$r['category_name']][] = $r;
			}
    	    return $stock_detail;
    }
    function get_stock_details($data)
    {
       $stock_detail = [];
	   $from_weight = (isset($data['from_weight']) ? ($data['from_weight']!='' ? $data['from_weight'] :'') :'');
	   $to_weight = (isset($data['to_weight']) ? ($data['to_weight']!='' ? $data['to_weight'] :'') :'');
       if($data['dt_range'] != ''){
           $dateRange = explode('-',$data['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
        $group_by = $data['group_by'];//1-Product,2-Category
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
		$multiple_id_metal = implode(' , ', $data['id_metal']);
		if($multiple_id_metal != '')
		{
			$metal = $multiple_id_metal;
		}else{
			$metal = $data['id_metal'];
		}
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$id_branch = $multiple_id_branch;
		}else{
			$id_branch = $data['id_branch'];
		}
        if(!empty($data['id_branch']))
        {
            $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
            (IFNULL(blc.gross_wt,0)) as op_blc_gwt,
            (IFNULL(blc.net_wt,0)) as op_blc_nwt,
            (IFNULL(blc.piece,0)) as op_blc_pcs,(IFNULL(blc_dwt.dia_wt,0)) as op_blc_dwt,
            
            IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(INW_dwt.dwt,0) as inw_dwt,
            
            IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(s_dwt.dia_wt,0) as sold_dwt,
            
            IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,IFNULL(br_out_dwt.dia_wt,0) as br_out_dwt,
            
            IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,

            IFNULL(pur_ret.gross_wt,0) as ret_gwt,IFNULL(pur_ret.pcs,0) as ret_pcs,IFNULL(pur_ret.net_wt,0) as ret_nwt,IFNULL(stn_pur_ret.diaWt,0) as ret_diawt,

            IFNULL(kar_iss.pcs,0) as iss_pcs,IFNULL(kar_iss.gross_wt,0) as iss_gwt,IFNULL(kar_iss.net_wt,0) as iss_nwt,
            '0.000' as iss_diawt,
            
            IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
            Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name,
            IFNULL(LOTINW.gross_wt,0) as lotinw_gwt,IFNULL(LOTINW.net_wt,0) as lotinw_nwt,IFNULL(LOTINW.piece,0) as lotinw_pcs,
            IFNULL(BRAINW.gross_wt,0) as brainw_gwt,IFNULL(BRAINW.net_wt,0) as brainw_nwt,IFNULL(BRAINW.piece,0) as brainw_pcs,sec.section_name,wt.id_weight,
            concat(wt.from_weight,'-',wt.to_weight) as weight_range,d.design_name as design_name, sm.sub_design_name as sub_design_name,
            t.design_id,t.id_sub_design
                                    
            FROM ret_taging t
            LEFT JOIN ret_product_master p on p.pro_id=t.product_id
            LEFT JOIN ret_design_master d   ON d.design_no = t.design_id
            LEFT JOIN ret_sub_design_master sm   ON sm.id_sub_design = t.id_sub_design
            LEFT JOIN branch b on b.id_branch=t.current_branch
            left join ret_category c on c.id_ret_category=p.cat_id
            left join metal m on m.id_metal=c.id_metal
            LEFT JOIN ret_section sec on sec.id_section=t.id_section
            LEFT JOIN ret_weight wt ON wt.id_product = t.product_id AND (t.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            
            LEFT JOIN(SELECT tag.tag_code,tag.tag_id,tag.old_tag_id,p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,
            ifnull(SUM(tag.piece),0) as piece,tag.product_id as id_product,p.cat_id,tag.id_section,
            wt.id_weight,tag.design_id,tag.id_sub_design
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE m2.id_tag_status_log IS NULL  and m1.issuspensestock = 0
            ".($id_branch!='' ? " and m1.to_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as blc ON ".($group_by==1 ? " blc.id_product = t.product_id " : ($group_by ==2 ? " blc.cat_id = p.cat_id" :($group_by ==3 ?"blc.id_product = t.product_id and blc.id_section = t.id_section and blc.id_weight = wt.id_weight":"blc.id_product = t.product_id and blc.design_id = t.design_id and blc.id_sub_design = t.id_sub_design")))."
            
            LEFT JOIN(SELECT IFNULL(SUM(s.wt),0) as dia_wt,tag.product_id as id_product,p.cat_id,
            tag.id_section,wt.id_weight,tag.design_id,tag.id_sub_design
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category = p.cat_id
            LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
            LEFT JOIN ret_taging_stone  as s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE m2.id_tag_status_log IS NULL  and st.stone_type = 1
            ".($id_branch!='' ? " and m1.to_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as blc_dwt ON ".($group_by==1 ? " blc_dwt.id_product = t.product_id " : ($group_by ==2 ? " blc_dwt.cat_id = p.cat_id" :($group_by ==3 ?"blc_dwt.id_product = t.product_id and blc_dwt.id_section = t.id_section and blc_dwt.id_weight = wt.id_weight":"blc_dwt.id_product = t.product_id and blc_dwt.design_id = t.design_id and blc_dwt.id_sub_design = t.id_sub_design")))."
           
            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,tag.id_section,
            wt.id_weight,tag.design_id,tag.id_sub_design
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($id_branch!='' ? " and m2.to_branch in (".$id_branch.")" :'')." and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE tag.tag_id IS NOT NULL  and m1.issuspensestock = 0
            ".($id_branch!='' ? " and m1.to_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as INW ON ".($group_by==1 ? " INW.product_id = t.product_id " : ($group_by ==2 ? " INW.cat_id = p.cat_id" :($group_by ==3 ?"INW.product_id = t.product_id and INW.id_section = t.id_section and INW.id_weight = wt.id_weight":"INW.product_id = t.product_id and INW.design_id = t.design_id and INW.id_sub_design = t.id_sub_design")))."
            
            LEFT JOIN(SELECT IFNULL(SUM(s.wt),0) as dwt,tag.product_id,p.cat_id,tag.id_section,wt.id_weight,
            tag.design_id,tag.id_sub_design
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($id_branch!='' ? " and m2.to_branch in (".$id_branch.")" :'')." and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
            LEFT JOIN ret_taging_stone  as s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
            ".($id_branch!='' ? " and m1.to_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as INW_dwt ON ".($group_by==1 ? " INW_dwt.product_id = t.product_id " : ($group_by ==2 ? " INW_dwt.cat_id = p.cat_id" :($group_by ==3 ?"INW_dwt.product_id = t.product_id and INW.id_section = t.id_section and INW.id_weight = wt.id_weight":"INW.product_id = t.product_id and INW.design_id = t.design_id and INW.id_sub_design = t.id_sub_design")))."
           
                
            LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,wt.id_weight,
            tag.design_id,tag.id_sub_design
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE bill.bill_status = 1  and b.item_type = 0 and
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
            ".($id_branch!='' ? " and bill.id_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as s ON ".($group_by==1 ? " s.product_id = t.product_id " : ($group_by ==2 ? " s.cat_id = p.cat_id" :($group_by ==3 ?"s.product_id = t.product_id and s.id_section = t.id_section and s.id_weight = wt.id_weight":"s.product_id = t.product_id and s.design_id = t.design_id and s.id_sub_design = t.id_sub_design")))."
            
            LEFT JOIN (SELECT IFNULL(SUM(s.wt),0) as dia_wt,tag.product_id,p.cat_id,tag.id_section,
            wt.id_weight,tag.design_id,tag.id_sub_design
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_taging_stone  as s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE bill.bill_status = 1 and b.item_type = 0 and st.stone_type = 1 AND
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
            ".($id_branch!='' ? " and bill.id_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as s_dwt ON ".($group_by==1 ? " s_dwt.product_id = t.product_id " : ($group_by ==2 ? " s_dwt.cat_id = p.cat_id" :($group_by ==3 ?"s_dwt.product_id = t.product_id and s_dwt.id_section = t.id_section and s_dwt.id_weight = wt.id_weight":"s_dwt.product_id = t.product_id and s_dwt.design_id = t.design_id and s_dwt.id_sub_design = t.id_sub_design")))."
            
            LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,tag.id_section,wt.id_weight,
            tag.design_id,tag.id_sub_design
            FROM ret_taging tag
            LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch in(".$id_branch.") and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=15 or l.status=16 or l.status=17)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=15 or l.status=16 or l.status=17)
            ".($id_branch!='' ? " and l.from_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as br_out ON ".($group_by==1 ? " br_out.product_id = t.product_id " : ($group_by ==2 ? " br_out.cat_id = p.cat_id" :($group_by ==3 ?"br_out.product_id = t.product_id and br_out.id_section = t.id_section and br_out.id_weight = wt.id_weight":"br_out.product_id = t.product_id and br_out.design_id = t.design_id and br_out.id_sub_design = t.id_sub_design")))."
            
            LEFT JOIN (SELECT IFNULL(SUM(s.wt),0) as dia_wt,tag.product_id,p.cat_id,tag.id_section,
            wt.id_weight,tag.design_id,tag.id_sub_design
            FROM ret_taging tag
            LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch in(".$id_branch.") and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=15 or l.status=16 or l.status=17)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_taging_stone  as s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt')  and st.stone_type = 1 and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
            ".($id_branch!='' ? " and l.from_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as br_out_dwt ON ".($group_by==1 ? " br_out_dwt.product_id = t.product_id " : ($group_by ==2 ? " br_out_dwt.cat_id = p.cat_id" :($group_by ==3 ?"br_out_dwt.product_id = t.product_id and br_out_dwt.id_section = t.id_section and br_out_dwt.id_weight = wt.id_weight":"br_out_dwt.product_id = t.product_id and br_out_dwt.design_id = t.design_id and br_out_dwt.id_sub_design = t.id_sub_design")))."
            
            LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,
            ifnull(SUM(tag.piece),0) as piece,p.cat_id,tag.id_section,wt.id_weight,
            tag.design_id,tag.id_sub_design
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '$ToDt')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE m2.id_tag_status_log IS NULL
            ".($id_branch!='' ? " and m1.to_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND m1.status = 0 AND date(m1.date) <= '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as current ON ".($group_by==1 ? " current.product_id = t.product_id " : ($group_by ==2 ? " current.cat_id = p.cat_id" :($group_by ==3 ?"current.product_id = t.product_id and current.id_section = t.id_section and current.id_weight = wt.id_weight":"current.product_id = t.product_id and current.design_id = t.design_id and current.id_sub_design = t.id_sub_design")))."
        
            LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name,
            p.cat_id,t.id_section,wt.id_weight,t.design_id,t.id_sub_design
            FROM ret_taging_status_log l
            LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
            LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = t.product_id AND (t.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
            ".($id_branch!='' ? " and l.from_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and t.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " t.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " t.product_id,t.id_section,wt.id_weight":"t.product_id,t.design_id,t.id_sub_design"))).") as in_trans ON ".($group_by==1 ? " in_trans.product_id = t.product_id " : ($group_by ==2 ? " in_trans.cat_id = p.cat_id" :($group_by ==3 ?"in_trans.product_id = t.product_id and in_trans.id_section = t.id_section and in_trans.id_weight = wt.id_weight":"in_trans.product_id = t.product_id and in_trans.design_id = t.design_id and in_trans.id_sub_design = t.id_sub_design")))."
            
            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,ifnull(SUM(tag.piece),0) as piece,tag.id_section,
            wt.id_weight,tag.design_id,tag.id_sub_design
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($id_branch!='' ? " and m2.to_branch in (".$id_branch.")" :'')." and m2.status = 0 and m1.from_branch IS NOT NULL)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE tag.tag_id IS NOT NULL  and m1.issuspensestock = 0 and m1.from_branch IS NOT NULL
            ".($id_branch!='' ? " and m1.to_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as BRAINW ON ".($group_by==1 ? " BRAINW.product_id = t.product_id " : ($group_by ==2 ? " BRAINW.cat_id = p.cat_id" :($group_by ==3 ?"BRAINW.product_id = t.product_id and BRAINW.id_section = t.id_section and BRAINW.id_weight = wt.id_weight":"BRAINW.product_id = t.product_id and BRAINW.design_id = t.design_id and BRAINW.id_sub_design = t.id_sub_design")))."
            
            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,tag.id_section,wt.id_weight,tag.design_id,tag.id_sub_design
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($id_branch!='' ? " and m2.to_branch in (".$id_branch.")" :'')." and m2.status = 0 AND m1.from_branch IS  NULL)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE tag.tag_id IS NOT NULL  and m1.issuspensestock = 0 and m1.from_branch IS  NULL
            ".($id_branch!='' ? " and m1.to_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as LOTINW ON ".($group_by==1 ? " LOTINW.product_id = t.product_id " : ($group_by ==2 ? " LOTINW.cat_id = p.cat_id" :($group_by ==3 ?"LOTINW.product_id = t.product_id and LOTINW.id_section = t.id_section and LOTINW.id_weight = wt.id_weight":"LOTINW.product_id = t.product_id and LOTINW.design_id = t.design_id and LOTINW.id_sub_design = t.id_sub_design")))."

            LEFT JOIN(SELECT t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,
            sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,
            pro.cat_id
            FROM ret_purchase_return_items pri
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
            LEFT JOIN ret_weight wt ON wt.id_product = t.product_id AND (t.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
            LEFT JOIN ret_design_master des on des.design_no = t.design_id
            LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
            WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
            ".($id_branch!='' ? " and pr.id_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and t.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " t.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " t.product_id,t.id_section,wt.id_weight":"t.product_id,t.design_id,t.id_sub_design"))).") as pur_ret on ".($group_by==1 ? " pur_ret.product_id = t.product_id " : ($group_by ==2 ? " pur_ret.cat_id = p.cat_id" :($group_by ==3 ?"pur_ret.product_id = t.product_id and pur_ret.id_section = t.id_section and pur_ret.id_weight = wt.id_weight":"pur_ret.product_id = t.product_id and pur_ret.design_id = t.design_id and pur_ret.id_sub_design = t.id_sub_design")))."


            LEFT JOIN(SELECT sum(ret_stn.ret_stone_wt) as diaWt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
            FROM ret_purchase_return_stone_items ret_stn
            LEFT JOIN ret_purchase_return_items pri on pri.pur_ret_itm_id = ret_stn.pur_ret_return_id
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
            LEFT JOIN ret_weight wt ON wt.id_product = t.product_id AND (t.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
            LEFT JOIN ret_design_master des on des.design_no = t.design_id
            LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
            LEFT JOIN ret_stone st on st.stone_id = ret_stn.ret_stone_id
            LEFT JOIN ret_uom u on u.uom_id = ret_stn.ret_stone_uom
            WHERE pr.bill_status = 1 and (date(bill_date) BETWEEN '$FromDt' AND '$ToDt')
            and pri.return_item_type = 2 and pr.tag_issue_from = 1 and st.stone_type = 1 
            ".($id_branch!='' ? " and pr.id_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and t.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " t.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " t.product_id,t.id_section,wt.id_weight":"t.product_id,t.design_id,t.id_sub_design"))).") as stn_pur_ret on ".($group_by==1 ? " stn_pur_ret.product_id = t.product_id " : ($group_by ==2 ? " stn_pur_ret.cat_id = p.cat_id" :($group_by ==3 ?"stn_pur_ret.product_id = t.product_id and stn_pur_ret.id_section = t.id_section and stn_pur_ret.id_weight = wt.id_weight":"stn_pur_ret.product_id = t.product_id and stn_pur_ret.design_id = t.design_id and stn_pur_ret.id_sub_design = t.id_sub_design")))."

            LEFT JOIN(SELECT t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,
            sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt
            FROM ret_karigar_metal_issue_details kmi
            LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
            LEFT join ret_taging t on t.tag_id = kmi.tag_id
            LEFT JOIN ret_weight wt ON wt.id_product = t.product_id AND (t.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
            WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
            and kmi.tag_id is not null 
            ".($id_branch!='' ? " and km.id_branch in(".$id_branch.")" :'')."
            GROUP BY ".($group_by==1 ? " t.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " t.product_id,t.id_section,wt.id_weight":"t.product_id,t.design_id,t.id_sub_design"))).") as kar_iss on ".($group_by==1 ? " kar_iss.product_id = t.product_id " : ($group_by ==2 ? " kar_iss.cat_id = p.cat_id" :($group_by ==3 ?"kar_iss.product_id = t.product_id and kar_iss.id_section = t.id_section and kar_iss.id_weight = wt.id_weight":"kar_iss.product_id = t.product_id and kar_iss.design_id = t.design_id and kar_iss.id_sub_design = t.id_sub_design")))."
            
            
            where t.tag_id is not null
            ".($data['id_category']!='' && $data['id_category']!=0 ? " and p.cat_id=".$data['id_category']."" :'')."
            ".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
            ".($data['id_design']!='' ? " and t.design_id=".$data['id_design']."" :'')."
                ".($data['id_sub_design']!='' ? " and t.id_sub_design=".$data['id_sub_design']."" :'')."
                ".($data['prod_group_id']!='' && $data['prod_group_id']!=0 ? " and p.prod_group_id=".$data['prod_group_id']."" :'')."
            ".($group_by==3 ?  " and wt.id_weight IS NOT NULL" :'')."
            ".($metal!='' && $metal !='0' ? " and m.id_metal in (".$metal.") " :'' )."
            GROUP by ".($group_by==1 ? " t.product_id" : ($group_by==2 ? " p.cat_id" : ($group_by==3 ?" t.product_id,t.id_section,wt.id_weight":"t.product_id,t.design_id,t.id_sub_design")))."
            order by c.sort,p.pro_id ASC");
        }else{
            $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
            (IFNULL(blc.gross_wt,0)) as op_blc_gwt,
            (IFNULL(blc.net_wt,0)) as op_blc_nwt,
            (IFNULL(blc.piece,0)) as op_blc_pcs,(IFNULL(blc_dwt.dia_wt,0)) as op_blc_dwt,
            IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(INW_dwt.dwt,0) as inw_dwt,
            IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(s_dwt.dia_wt,0) as sold_dwt,
            IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,IFNULL(br_out_dwt.dia_wt,0) as br_out_dwt,
            IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
            IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
            Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name,
            IFNULL(LOTINW.gross_wt,0) as lotinw_gwt,IFNULL(LOTINW.net_wt,0) as lotinw_nwt,IFNULL(LOTINW.piece,0) as lotinw_pcs,
            IFNULL(BRAINW.gross_wt,0) as brainw_gwt,IFNULL(BRAINW.net_wt,0) as brainw_nwt,IFNULL(BRAINW.piece,0) as brainw_pcs,sec.section_name,
            d.design_name as design_name, sm.sub_design_name as sub_design_name,t.design_id,t.id_sub_design,t.id_section,
            wt.id_weight,p.cat_id
            FROM ret_taging t
            LEFT JOIN ret_section sec on sec.id_section=t.id_section
            LEFT JOIN ret_product_master p on p.pro_id=t.product_id
            LEFT JOIN ret_design_master d   ON d.design_no = t.design_id
            LEFT JOIN ret_sub_design_master sm   ON sm.id_sub_design = t.id_sub_design
            LEFT JOIN branch b on b.id_branch=t.current_branch
            left join ret_category c on c.id_ret_category=p.cat_id
            left join metal m on m.id_metal=c.id_metal
            LEFT JOIN ret_weight wt ON wt.id_product = t.product_id AND (t.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            LEFT JOIN(SELECT tag.tag_code,tag.tag_id,tag.old_tag_id,p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,
            ifnull(SUM(tag.piece),0) as piece,tag.product_id as id_product,p.cat_id,
            tag.id_section,tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE m2.id_tag_status_log IS NULL  and m1.issuspensestock = 0
            ".($id_branch!='' && $id_branch!= 0? " and m1.to_branch in(".$id_branch.")" :'and m1.to_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as blc ON ".($group_by==1 ? " blc.id_product = t.product_id " : ($group_by ==2 ? " blc.cat_id = p.cat_id" :($group_by ==3 ?"blc.id_product = t.product_id and blc.id_section = t.id_section and blc.id_weight = wt.id_weight":"blc.id_product = t.product_id and blc.design_id = t.design_id and blc.id_sub_design = t.id_sub_design")))."
            LEFT JOIN(SELECT IFNULL(SUM(s.wt),0) as dia_wt,tag.product_id as id_product,p.cat_id,
            tag.id_section,tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category = p.cat_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
            LEFT JOIN ret_taging_stone  as s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            WHERE m2.id_tag_status_log IS NULL  and st.stone_type = 1
            ".($id_branch!='' && $id_branch!= 0? " and m1.to_branch in(".$id_branch.")" :'and m1.to_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as blc_dwt ON ".($group_by==1 ? " blc_dwt.id_product = t.product_id " : ($group_by ==2 ? " blc_dwt.cat_id = p.cat_id" :($group_by ==3 ?"blc_dwt.id_product = t.product_id and blc_dwt.id_section = t.id_section and blc_dwt.id_weight = wt.id_weight":"blc_dwt.id_product = t.product_id and blc_dwt.design_id = t.design_id and blc_dwt.id_sub_design = t.id_sub_design")))."
            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,tag.id_section,
            tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($id_branch!='' && $id_branch!=0  ? " and m2.to_branch in (".$id_branch.")" :'and m2.to_branch IS NOT NULL')." and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            WHERE tag.tag_id IS NOT NULL  and m1.issuspensestock = 0
            ".($id_branch!='' && $id_branch!= 0? " and m1.to_branch in(".$id_branch.")" :'and m1.to_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as INW ON ".($group_by==1 ? " INW.product_id = t.product_id " : ($group_by ==2 ? " INW.cat_id = p.cat_id" :($group_by ==3 ?"INW.product_id = t.product_id and INW.id_section = t.id_section and INW.id_weight = wt.id_weight":"INW.product_id = t.product_id and INW.design_id = t.design_id and INW.id_sub_design = t.id_sub_design")))."
            LEFT JOIN(SELECT IFNULL(SUM(s.wt),0) as dwt,tag.product_id,p.cat_id,tag.id_section,
            tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($data['id_branch']!='' && $data['id_branch']!=0  ? " and m2.to_branch=".$data['id_branch']."" :'and m2.to_branch IS NOT NULL')." and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_purity as pur ON pur.id_purity = tag.purity
            LEFT JOIN ret_taging_stone  as s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            WHERE tag.tag_id IS NOT NULL  and st.stone_type = 1
            ".($id_branch!='' && $id_branch!= 0? " and m1.to_branch in(".$id_branch.")" :'and m1.to_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as INW_dwt ON ".($group_by==1 ? " INW_dwt.product_id = t.product_id " : ($group_by ==2 ? " INW_dwt.cat_id = p.cat_id" :($group_by ==3 ?"INW_dwt.product_id = t.product_id and INW.id_section = t.id_section and INW.id_weight = wt.id_weight":"INW.product_id = t.product_id and INW.design_id = t.design_id and INW.id_sub_design = t.id_sub_design")))."
            LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,
            tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE bill.bill_status = 1 and
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
            ".($id_branch!=''  && $id_branch!= 0 ? " and bill.id_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as s ON ".($group_by==1 ? " s.product_id = t.product_id " : ($group_by ==2 ? " s.cat_id = p.cat_id" :($group_by ==3 ?"s.product_id = t.product_id and s.id_section = t.id_section and s.id_weight = wt.id_weight":"s.product_id = t.product_id and s.design_id = t.design_id and s.id_sub_design = t.id_sub_design")))."
            LEFT JOIN (SELECT IFNULL(SUM(s.wt),0) as dia_wt,tag.product_id,p.cat_id,tag.id_section,
            tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            LEFT JOIN ret_taging_stone  as s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            WHERE bill.bill_status = 1 and b.item_type = 0 and st.stone_type = 1 AND
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
            ".($id_branch!=''  && $id_branch!= 0 ? " and bill.id_branch in(".$id_branch.")" :'')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as s_dwt ON ".($group_by==1 ? " s_dwt.product_id = t.product_id " : ($group_by ==2 ? " s_dwt.cat_id = p.cat_id" :($group_by ==3 ?"s_dwt.product_id = t.product_id and s_dwt.id_section = t.id_section and s_dwt.id_weight = wt.id_weight":"s_dwt.product_id = t.product_id and s_dwt.design_id = t.design_id and s_dwt.id_sub_design = t.id_sub_design")))."
            LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
                SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,tag.id_section,
                tag.design_id,tag.id_sub_design,wt.id_weight
                FROM ret_taging tag
                LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id ".($id_branch!=''  &&  $id_branch != 0  ? " and l.from_branch in (".$id_branch.")" :' and l.from_branch IS NOT NULL')." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=15 or l.status=16 or l.status=17)
                LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=15 or l.status=16 or l.status=17)
            ".($id_branch!='' && $id_branch!=0  ? " and l.from_branch in (".$id_branch.")" :'and l.from_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as br_out ON ".($group_by==1 ? " br_out.product_id = t.product_id " : ($group_by ==2 ? " br_out.cat_id = p.cat_id" :($group_by ==3 ?"br_out.product_id = t.product_id and br_out.id_section = t.id_section and br_out.id_weight = wt.id_weight":"br_out.product_id = t.product_id and br_out.design_id = t.design_id and br_out.id_sub_design = t.id_sub_design")))."
            LEFT JOIN (SELECT IFNULL(SUM(s.wt),0) as dia_wt,tag.product_id,p.cat_id,tag.id_section,
            tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging tag
            LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id ".($id_branch!=''  &&  $id_branch != 0  ? " and l.from_branch in (".$id_branch.")" :' and l.from_branch IS NOT NULL')." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=15 or l.status=16 or l.status=17)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_taging_stone  as s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom as uom ON uom.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt')  and st.stone_type = 1 and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
            ".($id_branch!='' && $id_branch!=0  ? " and l.from_branch in (".$id_branch.")" :'and l.from_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as br_out_dwt ON ".($group_by==1 ? " br_out_dwt.product_id = t.product_id " : ($group_by ==2 ? " br_out_dwt.cat_id = p.cat_id" :($group_by ==3 ?"br_out_dwt.product_id = t.product_id and br_out_dwt.id_section = t.id_section and br_out_dwt.id_weight = wt.id_weight":"br_out_dwt.product_id = t.product_id and br_out_dwt.design_id = t.design_id and br_out_dwt.id_sub_design = t.id_sub_design")))."
            LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,
            ifnull(SUM(tag.piece),0) as piece,p.cat_id,tag.id_section,
            tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '$ToDt')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE m2.id_tag_status_log IS NULL
            ".($id_branch!='' && $id_branch!=0  ? " and m1.to_branch in (".$id_branch.")" :'and m1.to_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND m1.status = 0 AND date(m1.date) <= '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as current ON ".($group_by==1 ? " current.product_id = t.product_id " : ($group_by ==2 ? " current.cat_id = p.cat_id" :($group_by ==3 ?"current.product_id = t.product_id and current.id_section = t.id_section and current.id_weight = wt.id_weight":"current.product_id = t.product_id and current.design_id = t.design_id and current.id_sub_design = t.id_sub_design")))."
            LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name,
            p.cat_id,t.id_section,t.design_id,t.id_sub_design,wt.id_weight
            FROM ret_taging_status_log l
            LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
            LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = t.product_id AND (t.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
            ".($id_branch!='' && $id_branch!=0  ? " and l.from_branch in (".$id_branch.")" :'and l.from_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and t.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            GROUP BY ".($group_by==1 ? " t.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " t.product_id,t.id_section,wt.id_weight":"t.product_id,t.design_id,t.id_sub_design"))).") as in_trans ON ".($group_by==1 ? " in_trans.product_id = t.product_id " : ($group_by ==2 ? " in_trans.cat_id = p.cat_id" :($group_by ==3 ?"in_trans.product_id = t.product_id and in_trans.id_section = t.id_section and in_trans.id_weight = wt.id_weight":"in_trans.product_id = t.product_id and in_trans.design_id = t.design_id and in_trans.id_sub_design = t.id_sub_design")))."
            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,tag.id_section,
            tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($id_branch!='' ? " and m2.to_branch in (".$id_branch.")" :'and m2.to_branch IS NOT NULL')." and m2.status = 0 and m1.from_branch IS NOT NULL)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE tag.tag_id IS NOT NULL  and m1.issuspensestock = 0 and m1.from_branch IS NOT NULL
            ".($id_branch!='' && $id_branch!=0  ? " and m1.to_branch in (".$id_branch.")" :'and m1.to_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as BRAINW ON ".($group_by==1 ? " BRAINW.product_id = t.product_id " : ($group_by ==2 ? " BRAINW.cat_id = p.cat_id" :($group_by ==3 ?"BRAINW.product_id = t.product_id and BRAINW.id_section = t.id_section and BRAINW.id_weight = wt.id_weight":"BRAINW.product_id = t.product_id and BRAINW.design_id = t.design_id and BRAINW.id_sub_design = t.id_sub_design")))."
            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
            tag.id_section,tag.design_id,tag.id_sub_design,wt.id_weight
            FROM ret_taging_status_log m1
            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($id_branch!='' ? " and m2.to_branch in (".$id_branch.")" :'and m2.to_branch IS NOT NULL')." and m2.status = 0 AND m1.from_branch IS  NULL)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
            WHERE tag.tag_id IS NOT NULL  and m1.issuspensestock = 0 and m1.from_branch IS  NULL
            ".($id_branch!='' && $id_branch!=0  ? " and m1.to_branch in (".$id_branch.")" :'and m1.to_branch IS NOT NULL')."
            ".($group_by==3 && $from_weight!='' && $to_weight!='' ? " and tag.gross_wt BETWEEN ".$from_weight." AND ".$to_weight." " :'')."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY ".($group_by==1 ? " tag.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " tag.product_id,tag.id_section,wt.id_weight":"tag.product_id,tag.design_id,tag.id_sub_design"))).") as LOTINW ON ".($group_by==1 ? " LOTINW.product_id = t.product_id " : ($group_by ==2 ? " LOTINW.cat_id = p.cat_id" :($group_by ==3 ?"LOTINW.product_id = t.product_id and LOTINW.id_section = t.id_section and LOTINW.id_weight = wt.id_weight":"LOTINW.product_id = t.product_id and LOTINW.design_id = t.design_id and LOTINW.id_sub_design = t.id_sub_design")))."
            where t.tag_id is not null
            ".($data['id_category']!='' && $data['id_category']!=0 ? " and p.cat_id=".$data['id_category']."" :'')."
            ".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
            ".($data['id_design']!='' ? " and t.design_id=".$data['id_design']."" :'')."
            ".($data['id_sub_design']!='' ? " and t.id_sub_design=".$data['id_sub_design']."" :'')."
            ".($metal!='' && $metal !='0' ? " and m.id_metal in (".$metal.") " :'' )."
            ".($data['prod_group_id']!='' && $data['prod_group_id']!=0 ? " and p.prod_group_id=".$data['prod_group_id']."" :'')."
            GROUP by ".($group_by==1 ? " t.product_id" : ($group_by==2 ? " p.cat_id" : ($group_by==3 ?" t.product_id,t.id_section,wt.id_weight":"t.product_id,t.design_id,t.id_sub_design")))."
            order by c.sort,p.pro_id ASC");
        }
             // print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            foreach($result as $r){
				if($group_by==1 || $group_by==2){
					$stock_detail[$r['metal_name']][$r['category_name']][] = $r;
				}else if($group_by==3){
					 $stock_detail[$r['section_name']][$r['product_name']][] = $r;
				}
                else{
                    $stock_detail[$r['product_name']][$r['design_name']][] = $r;
                }
			}
    	    return $stock_detail;
    }
    function get_approvalstock_details($data)
    {
       $stock_detail = [];
       if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
        $group_by = $data['group_by'];//1-Product,2-Category
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
                        	(IFNULL(blc.gross_wt,0)) as op_blc_gwt,
                        	(IFNULL(blc.net_wt,0)) as op_blc_nwt,
                        	(IFNULL(blc.piece,0)) as op_blc_pcs,
                        	IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
                        	IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
                        	IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
                        	IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
                        	IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
                        	Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name
                        	FROM ret_taging t
                        	LEFT JOIN ret_product_master p on p.pro_id=t.product_id
                        	LEFT JOIN branch b on b.id_branch=t.current_branch
                        	left join ret_category c on c.id_ret_category=p.cat_id
                        	left join metal m on m.id_metal=c.id_metal
                        	LEFT JOIN(SELECT tag.tag_code,tag.tag_id,tag.old_tag_id,p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
                            ifnull(SUM(tag.net_wt),0) as net_wt,
                            ifnull(SUM(tag.piece),0) as piece,tag.product_id as id_product,p.cat_id
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND m2.issuspensestock = 1 AND date(m2.date) <= '".$op_blc_to_date."')
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            left join ret_category c on c.id_ret_category=p.cat_id
                            WHERE m2.id_tag_status_log IS NULL
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."' AND m1.issuspensestock = 1
                            GROUP BY ".($group_by==1 ? " tag.product_id" :" p.cat_id").") as blc ON ".($group_by==1 ? " blc.id_product = t.product_id " : " blc.cat_id = p.cat_id" )."
                            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND m2.issuspensestock = 1 AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE tag.tag_id IS NOT NULL
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')." AND m1.issuspensestock = 1
                            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") INW on ".($group_by==1 ? " INW.product_id = t.product_id " : " INW.cat_id = p.cat_id" )."
                        	LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                        	SUM(tag.piece) as piece,tag.product_id,p.cat_id
                        	FROM ret_adv_receipt_tags t
                        	LEFT JOIN ret_issue_receipt r ON r.id_issue_receipt = t.adv_rcpt_issue_receipt_id
                        	LEFT JOIN ret_taging tag on tag.tag_id = t.adv_rcpt_tagid
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE r.bill_status = 1 and
                        	(date(r.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND tag.product_id = p.pro_id
                        	".($data['id_branch']!='' ? " and r.id_branch=".$data['id_branch']." " :'')."  AND ifnull(tag.tag_type,0) = 1
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") s ON ".($group_by==1 ? " s.product_id = t.product_id " : "s.cat_id = p.cat_id" )."
                        	LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
                        		SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                        		FROM ret_taging tag
                        		LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']." AND l.issuspensestock = 1 and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=13 or l.status=14)
                        		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
                        	(l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=13 or l.status=14)
                        	".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')." AND l.issuspensestock = 1
                        	 GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") br_out on ".($group_by==1 ? " br_out.product_id = t.product_id " : "br_out.cat_id = p.cat_id" )."
                        	LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
                        	ifnull(SUM(tag.net_wt),0) as net_wt,
                        	ifnull(SUM(tag.piece),0) as piece,p.cat_id
                        	FROM ret_taging_status_log m1
                        	LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m2.issuspensestock = 1 AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '$ToDt')
                        	LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE m2.id_tag_status_log IS NULL
                        	".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')." AND m1.issuspensestock = 1
                        	AND m1.status = 0 AND date(m1.date) <= '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") as current ON  ".($group_by==1 ? " current.product_id = t.product_id " : "current.cat_id = p.cat_id" )."
                        	LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name,
                        	p.cat_id
                        	FROM ret_taging_status_log l
                        	LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
                        	LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
                        	".($data['id_branch'] !='' ? " and l.from_branch=".$data['id_branch']."" :'')." AND l.issuspensestock = 1
                        	GROUP by ".($group_by==1 ? " t.product_id" :" p.cat_id")." ) in_trans on ".($group_by==1 ? " in_trans.product_id = t.product_id" : " in_trans.cat_id = p.cat_id" )."
                        	where t.tag_id is not null
                        	".($data['id_category']!='' && $data['id_category']!=0 ? " and p.cat_id=".$data['id_category']."" :'')."
                        	".($data['id_product']!='' ? " and t.product_id=".$data['id_product']."" :'')."
                        	".($data['id_metal']!='' && $data['id_metal']!=0 ? " and m.id_metal=".$data['id_metal']."" :'')."
                        	GROUP by ".($group_by==1 ? " t.product_id" :" p.cat_id")."
                        	order by c.sort,p.pro_id ASC");
            //print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            foreach($result as $r){
				$stock_detail[$r['metal_name']][$r['category_name']][] = $r;
			}
    	    return $stock_detail;
    }
    function get_nontag_stock_details($data)
    {
        if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
		   $multiple_id_metal = implode(' , ', $data['id_metal']);
           if($multiple_id_metal != '')
           {
               $metal = $multiple_id_metal;
           }else{
               $metal = $data['id_metal'];
            }
            $multiple_id_branch = implode(' , ', $data['id_branch']);
           if($multiple_id_branch != '')
           {
               $id_branch = $multiple_id_branch;
           }else{
               $id_branch = $data['id_branch'];
           }
           $stock_detail= [];
                // $id_branch = $data['id_branch'];
                $group_by = $data['group_by'];//1-Product,2-Category
                $sql = $this->db->query("SELECT p.pro_id,p.product_name,c.name as category_name,m.metal as metal_name,
                (IFNULL(blc_inw.no_of_piece,0)-IFNULL(blc_sales.piece,0)-IFNULL(blc_br_out.no_of_piece,0)-IFNULL(op_blc_metal_issue.piece,0)) as op_blc_pcs,
                (IFNULL(blc_inw.gross_wt,0)-IFNULL(blc_sales.gross_wt,0)-IFNULL(blc_br_out.gross_wt,0)-IFNULL(op_blc_metal_issue.gross_wt,0)) as op_blc_gwt,
                (IFNULL(blc_inw.net_wt,0)-IFNULL(blc_sales.net_wt,0)-IFNULL(blc_br_out.net_wt,0)-IFNULL(op_blc_metal_issue.net_wt,0)) as op_blc_nwt,
                IFNULL(inw.gross_wt,0) as inw_gwt,IFNULL(inw.net_wt,0) as inw_nwt,IFNULL(inw.no_of_piece,0) as inw_pcs,
                IFNULL(sales.gross_wt,0) as sales_gwt,IFNULL(sales.net_wt,0) as sales_nwt,IFNULL(sales.piece,0) as sales_pcs,
                (IFNULL(br_out.gross_wt,0)+IFNULL(metal_issue.gross_wt,0)+IFNULL(pur_ret.gross_wt,0)) as br_out_gwt,
                (IFNULL(br_out.net_wt,0)+IFNULL(metal_issue.net_wt,0)+IFNULL(pur_ret.net_wt,0)) as br_out_nwt,
                (IFNULL(br_out.no_of_piece,0)+IFNULL(metal_issue.piece,0)+IFNULL(pur_ret.pcs,0)) as br_out_pcs,p.id_section,sd.id_design,sd.id_sub_design,
                IFNULL(sec.section_name,'') as section_name,IFNULL(d.design_name,'') as design_name,
                IFNULL(sub.sub_design_name,'') as sub_design_name
                
                FROM ret_product_master p
                LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                LEFT JOIN metal m on m.id_metal=c.id_metal
                LEFT JOIN ret_section sec on sec.id_section = p.id_section
                LEFT JOIN ret_sub_design_mapping sd on sd.id_product = p.pro_id
                LEFT JOIN ret_design_master d on d.design_no = sd.id_design
                LEFT JOIN ret_sub_design_master sub on sub.id_sub_design = sd.id_sub_design
                
                LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,
                m1.design,m1.id_sub_design,p.id_section
                FROM ret_nontag_item_log m1
                LEFT JOIN ret_product_master p on p.pro_id = m1.product
                WHERE m1.product IS NOT NULL
                ".(!empty($id_branch) ? " AND m1.to_branch in (".$id_branch.") " :'and m1.to_branch IS NOT NULL')."
                AND m1.status = 0 AND
                date(m1.date) < '$FromDt'
                GROUP BY ".($group_by==1 ? "m1.product" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? "":"m1.product,m1.design,m1.id_sub_design"))).") as blc_inw ON ". ($group_by==1 ? " blc_inw.product = p.pro_id " : ($group_by ==2 ? " blc_inw.cat_id = p.cat_id" :($group_by ==3 ?"blc_inw.product = p.pro_id and blc_inw.id_section = p.id_section ":"blc_inw.product = p.pro_id  and blc_inw.design = sd.id_design and blc_inw.id_sub_design = sd.id_sub_design")))."
                
                LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
                SUM(b.piece) as piece,b.product_id,p.cat_id,p.id_section,
                b.design_id,b.id_sub_design
                FROM ret_bill_details b
                LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
                (date(bill.bill_date) < '$FromDt')
                ".(!empty($id_branch) ? " AND bill.id_branch in ( ".$id_branch.") " :'')."
                GROUP BY ".($group_by==1 ? "b.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? "b.product_id,p.id_section":"b.product_id,b.design_id,b.id_sub_design"))).") as blc_sales ON ". ($group_by==1 ? " blc_sales.product_id = p.pro_id " : ($group_by ==2 ? " blc_sales.cat_id = p.cat_id" :($group_by ==3 ?"blc_sales.product_id = p.pro_id and blc_sales.id_section = p.id_section ":"blc_sales.product_id = p.pro_id  and blc_sales.design_id = sd.id_design and blc_sales.id_sub_design = sd.id_sub_design")))."
                
                LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
                SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,
                 l.design,l.id_sub_design,p.id_section
                FROM  ret_nontag_item_log l
                LEFT JOIN ret_product_master as p ON p.pro_id = l.product
                WHERE (date(l.date) < '$FromDt' ) and
                (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10)
                ".(!empty($id_branch) ? " and l.from_branch in (".$id_branch." )" :' and l.from_branch IS NOT NULL')."
                GROUP BY ".($group_by==1 ? "l.product" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " l.product,l.id_section":"l.product,l.design,l.id_sub_design"))).") as blc_br_out ON ". ($group_by==1 ? " blc_br_out.product = p.pro_id " : ($group_by ==2 ? " blc_br_out.cat_id = p.cat_id" :($group_by ==3 ?"blc_br_out.product = p.pro_id and blc_br_out.id_section = p.id_section ":"blc_br_out.product = p.pro_id  and blc_br_out.design = sd.id_design and blc_br_out.id_sub_design = sd.id_sub_design")))."
                
                LEFT JOIN (SELECT sum(b.issue_metal_wt) as gross_wt,SUM(b.issue_metal_wt) as net_wt, IFNULL(SUM(b.issue_pcs),0) as piece,b.issu_met_pro_id as product_id,p.cat_id,
                b.issu_met_id_design as id_deisgn,b.issu_met_id_sub_design as id_sub_design,b.issu_met_id_section as id_section
                FROM ret_karigar_metal_issue_details b
                LEFT JOIN ret_karigar_metal_issue m ON m.met_issue_id = b.issue_met_parent_id
                LEFT JOIN ret_product_master p ON p.pro_id = b.issu_met_pro_id
                WHERE m.bill_status = 1
                AND (date(m.met_issue_date) < '$FromDt')
                ".(!empty($id_branch) ? " AND m.id_branch = ".$id_branch." " :'')."
                GROUP by ".($group_by==1 ? " b.issu_met_pro_id" : ($group_by==2 ? " p.cat_id" : ($group_by==3 ? " b.issu_met_pro_id,b.issu_met_id_section" : 'b.issu_met_pro_id,b.issu_met_id_design,b.issu_met_id_sub_design')) )." ) op_blc_metal_issue ON  ".($group_by==1 ? " op_blc_metal_issue.product_id = p.pro_id" : ($group_by==2 ? " op_blc_metal_issue.cat_id = p.cat_id" :($group_by ==3 ? "op_blc_metal_issue.product_id = p.pro_id and op_blc_metal_issue.id_section = p.id_section ":"op_blc_metal_issue.product_id = p.pro_id  and op_blc_metal_issue.id_deisgn = sd.id_design and op_blc_metal_issue.id_sub_design = sd.id_sub_design"))  )."
                
                LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,
                m1.design,m1.id_sub_design,p.id_section
                FROM ret_nontag_item_log m1
                LEFT JOIN ret_product_master p on p.pro_id = m1.product
                WHERE m1.product IS NOT NULL
                ".(!empty($id_branch) ? " AND m1.to_branch in (".$id_branch.")" :' AND m1.to_branch IS NOT NULL')."
                AND m1.status = 0 AND
                date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
                GROUP BY ".($group_by==1 ? "m1.product" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " m1.product,p.id_section":"m1.product,m1.design,m1.id_sub_design"))).") as inw ON ". ($group_by==1 ? " inw.product = p.pro_id " : ($group_by ==2 ? " inw.cat_id = p.cat_id" :($group_by ==3 ?"inw.product = p.pro_id and inw.id_section = p.id_section ":"inw.product = p.pro_id  and inw.design = sd.id_design and inw.id_sub_design = sd.id_sub_design")))."
                
                LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
                SUM(b.piece) as piece,b.product_id,p.cat_id,
                p.id_section,b.design_id,b.id_sub_design
                FROM ret_bill_details b
                LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
                (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
                ".(!empty($id_branch) ? " AND bill.id_branch in (".$id_branch.") " :'')."
                GROUP BY ".($group_by==1 ? "b.product_id" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? "b.product_id,p.id_section":"b.product_id,b.design_id,b.id_sub_design"))).") as sales ON ". ($group_by==1 ? " sales.product_id = p.pro_id " : ($group_by ==2 ? " sales.cat_id = p.cat_id" :($group_by ==3 ?"sales.product_id = p.pro_id and sales.id_section = p.id_section ":"sales.product_id = p.pro_id  and sales.design_id = sd.id_design and sales.id_sub_design = sd.id_sub_design")))."
                
                LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
                SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,
                l.design,l.id_sub_design,p.id_section
                FROM  ret_nontag_item_log l
                LEFT JOIN ret_product_master as p ON p.pro_id = l.product
                WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
                (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10)
                ".(!empty($id_branch) ? "   and l.from_branch in( ".$id_branch.") " :'  and l.from_branch IS NOT NULL ')."
                GROUP BY ".($group_by==1 ? "l.product" :($group_by==2 ? " p.cat_id" : ($group_by==3 ? " l.product,l.id_section":"l.product,l.design,l.id_sub_design"))).") as br_out ON ". ($group_by==1 ? " br_out.product = p.pro_id " : ($group_by ==2 ? " br_out.cat_id = p.cat_id" :($group_by ==3 ?"br_out.product = p.pro_id and br_out.id_section = p.id_section ":"br_out.product = p.pro_id  and br_out.design = sd.id_design and br_out.id_sub_design = sd.id_sub_design")))."
                
                LEFT JOIN (SELECT sum(b.issue_metal_wt) as gross_wt,SUM(b.issue_metal_wt) as net_wt, IFNULL(SUM(b.issue_pcs),0) as piece,b.issu_met_pro_id as product_id,p.cat_id,
                b.issu_met_id_design as id_deisgn,b.issu_met_id_sub_design as id_sub_design,b.issu_met_id_section as id_section
                FROM ret_karigar_metal_issue_details b
                LEFT JOIN ret_karigar_metal_issue m ON m.met_issue_id = b.issue_met_parent_id
                LEFT JOIN ret_product_master p ON p.pro_id = b.issu_met_pro_id
                WHERE m.bill_status = 1
                AND (date(m.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
                ".(!empty($id_branch) ? " AND m.id_branch = ".$id_branch." " :'')."
                GROUP by ".($group_by==1 ? " b.issu_met_pro_id" : ($group_by==2 ? " p.cat_id" : ($group_by==3 ? " b.issu_met_pro_id,b.issu_met_id_section" : 'b.issu_met_pro_id,b.issu_met_id_design,b.issu_met_id_sub_design')) )." ) metal_issue ON  ".($group_by==1 ? " metal_issue.product_id = p.pro_id" : ($group_by==2 ? " metal_issue.cat_id = p.cat_id" :($group_by ==3 ? "metal_issue.product_id = p.pro_id and metal_issue.id_section = p.id_section ":"metal_issue.product_id = p.pro_id  and metal_issue.id_deisgn = sd.id_design and metal_issue.id_sub_design = sd.id_sub_design"))  )."

                LEFT JOIN(SELECT sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,
                sum(pri.pur_ret_pcs) as pcs,pri.id_product as product_id ,pri.id_section as id_section,
                pri.id_design,pri.id_sub_design,pro.cat_id
                FROM ret_purchase_return_items pri
                LEFT JOIN ret_product_master pro on pro.pro_id = pri.id_product
                LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
                LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
                where pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
                and pri.return_item_type = 3 
                ".(!empty($id_branch) ? " AND pr.id_branch = ".$id_branch." " :'')." 
                GROUP by ".($group_by==1 ? "pri.id_product" : ($group_by==2 ? "pro.cat_id" : ($group_by==3 ? "pri.id_product,pri.id_section" : "pri.id_product,pri.id_design,pri.id_sub_design" ))).") as pur_ret on ".($group_by==1 ? "pur_ret.product_id=p.pro_id": ($group_by==2 ? "pur_ret.cat_id = p.cat_id" : ($group_by==3 ? "pur_ret.product_id=p.pro_id and pur_ret.id_section=p.id_section" : "pur_ret.product_id=p.pro_id and pur_ret.id_design=sd.id_design and pur_ret.id_sub_design = sd.id_sub_design")))."
               
                WHERE p.stock_type = 2
                ".($data['id_category']!='' && $data['id_category']!=0 ? " and p.cat_id=".$data ['id_category']."" :'')."
                ".($data['id_product']!='' ? " and p.pro_id=".$data['id_product']."" :'')."
                ".($data['id_design']!='' ? " and sd.id_design=".$data['id_design']."" :'')."
                 ".($data['id_sub_design']!='' ? " and sd.id_sub_design=".$data['id_sub_design']."" :'')."
                 ".($data['prod_group_id']!='' && $data['prod_group_id']!=0 ? " and p.prod_group_id=".$data['prod_group_id']."" :'')."
                ".($metal!='' && $metal !='0' ? " and m.id_metal in (".$metal.") " :'' )."
                GROUP by ".($group_by==1 ? " p.pro_id" :($group_by==2 ?" p.cat_id" :($group_by==3 ?"p.id_section,p.pro_id" :"p.pro_id,sd.id_design,sd.id_sub_design")))."
                ");
            // print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            foreach($result as $r){
				if($group_by==1 || $group_by==2){
					$stock_detail[$r['metal_name']][$r['category_name']][] = $r;
				}else if($group_by==3){
					 $stock_detail[$r['section_name']][$r['product_name']][] = $r;
				}
                else{
                    $stock_detail[$r['product_name']][$r['design_name']][] = $r;
                }
             }
    	    return $stock_detail;
     }
    //day closing report
    function getDayCloseLog_Details($id_branch,$stock_date,$stock_type)
    {
        $sql= $this->db->query("
        SELECT * FROM ret_stock_balance WHERE type = ".$stock_type."  AND id_branch = ".$id_branch." AND date(date) = '".date('Y-m-d',strtotime($stock_date))."'"
        );
        //echo "<pre>";print_r($this->db->last_query());exit;
        return $sql->num_rows();
    }
    function day_closing_report($data)
    {
        $returnData = array();
        $stock_type = array("0"=>1,"1"=>2);
        $sql = $this->db->query("SELECT * FROM branch where active=1 ".($data['id_branch']!='' ? " and id_branch = ".$data['id_branch']." " :'')." ");
        $result = $sql->result_array();
        //echo "<pre>";print_r($stock_type);exit;
        foreach($result as $branch)
        {
            foreach($stock_type as $val)
            {
                $TaggedItems = $this->getDayCloseLog_Details($branch['id_branch'],$data['stock_date'],$val);
                $returnData[]=array(
                               'id_branch'      =>$branch['id_branch'],
                               'branch_name'    =>$branch['name'],
                               'stockType'     =>($val==1 ? 'Tagged' : 'Non Tagged'),
                               'stock_type'     =>$val,
                               'records'        =>(($TaggedItems)>0 ? $TaggedItems['records'] :0),
                                 );
            }
        }
        return $returnData;
    }
    /*
    function day_transactions_report($data)
    {
        $id_branch = $data['id_branch'];
        $FromDt = date('Y-m-d',strtotime($data['from_date']));
        $ToDt   = date('Y-m-d',strtotime($data['to_date']));
        $mode   = $data['mode'];
        if($mode == 0){
                    $sql    = $this->db->query("SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.sales_ref_no,
                                b.billing_for,
                                if((b.bill_type <=3 OR b.bill_type = 9), concat(br.short_name, '-SA-' , metal_code, '-', sales_ref_no), if(b.bill_type = 5, concat(br.short_name,'-OD-', order_adv_ref_no), if(b.bill_type = 8 , concat(br.short_name,'-CC-', credit_coll_refno), if(b.bill_type = 11 , concat(br.short_name,'-RD-', b.bill_no), '')))) as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, b.round_off_amt as roundoff,
                                CAST(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) AS DECIMAL(10,3)) as grsswt,
                                CAST(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) AS DECIMAL(10,3)) as netwt,
                                CAST(ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0) AS DECIMAL(10,3)) as diawt,
		                        CAST(if(b.tot_bill_amount = 0 , b.tot_amt_received, abs(b.tot_bill_amount)) AS DECIMAL(10,2)) as tot_bill_amount,
		                        CAST(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_sgst,
		                        CAST(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_cgst,
		                        CAST(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_igst,
		                        CAST(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_tax,
		                        CAST(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_item_cost,
		                        ABS(CAST(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND type = 1) , 0) AS DECIMAL(10,2))) as total_cash,
		                        CAST(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0) AS DECIMAL(10,2)) as total_paytm,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0) as total_card,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0) as total_cheque,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB') AND (id_pay_device IS NULL OR id_pay_device !=1)) , 0) as total_nb,
                        		'0' as total_cashfree,
                        		ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0) as total_chit_utlize,
                        		ifnull((SELECT sum(gift_voucher_amt) as gift_item_cost FROM ret_billing_gift_voucher_details as gift WHERE gift.bill_id = b.bill_id) , 0) as total_gift_utlize,
                        		b.tot_discount, if(b.is_credit = 1, (if(b.tot_bill_amount = 0 , b.tot_amt_received, b.tot_bill_amount) - tot_amt_received),0) as dueamount, b.handling_charges,
                        		if(b.bill_type = 5, 0, ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0)) as total_order_adv_adj,
                        		ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0) as total_adv_adj,
                        		ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0) as total_old_metal_cost,
                        		if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                        		ifnull(s_ret_refno,'-') as s_ret_refno,
                        		ifnull((SELECT sum(item_cost) as totreturn
                        				FROM ret_bill_return_details rd
                        				LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                        				WHERE rd.bill_id = b.bill_id
                        				), 0) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                        		LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (b.bill_type <=3 OR bill_type = 5 OR bill_type = 8 OR bill_type = 9 OR bill_type = 11)
                                 AND ((b.tot_bill_amount > 0 OR b.tot_amt_received > 0) OR (b.tot_bill_amount < 0 AND ((SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 1) > 0 )))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GR-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
								b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, '0' as roundoff,
                                '0' as grsswt, '0' as netwt, '0' as diawt,
		                        b.amount as tot_bill_amount,
		                        '0' as total_sgst,
		                        '0' as total_cgst,
		                        '0' as total_igst,
		                        '0' as total_tax,
		                        '0' as total_item_cost,
		                        ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0) as total_cash,
		                        ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0) as total_paytm,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0) as total_card,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0) as total_cheque,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0) as total_nb,
                        		'0' as total_cashfree,
                        		'0' as total_chit_utlize,
                        		'0' as total_gift_utlize,
                        		'0' as tot_discount, '0' as dueamount, '0' as handling_charges,
                        		'0' as total_order_adv_adj,
                        		'0' as total_adv_adj,
                        		'0' as total_old_metal_cost,
                        		'-' as pur_ref_no,
                        		'-' as s_ret_refno,
                        		'0' as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 2
                                and (receipt_type != 4 AND receipt_type != 3 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(p.date_payment, '%d-%m-%Y') as billdate,'Chit' as sales_ref_no,'' as billing_for,
                                'Chit' as voucherno,
                                '' as firstname, '' as address1,'' as address2, '' as address3, '' as cuaddress, '' as cuspincode, '' as cusstate, '' as cuscountry,
                                '' as mobile, p.id_branch,
								'' as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
		                         round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                        payment_mode_details as pmd
                                        LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
                                        WHERE date(bp.date_payment) = date(p.date_payment) AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.id_branch = p.id_branch
                                        AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL) , 0),2) as tot_bill_amount,
		                        CAST(0 AS DECIMAL(6,2)) as total_sgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_cgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_igst,
		                        CAST(0 AS DECIMAL(6,2)) as total_tax,
		                        CAST(0 AS DECIMAL(6,2)) as total_item_cost,
		                        round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
                                WHERE date(bp.date_payment) = date(p.date_payment) AND bp.id_branch = p.id_branch AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode = 'CASH' OR pmd.payment_mode = 'CSH')) , 0),2) as total_cash,
		                        round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
	                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device
								WHERE date(bp.date_payment) = date(p.date_payment) AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.id_branch = p.id_branch AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode != 'CASH' AND pmd.payment_mode != 'CSH') AND (bp.id_payGateway IS NULL OR bp.id_payGateway = 0) AND (pmd.id_pay_device IS NOT NULL AND pmd.id_pay_device !=0 AND paydev.device_type = 1)) , 0),2) as total_paytm,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(bp.date_payment) = date(p.date_payment) AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.id_branch = p.id_branch AND bp.payment_status = 1 AND bp.id_payGateway IS NULL AND bp.receipt_no IS NOT NULL AND ifnull(pmd.id_pay_device, 0) != 1 AND (pmd.payment_mode = 'CC' OR pmd.payment_mode = 'DC') ) , 0),2) as total_card,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(bp.date_payment) = date(p.date_payment) AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.id_branch = p.id_branch AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode = 'CHQ')) , 0)) as total_cheque,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(bp.date_payment) = date(p.date_payment) AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.id_branch = p.id_branch AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND ifnull(bp.id_payGateway,0) = 0 AND (pmd.payment_mode = 'NB' AND ifnull(pmd.id_pay_device,0) != 1 )) , 0),2) as total_nb,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(bp.date_payment) = date(p.date_payment) AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.id_branch = p.id_branch AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND bp.id_payGateway IS NOT NULL AND (pmd.payment_mode != 'CASH' AND pmd.payment_mode != 'CSH')) , 0),2) as total_cashfree,
                        		CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                        		CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                        		'-' as pur_ref_no,
                        		'-' as s_ret_refno,
                        		CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM payment p
								LEFT JOIN branch br ON br.id_branch = p.id_branch
								WHERE p.payment_status=1 and p.receipt_no IS NOT NULL
	                            AND p.payment_status = 1
	                           ".($id_branch!='' ? " and p.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(p.date_payment)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                 GROUP BY date(p.date_payment)
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.pur_ref_no,
                                b.billing_for,
                                if((b.bill_type =2 OR b.bill_type = 4), concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), if((b.bill_type = 3 OR b.bill_type = 7), concat(br.short_name,'-SR-', s_ret_refno), if(b.bill_type = 10 , concat(br.short_name,'-CC-', chit_preclose_refno), if((b.bill_type = 1 OR b.bill_type = 9) , concat(br.short_name,'-SA-', sales_ref_no), '')))) as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                		FROM ret_billing_item_stones bs
                                		LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                		LEFT JOIN ret_bill_details as d ON d.bill_det_id = bs.bill_det_id
                                		WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(ABS(b.tot_bill_amount),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash') , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as pay
                                	LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                	WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                round(b.tot_discount) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                		FROM ret_bill_return_details rd
                                		LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                		WHERE rd.bill_id = b.bill_id
                                		), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (((b.bill_type =2 OR b.bill_type =3 OR bill_type = 4 OR bill_type = 7 OR bill_type = 10)
                                AND (b.tot_bill_amount < 0 OR bill_type = 10)) OR (((SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0 ) AND (b.bill_type = 1 OR b.bill_type = 9)))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.pur_ref_no,
                                b.billing_for,
                                if((b.bill_type =2 OR b.bill_type = 4), concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), if((b.bill_type = 3 OR b.bill_type = 7), concat(br.short_name,'-SR-', s_ret_refno), if(b.bill_type = 10 , concat(br.short_name,'-CC-', chit_preclose_refno), if(b.bill_type = 1 , concat(br.short_name,'-SA-', sales_ref_no), '')))) as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                		FROM ret_billing_item_stones bs
                                		LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                		LEFT JOIN ret_bill_details as d ON d.bill_det_id = bs.bill_det_id
                                		WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(ABS(b.tot_bill_amount),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND bp.type = 2) , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as pay
                                	LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                	WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                round(b.tot_discount) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                		FROM ret_bill_return_details rd
                                		LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                		WHERE rd.bill_id = b.bill_id
                                		), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status = 1 and ((b.tot_bill_amount >=0)
                                AND (SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GP-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
								b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
		                        round(ABS(b.amount),2) as tot_bill_amount,
		                        CAST(0 AS DECIMAL(6,2)) as total_sgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_cgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_igst,
		                        CAST(0 AS DECIMAL(6,2)) as total_tax,
		                        CAST(0 AS DECIMAL(6,2)) as total_item_cost,
		                        round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0),2) as total_cash,
		                        round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0), 2) as total_paytm,
                        		round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                        		round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                        		round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB')) , 0),2) as total_nb,
                        		CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                        		CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                        			CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                        		CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                        		'-' as pur_ref_no,
                        		'-' as s_ret_refno,
                        		CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 1
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                        ");
                        //echo $this->db->last_query();exit;
        }else if($mode == 1){//Only bill
            $sql    = $this->db->query("SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.sales_ref_no,
                                b.billing_for,
                                if((b.bill_type <=3 OR b.bill_type = 9), concat(br.short_name, '-SA-' , metal_code, '-', sales_ref_no), if(b.bill_type = 5, concat(br.short_name,'-OD-', order_adv_ref_no), if(b.bill_type = 8 , concat(br.short_name,'-CC-', credit_coll_refno), if(b.bill_type = 11 , concat(br.short_name,'-RD-', b.bill_no), '')))) as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, b.round_off_amt as roundoff,
                                ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) as grsswt,
                                ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) as netwt,
                                ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0) as diawt,
		                        b.tot_bill_amount,
		                        ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0) as total_sgst,
		                        ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) as total_cgst,
		                        ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) as total_igst,
		                        ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) as total_tax,
		                        ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) as total_item_cost,
		                        ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND bp.type = 1) , 0) as total_cash,
		                        ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0) as total_paytm,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') AND id_pay_device != 1) , 0) as total_card,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0) as total_cheque,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB') AND (id_pay_device IS NULL OR id_pay_device !=1)) , 0) as total_nb,
                        		'0' as total_cashfree,
                        		ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0) as total_chit_utlize,
                        		ifnull((SELECT sum(gift_voucher_amt) as gift_item_cost FROM ret_billing_gift_voucher_details as gift WHERE gift.bill_id = b.bill_id) , 0) as total_gift_utlize,
                        		b.tot_discount, if(b.is_credit = 1, (if(b.tot_bill_amount = 0 , b.tot_amt_received, b.tot_bill_amount) - tot_amt_received),0) as dueamount, b.handling_charges,
                        		if(b.bill_type = 5, 0, ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0)) as total_order_adv_adj,
                        		ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0) as total_adv_adj,
                        		ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0) as total_old_metal_cost,
                        		if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                        		ifnull(s_ret_refno,'-') as s_ret_refno,
                        		ifnull((SELECT sum(item_cost) as totreturn
                        				FROM ret_bill_return_details rd
                        				LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                        				WHERE rd.bill_id = b.bill_id
                        				), 0) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                        		LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11)
                                AND (b.tot_bill_amount > 0 OR b.tot_amt_received > 0)
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                            ");
        }else if($mode == 2){ //Only Receipts
            $sql    = $this->db->query("SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.sales_ref_no,
                                b.billing_for,
                                if(b.bill_type <=3 , concat(br.short_name, '-SA-' , metal_code, '-', sales_ref_no),
                                if(b.bill_type = 5, concat(br.short_name,'-OD-', order_adv_ref_no), if(b.bill_type = 8 , concat(br.short_name,'-CC-', credit_coll_refno), if(b.bill_type = 11 , concat(br.short_name,'-RD-', b.bill_no), '')))) as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, b.round_off_amt as roundoff,
                                ifnull((SELECT round(sum(gross_wt),2) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) as grsswt,
                                ifnull((SELECT round(sum(net_wt),2) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) as netwt,
                                ifnull((SELECT round(sum(bs.wt),2) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0) as diawt,
		                        round(if(b.tot_bill_amount = 0 , b.tot_amt_received, abs(b.tot_bill_amount)),2) as tot_bill_amount,
		                        round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
		                        round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
		                        round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
		                        round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
		                        round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
		                        round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash') , 0),2) as total_cash,
		                        round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                        		round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') AND id_pay_device != 1) , 0),2) as total_card,
                        		round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                        		round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB') AND (id_pay_device IS NULL OR id_pay_device !=1)) , 0),2) as total_nb,
                        		CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                        		round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                        		ifnull((SELECT sum(gift_voucher_amt) as gift_item_cost FROM ret_billing_gift_voucher_details as gift WHERE gift.bill_id = b.bill_id) , 0) as total_gift_utlize,
                        		round(b.tot_discount,2) as tot_discount, round(if(b.is_credit = 1, (if(b.tot_bill_amount = 0 , b.tot_amt_received, b.tot_bill_amount) - tot_amt_received),0),2) as dueamount,
                        		round(b.handling_charges,2) as handling_charges,
                        		round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                        		round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                        		round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                        		if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                        		ifnull(s_ret_refno,'-') as s_ret_refno,
                        		round(ifnull((SELECT sum(item_cost) as totreturn
                        				FROM ret_bill_return_details rd
                        				LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                        				WHERE rd.bill_id = b.bill_id
                        				), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                        		LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (b.bill_type =5 OR bill_type = 6 OR bill_type = 8 )
                                 AND ((b.tot_bill_amount > 0 OR b.tot_amt_received > 0) OR (b.tot_bill_amount < 0 AND b.bill_type = 5))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GR-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
								b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, round(0,2) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
		                        round(b.amount,2) as tot_bill_amount,
		                        CAST(0 AS DECIMAL(6,2)) as total_sgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_cgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_igst,
		                        CAST(0 AS DECIMAL(6,2)) as total_tax,
		                        CAST(0 AS DECIMAL(6,2)) as total_item_cost,
		                        round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0),2) as total_cash,
		                        round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                        		round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                        		round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0) as total_nb,
                        		CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                        		CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                        		CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                        		'-' as pur_ref_no,
                        		'-' as s_ret_refno,
                        		CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 2
                                and (receipt_type != 4 AND receipt_type != 3 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                            ");
        }else if($mode == 3){ //Only chit
             $sql    = $this->db->query("SELECT '1' as reporttype, date_format(p.date_payment, '%d-%m-%Y') as billdate,'Chit' as sales_ref_no,'' as billing_for,
                                'Chit' as voucherno,
                                '' as firstname, '' as address1,'' as address2, '' as address3, '' as cuaddress, '' as cuspincode, '' as cusstate, '' as cuscountry,
                                '' as mobile, p.id_branch,
								'' as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
		                        round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                        payment_mode_details as pmd
                                        LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
                                        WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch
                                        AND pmd.payment_status = 1 and pmd.is_active = 1
                                        AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL) , 0),2) as tot_bill_amount,
		                        CAST(0 AS DECIMAL(6,2)) as total_sgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_cgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_igst,
		                        CAST(0 AS DECIMAL(6,2)) as total_tax,
		                        CAST(0 AS DECIMAL(6,2)) as total_item_cost,
		                        round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
                                WHERE date(pmd.payment_date) = date(p.date_payment) AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.id_branch = p.id_branch AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode = 'CASH' OR pmd.payment_mode = 'CSH')) , 0),2) as total_cash,
		                        round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
	                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND pmd.payment_status = 1 and pmd.is_active = 1 AND  bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode != 'CASH' AND pmd.payment_mode != 'CSH') AND (bp.id_payGateway IS NULL OR bp.id_payGateway = 0) AND (pmd.id_pay_device IS NOT NULL AND pmd.id_pay_device !=0 AND paydev.device_type = 1)) , 0),2) as total_paytm,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.payment_status = 1 AND bp.id_payGateway IS NULL AND bp.receipt_no IS NOT NULL AND bp.added_by=0 AND ((pmd.payment_mode = 'CC' OR pmd.payment_mode = 'DC') AND ifnull(pmd.id_pay_device, 0) != 1 )) , 0),2) as total_card,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode = 'CHQ')) , 0)) as total_cheque,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch  AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND bp.id_payGateway IS NULL AND (pmd.payment_mode = 'NB' AND ifnull(pmd.id_pay_device,0) != 1 )) , 0),2) as total_nb,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND pmd.payment_status = 1 and pmd.is_active = 1 AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND bp.id_payGateway IS NOT NULL AND (pmd.payment_mode != 'CASH' AND pmd.payment_mode != 'CSH')) , 0),2) as total_cashfree,
                        		CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                        		CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                        		'-' as pur_ref_no,
                        		'-' as s_ret_refno,
                        		CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM payment p
								LEFT JOIN branch br ON br.id_branch = p.id_branch
								WHERE p.payment_status=1 and p.receipt_no IS NOT NULL
	                            AND p.payment_status = 1
	                           ".($id_branch!='' ? " and p.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(p.date_payment)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                 GROUP BY date(p.date_payment) ");
                                //echo $this->db->last_query();exit;
        }else if($mode == 4){ //Only Payments
             $sql    = $this->db->query("SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.pur_ref_no,
                                b.billing_for,
                                if((b.bill_type =2 OR b.bill_type = 4), concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), if((b.bill_type = 3 OR b.bill_type = 7), concat(br.short_name,'-SR-', s_ret_refno), if(b.bill_type = 10 , concat(br.short_name,'-CC-', chit_preclose_refno), if((b.bill_type = 1 OR b.bill_type = 9) , concat(br.short_name,'-SA-', sales_ref_no), '')))) as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                		FROM ret_billing_item_stones bs
                                		LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                		LEFT JOIN ret_bill_details as d ON d.bill_det_id = bs.bill_det_id
                                		WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(ABS(b.tot_bill_amount),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash') , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as pay
                                	LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                	WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                round(b.tot_discount) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                		FROM ret_bill_return_details rd
                                		LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                		WHERE rd.bill_id = b.bill_id
                                		), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (((b.bill_type =2 OR b.bill_type =3 OR bill_type = 4 OR bill_type = 7 OR bill_type = 10)
                                AND (b.tot_bill_amount < 0 OR bill_type = 10)) OR (((SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0 ) AND (bill_type = 1 OR bill_type = 9)))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.pur_ref_no,
                                b.billing_for,
                                if((b.bill_type =2 OR b.bill_type = 4), concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), if((b.bill_type = 3 OR b.bill_type = 7), concat(br.short_name,'-SR-', s_ret_refno), if(b.bill_type = 10 , concat(br.short_name,'-CC-', chit_preclose_refno), if(b.bill_type = 1 , concat(br.short_name,'-SA-', sales_ref_no), '')))) as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                		FROM ret_billing_item_stones bs
                                		LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                		LEFT JOIN ret_bill_details as d ON d.bill_id = bs.bill_det_id
                                		WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(ABS(b.tot_bill_amount),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND bp.type = 2) , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as pay
                                	LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                	WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                round(b.tot_discount) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                		FROM ret_bill_return_details rd
                                		LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                		WHERE rd.bill_id = b.bill_id
                                		), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status = 1 and ((b.tot_bill_amount >=0)
                                AND (SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GP-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
								b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
		                        round(ABS(b.amount),2) as tot_bill_amount,
		                        CAST(0 AS DECIMAL(6,2)) as total_sgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_cgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_igst,
		                        CAST(0 AS DECIMAL(6,2)) as total_tax,
		                        CAST(0 AS DECIMAL(6,2)) as total_item_cost,
		                        round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0),2) as total_cash,
		                        round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0), 2) as total_paytm,
                        		round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                        		round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                        		round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB')) , 0),2) as total_nb,
                        		CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                        		CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                        		CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                        		'-' as pur_ref_no,
                        		'-' as s_ret_refno,
                        		CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 1
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')." ");
                                 //echo $this->db->last_query();exit;
        }else if($mode == 5){ //All receipts
            $sql    = $this->db->query("SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.sales_ref_no,
                                b.billing_for,
                                if((b.bill_type <=3 OR b.bill_type = 9), concat(br.short_name, '-SA-' , metal_code, '-', sales_ref_no), if(b.bill_type = 5, concat(br.short_name,'-OD-', order_adv_ref_no), if(b.bill_type = 8 , concat(br.short_name,'-CC-', credit_coll_refno), if(b.bill_type = 11 , concat(br.short_name,'-RD-', b.bill_no), '')))) as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),2) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),2) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
		                        round(if(b.tot_bill_amount = 0 , b.tot_amt_received, abs(b.tot_bill_amount)),2) as tot_bill_amount,
		                        round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
		                        round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
		                        round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
		                        round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
		                        round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
		                        round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND bp.type = 1) , 0),2) as total_cash,
		                        round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                        		round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                        		round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                        		round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB') AND (id_pay_device IS NULL OR id_pay_device !=1)) , 0),2) as total_nb,
                        		CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                        		round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                        		ifnull((SELECT sum(gift_voucher_amt) as gift_item_cost FROM ret_billing_gift_voucher_details as gift WHERE gift.bill_id = b.bill_id) , 0) as total_gift_utlize,
                        		round(b.tot_discount,2) as tot_discount, round(if(b.is_credit = 1, (if(b.tot_bill_amount = 0 , b.tot_amt_received, b.tot_bill_amount) - tot_amt_received),0),2) as dueamount, round(b.handling_charges, 2) as handling_charges,
                        		round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                        		round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                        		round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                        		if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                        		ifnull(s_ret_refno,'-') as s_ret_refno,
                        		round(ifnull((SELECT sum(item_cost) as totreturn
                        				FROM ret_bill_return_details rd
                        				LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                        				WHERE rd.bill_id = b.bill_id
                        				), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                        		LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (b.bill_type <=3 OR bill_type = 5 OR bill_type = 8 OR bill_type = 9 OR bill_type = 11)
                                AND ((b.tot_bill_amount > 0 OR b.tot_amt_received > 0) OR (b.tot_bill_amount < 0 AND ((SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 1) > 0 )))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GR-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
								b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(6,3)) as grsswt, CAST(0 AS DECIMAL(6,3)) as netwt, CAST(0 AS DECIMAL(6,3)) as diawt,
		                        b.amount as tot_bill_amount,
		                        CAST(0 AS DECIMAL(6,2)) as total_sgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_cgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_igst,
		                        CAST(0 AS DECIMAL(6,2)) as total_tax,
		                        CAST(0 AS DECIMAL(6,2)) as total_item_cost,
		                        ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0) as total_cash,
		                        ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as pay
                            		LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                            		WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0) as total_paytm,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC')  AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0) as total_card,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0) as total_cheque,
                        		ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB') AND (id_pay_device IS NULL OR id_pay_device !=1)) , 0) as total_nb,
                        		CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                        		CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                        		CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                        		'-' as pur_ref_no,
                        		'-' as s_ret_refno,
                        		'0' as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 2
                                and (receipt_type != 4 AND receipt_type != 3 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                 ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(p.date_payment, '%d-%m-%Y') as billdate,'Chit' as sales_ref_no,'' as billing_for,
                                'Chit' as voucherno,
                                '' as firstname, '' as address1,'' as address2, '' as address3, '' as cuaddress, '' as cuspincode, '' as cusstate, '' as cuscountry,
                                '' as mobile, p.id_branch,
								'' as bill_id, br.short_name as brcode,
                                br.name as branchname, '0' as roundoff,
                                '0' as grsswt, '0' as netwt, '0' as diawt,
		                          round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                        payment_mode_details as pmd
                                        LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
                                        WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch
                                        AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL) , 0),2) as tot_bill_amount,
		                        CAST(0 AS DECIMAL(6,2)) as total_sgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_cgst,
		                        CAST(0 AS DECIMAL(6,2)) as total_igst,
		                        CAST(0 AS DECIMAL(6,2)) as total_tax,
		                        CAST(0 AS DECIMAL(6,2)) as total_item_cost,
		                        round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
                                WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND bp.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode = 'CASH' OR pmd.payment_mode = 'CSH')) , 0),2) as total_cash,
		                        round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM
                                payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
	                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND p.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode != 'CASH' AND pmd.payment_mode != 'CSH') AND (bp.id_payGateway IS NULL OR bp.id_payGateway = 0) AND (pmd.id_pay_device IS NOT NULL AND pmd.id_pay_device !=0 AND paydev.device_type = 1)) , 0),2) as total_paytm,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND bp.payment_status = 1 AND bp.id_payGateway IS NULL AND bp.receipt_no IS NOT NULL AND bp.added_by=0 AND ((pmd.payment_mode = 'CC' OR pmd.payment_mode = 'DC') AND ifnull(pmd.id_pay_device, 0) != 1 )) , 0),2) as total_card,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND p.payment_status = 1 AND bp.receipt_no IS NOT NULL AND (pmd.payment_mode = 'CHQ')) , 0)) as total_cheque,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND p.payment_status = 1 AND bp.receipt_no IS NOT NULL AND bp.id_payGateway IS NULL AND (pmd.payment_mode = 'NB' AND ifnull(pmd.id_pay_device,0) != 1 )) , 0),2) as total_nb,
                        		round(ifnull((SELECT sum(pmd.payment_amount) as item_cost FROM  payment_mode_details as pmd
                                LEFT JOIN payment as bp ON bp.id_payment = pmd.id_payment
								WHERE date(pmd.payment_date) = date(p.date_payment) AND bp.id_branch = p.id_branch AND p.payment_status = 1 AND bp.receipt_no IS NOT NULL AND bp.id_payGateway IS NOT NULL AND (pmd.payment_mode != 'CASH' AND pmd.payment_mode != 'CSH')) , 0),2) as total_cashfree,
                        		CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                        		CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                        		CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                        		CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                        		'-' as pur_ref_no,
                        		'-' as s_ret_refno,
                        		CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM payment p
								LEFT JOIN branch br ON br.id_branch = p.id_branch
								WHERE p.payment_status=1 and p.receipt_no IS NOT NULL
	                            AND p.payment_status = 1
	                           ".($id_branch!='' ? " and p.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(p.date_payment)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                 GROUP BY date(p.date_payment)");
        }
        //echo $this->db->last_query();exit;
        return $sql->result_array();
    }
*/
    function day_transactions_report($data)
    {
        $id_branch = $data['id_branch'];
        $FromDt = date('Y-m-d',strtotime($data['from_date']));
        $ToDt   = date('Y-m-d',strtotime($data['to_date']));
        $mode   = $data['mode'];
        if($mode == 0){
                    $sql    = $this->db->query("SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.sales_ref_no,
                                b.billing_for,
                                '' as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, b.round_off_amt as roundoff,
                                CAST(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) AS DECIMAL(10,3)) as grsswt,
                                CAST(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) AS DECIMAL(10,3)) as netwt,
                                CAST(ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0) AS DECIMAL(10,3)) as diawt,
                                CAST(if(b.tot_bill_amount = 0 , b.tot_amt_received, abs(b.tot_bill_amount)) AS DECIMAL(10,2)) as tot_bill_amount,
                                CAST(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_sgst,
                                CAST(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_cgst,
                                CAST(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_igst,
                                CAST(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_tax,
                                CAST(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) AS DECIMAL(10,2)) as total_item_cost,
                                ABS(CAST(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND type = 1) , 0) AS DECIMAL(10,2))) as total_cash,
                                CAST(ifnull((SELECT sum(0) as item_cost FROM ret_billing_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0) AS DECIMAL(10,2)) as total_paytm,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0) as total_card,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0) as total_cheque,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB') ) , 0) as total_nb,
                                '0' as total_cashfree,
                                ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0) as total_chit_utlize,
                                ifnull((SELECT sum(gift_voucher_amt) as gift_item_cost FROM ret_billing_gift_voucher_details as gift WHERE gift.bill_id = b.bill_id) , 0) as total_gift_utlize,
                                b.tot_discount, if(b.is_credit = 1, (if(b.tot_bill_amount = 0 , b.tot_amt_received, b.tot_bill_amount) - tot_amt_received),0) as dueamount, b.handling_charges,
                                if(b.bill_type = 5, 0, ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0)) as total_order_adv_adj,
                                ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0) as total_adv_adj,
                                ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                ifnull((SELECT sum(item_cost) as totreturn
                                        FROM ret_bill_return_details rd
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                        WHERE rd.bill_id = b.bill_id
                                        ), 0) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (b.bill_type <=3 OR bill_type = 5 OR bill_type = 8 OR bill_type = 9 OR bill_type = 11)
                                AND ((b.tot_bill_amount > 0 OR b.tot_amt_received > 0 OR (SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) > 0) OR (b.tot_bill_amount < 0 AND ((SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 1) > 0 )))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GR-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
                                b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, '0' as roundoff,
                                '0' as grsswt, '0' as netwt, '0' as diawt,
                                b.amount as tot_bill_amount,
                                '0' as total_sgst,
                                '0' as total_cgst,
                                '0' as total_igst,
                                '0' as total_tax,
                                '0' as total_item_cost,
                                ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0) as total_cash,
                                ifnull((SELECT sum(0) as item_cost FROM ret_issue_rcpt_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0) as total_paytm,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC')) , 0) as total_card,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0) as total_cheque,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB')) , 0) as total_nb,
                                '0' as total_cashfree,
                                '0' as total_chit_utlize,
                                '0' as total_gift_utlize,
                                '0' as tot_discount, '0' as dueamount, '0' as handling_charges,
                                '0' as total_order_adv_adj,
                                '0' as total_adv_adj,
                                '0' as total_old_metal_cost,
                                '-' as pur_ref_no,
                                '-' as s_ret_refno,
                                '0' as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 2
                                and (receipt_type != 4 AND receipt_type != 3 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(p.custom_entry_date, '%d-%m-%Y') as billdate,'Chit' as sales_ref_no,'' as billing_for,
                                'Chit' as voucherno,
                                '' as firstname, '' as address1,'' as address2, '' as address3, '' as cuaddress, '' as cuspincode, '' as cusstate, '' as cuscountry,
                                '' as mobile, p.id_branch,
                                '' as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
                                round(SUM(ifnull((pmd_sum.payment_amount) , 0)),2) as tot_bill_amount,
                                CAST(0 AS DECIMAL(6,2)) as total_sgst,
                                CAST(0 AS DECIMAL(6,2)) as total_cgst,
                                CAST(0 AS DECIMAL(6,2)) as total_igst,
                                CAST(0 AS DECIMAL(6,2)) as total_tax,
                                CAST(0 AS DECIMAL(6,2)) as total_item_cost,
                                round(SUM(ifnull((pmd_cash_sum.payment_amount) , 0)),2) as total_cash,
                                round(SUM(ifnull((pmd_device_sum.payment_amount) , 0)),2) as total_paytm,
                                round(SUM(ifnull((pmd_card_sum.payment_amount) , 0)),2) as total_card,
                                round(SUM(ifnull((pmd_chq_sum.payment_amount) , 0)),2) as total_cheque,
                                round(SUM(ifnull((pmd_nb_sum.payment_amount) , 0)),2) as total_nb,
                                round(SUM(ifnull((pmd_online_sum.payment_amount) , 0)),2) as total_cashfree,
                                CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                                CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                                '-' as pur_ref_no,
                                '-' as s_ret_refno,
                                CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM payment p
                                LEFT JOIN branch br ON br.id_branch = p.id_branch
                                LEFT JOIN (
                                        SELECT
                                            id_payment,
                                            SUM(payment_amount) AS payment_amount
                                        FROM
                                            payment_mode_details
                                        WHERE
                                            payment_status = 1
                                            AND is_active = 1
                                        GROUP BY
                                            id_payment
                                    ) AS pmd_sum ON pmd_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND (payment_mode = 'CASH' OR payment_mode = 'CSH')
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_cash_sum ON pmd_cash_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(0) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            LEFT JOIN
                                                ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND (pmd.id_pay_device IS NOT NULL AND pmd.id_pay_device !=0 AND paydev.device_type = 1)
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_device_sum ON pmd_device_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND ((pmd.payment_mode = 'CC' OR pmd.payment_mode = 'DC'))
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_card_sum ON pmd_card_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND pmd.payment_mode = 'CHQ'
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_chq_sum ON pmd_chq_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND (pmd.payment_mode = 'NB' )
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_nb_sum ON pmd_nb_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                pmd.id_payment,
                                                SUM(pmd.payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            LEFT JOIN
                                                payment as bp ON bp.id_payment = pmd.id_payment
                                            WHERE
                                                pmd.payment_status = 1
                                                AND pmd.is_active = 1
                                                AND bp.id_payGateway IS NOT NULL
                                            GROUP BY
                                                pmd.id_payment
                                        ) AS pmd_online_sum ON pmd_online_sum.id_payment = p.id_payment
                                WHERE p.payment_status=1 and p.receipt_no IS NOT NULL
                                AND p.payment_status = 1
                                ".($id_branch!='' ? " and p.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(p.custom_entry_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                GROUP BY date(p.custom_entry_date)
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.pur_ref_no,
                                b.billing_for,
                               '' as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(ABS(b.tot_bill_amount),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash') , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(0)) as item_cost FROM ret_billing_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                round(b.tot_discount) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                        FROM ret_bill_return_details rd
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                        WHERE rd.bill_id = b.bill_id
                                        ), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (((b.bill_type =2 OR b.bill_type =3 OR bill_type = 4 OR bill_type = 7 OR bill_type = 10)
                                AND (b.tot_bill_amount < 0 OR bill_type = 10)) OR (((SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0 ) AND (b.bill_type = 1 OR b.bill_type = 9)))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.pur_ref_no,
                                b.billing_for,
                                '' as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(ABS(b.tot_bill_amount),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND bp.type = 2) , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(0)) as item_cost FROM ret_billing_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                round(b.tot_discount) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                        FROM ret_bill_return_details rd
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                        WHERE rd.bill_id = b.bill_id
                                        ), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status = 1 and ((b.tot_bill_amount >=0)
                                AND (SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GP-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
                                b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
                                round(ABS(b.amount),2) as tot_bill_amount,
                                CAST(0 AS DECIMAL(6,2)) as total_sgst,
                                CAST(0 AS DECIMAL(6,2)) as total_cgst,
                                CAST(0 AS DECIMAL(6,2)) as total_igst,
                                CAST(0 AS DECIMAL(6,2)) as total_tax,
                                CAST(0 AS DECIMAL(6,2)) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(0)) as item_cost FROM ret_issue_rcpt_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0), 2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                                    CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                                CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                                '-' as pur_ref_no,
                                '-' as s_ret_refno,
                                CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 1
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                        ");
                        //echo $this->db->last_query();exit;
        }else if($mode == 1){//Only bill
            $sql    = $this->db->query("SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.sales_ref_no,
                                b.billing_for,del.bill_id as dell_id,
                                '' as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, b.round_off_amt as roundoff,
                                ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) as grsswt,
                                ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) as netwt,
                                ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0) as diawt,
                                b.tot_bill_amount,
                                ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0) as total_sgst,
                                ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) as total_cgst,
                                ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) as total_igst,
                                ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) as total_tax,
                                ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0) as total_item_cost,
                                ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND bp.type = 1) , 0) as total_cash,
                                ifnull((SELECT sum(0) as item_cost FROM ret_billing_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0) as total_paytm,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC')) , 0) as total_card,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0) as total_cheque,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB') ) , 0) as total_nb,
                                '0' as total_cashfree,
                                ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0) as total_chit_utlize,
                                ifnull((SELECT sum(gift_voucher_amt) as gift_item_cost FROM ret_billing_gift_voucher_details as gift WHERE gift.bill_id = b.bill_id) , 0) as total_gift_utlize,
                                b.tot_discount, if(b.is_credit = 1, (if(b.tot_bill_amount = 0 , b.tot_amt_received, b.tot_bill_amount) - tot_amt_received),0) as dueamount, b.handling_charges,
                                if(b.bill_type = 5, 0, ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0)) as total_order_adv_adj,
                                ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0) as total_adv_adj,
                                ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                ifnull((SELECT sum(item_cost) as totreturn
                                        FROM ret_bill_return_details rd
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                        WHERE rd.bill_id = b.bill_id
                                        ), 0) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11) and b.is_eda = 1
                                AND (b.tot_bill_amount > 0 OR b.tot_amt_received > 0 OR if(b.bill_type = 5, 0, ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0))  > 0  OR (SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) > 0 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                            ");
        }else if($mode == 2){ //Only Receipts
            $sql    = $this->db->query("SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.sales_ref_no,
                                b.billing_for,
                                if(b.bill_type <=3 , concat(br.short_name, '-SA-' , metal_code, '-', sales_ref_no),
                                '' as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, b.round_off_amt as roundoff,
                                ifnull((SELECT round(sum(gross_wt),2) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) as grsswt,
                                ifnull((SELECT round(sum(net_wt),2) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0) as netwt,
                                ifnull((SELECT round(sum(bs.wt),2) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0) as diawt,
                                round(if(b.tot_bill_amount = 0 , b.tot_amt_received, abs(b.tot_bill_amount)),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash') , 0),2) as total_cash,
                                round(ifnull((SELECT sum(0) as item_cost FROM ret_billing_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB') ) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                ifnull((SELECT sum(gift_voucher_amt) as gift_item_cost FROM ret_billing_gift_voucher_details as gift WHERE gift.bill_id = b.bill_id) , 0) as total_gift_utlize,
                                round(b.tot_discount,2) as tot_discount, round(if(b.is_credit = 1, (if(b.tot_bill_amount = 0 , b.tot_amt_received, b.tot_bill_amount) - tot_amt_received),0),2) as dueamount,
                                round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                        FROM ret_bill_return_details rd
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                        WHERE rd.bill_id = b.bill_id
                                        ), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (b.bill_type =5 OR bill_type = 6 OR bill_type = 8 )
                                AND ((b.tot_bill_amount > 0 OR b.tot_amt_received > 0) OR (b.tot_bill_amount < 0 AND b.bill_type = 5))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GR-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
                                b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, round(0,2) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
                                round(b.amount,2) as tot_bill_amount,
                                CAST(0 AS DECIMAL(6,2)) as total_sgst,
                                CAST(0 AS DECIMAL(6,2)) as total_cgst,
                                CAST(0 AS DECIMAL(6,2)) as total_igst,
                                CAST(0 AS DECIMAL(6,2)) as total_tax,
                                CAST(0 AS DECIMAL(6,2)) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0),2) as total_cash,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0),2) as total_card,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB') AND (id_pay_device != 1 OR id_pay_device IS NULL)) , 0) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                                CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                                '-' as pur_ref_no,
                                '-' as s_ret_refno,
                                CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 2
                                and (receipt_type != 4 AND receipt_type != 3 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                            ");
        }else if($mode == 3){ //Only chit
            $sql    = $this->db->query("SELECT '1' as reporttype, date_format(p.custom_entry_date, '%d-%m-%Y') as billdate,'Chit' as sales_ref_no,'' as billing_for,
            'Chit' as voucherno,
            '' as firstname, '' as address1,'' as address2, '' as address3, '' as cuaddress, '' as cuspincode, '' as cusstate, '' as cuscountry,
            '' as mobile, p.id_branch,
            '' as bill_id, br.short_name as brcode,
            br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
            CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
            round(SUM(ifnull((pmd_sum.payment_amount) , 0)),2) as tot_bill_amount,
            CAST(0 AS DECIMAL(6,2)) as total_sgst,
            CAST(0 AS DECIMAL(6,2)) as total_cgst,
            CAST(0 AS DECIMAL(6,2)) as total_igst,
            CAST(0 AS DECIMAL(6,2)) as total_tax,
            CAST(0 AS DECIMAL(6,2)) as total_item_cost,
            round(SUM(ifnull((pmd_cash_sum.payment_amount) , 0)),2) as total_cash,
            round(SUM(ifnull((pmd_device_sum.payment_amount) , 0)),2) as total_paytm,
            round(SUM(ifnull((pmd_card_sum.payment_amount) , 0)),2) as total_card,
            round(SUM(ifnull((pmd_chq_sum.payment_amount) , 0)),2) as total_cheque,
            round(SUM(ifnull((pmd_nb_sum.payment_amount) , 0)),2) as total_nb,
            round(SUM(ifnull((pmd_online_sum.payment_amount) , 0)),2) as total_cashfree,
            CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
            CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
            CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
            CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
            CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
            CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
            '-' as pur_ref_no,
            '-' as s_ret_refno,
            CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
            FROM payment p
            LEFT JOIN branch br ON br.id_branch = p.id_branch
            LEFT JOIN (
                    SELECT
                        id_payment,
                        SUM(payment_amount) AS payment_amount
                    FROM
                        payment_mode_details
                    WHERE
                        payment_status = 1
                        AND is_active = 1
                    GROUP BY
                        id_payment
                ) AS pmd_sum ON pmd_sum.id_payment = p.id_payment
            LEFT JOIN (
                        SELECT
                            id_payment,
                            SUM(payment_amount) AS payment_amount
                        FROM
                            payment_mode_details
                        WHERE
                            payment_status = 1
                            AND is_active = 1
                            AND (payment_mode = 'CASH' OR payment_mode = 'CSH')
                        GROUP BY
                            id_payment
                    ) AS pmd_cash_sum ON pmd_cash_sum.id_payment = p.id_payment
            LEFT JOIN (
                        SELECT
                            id_payment,
                            SUM(0) AS payment_amount
                        FROM
                            payment_mode_details pmd
                        LEFT JOIN
                            ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device
                        WHERE
                            payment_status = 1
                            AND is_active = 1
                            AND (pmd.id_pay_device IS NOT NULL AND pmd.id_pay_device !=0 AND paydev.device_type = 1)
                        GROUP BY
                            id_payment
                    ) AS pmd_device_sum ON pmd_device_sum.id_payment = p.id_payment
            LEFT JOIN (
                        SELECT
                            id_payment,
                            SUM(payment_amount) AS payment_amount
                        FROM
                            payment_mode_details pmd
                        WHERE
                            payment_status = 1
                            AND is_active = 1
                            AND ((pmd.payment_mode = 'CC' OR pmd.payment_mode = 'DC')  )
                        GROUP BY
                            id_payment
                    ) AS pmd_card_sum ON pmd_card_sum.id_payment = p.id_payment
            LEFT JOIN (
                        SELECT
                            id_payment,
                            SUM(payment_amount) AS payment_amount
                        FROM
                            payment_mode_details pmd
                        WHERE
                            payment_status = 1
                            AND is_active = 1
                            AND pmd.payment_mode = 'CHQ'
                        GROUP BY
                            id_payment
                    ) AS pmd_chq_sum ON pmd_chq_sum.id_payment = p.id_payment
            LEFT JOIN (
                        SELECT
                            id_payment,
                            SUM(payment_amount) AS payment_amount
                        FROM
                            payment_mode_details pmd
                        WHERE
                            payment_status = 1
                            AND is_active = 1
                            AND (pmd.payment_mode = 'NB'  )
                        GROUP BY
                            id_payment
                    ) AS pmd_nb_sum ON pmd_nb_sum.id_payment = p.id_payment
            LEFT JOIN (
                        SELECT
                            pmd.id_payment,
                            SUM(pmd.payment_amount) AS payment_amount
                        FROM
                            payment_mode_details pmd
                        LEFT JOIN
                            payment as bp ON bp.id_payment = pmd.id_payment
                        WHERE
                            pmd.payment_status = 1
                            AND pmd.is_active = 1
                            AND bp.id_payGateway IS NOT NULL
                        GROUP BY
                            pmd.id_payment
                    ) AS pmd_online_sum ON pmd_online_sum.id_payment = p.id_payment
            WHERE p.payment_status=1 and p.receipt_no IS NOT NULL
            AND p.payment_status = 1
            ".($id_branch!='' ? " and p.id_branch=".$id_branch."" :'')."
            ".($FromDt!='' && $ToDt!='' ? " and (DATE(p.custom_entry_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
            GROUP BY date(p.custom_entry_date) ");
            //echo $this->db->last_query();exit;
        }else if($mode == 4){ //Only Payments
            $sql    = $this->db->query("SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.pur_ref_no,
                                b.billing_for,
                               '' as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(ABS(b.tot_bill_amount),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash') , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(0)) as item_cost FROM ret_billing_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                round(b.tot_discount) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                        FROM ret_bill_return_details rd
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                        WHERE rd.bill_id = b.bill_id
                                        ), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (((b.bill_type =2 OR b.bill_type =3 OR bill_type = 4 OR bill_type = 7 OR bill_type = 10)
                                AND (b.tot_bill_amount < 0 OR bill_type = 10)) OR (((SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0 ) AND (bill_type = 1 OR bill_type = 9)))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.pur_ref_no,
                                b.billing_for,
                               '' as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),3) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(ABS(b.tot_bill_amount),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND bp.type = 2) , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(0)) as item_cost FROM ret_billing_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                round(b.tot_discount) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, round(b.handling_charges,2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                        FROM ret_bill_return_details rd
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                        WHERE rd.bill_id = b.bill_id
                                        ), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status = 1 and ((b.tot_bill_amount >=0)
                                AND (SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GP-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
                                b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
                                round(ABS(b.amount),2) as tot_bill_amount,
                                CAST(0 AS DECIMAL(6,2)) as total_sgst,
                                CAST(0 AS DECIMAL(6,2)) as total_cgst,
                                CAST(0 AS DECIMAL(6,2)) as total_igst,
                                CAST(0 AS DECIMAL(6,2)) as total_tax,
                                CAST(0 AS DECIMAL(6,2)) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0),2) as total_cash,
                                round(ifnull((SELECT sum(ABS(0)) as item_cost FROM ret_issue_rcpt_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0), 2) as total_paytm,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB')) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                                CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                                '-' as pur_ref_no,
                                '-' as s_ret_refno,
                                CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 1 and b.issue_type != 1
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')." ");
                                //echo $this->db->last_query();exit;
        }else if($mode == 5){ //All receipts
            $sql    = $this->db->query("SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.sales_ref_no,
                                b.billing_for,
                                '' as voucherno,
                                cus.firstname, IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,
                                IFNULL(del.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as branchname, round(b.round_off_amt,2) as roundoff,
                                round(ifnull((SELECT sum(gross_wt) as gross_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),2) as grsswt,
                                round(ifnull((SELECT sum(net_wt) as net_wt FROM ret_bill_details WHERE bill_id = b.bill_id), 0),2) as netwt,
                                round(ifnull((SELECT sum(bs.wt) as totwt
                                        FROM ret_billing_item_stones bs
                                        LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                        LEFT JOIN ret_bill_details as d ON d.bill_id = bs.bill_det_id
                                        WHERE st.stone_type = 1 AND d.bill_id = b.bill_id), 0),2) as diawt,
                                round(if(b.tot_bill_amount = 0 , b.tot_amt_received, abs(b.tot_bill_amount)),2) as tot_bill_amount,
                                round(ifnull((SELECT sum(total_sgst) as total_sgst FROM ret_bill_details WHERE bill_id = b.bill_id) , 0),2) as total_sgst,
                                round(ifnull((SELECT sum(total_cgst) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_cgst,
                                round(ifnull((SELECT sum(total_igst) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_igst,
                                round(ifnull((SELECT sum(item_total_tax) as total_tax FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_tax,
                                round(ifnull((SELECT sum(item_cost - item_total_tax) as item_cost FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) , 0),2) as total_item_cost,
                                round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND payment_mode = 'Cash' AND bp.type = 1) , 0),2) as total_cash,
                                round(ifnull((SELECT sum(0) as item_cost FROM ret_billing_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.bill_id = b.bill_id AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0),2) as total_paytm,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
                                round(ifnull((SELECT sum(payment_amount) as item_cost FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND (payment_mode = 'NB') ) , 0),2) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_billing_chit_utilization as chuti WHERE chuti.bill_id = b.bill_id) , 0),2) as total_chit_utlize,
                                ifnull((SELECT sum(gift_voucher_amt) as gift_item_cost FROM ret_billing_gift_voucher_details as gift WHERE gift.bill_id = b.bill_id) , 0) as total_gift_utlize,
                                round(b.tot_discount,2) as tot_discount, round(if(b.is_credit = 1, (if(b.tot_bill_amount = 0 , b.tot_amt_received, b.tot_bill_amount) - tot_amt_received),0),2) as dueamount, round(b.handling_charges, 2) as handling_charges,
                                round(ifnull((SELECT sum(advance_amount) as item_cost FROM ret_billing_advance as adv WHERE adv.adjusted_bill_id = b.bill_id) , 0),2) as total_order_adv_adj,
                                round(ifnull((SELECT sum(utilized_amt) as item_cost FROM ret_advance_utilized advuti WHERE advuti.bill_id = b.bill_id) , 0),2) as total_adv_adj,
                                round(ifnull((SELECT sum(rate) as old_metal_cost FROM ret_bill_old_metal_sale_details old WHERE old.bill_id = b.bill_id) , 0),2) as total_old_metal_cost,
                                if(b.bill_type =2 OR b.bill_type = 4, concat(br.short_name, '-PU-' , metal_code, '-', pur_ref_no), '') as pur_ref_no,
                                ifnull(s_ret_refno,'-') as s_ret_refno,
                                round(ifnull((SELECT sum(item_cost) as totreturn
                                        FROM ret_bill_return_details rd
                                        LEFT JOIN ret_bill_details as d ON d.bill_det_id = rd.ret_bill_det_id
                                        WHERE rd.bill_id = b.bill_id
                                        ), 0),2) as ret_bill_amt
                                FROM ret_billing b
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                LEFT JOIN metal as met ON met.id_metal = b.metal_type
                                WHERE b.bill_status =1 and (b.bill_type <=3 OR bill_type = 5 OR bill_type = 8 OR bill_type = 9 OR bill_type = 11)
                                AND ((b.tot_bill_amount > 0 OR b.tot_amt_received > 0) OR (b.tot_bill_amount < 0 AND ((SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 1) > 0 )))
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
                                concat('GR-', b.bill_no) as voucherno,
                                cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
                                IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                cus.mobile,b.id_branch ,
                                b.id_issue_receipt as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(6,3)) as grsswt, CAST(0 AS DECIMAL(6,3)) as netwt, CAST(0 AS DECIMAL(6,3)) as diawt,
                                b.amount as tot_bill_amount,
                                CAST(0 AS DECIMAL(6,2)) as total_sgst,
                                CAST(0 AS DECIMAL(6,2)) as total_cgst,
                                CAST(0 AS DECIMAL(6,2)) as total_igst,
                                CAST(0 AS DECIMAL(6,2)) as total_tax,
                                CAST(0 AS DECIMAL(6,2)) as total_item_cost,
                                ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0) as total_cash,
                                ifnull((SELECT sum(0) as item_cost FROM ret_issue_rcpt_payment as pay
                                    LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                                    WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0) as total_paytm,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0) as total_card,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0) as total_cheque,
                                ifnull((SELECT sum(payment_amount) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB') AND (id_pay_device IS NULL OR id_pay_device !=1)) , 0) as total_nb,
                                CAST(0 AS DECIMAL(6,2)) as total_cashfree,
                                CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                                CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                                '-' as pur_ref_no,
                                '-' as s_ret_refno,
                                '0' as ret_bill_amt
                                FROM ret_issue_receipt b
                                LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                LEFT JOIN state as st ON st.id_state = adr.id_state
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                WHERE b.bill_status =1 and b.type = 2
                                and (receipt_type != 4 AND receipt_type != 3 )
                                ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                UNION
                                SELECT '1' as reporttype, date_format(p.custom_entry_date, '%d-%m-%Y') as billdate,'Chit' as sales_ref_no,'' as billing_for,
                                'Chit' as voucherno,
                                '' as firstname, '' as address1,'' as address2, '' as address3, '' as cuaddress, '' as cuspincode, '' as cusstate, '' as cuscountry,
                                '' as mobile, p.id_branch,
                                '' as bill_id, br.short_name as brcode,
                                br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
                                CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
                                round(SUM(ifnull((pmd_sum.payment_amount) , 0)),2) as tot_bill_amount,
                                CAST(0 AS DECIMAL(6,2)) as total_sgst,
                                CAST(0 AS DECIMAL(6,2)) as total_cgst,
                                CAST(0 AS DECIMAL(6,2)) as total_igst,
                                CAST(0 AS DECIMAL(6,2)) as total_tax,
                                CAST(0 AS DECIMAL(6,2)) as total_item_cost,
                                round(SUM(ifnull((pmd_cash_sum.payment_amount) , 0)),2) as total_cash,
                                round(SUM(ifnull((pmd_device_sum.payment_amount) , 0)),2) as total_paytm,
                                round(SUM(ifnull((pmd_card_sum.payment_amount) , 0)),2) as total_card,
                                round(SUM(ifnull((pmd_chq_sum.payment_amount) , 0)),2) as total_cheque,
                                round(SUM(ifnull((pmd_nb_sum.payment_amount) , 0)),2) as total_nb,
                                round(SUM(ifnull((pmd_online_sum.payment_amount) , 0)),2) as total_cashfree,
                                CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
                                CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
                                CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
                                CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
                                CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
                                '-' as pur_ref_no,
                                '-' as s_ret_refno,
                                CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
                                FROM payment p
                                LEFT JOIN branch br ON br.id_branch = p.id_branch
                                LEFT JOIN (
                                        SELECT
                                            id_payment,
                                            SUM(payment_amount) AS payment_amount
                                        FROM
                                            payment_mode_details
                                        WHERE
                                            payment_status = 1
                                            AND is_active = 1
                                        GROUP BY
                                            id_payment
                                    ) AS pmd_sum ON pmd_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND (payment_mode = 'CASH' OR payment_mode = 'CSH')
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_cash_sum ON pmd_cash_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(0) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            LEFT JOIN
                                                ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND (pmd.id_pay_device IS NOT NULL AND pmd.id_pay_device !=0 AND paydev.device_type = 1)
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_device_sum ON pmd_device_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND ((pmd.payment_mode = 'CC' OR pmd.payment_mode = 'DC'))
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_card_sum ON pmd_card_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND pmd.payment_mode = 'CHQ'
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_chq_sum ON pmd_chq_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                id_payment,
                                                SUM(payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            WHERE
                                                payment_status = 1
                                                AND is_active = 1
                                                AND (pmd.payment_mode = 'NB')
                                            GROUP BY
                                                id_payment
                                        ) AS pmd_nb_sum ON pmd_nb_sum.id_payment = p.id_payment
                                LEFT JOIN (
                                            SELECT
                                                pmd.id_payment,
                                                SUM(pmd.payment_amount) AS payment_amount
                                            FROM
                                                payment_mode_details pmd
                                            LEFT JOIN
                                                payment as bp ON bp.id_payment = pmd.id_payment
                                            WHERE
                                                pmd.payment_status = 1
                                                AND pmd.is_active = 1
                                                AND bp.id_payGateway IS NOT NULL
                                            GROUP BY
                                                pmd.id_payment
                                        ) AS pmd_online_sum ON pmd_online_sum.id_payment = p.id_payment
                                WHERE p.payment_status=1 and p.receipt_no IS NOT NULL
                                AND p.payment_status = 1
                                ".($id_branch!='' ? " and p.id_branch=".$id_branch."" :'')."
                                ".($FromDt!='' && $ToDt!='' ? " and (DATE(p.custom_entry_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')."
                                GROUP BY date(p.custom_entry_date) ");
        }else if ($mode == 6){
            $sql    = $this->db->query(" SELECT '2' as reporttype, date_format(b.bill_date, '%d-%m-%Y') as billdate,b.bill_no as sales_ref_no,b.issue_to as billing_for,
            concat('GP-', b.bill_no) as voucherno,
            cus.firstname, IFNULL(adr.address1,'') as address1,IFNULL(adr.address2,'') as address2,
            IFNULL(adr.address3,'') as address3, concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
            IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
            cus.mobile,b.id_branch ,
            b.id_issue_receipt as bill_id, br.short_name as brcode,
            br.name as branchname, CAST(0 AS DECIMAL(6,2)) as roundoff,
            CAST(0 AS DECIMAL(10,3)) as grsswt, CAST(0 AS DECIMAL(10,3)) as netwt, CAST(0 AS DECIMAL(10,3)) as diawt,
            round(ABS(b.amount),2) as tot_bill_amount,
            CAST(0 AS DECIMAL(6,2)) as total_sgst,
            CAST(0 AS DECIMAL(6,2)) as total_cgst,
            CAST(0 AS DECIMAL(6,2)) as total_igst,
            CAST(0 AS DECIMAL(6,2)) as total_tax,
            CAST(0 AS DECIMAL(6,2)) as total_item_cost,
            round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND payment_mode = 'Cash') , 0),2) as total_cash,
            round(ifnull((SELECT sum(ABS(0)) as item_cost FROM ret_issue_rcpt_payment as pay
                LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device
                WHERE pay.id_issue_rcpt = b.id_issue_receipt AND payment_mode != 'Cash' AND id_pay_device IS NOT NULL AND paydev.device_type = 1) , 0), 2) as total_paytm,
            round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CC' OR payment_mode = 'DC') ) , 0),2) as total_card,
            round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'CHQ')) , 0),2) as total_cheque,
            round(ifnull((SELECT sum(ABS(payment_amount)) as item_cost FROM ret_issue_rcpt_payment as bp WHERE bp.id_issue_rcpt = b.id_issue_receipt AND (payment_mode = 'NB')) , 0),2) as total_nb,
            CAST(0 AS DECIMAL(6,2)) as total_cashfree,
            CAST(0 AS DECIMAL(6,2)) as total_chit_utlize,
            CAST(0 AS DECIMAL(6,2)) as total_gift_utlize,
            CAST(0 AS DECIMAL(6,2)) as tot_discount, CAST(0 AS DECIMAL(6,2)) as dueamount, CAST(0 AS DECIMAL(6,2)) as handling_charges,
            CAST(0 AS DECIMAL(6,2)) as total_order_adv_adj,
            CAST(0 AS DECIMAL(6,2)) as total_adv_adj,
            CAST(0 AS DECIMAL(6,2)) as total_old_metal_cost,
            '-' as pur_ref_no,
            '-' as s_ret_refno,
            CAST(0 AS DECIMAL(6,2)) as ret_bill_amt
            FROM ret_issue_receipt b
            LEFT JOIN customer cus ON cus.id_customer=b.id_customer
            LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
            LEFT JOIN country as cn ON cn.id_country = adr.id_country
            LEFT JOIN state as st ON st.id_state = adr.id_state
            LEFT JOIN branch br ON br.id_branch = b.id_branch
            WHERE b.bill_status =1 and b.type = 1 and b.issue_type = 1
            ".($id_branch!='' ? " and b.id_branch=".$id_branch."" :'')."
            ".($FromDt!='' && $ToDt!='' ? " and (DATE(b.bill_date)  BETWEEN '".$FromDt."' AND '".$ToDt."')" :'')." ");
        }
    // echo $this->db->last_query();exit;
       $data = $sql->result_array();
        foreach($data as $d){
            $d['voucher_no'] = ($d['voucherno']==''?$this->get_bill_no_format_detail($d['bill_id']) :$d['voucherno']);
            $retundata[] = $d;
        }
        return $retundata;
    }
     function get_categorywise_stock_report($data)
	{
	    $return_array = array();
		$multiple_id_branch = implode(' , ', $data['id_branch']);
		$multiple_transitemtype = implode(' , ', $data['transitemtype']);
		if(empty($data['transitemtype'])){
		    $data['transitemtype'] = array(0);
		}
		//var_dump($data['transitemtype']);exit;
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
		if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
       $stock_detail = [];
        $group_by = 2;//1-Product,2-Category
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        //IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
        //IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
        //IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
        //IFNULL(sales.gross_wt,0) as sold_gwt,IFNULL(sales.net_wt,0) as sold_nwt,IFNULL(sales.piece,0) as sold_pcs,
        //IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.no_of_piece,0) as br_out_pcs,
        //Tagged items
        $transitemtype[1] = $this->db->query("SELECT c.sort, c.name as category_name,
                        	(IFNULL(blc.gross_wt,0)+IFNULL(op_blc_inw.gross_wt,0)-IFNULL(op_blc_br_out.gross_wt,0)-IFNULL(op_blc_sales.gross_wt,0) - (IFNULL(ps_op_blc.gross_wt,0) - IFNULL(ps_op_br_out.gross_wt,0))) as op_blc_gwt,
                        	(IFNULL(blc.net_wt,0)+IFNULL(op_blc_inw.net_wt,0)-IFNULL(op_blc_br_out.net_wt,0)-IFNULL(op_blc_sales.net_wt,0) - (IFNULL(ps_op_blc.net_wt,0) - IFNULL(ps_op_br_out.net_wt,0))) as op_blc_nwt,
                        	(IFNULL(blc.piece,0)+IFNULL(op_blc_inw.piece,0)-IFNULL(op_blc_br_out.piece,0)-IFNULL(op_blc_sales.piece,0) - (IFNULL(ps_op_blc.piece,0) - IFNULL(ps_op_br_out.piece,0))) as op_blc_pcs,
                        	'-' as op_blc_value,
                        	IFNULL(INW.gross_wt,0) - IFNULL(ps_in_blc.gross_wt,0) as inw_gwt,
                        	IFNULL(INW.net_wt,0) - IFNULL(ps_in_blc.net_wt,0) as inw_nwt,
                        	IFNULL(INW.piece,0) - IFNULL(ps_in_blc.piece,0) as inw_pcs,
                        	'-' as inw_blc_value,
                        	((IFNULL(s.gross_wt,0) +  IFNULL(br_out.gross_wt,0)) - IFNULL(ps_br_out.gross_wt,0)) as out_gwt,
                        	((IFNULL(s.net_wt,0) + IFNULL(br_out.net_wt,0)) - IFNULL(ps_br_out.net_wt,0)) as out_netwt,
                        	(IFNULL(s.piece,0) +  IFNULL(br_out.piece,0) - IFNULL(ps_br_out.piece,0)) as out_piece, '-' as out_blc_value,
                        	(IFNULL(blc.piece,0)+IFNULL(op_blc_inw.piece,0) + IFNULL(INW.piece,0) - (IFNULL(s.piece,0) + IFNULL(br_out.piece,0) + IFNULL(op_blc_br_out.piece,0) + IFNULL(op_blc_sales.piece,0))) - ((IFNULL(ps_op_blc.piece,0) + IFNULL(ps_in_blc.piece,0) + IFNULL(ps_br_in.piece,0)) - IFNULL(ps_br_out.piece,0) - IFNULL(ps_op_br_out.piece,0)) as closing_pcs,
                        	((IFNULL(blc.gross_wt,0) + IFNULL(op_blc_inw.gross_wt,0) + IFNULL(INW.gross_wt,0))- (IFNULL(s.gross_wt,0) + IFNULL(br_out.gross_wt,0) + IFNULL(op_blc_br_out.gross_wt,0)+ IFNULL(op_blc_sales.gross_wt,0))) - ((IFNULL(ps_op_blc.gross_wt,0) + IFNULL(ps_in_blc.gross_wt,0) + IFNULL(ps_br_in.gross_wt,0)) - IFNULL(ps_br_out.gross_wt,0) - IFNULL(ps_op_br_out.gross_wt,0)) as closing_gwt,
                        	((IFNULL(blc.net_wt,0) + IFNULL(op_blc_inw.net_wt,0) + IFNULL(INW.net_wt,0)) -(IFNULL(s.net_wt,0) + IFNULL(br_out.net_wt,0) + IFNULL(op_blc_br_out.net_wt,0)+IFNULL(op_blc_sales.net_wt,0))) - ((IFNULL(ps_op_blc.net_wt,0) + IFNULL(ps_in_blc.net_wt,0) + IFNULL(ps_br_in.net_wt,0)) - IFNULL(ps_br_out.net_wt,0) - IFNULL(ps_op_br_out.net_wt,0)) as closing_nwt,
                        	'-' as closing_blc_value
                        	FROM ret_category c
                            LEFT JOIN (SELECT s.id_product as product_id,SUM(s.closing_gwt) as gross_wt,SUM(s.closing_nwt) as net_wt,SUM(s.closing_pcs) as piece,
                            p.cat_id
                            FROM ret_stock_balance s
                            LEFT JOIN ret_product_master p ON p.pro_id=s.id_product
                            left join ret_category c on c.id_ret_category=p.cat_id
                            left join metal m on m.id_metal=c.id_metal
                            WHERE s.id_product is NOT null AND date(s.date)='2022-03-31'
                            ".($data['id_branch']!='' ? " and s.id_branch=".$data['id_branch']."" :'')."
                            ".($data['id_metal']!='' && $data['id_metal']!='0' ? " and m.id_metal=".$data['id_metal']."" :'')."
                            ".($data['id_category']!='' && $data['id_category']!='0' ? " and c.id_ret_category=".$data['id_category']."" :'')."
                            GROUP by ".($group_by==1 ? " s.id_product" :" p.cat_id").") blc on ".($group_by==1 ? " blc.product_id = t.product_id " : " blc.cat_id = c.id_ret_category" )."
                        	LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '2022-04-01' AND '$op_blc_to_date' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE tag.tag_id IS NOT NULL
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0) AND date(m1.date) BETWEEN '2022-04-01' AND '$op_blc_to_date' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") op_blc_inw on ".($group_by==1 ? " op_blc_inw.product_id = t.product_id " : " op_blc_inw.cat_id = c.id_ret_category" )."
                            LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
                            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                            FROM ret_taging tag
                            LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15 or l.status=16 or l.status=17)
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE (date(l.date) BETWEEN '2022-04-01' AND '$op_blc_to_date') and
                            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15 or l.status=16 or l.status=17)
                            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
                            GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") op_blc_br_out on ".($group_by==1 ? " op_blc_br_out.product_id = t.product_id " : "op_blc_br_out.cat_id = c.id_ret_category" )."
                            LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                        	SUM(b.piece) as piece,b.product_id,p.cat_id
                        	FROM ret_taging tag
                        	LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
                        	LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE bill.bill_status = 1 and
                        	(date(bill.bill_date) BETWEEN '2022-04-01' AND '$op_blc_to_date') AND b.product_id = p.pro_id
                        	".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") op_blc_sales ON ".($group_by==1 ? " op_blc_sales.product_id = t.product_id " : "op_blc_sales.cat_id = c.id_ret_category" )."
                            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE tag.tag_id IS NOT NULL
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") INW on ".($group_by==1 ? " INW.product_id = t.product_id " : " INW.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                        	SUM(b.piece) as piece,b.product_id,p.cat_id
                        	FROM ret_taging tag
                        	LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
                        	LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE bill.bill_status = 1 and
                        	(date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
                        	".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") s ON ".($group_by==1 ? " s.product_id = t.product_id " : "s.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
                        		SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                        		FROM ret_taging tag
                        		LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15 or l.status=16 or l.status=17)
                        		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
                        	(l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15 or l.status=16 or l.status=17)
                        	".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
                        	 GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") br_out on ".($group_by==1 ? " br_out.product_id = t.product_id " : "br_out.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
                        	ifnull(SUM(tag.net_wt),0) as net_wt,
                        	ifnull(SUM(tag.piece),0) as piece,p.cat_id
                        	FROM ret_taging_status_log m1
                        	LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '$ToDt')
                        	LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE m2.id_tag_status_log IS NULL
                        	".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                        	AND m1.status = 0 AND date(m1.date) <= '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") as current ON  ".($group_by==1 ? " current.product_id = t.product_id " : "current.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name,
                        	p.cat_id
                        	FROM ret_taging_status_log l
                        	LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
                        	LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
                        	".($id_branch!='' ? " and l.from_branch=".$id_branch."" :'')."
                        	GROUP by ".($group_by==1 ? " t.product_id" :" p.cat_id")." ) in_trans on ".($group_by==1 ? " in_trans.product_id = t.product_id" : " in_trans.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT bd.product_id,p.cat_id,
                            ifnull(sum((tag.gross_wt - (SELECT sum(sold_gross_wt) as sold_gross_wt FROM ret_partlysold as pas
            				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
            				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
            				WHERE date(rb.bill_date) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as gross_wt,
                            ifnull(sum((tag.net_wt - (SELECT sum(sold_net_wt) as sold_net_wt FROM ret_partlysold as pas
            				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
            				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
            				WHERE date(rb.bill_date) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as net_wt,
                            ifnull(SUM(bd.piece),0) as piece
                            FROM ret_partlysold as ps
                            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = ps.sold_bill_det_id
                            LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                            LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'
                            GROUP by p.cat_id) ps_op_blc on ps_op_blc.cat_id = c.id_ret_category
                            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                            ifnull(sum((tag.gross_wt - (SELECT sum(sold_gross_wt) as sold_gross_wt FROM ret_partlysold as pas
            				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
            				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
            				WHERE date(rb.bill_date) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as gross_wt,
                            ifnull(sum((tag.net_wt - (SELECT sum(sold_net_wt) as sold_net_wt FROM ret_partlysold as pas
            				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
            				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
            				WHERE date(rb.bill_date) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as net_wt,
                            ifnull(SUM(bd.piece),0) as piece
                            FROM ret_partlysold as ps
                            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = ps.sold_bill_det_id
                            LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                            LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                            GROUP by p.cat_id) ps_in_blc on ps_in_blc.cat_id = c.id_ret_category
                             LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
                            		ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            		FROM ret_brch_transfer_old_metal btrt
                            		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                            		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                            		WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'
                            		GROUP by p.cat_id
                            		) ps_op_br_out ON ps_op_br_out.cat_id = c.id_ret_category
                            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
                            		ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            		FROM ret_brch_transfer_old_metal btrt
                            		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                            		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                            		WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'
                            		GROUP by p.cat_id
                            		) ps_br_out ON ps_br_out.cat_id = c.id_ret_category
                            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
                            		ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            		FROM ret_brch_transfer_old_metal btrt
                            		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                            		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                            		WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'
                            		GROUP by p.cat_id
                            		) ps_br_in ON ps_br_in.cat_id = c.id_ret_category
                            	where c.status = 1
                            	".($data['id_category']!='' && $data['id_category']!=0 ? " and c.id_ret_category=".$data['id_category']."" :'')."
                            	GROUP by c.id_ret_category
                        	UNION
                        	SELECT c.sort, concat(c.name, '-PCS') as category_name,
                        	(IFNULL(blc.gross_wt,0)+IFNULL(op_blc_inw.gross_wt,0)-IFNULL(op_blc_br_out.gross_wt,0)-IFNULL(op_blc_sales.gross_wt,0)) as op_blc_gwt,
                        	(IFNULL(blc.net_wt,0)+IFNULL(op_blc_inw.net_wt,0)-IFNULL(op_blc_br_out.net_wt,0)-IFNULL(op_blc_sales.net_wt,0)) as op_blc_nwt,
                        	(IFNULL(blc.piece,0)+IFNULL(op_blc_inw.piece,0)-IFNULL(op_blc_br_out.piece,0)-IFNULL(op_blc_sales.piece,0)) as op_blc_pcs,
                        	'-' as op_blc_value,
                        	IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
                        	'-' as inw_blc_value,
                        	(IFNULL(s.gross_wt,0) +  IFNULL(br_out.gross_wt,0)) as out_gwt, (IFNULL(s.net_wt,0) + IFNULL(br_out.net_wt,0)) as out_netwt,
                        	(IFNULL(s.piece,0) +  IFNULL(br_out.piece,0)) as out_piece, '-' as out_blc_value,
                        	(IFNULL(blc.piece,0)+IFNULL(op_blc_inw.piece,0) + IFNULL(INW.piece,0)- (IFNULL(s.piece,0) + IFNULL(br_out.piece,0) + IFNULL(op_blc_br_out.piece,0) + IFNULL(op_blc_sales.piece,0))) as closing_pcs,
                        	((IFNULL(blc.gross_wt,0) + IFNULL(op_blc_inw.gross_wt,0) + IFNULL(INW.gross_wt,0))- (IFNULL(s.gross_wt,0) + IFNULL(br_out.gross_wt,0) + IFNULL(op_blc_br_out.gross_wt,0)+ IFNULL(op_blc_sales.gross_wt,0))) as closing_gwt,
                        	((IFNULL(blc.net_wt,0) + IFNULL(op_blc_inw.net_wt,0) + IFNULL(INW.net_wt,0)) -(IFNULL(s.net_wt,0) + IFNULL(br_out.net_wt,0) + IFNULL(op_blc_br_out.net_wt,0)+IFNULL(op_blc_sales.net_wt,0))) as closing_nwt,
                        	'-' as closing_blc_value
                        	FROM ret_category c
                        	LEFT JOIN (SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  < '2022-04-01' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE tag.tag_id IS NOT NULL  AND tag.gross_wt = 0
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0) AND date(m1.date) < '2022-04-01' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") blc on ".($group_by==1 ? " blc.product_id = t.product_id " : " blc.cat_id = c.id_ret_category" )."
                        	LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '2022-04-01' AND '$op_blc_to_date' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE tag.tag_id IS NOT NULL  AND tag.gross_wt = 0
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0) AND date(m1.date) BETWEEN '2022-04-01' AND '$op_blc_to_date' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") op_blc_inw on ".($group_by==1 ? " op_blc_inw.product_id = t.product_id " : " op_blc_inw.cat_id = c.id_ret_category" )."
                            LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
                            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                            FROM ret_taging tag
                            LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15 or l.status=16 or l.status=17)
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE (date(l.date) BETWEEN '2022-04-01' AND '$op_blc_to_date') AND tag.gross_wt = 0  and
                            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15 or l.status=16 or l.status=17)
                            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
                            GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") op_blc_br_out on ".($group_by==1 ? " op_blc_br_out.product_id = t.product_id " : "op_blc_br_out.cat_id = c.id_ret_category" )."
                            LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                        	SUM(b.piece) as piece,b.product_id,p.cat_id
                        	FROM ret_taging tag
                        	LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
                        	LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE bill.bill_status = 1 AND tag.gross_wt = 0  and
                        	(date(bill.bill_date) BETWEEN '2022-04-01' AND '$op_blc_to_date') AND b.product_id = p.pro_id
                        	".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") op_blc_sales ON ".($group_by==1 ? " op_blc_sales.product_id = t.product_id " : "op_blc_sales.cat_id = c.id_ret_category" )."
                            LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE tag.tag_id IS NOT NULL  AND tag.gross_wt = 0
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") INW on ".($group_by==1 ? " INW.product_id = t.product_id " : " INW.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                        	SUM(b.piece) as piece,b.product_id,p.cat_id
                        	FROM ret_taging tag
                        	LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
                        	LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE bill.bill_status = 1 AND tag.gross_wt = 0  and
                        	(date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
                        	".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") s ON ".($group_by==1 ? " s.product_id = t.product_id " : "s.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
                        		SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                        		FROM ret_taging tag
                        		LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15 or l.status=16 or l.status=17)
                        		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') AND tag.gross_wt = 0  and
                        	(l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15 or l.status=16 or l.status=17)
                        	".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
                        	 GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") br_out on ".($group_by==1 ? " br_out.product_id = t.product_id " : "br_out.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
                        	ifnull(SUM(tag.net_wt),0) as net_wt,
                        	ifnull(SUM(tag.piece),0) as piece,p.cat_id
                        	FROM ret_taging_status_log m1
                        	LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '$ToDt')
                        	LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	WHERE m2.id_tag_status_log IS NULL  AND tag.gross_wt = 0
                        	".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                        	AND m1.status = 0 AND date(m1.date) <= '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") as current ON  ".($group_by==1 ? " current.product_id = t.product_id " : "current.cat_id = c.id_ret_category" )."
                        	LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name,
                        	p.cat_id
                        	FROM ret_taging_status_log l
                        	LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
                        	LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4 AND t.gross_wt = 0
                        	".($id_branch!='' ? " and l.from_branch=".$id_branch."" :'')."
                        	GROUP by ".($group_by==1 ? " t.product_id" :" p.cat_id")." ) in_trans on ".($group_by==1 ? " in_trans.product_id = t.product_id" : " in_trans.cat_id = c.id_ret_category" )."
                        	where c.status = 1  AND c.tally_qty_type != 1
                        	".($data['id_category']!='' && $data['id_category']!=0 ? " and c.id_ret_category=".$data['id_category']."" :'')."
                        	GROUP by c.id_ret_category HAVING op_blc_pcs > 0 OR inw_pcs > 0 OR out_piece > 0 OR closing_pcs > 0
                        	");
                    //echo $this->db->last_query();exit;
                //Non tag items stock
                $transitemtype[2] = $this->db->query("SELECT c.sort, c.name as category_name,
                        	(IFNULL(blc_inw.gross_wt,0)-IFNULL(blc_sales.gross_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_gwt,
                        	(IFNULL(blc_inw.net_wt,0)-IFNULL(blc_sales.net_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_nwt,
                        	(IFNULL(blc_inw.no_of_piece,0)-IFNULL(blc_sales.piece,0)-IFNULL(blc_br_out.no_of_piece,0)) as op_blc_pcs,
                        	'-' as op_blc_value,
                        	IFNULL(inw.gross_wt,0) as inw_gwt,IFNULL(inw.net_wt,0) as inw_nwt,IFNULL(inw.no_of_piece,0) as inw_pcs,
                        	'-' as inw_blc_value,
                        	(IFNULL(sales.gross_wt,0) +  IFNULL(br_out.gross_wt,0)) as out_gwt, (IFNULL(sales.net_wt,0) + IFNULL(br_out.net_wt,0)) as out_netwt,
                        	(IFNULL(sales.piece,0) +  IFNULL(br_out.no_of_piece,0)) as out_piece, '-' as out_blc_value,
							((IFNULL(blc_inw.no_of_piece,0)-IFNULL(blc_sales.piece,0)-IFNULL(blc_br_out.no_of_piece,0)) + IFNULL(inw.no_of_piece,0) - IFNULL(sales.piece,0) - IFNULL(br_out.no_of_piece,0)) as closing_pcs,
							(IFNULL(blc_inw.gross_wt,0)-IFNULL(blc_sales.gross_wt,0)-IFNULL(blc_br_out.net_wt,0) + IFNULL(inw.gross_wt,0) - IFNULL(sales.gross_wt,0)- IFNULL(br_out.gross_wt,0))  as closing_gwt,
							(IFNULL(blc_inw.net_wt,0)-IFNULL(blc_sales.net_wt,0)-IFNULL(blc_br_out.net_wt,0) + IFNULL(inw.net_wt,0) - IFNULL(sales.net_wt,0) - IFNULL(br_out.net_wt,0)) as closing_nwt,
                        	'-' as closing_blc_value
                FROM ret_product_master p
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece
                FROM ret_nontag_item_log m1
                LEFT JOIN ret_product_master p on p.pro_id = m1.product
                WHERE m1.product IS NOT NULL AND m1.to_branch = ".$data['id_branch']." AND m1.status = 0 AND
                date(m1.date) < '$FromDt'
                and m1.to_branch = ".$data['id_branch']."
                GROUP by ".($group_by==1 ? " m1.product" :" p.cat_id")." ) as blc_inw ON ".($group_by==1 ? " blc_inw.product = p.pro_id" : " blc_inw.cat_id = p.cat_id" )."
                LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
                SUM(b.piece) as piece,b.product_id,p.cat_id
                FROM ret_bill_details b
                LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
                (date(bill.bill_date) < '$FromDt') AND bill.id_branch = ".$data['id_branch']."
                GROUP by ".($group_by==1 ? " b.product_id" :" p.cat_id")." ) blc_sales ON  ".($group_by==1 ? " blc_sales.product_id = p.pro_id" : " blc_sales.cat_id = p.cat_id" )."
                LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
                SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece
                FROM  ret_nontag_item_log l
                LEFT JOIN ret_product_master as p ON p.pro_id = l.product
                WHERE (date(l.date) < '$FromDt' ) and
                (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10)
                and l.from_branch=".$data['id_branch']."
                GROUP by ".($group_by==1 ? " l.product" :" p.cat_id")." ) blc_br_out on ".($group_by==1 ? " blc_br_out.product = p.pro_id" : " blc_br_out.cat_id = p.cat_id" )."
                LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece
                FROM ret_nontag_item_log m1
                LEFT JOIN ret_product_master p on p.pro_id = m1.product
                WHERE m1.product IS NOT NULL AND m1.to_branch = ".$data['id_branch']." AND m1.status = 0 AND
                date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
                and m1.to_branch = ".$data['id_branch']."
                GROUP by ".($group_by==1 ? " m1.product" :" p.cat_id").") as inw ON ".($group_by==1 ? " inw.product = p.pro_id" : " inw.cat_id = p.cat_id" )."
                LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
                SUM(b.piece) as piece,b.product_id,p.cat_id
                FROM ret_bill_details b
                LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
                (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND bill.id_branch = ".$data['id_branch']."
                GROUP by ".($group_by==1 ? " b.product_id" :" p.cat_id")." ) sales ON  ".($group_by==1 ? " sales.product_id = p.pro_id" : " sales.cat_id = p.cat_id" )."
                LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
                SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece
                FROM  ret_nontag_item_log l
                LEFT JOIN ret_product_master as p ON p.pro_id = l.product
                WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
                (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10)
                and l.from_branch=".$data['id_branch']."
                GROUP by ".($group_by==1 ? " l.product" :" p.cat_id").") br_out on ".($group_by==1 ? " br_out.product = p.pro_id" : " br_out.cat_id = p.cat_id" )."
                WHERE p.stock_type = 2
                ".($data['id_category']!='' && $data['id_category']!=0 ? " and p.cat_id=".$data['id_category']."" :'')."
                ".($data['id_product']!='' ? " and p.pro_id=".$data['id_product']."" :'')."
                GROUP by ".($group_by==1 ? " p.pro_id" :" p.cat_id")." ORDER BY c.sort");
                //Sales return
                $transitemtype[3] = $this->db->query("SELECT c.sort,c.name as category_name,
                IFNULL(op_blc.gross_wt,0) - IFNULL(op_br_out.gross_wt,0) as op_blc_gwt,
                IFNULL(op_blc.net_wt,0) -  IFNULL(op_br_out.net_wt,0) as op_blc_nwt,
                IFNULL(op_blc.piece,0) - IFNULL(op_br_out.piece,0) as op_blc_pcs,
                '-' as op_blc_value,
                IFNULL(in_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0) as inw_gwt,
                IFNULL(in_blc.net_wt,0) + IFNULL(br_in.net_wt,0) as inw_nwt,
                IFNULL(in_blc.piece,0) + IFNULL(br_in.piece,0) as inw_pcs,
                '-' as inw_blc_value,
                IFNULL(br_out.gross_wt,0) as out_gwt,
                IFNULL(br_out.net_wt,0) as out_netwt,
                IFNULL(br_out.piece,0) as out_piece,
                '-' as out_blc_value,
                ((IFNULL(op_blc.piece,0) + IFNULL(in_blc.piece,0) + IFNULL(br_in.piece,0)) - IFNULL(br_out.piece,0) - IFNULL(op_br_out.piece,0)) as closing_pcs,
                ((IFNULL(op_blc.gross_wt,0) + IFNULL(in_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0)) - IFNULL(br_out.gross_wt,0) - IFNULL(op_br_out.gross_wt,0)) as closing_gwt,
                ((IFNULL(op_blc.net_wt,0) + IFNULL(in_blc.net_wt,0) + IFNULL(br_in.net_wt,0)) - IFNULL(br_out.net_wt,0) - IFNULL(op_br_out.net_wt,0)) as closing_nwt,
                '-' as closing_blc_value
                FROM ret_category as c
                LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt, ifnull(SUM(bd.piece),0) as piece
                FROM ret_bill_return_details as sr
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'
                GROUP by p.cat_id) op_blc on op_blc.cat_id = c.id_ret_category
                LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt, ifnull(SUM(bd.piece),0) as piece
                FROM ret_bill_return_details as sr
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                GROUP by p.cat_id) in_blc on in_blc.cat_id = c.id_ret_category
               LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
                		ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                		FROM ret_brch_transfer_old_metal btrt
                		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                		WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'
                		GROUP by p.cat_id
                		) op_br_out ON op_br_out.cat_id = c.id_ret_category
                LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
                		ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                		FROM ret_brch_transfer_old_metal btrt
                		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                		WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'
                		GROUP by p.cat_id
                		) br_out ON br_out.cat_id = c.id_ret_category
                LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                		ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                		FROM ret_brch_transfer_old_metal btrt
                		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                		WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'
                		GROUP by p.cat_id
                		) br_in ON br_in.cat_id = c.id_ret_category
                WHERE c.status = 1
                ".($data['id_category']!='' && $data['id_category']!=0 ? " and c.id_ret_category=".$data['id_category']."" :'')."
                GROUP by c.id_ret_category
                HAVING op_blc_pcs > 0 OR inw_pcs > 0 OR  out_piece > 0 OR closing_pcs > 0");
                //echo $this->db->last_query();exit;
                //PArtly Sale
                $transitemtype[4] = $this->db->query("SELECT c.sort,c.name as category_name,
                IFNULL(op_blc.gross_wt,0) - IFNULL(op_br_out.gross_wt,0) as op_blc_gwt,
                IFNULL(op_blc.net_wt,0) - IFNULL(op_br_out.net_wt,0) as op_blc_nwt,
                IFNULL(op_blc.piece,0) - IFNULL(op_br_out.piece,0) as op_blc_pcs,
                '-' as op_blc_value,
                IFNULL(in_blc.gross_wt,0) as inw_gwt,
                IFNULL(in_blc.net_wt,0) as inw_nwt,
                IFNULL(in_blc.piece,0) as inw_pcs,
                '-' as inw_blc_value,
                IFNULL(br_out.gross_wt,0) as out_gwt,
                IFNULL(br_out.net_wt,0) as out_netwt,
                IFNULL(br_out.piece,0) as out_piece,
                '-' as out_blc_value,
                ((IFNULL(op_blc.piece,0) + IFNULL(in_blc.piece,0) + IFNULL(br_in.piece,0)) - IFNULL(br_out.piece,0) - IFNULL(op_br_out.piece,0)) as closing_pcs,
                ((IFNULL(op_blc.gross_wt,0) + IFNULL(in_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0)) - IFNULL(br_out.gross_wt,0) - IFNULL(op_br_out.gross_wt,0)) as closing_gwt,
                ((IFNULL(op_blc.net_wt,0) + IFNULL(in_blc.net_wt,0) + IFNULL(br_in.net_wt,0)) - IFNULL(br_out.net_wt,0) - IFNULL(op_br_out.net_wt,0)) as closing_nwt,
                '-' as closing_blc_value
                FROM ret_category as c
                LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(sold_gross_wt) as sold_gross_wt FROM ret_partlysold as pas
				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
				WHERE date(rb.bill_date) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(sold_net_wt) as sold_net_wt FROM ret_partlysold as pas
				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
				WHERE date(rb.bill_date) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece
                FROM ret_partlysold as ps
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = ps.sold_bill_det_id
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'
                GROUP by p.cat_id) op_blc on op_blc.cat_id = c.id_ret_category
                LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(sold_gross_wt) as sold_gross_wt FROM ret_partlysold as pas
				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
				WHERE date(rb.bill_date) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(sold_net_wt) as sold_net_wt FROM ret_partlysold as pas
				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
				WHERE date(rb.bill_date) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece
                FROM ret_partlysold as ps
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = ps.sold_bill_det_id
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                GROUP by p.cat_id) in_blc on in_blc.cat_id = c.id_ret_category
                 LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
                		ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                		FROM ret_brch_transfer_old_metal btrt
                		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                		WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'
                		GROUP by p.cat_id
                		) op_br_out ON op_br_out.cat_id = c.id_ret_category
                LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
                		ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                		FROM ret_brch_transfer_old_metal btrt
                		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                		WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'
                		GROUP by p.cat_id
                		) br_out ON br_out.cat_id = c.id_ret_category
                LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
                		ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                		FROM ret_brch_transfer_old_metal btrt
                		LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
                		LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                		WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'
                		GROUP by p.cat_id
                		) br_in ON br_in.cat_id = c.id_ret_category
                WHERE c.status = 1
                ".($data['id_category']!='' && $data['id_category']!=0 ? " and c.id_ret_category=".$data['id_category']."" :'')."
                GROUP by c.id_ret_category
                HAVING op_blc_pcs > 0 OR inw_pcs > 0 OR  out_piece > 0 OR closing_pcs > 0");
           $transitemtype[5] = $this->db->query("SELECT c.id_metal_type as sort,c.metal_type as category_name, IFNULL(op_blc.gross_wt,0) as op_blc_gwt,
                IFNULL(op_blc.net_wt,0) as op_blc_nwt,IFNULL(op_blc.piece,0) as op_blc_pcs,
                '-' as op_blc_value,
                IFNULL(in_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0) as inw_gwt,
                IFNULL(in_blc.net_wt,0) + IFNULL(br_in.net_wt,0) as inw_nwt,
                IFNULL(in_blc.piece,0) + IFNULL(br_in.piece,0) as inw_pcs,
                '-' as inw_blc_value,
                IFNULL(br_out.gross_wt,0) as out_gwt,
                IFNULL(br_out.net_wt,0) as out_netwt,
                IFNULL(br_out.piece,0) as out_piece,
                '-' as out_blc_value,
                ((IFNULL(op_blc.piece,0) + IFNULL(in_blc.piece,0) + IFNULL(br_in.piece,0)) - IFNULL(br_out.piece,0)) as closing_pcs,
                ((IFNULL(op_blc.gross_wt,0) + IFNULL(in_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0)) - IFNULL(br_out.gross_wt,0)) as closing_gwt,
                ((IFNULL(op_blc.net_wt,0) + IFNULL(in_blc.net_wt,0) + IFNULL(br_in.net_wt,0)) - IFNULL(br_out.net_wt,0)) as closing_nwt,
                '-' as closing_blc_value
                FROM ret_old_metal_type as c
                LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt, ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
                FROM ret_bill_old_metal_sale_details as osl
                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                LEFT JOIN ret_billing as bill ON bill.bill_id = osl.bill_id
                WHERE bill.id_branch = ".$data['id_branch']." AND date(bill.bill_date) < '$FromDt' AND bill.bill_status = 1
                GROUP by oldt.id_metal_type) op_blc on op_blc.id_metal_type = c.id_metal_type
                LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt, ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
                FROM ret_bill_old_metal_sale_details as osl
                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                LEFT JOIN ret_billing as bill ON bill.bill_id = osl.bill_id
                WHERE bill.id_branch = ".$data['id_branch']." AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND bill.bill_status = 1
                GROUP by oldt.id_metal_type) in_blc on in_blc.id_metal_type = c.id_metal_type
                LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt,
                		ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
                		FROM ret_brch_transfer_old_metal btrt
                		LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = btrt.old_metal_sale_id
                		LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                		LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                		WHERE btrt.item_type = 1 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'
                		GROUP by oldt.id_metal_type) br_out ON br_out.id_metal_type = c.id_metal_type
                LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt,
                		ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
                		FROM ret_brch_transfer_old_metal btrt
                		LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = btrt.old_metal_sale_id
                		LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
                		LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
                		LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
                		WHERE btrt.item_type = 1 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'
                		GROUP by oldt.id_metal_type
                		) br_in ON br_in.id_metal_type = c.id_metal_type
                ".($data['id_category']!='' && $data['id_category']!=0 ? " WHERE c.id_metal_type=".$data['id_category']."" :'')."
                GROUP by c.id_metal_type
                HAVING op_blc_pcs > 0 OR inw_pcs > 0 OR  out_piece > 0 OR closing_pcs > 0 ");
        $transitemtype[6] = $this->db->query("SELECT '' as sort, c.stone_name as category_name,
                        	(IFNULL(op_blc_inw.gross_wt,0)-IFNULL(op_blc_br_out.gross_wt,0)-IFNULL(op_blc_sales.gross_wt,0)) as op_blc_gwt,
                        	(IFNULL(op_blc_inw.net_wt,0)-IFNULL(op_blc_br_out.net_wt,0)-IFNULL(op_blc_sales.net_wt,0)) as op_blc_nwt,
                        	(IFNULL(op_blc_inw.piece,0)-IFNULL(op_blc_br_out.piece,0)-IFNULL(op_blc_sales.piece,0)) as op_blc_pcs,
                        	'-' as op_blc_value,
                        	IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
                        	'-' as inw_blc_value,
                        	(IFNULL(s.gross_wt,0) +  IFNULL(br_out.gross_wt,0)) as out_gwt, (IFNULL(s.net_wt,0) + IFNULL(br_out.net_wt,0)) as out_netwt,
                        	(IFNULL(s.piece,0) +  IFNULL(br_out.piece,0)) as out_piece, '-' as out_blc_value,
                        	(IFNULL(op_blc_inw.piece,0) + IFNULL(INW.piece,0)- (IFNULL(s.piece,0) + IFNULL(br_out.piece,0) + IFNULL(op_blc_br_out.piece,0) + IFNULL(op_blc_sales.piece,0))) as closing_pcs,
                        	((IFNULL(op_blc_inw.gross_wt,0) + IFNULL(INW.gross_wt,0))- (IFNULL(s.gross_wt,0) + IFNULL(br_out.gross_wt,0) + IFNULL(op_blc_br_out.gross_wt,0)+ IFNULL(op_blc_sales.gross_wt,0))) as closing_gwt,
                        	((IFNULL(op_blc_inw.net_wt,0) + IFNULL(INW.net_wt,0)) -(IFNULL(s.net_wt,0) + IFNULL(br_out.net_wt,0) + IFNULL(op_blc_br_out.net_wt,0)+IFNULL(op_blc_sales.net_wt,0))) as closing_nwt,
                        	'-' as closing_blc_value
                        	FROM ret_stone c
	                        LEFT JOIN(SELECT ts.stone_id, ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as gross_wt,
                            ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as net_wt, ifnull(SUM(ts.pieces),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '2022-04-01' AND '$op_blc_to_date' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_taging_stone as ts ON ts.tag_id = tag.tag_id
							LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
							LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
                            WHERE tag.tag_id IS NOT NULL  AND st.stone_type = 1 AND ts.tag_stone_id IS NOT NULL
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0) AND date(m1.date) BETWEEN '2022-04-01' AND '$op_blc_to_date' GROUP by ts.stone_id) op_blc_inw on op_blc_inw.stone_id = c.stone_id
							LEFT JOIN (SELECT ts.stone_id, ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as gross_wt,
                            ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as net_wt, ifnull(SUM(ts.pieces),0) as piece
                            FROM ret_taging tag
                            LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15)
                            LEFT JOIN ret_taging_stone as ts ON ts.tag_id = tag.tag_id
							LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
							LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
                            WHERE tag.tag_id IS NOT NULL  AND st.stone_type = 1 AND ts.tag_stone_id IS NOT NULL AND (date(l.date) BETWEEN '2022-04-01' AND '$op_blc_to_date') and
                            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15)
                            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
                            GROUP by ts.stone_id) op_blc_br_out on op_blc_br_out.stone_id = c.stone_id
							LEFT JOIN (SELECT ts.stone_id,ifnull(sum(round((ts.wt / 5), 3)),0) as gross_wt,
                            ifnull(sum(round((ts.wt / 5), 3)),0) as net_wt, ifnull(SUM(ts.pieces),0) as piece
                        	FROM ret_taging tag
                        	LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
                        	LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_billing_item_stones as ts ON ts.bill_det_id = b.bill_det_id
							LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
                        	WHERE bill.bill_status = 1 and st.stone_type = 1 AND ts.bill_item_stone_id IS NOT NULL and
                        	(date(bill.bill_date) BETWEEN '2022-04-01' AND '$op_blc_to_date')
                        	".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
                        	GROUP by ts.stone_id) op_blc_sales ON op_blc_sales.stone_id = c.stone_id
							LEFT JOIN(SELECT ts.stone_id, ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as gross_wt,
                            ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as net_wt, ifnull(SUM(ts.pieces),0) as piece
                            FROM ret_taging_status_log m1
                            LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')." and m2.status = 0)
                            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                            LEFT JOIN ret_taging_stone as ts ON ts.tag_id = tag.tag_id
							LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
							LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
                            WHERE tag.tag_id IS NOT NULL  AND st.stone_type = 1 AND ts.tag_stone_id IS NOT NULL
                            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
                            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ts.stone_id) INW on INW.stone_id = c.stone_id
                        	LEFT JOIN (SELECT ts.stone_id,ifnull(sum(round((ts.wt / 5), 3)),0) as gross_wt,
                            ifnull(sum(round((ts.wt / 5), 3)),0) as net_wt, ifnull(SUM(ts.pieces),0) as piece
                        	FROM ret_taging tag
                        	LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
                        	LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_billing_item_stones as ts ON ts.bill_det_id = b.bill_det_id
							LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
                        	WHERE bill.bill_status = 1 and st.stone_type = 1 AND ts.bill_item_stone_id IS NOT NULL and
                        	(date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
                        	".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
                        	GROUP by ts.stone_id ) s ON s.stone_id = c.stone_id
							LEFT JOIN (SELECT ts.stone_id, ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as gross_wt,
                            ifnull(sum(if(ifnull(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) as net_wt, ifnull(SUM(ts.pieces),0) as piece
                        		FROM ret_taging tag
                        		LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=15)
                        		LEFT JOIN ret_taging_stone as ts ON ts.tag_id = tag.tag_id
							LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
							LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
                        	WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') AND st.stone_type = 1 AND ts.tag_stone_id IS NOT NULL and
                        	(l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12)
                        	".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
                        	 GROUP by ts.stone_id) br_out on br_out.stone_id = c.stone_id
							WHERE c.stone_status = 1 AND c.stone_type = 1
							GROUP by c.stone_name");
            //echo $this->db->last_query();exit;
            foreach($data['transitemtype'] as $tkey => $tval){
                if($tval == 0){
                    $return_array = array_merge( $transitemtype[1]->result_array(),  $transitemtype[2]->result_array(),  $transitemtype[3]->result_array(), $transitemtype[4]->result_array(), $transitemtype[5]->result_array(), $transitemtype[6]->result_array());
                }else{
                    $return_array = array_merge($return_array, $transitemtype[$tval]->result_array());
                }
            }
           // print_r($this->db->last_query());exit;
           // $result = $sql->result_array();
            foreach($return_array as $r){
				$stock_detail[$r['category_name']][] = $r;
			}
			$response_data = array();
			foreach($stock_detail as $key => $val){
			    $cat_name   = $key;
			    $op_pcs     = 0;
			    $op_gwt     = 0;
			    $op_nwt     = 0;
			    $op_value   = 0;
			    $in_pcs     = 0;
			    $in_gwt     = 0;
			    $in_nwt     = 0;
			    $in_value   = 0;
			    $out_pcs     = 0;
			    $out_gwt     = 0;
			    $out_nwt     = 0;
			    $out_value   = 0;
			    $cl_pcs     = 0;
			    $cl_gwt     = 0;
			    $cl_nwt     = 0;
			    $cl_value   = 0;
			    foreach($val as $catdet){
			        $op_pcs += $catdet['op_blc_pcs'];
			        $op_gwt += $catdet['op_blc_gwt'];
			        $op_nwt += $catdet['op_blc_nwt'];
			        $in_pcs += $catdet['inw_pcs'];
			        $in_gwt += $catdet['inw_gwt'];
			        $in_nwt += $catdet['inw_nwt'];
			        $out_pcs += $catdet['out_piece'];
			        $out_gwt += $catdet['out_gwt'];
			        $out_nwt += $catdet['out_netwt'];
			        $cl_pcs += $catdet['closing_pcs'];
			        $cl_gwt += $catdet['closing_gwt'];
			        $cl_nwt += $catdet['closing_nwt'];
			    }
			    $response_data[] = array("category_name" => $cat_name,
			                            "op_blc_pcs"    => $op_pcs,
			                            "op_blc_gwt"    => number_format($op_gwt, 3, '.','') ,
			                            "op_blc_nwt"    => number_format($op_nwt, 3, '.',''),
			                            "op_blc_value"  => "-",
			                            "inw_pcs"       => $in_pcs,
			                            "inw_gwt"       => number_format($in_gwt, 3, '.',''),
			                            "inw_nwt"       => number_format($in_nwt, 3, '.',''),
			                            "inw_blc_value" => "-",
			                            "out_piece"       => $out_pcs,
			                            "out_gwt"         => number_format($out_gwt, 3, '.',''),
			                            "out_netwt"       => number_format($out_nwt, 3, '.',''),
			                            "out_blc_value"   => "-",
			                            "closing_pcs"       => $cl_pcs,
			                            "closing_gwt"       => number_format($cl_gwt, 3, '.',''),
			                            "closing_nwt"       => number_format($cl_nwt, 3, '.',''),
			                            "closing_blc_value" => "-"
			                            );
			}
    	    return $response_data;
	}
    function getall_cashamt_by_deposit_date($from_date, $to_date, $branch = 0) {
        $date_restriction = "2022-10-10";
        $where = "";
        if($branch > 0) {
            $where = " AND bill.id_branch = ".$branch." AND dep.dep_branch = ".$branch;
        }
		$return_array = array();
		$sql = "SELECT
					dep.dep_id,
					dep.created_on,
					dep.dep_date,
					SUM(CASE WHEN bill.bill_date <= dep.created_on THEN bill_pay.payment_amount END) AS cash_amt
			FROM  ret_billing_payment AS bill_pay
			LEFT JOIN ret_billing AS bill ON bill.bill_id = bill_pay.bill_id
			CROSS JOIN ret_bank_deposit AS dep
			WHERE payment_mode = 'Cash' AND bill_status = 1
            AND DATE(bill.bill_date) >= '".$date_restriction."'
			".$where."
			GROUP BY dep.created_on
			ORDER BY dep.created_on";
           // echo $sql;exit;
		$sql = $this->db->query($sql);
		$billpay_result = $sql->result_array();
		$return_array['billpay'] = $billpay_result;
//AND (date(dep.created_on) BETWEEN '".date("Y-m-d",strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
        $where = "";
        if($branch > 0) {
            $where = " AND ir.id_branch = ".$branch." AND dep.dep_branch = ".$branch;
        }
		$sql = "SELECT
					dep.dep_id,
					dep.created_on,
					dep.dep_date,
					SUM(CASE WHEN ir_pay.payment_date <= dep.created_on THEN (IF(ir_pay.type = 1, ir_pay.payment_amount, (ir_pay.payment_amount * -1))) END) AS cash_amt
			FROM  ret_issue_rcpt_payment AS ir_pay
			LEFT JOIN ret_issue_receipt AS ir ON ir.id_issue_receipt = ir_pay.id_issue_rcpt
			CROSS JOIN ret_bank_deposit AS dep
			WHERE payment_mode = 'Cash' AND bill_status = 1
            AND DATE(ir_pay.payment_date) >= '".$date_restriction."'
			".$where."
			GROUP BY dep.created_on
			ORDER BY dep.created_on";
		$sql = $this->db->query($sql);
		$irpay_result = $sql->result_array();
		$return_array['irpay'] = $irpay_result;
        $where = "";
        if($branch > 0) {
            $where = " AND pay.id_branch = ".$branch." AND dep.dep_branch = ".$branch;
        }
		$sql = "SELECT
					dep.dep_id,
					dep.created_on,
					dep.dep_date,
					SUM(CASE WHEN pay.approval_date <= dep.created_on THEN pay.payment_amount END) AS cash_amt
			FROM  payment AS pay
			CROSS JOIN ret_bank_deposit AS dep
			WHERE payment_mode = 'CSH' AND payment_status = 1
            AND DATE(pay.approval_date) >= '".$date_restriction."'
            ".$where."
			GROUP BY dep.created_on
			ORDER BY dep.created_on";
		$sql = $this->db->query($sql);
		$chitresult = $sql->result_array();
		$return_array['chit'] = $chitresult;
		/*echo "<pre>";
		print_r($billpay_result);
		print_r($irpay_result);
		print_r($chitresult);
		echo "</pre>";
		exit;*/
		return $return_array;
	}
	function get_rate_fixed_details($data)
	{
	    $return_data = [];
	    $sql1 = $this->db->query("SELECT p.po_id,p.po_ref_no,k.firstname as suppliername,r.rate_fix_wt,r.rate_fix_rate,r.total_amount as fixed_amount,date_format(r.rate_fix_created_on,'%d-%m-%Y') as ratefixeddate,
	    g.grn_ref_no,date_format(g.grn_date,'%d-%m-%Y') as grn_date,p.tot_purchase_wt,g.grn_purchase_amt,if(m.id_metal=1,'24KT Gold',if(m.id_metal=2,'24KT Silver',m.metal)) as metal,'' as apprv_ref_no
        FROM ret_po_rate_fix r
        LEFT JOIN ret_purchase_order p ON p.po_id = r.rate_fix_po_item_id
        LEFT JOIN ret_grn_entry g ON g.grn_id = p.po_grn_id
        LEFT JOIN ret_karigar k ON k.id_karigar = p.po_karigar_id
        LEFT JOIN ret_grn_items gi on gi.grn_item_grn_id = g.grn_id
        LEFT JOIN ret_category cat on cat.id_ret_category = gi.grn_item_cat_id
        LEFT JOIN metal m on m.id_metal = cat.id_metal
        Where g.grn_ref_no IS NOT NULL and r.bill_status = 1
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(g.grn_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_karigar']!='' && $data['id_karigar']>0 ? "and p.po_karigar_id=".$data['id_karigar']." ":'')."
        ".($data['id_metal']!='' && $data['id_metal']>0 ? "and m.id_metal=".$data['id_metal']."" : '')."");
        $result1 = $sql1->result_array();
        $sql2 = $this->db->query("SELECT IFNULL(smop.ref_no,'') as po_ref_no,k.firstname as suppliername,r.rate_fix_wt,r.rate_fix_rate,r.total_amount as fixed_amount,date_format(r.rate_fix_created_on,'%d-%m-%Y') as ratefixeddate,
        '' as grn_ref_no,date_format(rc.date_add,'%d-%m-%Y') as grn_date,IFNULL(smop.weight,0) as tot_purchase_wt,IFNULL(smop.amount,0) as grn_purchase_amt,if(m.id_metal=1,'24KT Gold',if(m.id_metal=2,'24KT Silver',m.metal)) as metal,rc.ref_no as apprv_ref_no
        FROM ret_po_rate_fix r
        LEFT JOIN ret_supplier_rate_cut rc ON rc.id_supplier_rate_cut = r.id_approval_ratecut
        LEFT JOIN smith_company_op_balance smop on smop.id_smith_company_op_balance = rc.op_blc_id
        LEFT JOIN ret_karigar k ON k.id_karigar = rc.id_karigar
        LEFT JOIN metal m on m.id_metal = rc.id_metal
        Where r.id_approval_ratecut IS NOT NULL and rc.status = 1 and rc.is_opening_blc = 1
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(rc.date_add) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_karigar']!='' && $data['id_karigar']>0 ? "and rc.id_karigar=".$data['id_karigar']." ":'')."
        ".($data['id_metal']!='' && $data['id_metal'] > 0 ? "and rc.id_metal=".$data['id_metal']."": '')."");
        $result2 = $sql2->result_array();
        $result = array_merge($result1,$result2);
        foreach($result as $key => $val){
            $return_data[$val['grn_ref_no']][] =   $val;
        }
        foreach($return_data as $key => $val){
            foreach($val as $gkey => $gval){
                if($gkey > 0){
                    $return_data[$key][$gkey]["po_ref_no"] = "";
                    $return_data[$key][$gkey]["suppliername"] = "";
                    $return_data[$key][$gkey]["grn_ref_no"] = "";
                    $return_data[$key][$gkey]["grn_date"] = "";
                    $return_data[$key][$gkey]["grn_purchase_amt"] = "";
                }
            }
        }
        //echo "<pre>";print_r($return_data);exit;
        return $return_data;
	}
    function get_rate_unfixed_details240323($data)
	{
	    $sql = $this->db->query("SELECT p.po_id,p.po_ref_no,IFNULL(SUM(r.gross_wt),0) as gross_wt,IFNULL(SUM(r.net_wt),0) as net_wt,IFNULL(SUM(r.item_pure_wt),0) as pure_wt,date_format(g.grn_date,'%d-%m-%Y') as grndate,g.grn_ref_no,
        c.name as category_name,k.firstname as supplier_name,IFNULL(stn.stone_wt,0) as stone_wt,IFNULL(r.item_cost,0) as grn_item_cost,IFNULL(r.total_tax,0) as grn_item_gst_rate,
        (IFNULL(r.item_cost,0) - IFNULL(r.total_tax,0)) as taxable_amount,IFNULL(stnd.stnamount,0) as stnamount,
        IFNULL(ratefix.ratefixwt,0) as ratefixwt,(p.tot_purchase_wt-IFNULL(ratefix.ratefixwt,0)) as balance_weight,p.tot_purchase_wt
        FROM ret_purchase_order p
        LEFT JOIN ret_grn_entry g ON g.grn_id = p.po_grn_id
        LEFT JOIN ret_purchase_order_items r ON r.po_item_po_id = p.po_id
        LEFT JOIN(SELECT IFNULL(SUM(grn.grn_item_cost),0) as grn_item_cost,IFNULL(SUM(grn.grn_item_gst_rate),0) as grn_item_gst_rate,grn.grn_item_grn_id,grn.grn_item_cat_id
                 FROM ret_grn_items grn
                 GROUP BY grn.grn_item_grn_id,grn.grn_item_cat_id) as grnitem ON grnitem.grn_item_grn_id = g.grn_id AND grnitem.grn_item_cat_id = r.po_item_cat_id
        LEFT JOIN ret_karigar k ON k.id_karigar = p.po_karigar_id
        LEFT JOIN ret_category c ON c.id_ret_category = r.po_item_cat_id
        LEFT JOIN(SELECT IFNULL(SUM(s.po_stone_wt),0) as stone_wt,s.po_item_id
        FROM ret_po_stone_items s
        LEFT JOIN ret_purchase_order_items i ON i.po_item_id = s.po_item_id
        LEFT JOIN ret_stone st ON st.stone_id = s.po_stone_id
        LEFT JOIN ret_stone_type t ON t.id_stone_type = st.stone_type
        WHERE st.stone_type = 1
        GROUP BY s.po_item_id) as stn ON stn.po_item_id = r.po_item_id
        LEFT JOIN(SELECT IFNULL(SUM(s.po_stone_amount),0) as stnamount,s.po_item_id
        FROM ret_po_stone_items s
        LEFT JOIN ret_purchase_order_items i ON i.po_item_id = s.po_item_id
        LEFT JOIN ret_stone st ON st.stone_id = s.po_stone_id
        LEFT JOIN ret_stone_type t ON t.id_stone_type = st.stone_type
        WHERE st.stone_type = 1
        GROUP BY s.po_item_id) as stnd ON stnd.po_item_id = r.po_item_id
        LEFT JOIN(SELECT IFNULL(SUM(rfx.rate_fix_wt),0) as ratefixwt,rfx.rate_fix_po_item_id
                 FROM ret_po_rate_fix rfx
                 GROUP BY rfx.rate_fix_po_item_id) as ratefix ON ratefix.rate_fix_po_item_id = p.po_id
        WHERE p.isratefixed = 0
        ".($data['cat_id']!='' && $data['cat_id']>0 ? "and r.po_item_cat_id=".$data['cat_id']."":'')."
        ".($data['id_karigar']!='' && $data['id_karigar']>0 ? "and p.po_karigar_id=".$data['id_karigar']."":'')."
        GROUP BY r.po_item_id HAVING balance_weight > 0
        ORDER BY p.po_id DESC");
        $result = $sql->result_array();
        foreach($result as $key => $val){
            $return_data[$val['grn_ref_no']][] =   $val;
        }
        foreach($return_data as $key => $val){
                foreach($val as $gkey => $gval){
                    if($gkey > 0){
                        $return_data[$key][$gkey]["po_ref_no"] = "";
                        $return_data[$key][$gkey]["grn_ref_no"] = "";
                        $return_data[$key][$gkey]["supplier_name"] = "";
                        $return_data[$key][$gkey]["grndate"] = "";
                    }
                }
            }
        //echo "<pre>";print_r($return_data);exit;
        return $return_data;
	}
	function get_rate_unfixed_details($data)
	{
        $type  = !empty($data['pur_type']) ? $data['pur_type'] : 0;
        $multiple_id_metal = implode(' , ', $data['metal']);
        if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $data['metal'];
		}
        $multiple_id_category = implode(' , ', $data['cat_id']);
        if($multiple_id_category != '')
		{
			$category = $multiple_id_category;
		}else{
			$category = $data['cat_id'];
		}
        $multiple_id_karigar = implode(' , ', $data['id_karigar']);
        if($multiple_id_karigar != '')
		{
			$karigar = $multiple_id_karigar;
		}else{
			$karigar = $data['id_karigar'];
		}
	    $sql1 = $this->db->query("SELECT p.po_id,p.po_ref_no,IFNULL(SUM(r.gross_wt),0) as gross_wt,IFNULL(SUM(r.net_wt),0) as net_wt,IFNULL(SUM(r.item_pure_wt),0) as pure_wt,date_format(g.grn_date,'%d-%m-%Y') as grndate,g.grn_ref_no,
        c.name as category_name,k.firstname as supplier_name,IFNULL(stn.stone_wt,0) as stone_wt,IFNULL(r.item_cost,0) as grn_item_cost,IFNULL(r.total_tax,0) as grn_item_gst_rate,
        (IFNULL(r.item_cost,0) - IFNULL(r.total_tax,0)) as taxable_amount,IFNULL(stnd.stnamount,0) as stnamount,r.fix_rate_per_grm as unfixrate,
        0 as ratefixwt, p.tot_purchase_wt as balance_weight, p.tot_purchase_wt, UNIX_TIMESTAMP(g.grn_date) as createdon, 0 as fixrate, '' as crdr,IFNULL(ret.pur_ret_pur_wt,0) as pur_ret_pur_wt,rfp.rate_fix_id
        FROM ret_purchase_order p
        LEFT JOIN ret_grn_entry g ON g.grn_id = p.po_grn_id
        LEFT JOIN ret_purchase_order_items r ON r.po_item_po_id = p.po_id
        LEFT JOIN(SELECT IFNULL(SUM(grn.grn_item_cost),0) as grn_item_cost,IFNULL(SUM(grn.grn_item_gst_rate),0) as grn_item_gst_rate,grn.grn_item_grn_id,grn.grn_item_cat_id
                 FROM ret_grn_items grn
                 GROUP BY grn.grn_item_grn_id,grn.grn_item_cat_id) as grnitem ON grnitem.grn_item_grn_id = g.grn_id AND grnitem.grn_item_cat_id = r.po_item_cat_id
	   LEFT JOIN ret_karigar k ON k.id_karigar = p.po_karigar_id
       LEFT JOIN ret_category c ON c.id_ret_category = r.po_item_cat_id
       left join metal m on m.id_metal=c.id_metal
       LEFT JOIN(SELECT IFNULL(SUM(s.po_stone_wt),0) as stone_wt,i.po_item_po_id
			FROM ret_po_stone_items s
			LEFT JOIN ret_purchase_order_items i ON i.po_item_id = s.po_item_id
			LEFT JOIN ret_stone st ON st.stone_id = s.po_stone_id
			LEFT JOIN ret_stone_type t ON t.id_stone_type = st.stone_type
			WHERE st.stone_type = 1
        GROUP BY i.po_item_po_id) as stn ON stn.po_item_po_id = r.po_item_po_id
        LEFT JOIN(SELECT IFNULL(SUM(s.po_stone_amount),0) as stnamount,i.po_item_po_id
			FROM ret_po_stone_items s
			LEFT JOIN ret_purchase_order_items i ON i.po_item_id = s.po_item_id
			LEFT JOIN ret_stone st ON st.stone_id = s.po_stone_id
			LEFT JOIN ret_stone_type t ON t.id_stone_type = st.stone_type
        GROUP BY i.po_item_po_id) as stnd ON stnd.po_item_po_id = r.po_item_po_id
        LEFT JOIN ret_po_rate_fix as rfp ON rfp.rate_fix_po_item_id = p.po_id and rfp.bill_status = 1
		LEFT JOIN(SELECT pitm.po_item_po_id,IFNULL(SUM(itm.pur_ret_gwt),0) as ret_gwt,IFNULL(SUM(itm.pur_ret_pur_wt),0) as pur_ret_pur_wt
		FROM ret_purchase_return r
		LEFT JOIN ret_purchase_return_items itm ON itm.pur_ret_id = r.pur_return_id
		LEFT JOIN ret_purchase_order_items pitm ON pitm.po_item_id = itm.pur_ret_po_item_id
		WHERE r.bill_status = 1 and r.purchase_type = 0
		GROUP BY pitm.po_item_po_id) as ret ON ret.po_item_po_id = p.po_id
        WHERE p.isratefixed = 0 AND rfp.rate_fix_id IS NULL  and p.is_suspense_stock = 0 and p.is_approved = 1 and p.bill_status=1
        ".($id_metal!='' && $id_metal>0  ? " and  c.id_metal in (".$id_metal.") " :'' )."
        ".($karigar!='' && $karigar>0  ? " and  p.po_karigar_id in (".$karigar.") " :'' )."
        ".($category!='' && $category>0  ? " and  r.po_item_cat_id in (".$category.") " :'' )."
        ".($type !='' ? " and p.po_type =".$type."" :'')."
        GROUP BY p.po_id
        UNION
        SELECT p.po_id,p.po_ref_no,IFNULL(SUM(r.gross_wt),0) as gross_wt,IFNULL(SUM(r.net_wt),0) as net_wt,IFNULL(SUM(r.item_pure_wt),0) as pure_wt,date_format(g.grn_date,'%d-%m-%Y') as grndate,g.grn_ref_no,
        c.name as category_name,k.firstname as supplier_name,IFNULL(stn.stone_wt,0) as stone_wt,IFNULL(r.item_cost,0) as grn_item_cost,IFNULL(r.total_tax,0) as grn_item_gst_rate,
        (IFNULL(r.item_cost,0) - IFNULL(r.total_tax,0)) as taxable_amount,IFNULL(stnd.stnamount,0) as stnamount, r.fix_rate_per_grm as unfixrate,
        IFNULL(rfx.rate_fix_wt,0) as ratefixwt,(p.tot_purchase_wt - IFNULL(ratefix.ratefixwt,0)-IFNULL(ret.pur_ret_pur_wt,0)) as balance_weight,p.tot_purchase_wt,
        UNIX_TIMESTAMP(g.grn_date) as createdon, rfx.rate_fix_rate as fixrate, concat(round(abs(((r.fix_rate_per_grm - rfx.rate_fix_rate) * rfx.rate_fix_wt) * 1.03),2), if(r.fix_rate_per_grm > rfx.rate_fix_rate , 'Dr', 'Cr')) as crdr,
		'0' as pur_ret_pur_wt,rfx.rate_fix_id
        FROM ret_po_rate_fix as rfx
        LEFT JOIN ret_purchase_order p ON rfx.rate_fix_po_item_id = p.po_id
        LEFT JOIN ret_grn_entry g ON g.grn_id = p.po_grn_id
        LEFT JOIN ret_purchase_order_items r ON r.po_item_po_id = p.po_id
        LEFT JOIN(SELECT IFNULL(SUM(grn.grn_item_cost),0) as grn_item_cost,IFNULL(SUM(grn.grn_item_gst_rate),0) as grn_item_gst_rate,grn.grn_item_grn_id,grn.grn_item_cat_id
                 FROM ret_grn_items grn
                 GROUP BY grn.grn_item_grn_id,grn.grn_item_cat_id) as grnitem ON grnitem.grn_item_grn_id = g.grn_id AND grnitem.grn_item_cat_id = r.po_item_cat_id
        LEFT JOIN ret_karigar k ON k.id_karigar = p.po_karigar_id
        LEFT JOIN ret_category c ON c.id_ret_category = r.po_item_cat_id
        left join metal m on m.id_metal=c.id_metal
        LEFT JOIN(SELECT IFNULL(SUM(s.po_stone_wt),0) as stone_wt,s.po_item_id
			FROM ret_po_stone_items s
			LEFT JOIN ret_purchase_order_items i ON i.po_item_id = s.po_item_id
			LEFT JOIN ret_stone st ON st.stone_id = s.po_stone_id
			LEFT JOIN ret_stone_type t ON t.id_stone_type = st.stone_type
			WHERE st.stone_type = 1
        GROUP BY s.po_item_id) as stn ON stn.po_item_id = r.po_item_id
        LEFT JOIN(SELECT IFNULL(SUM(s.po_stone_amount),0) as stnamount,s.po_item_id
			FROM ret_po_stone_items s
			LEFT JOIN ret_purchase_order_items i ON i.po_item_id = s.po_item_id
			LEFT JOIN ret_stone st ON st.stone_id = s.po_stone_id
			LEFT JOIN ret_stone_type t ON t.id_stone_type = st.stone_type
        GROUP BY s.po_item_id) as stnd ON stnd.po_item_id = r.po_item_id
        LEFT JOIN(SELECT IFNULL(SUM(rfx.rate_fix_wt),0) as ratefixwt,rfx.rate_fix_po_item_id
                 FROM ret_po_rate_fix rfx
                 GROUP BY rfx.rate_fix_po_item_id) as ratefix ON ratefix.rate_fix_po_item_id = p.po_id
		LEFT JOIN(SELECT pitm.po_item_po_id,IFNULL(SUM(itm.pur_ret_gwt),0) as ret_gwt,IFNULL(SUM(itm.pur_ret_pur_wt),0) as pur_ret_pur_wt
				FROM ret_purchase_return r
				LEFT JOIN ret_purchase_return_items itm ON itm.pur_ret_id = r.pur_return_id
				LEFT JOIN ret_purchase_order_items pitm ON pitm.po_item_id = itm.pur_ret_po_item_id
				WHERE r.bill_status = 1
				GROUP BY pitm.po_item_po_id) as ret ON ret.po_item_po_id = p.po_id
        WHERE p.isratefixed = 0 and p.is_suspense_stock = 0 and p.is_approved = 1 and rfx.bill_status = 1
        ".($id_metal!='' && $id_metal>0  ? " and  c.id_metal in (".$id_metal.") " :'' )."
        ".($karigar!='' && $karigar>0  ? " and  p.po_karigar_id in (".$karigar.") " :'' )."
        ".($category!='' && $category>0  ? " and  r.po_item_cat_id in (".$category.") " :'' )."
        ".($type !='' ? " and p.po_type =".$type."" :'')."
        GROUP BY rfx.rate_fix_id  HAVING balance_weight > 0
        ORDER BY po_id DESC");
        $result1 = $sql1->result_array();
        $sql2 = $this->db->query("SELECT date_format(rc.date_add,'%d-%m-%Y') as grndate,rc.weight as pure_wt,rc.weight as gross_wt,rc.weight as net_wt,rc.ref_no as grn_ref_no,c.name as category_name,k.firstname as supplier_name,'0' as stone_wt,
        IFNULL(rc.amount,0) as grn_item_cost,IFNULL(rc.tax_amount,0) as grn_item_gst_rate,
        (IFNULL(rc.amount,0)-IFNULL(rc.tax_amount,0)) as taxable_amount,rc.charges_amount as stnamount,
        IFNULL(rc.rate_per_gram,0) as unfixrate,IFNULL(ratefix.ratefixwt,0) as ratefixwt,
        (rc.weight - IFNULL(ratefix.ratefixwt,0)-IFNULL(ret.pur_ret_pur_wt,0)) as balance_weight,
        IFNULL(rc.weight,0) as tot_purchase_wt,date_format(rc.date_add,'%d-%m-%Y') as createdon,
        0 as fixrate, '' as crdr,'0' as pur_ret_pur_wt,'' as rate_fix_id,IFNULL(po.po_ref_no,'') as po_ref_no
        FROM ret_supplier_rate_cut rc
        LEFT JOIN ret_purchase_order po on po.po_id = rc.po_id
        LEFT JOIN ret_product_master p ON p.pro_id = rc.id_product
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN ret_karigar k ON k.id_karigar = rc.id_karigar
        LEFT JOIN(SELECT IFNULL(SUM(rfx.rate_fix_wt),0) as ratefixwt,rfx.rate_fix_po_item_id
        FROM ret_po_rate_fix rfx
        where rfx.bill_status = 1
        GROUP BY rfx.rate_fix_po_item_id) as ratefix ON ratefix.rate_fix_po_item_id = po.po_id
        LEFT JOIN(SELECT pitm.po_item_po_id,IFNULL(SUM(itm.pur_ret_gwt),0) as ret_gwt,IFNULL(SUM(itm.pur_ret_pur_wt),0) as pur_ret_pur_wt
        FROM ret_purchase_return r
        LEFT JOIN ret_purchase_return_items itm ON itm.pur_ret_id = r.pur_return_id
        LEFT JOIN ret_purchase_order_items pitm ON pitm.po_item_id = itm.pur_ret_po_item_id
        WHERE r.bill_status = 1
        GROUP BY pitm.po_item_po_id) as ret ON ret.po_item_po_id = po.po_id
        WHERE rc.conversion_type = 2 and rc.status = 1 and rc.is_opening_blc = 0
        ".($karigar!='' && $karigar>0  ? " and  po.po_karigar_id in (".$karigar.") " :'' )."
        HAVING balance_weight > 0");
       //print_r($this->db->last_query());exit;
        $result2 = $sql2->result_array();
        $sql3 = $this->db->query("SELECT date_format(rc.date_add,'%d-%m-%Y') as grndate,rc.weight as pure_wt,rc.weight as gross_wt,rc.weight as net_wt,rc.ref_no as grn_ref_no,c.name as category_name,k.firstname as supplier_name,'0' as stone_wt,
        IFNULL(rc.amount,0) as grn_item_cost,IFNULL(rc.tax_amount,0) as grn_item_gst_rate,
        (IFNULL(rc.amount,0)-IFNULL(rc.tax_amount,0)) as taxable_amount,rc.charges_amount as stnamount,
        IFNULL(rc.rate_per_gram,0) as unfixrate,IFNULL(ratefix.ratefixwt,0) as ratefixwt,
        (rc.weight - IFNULL(ratefix.ratefixwt,0)) as balance_weight,
        IFNULL(rc.weight,0) as tot_purchase_wt,date_format(rc.date_add,'%d-%m-%Y') as createdon,
        0 as fixrate, '' as crdr,'0' as pur_ret_pur_wt,'' as rate_fix_id,IFNULL(op.ref_no,'') as po_ref_no,rc.op_blc_id
        FROM ret_supplier_rate_cut rc
        LEFT JOIN smith_company_op_balance op on op.id_smith_company_op_balance = rc.op_blc_id
        LEFT JOIN ret_product_master p ON p.pro_id = rc.id_product
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN ret_karigar k ON k.id_karigar = rc.id_karigar
        LEFT JOIN(SELECT IFNULL(SUM(rfx.rate_fix_wt),0) as ratefixwt,rfx.id_approval_ratecut
        FROM ret_po_rate_fix rfx
        where rfx.bill_status = 1
        Group by rfx.id_approval_ratecut) as ratefix on ratefix.id_approval_ratecut = rc.id_supplier_rate_cut
        WHERE rc.conversion_type = 2 and rc.status = 1 and rc.is_opening_blc = 1
        ".($karigar!='' && $karigar>0  ? " and  rc.id_karigar in (".$karigar.") " :'' )."
        HAVING balance_weight > 0");
        $result3 = $sql3->result_array();
        $result = array_merge($result1,$result2,$result3);
        //echo $this->db->last_query();exit;
        foreach($result as $key => $val){
            $return_data[$val['grn_ref_no']][] =   $val;
        }
        foreach($return_data as $key => $val){
            foreach($val as $gkey => $gval){
                if($gkey > 0){
                    $return_data[$key][$gkey]["po_ref_no"] = "";
                    $return_data[$key][$gkey]["grn_ref_no"] = "";
                    $return_data[$key][$gkey]["supplier_name"] = "";
                    $return_data[$key][$gkey]["grndate"] = "";
                    $return_data[$key][$gkey]["category_name"] = "";
                    $return_data[$key][$gkey]["supplier_name"] = "";
                    $return_data[$key][$gkey]["pure_wt"] = "";
                    $return_data[$key][$gkey]["gross_wt"] = "";
                    $return_data[$key][$gkey]["net_wt"] = "";
                    $return_data[$key][$gkey]["stone_wt"] = "";
                    $return_data[$key][$gkey]["grn_item_cost"] = "";
                    $return_data[$key][$gkey]["grn_item_gst_rate"] = "";
                    $return_data[$key][$gkey]["taxable_amount"] = "";
                }
            }
        }
        //echo "<pre>";print_r($return_data);exit;
        return $return_data;
	}
	function get_po_payments($data)
    {
        $sql = $this->db->query("SELECT p.pay_refno,k.firstname as suppliername,date_format(p.pay_create_on,'%d-%m-%Y') as payment_date,IFNULL(date_format(d.ref_date,'%d-%m-%Y'),'') as ref_date,d.payment_amount,d.pay_mode,d.ref_no,IFNULL(b.bank_name,'') as bank_name,k.contactno1
        FROM ret_po_payment_detail d
        LEFT JOIN ret_po_payment p ON p.pay_id = d.pay_id
        LEFT JOIN ret_karigar k ON k.id_karigar = p.pay_sup_id
        LEFT JOIN bank b ON b.id_bank = d.id_bank
        WHERE p.pay_refno IS NOT NULL AND p.pay_status = 1
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(p.pay_create_on) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['karigar']!='' ? " AND p.pay_sup_id=".$data['karigar']."" :'')."
        ORDER BY p.pay_id DESC ");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        return $result;
    }
    function get_supplier_contract_details($data)
    {
        $sql = $this-> db->query("SELECT rw.approved_on,rw.created_on,concat(ec.firstname,' ',IF(ec.lastname is not null, ec.lastname,'-')) as created_by,concat(ea.firstname,' ',IF(ea.lastname is not null, ea.lastname,'-')) as approved_by,rw.mc_value,IF(rw.mc_value=1,'Per Gram','Per Piece') as mc_type,rw.pur_touch,rw.wastage_per,
        IF(rw.status=0,'Yet to approve',(IF(rw.status=1,'Approved',(if(rw.status=2,'Rejected','Hold'))))) as status,IFNULL(rw.created_on,'-') as created_on,concat(ed.firstname,' ',IF(ed.lastname is not null, ed.lastname,'-')) as rejected_by,IFNULL(rw.rejected_on	,'-') as rejected_on,k.firstname,k.id_karigar,p.product_name,d.design_name as design_name, sm.sub_design_name as sub_design_name
        FROM ret_karikar_items_wastage rw
        LEFT JOIN ret_karigar k ON k.id_karigar = rw.id_karikar
        LEFT JOIN ret_product_master p   ON p.pro_id = rw.id_product
        LEFT JOIN ret_design_master d   ON d.design_no = rw.id_design
        LEFT JOIN ret_sub_design_master sm   ON sm.id_sub_design = rw.id_sub_design
        LEFT JOIN employee ea   ON ea.id_employee = rw.approved_by
        LEFT JOIN employee ec   ON ec.id_employee = rw.created_by
        LEFT JOIN employee ed   ON ed.id_employee = rw.rejected_by
        where rw.id_karikar_wast is not null
        ".($data['id_karigar']!='' ? " AND rw.id_karikar=".$data['id_karigar']."" :'')."
        ".($data['price_status']!='' ? " AND rw.status=".$data['price_status']."" :'')."
        GROUP BY rw.id_karikar_wast");
        return $sql->result_array();
    }
	function get_supplier_contract_stone_details($data)
    {
        $sql = $this->db->query("SELECT ks.id_karigar_stone,ks.id_karigar,ks.stone_type as stone_type_id,ks.stone_id,
		ks.uom_id,if(ks.stone_cal_type=1,'Weight','Per Pcs') as stn_cal_type,ks.rate_per_gram as stn_rate,
		IFNULL(kar.firstname ,'-')as karigar,st.stone_type,stn.stone_name,uom.uom_name,ifnull(qc.code,'')as quality_code,ifnull(rc.clarity,'')as clarity,
		ifnull(ro.color,'')as color,ifnull(rt.cut,'')as cut,ifnull(rs.name,'') as shape,ifnull(ks.from_wt,'0') as from_wt ,ifnull(ks.to_wt,'0') as to_wt,
		IFNULL(ks.rejected_on,'-') as rejected_on,IFNULL(concat(ed.firstname,' ',IF(ed.lastname is not null, ed.lastname,'-')),'') as rejected_by,
		IFNULL(ks.approved_on,'-') as approved_on,IFNULL(ks.created_on,'-') as created_on,ifnull(concat(ec.firstname,' ',IF(ec.lastname is not null, ec.lastname,'-')),'')as created_by,
		ifnull(concat(ea.firstname,' ',IF(ea.lastname is not null, ea.lastname,'-')),'')as approved_by
		FROM ret_karigar_stones ks
		LEFT JOIN ret_karigar kar on kar.id_karigar=ks.id_karigar
		LEFT JOIN employee ed   ON ed.id_employee = ks.rejected_by
		LEFT JOIN employee ea   ON ea.id_employee = ks.approved_by
        LEFT JOIN employee ec   ON ec.id_employee = ks.created_by
		LEFT JOIN ret_quality_code qc on qc.quality_id = ks.quality_id
        LEFT JOIN ret_clarity rc  on rc.id_clarity = qc.clarity_id
		LEFT JOIN ret_color ro  on ro.id_color = qc.color_id
		LEFT JOIN ret_cut rt  on rt.id_cut = qc.cut_id
		LEFT JOIN ret_shape rs on rs.shape_id = qc.shape_id
		LEFT JOIN ret_stone_type st on st.id_stone_type=ks.stone_type
		LEFT JOIN ret_stone stn on stn.stone_id=ks.stone_id
		LEFT JOIN ret_uom uom on uom.uom_id=ks.uom_id
		WHERE ks.id_karigar IS NOT NULL
		".($data['id_karigar']!='' && $data['id_karigar'] > 0 ? "and ks.id_karigar=".$data['id_karigar']."":"")."
		".($data['price_status']!='' ? " AND ks.status=".$data['price_status']."" :'')."
		ORDER BY ks.id_karigar_stone DESC");
        return $sql->result_array();
    }
    function get_stock_detail_list($from,$to,$id_branch,$id_metal)
    {
       $stock_detail = [];
       if($from != '' && $to != ''){
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           }
           $group_by = 2;//1-Product,2-Category
           $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
           $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
                               (IFNULL(blc.gross_wt,0)) as op_blc_gwt,
                               (IFNULL(blc.net_wt,0)) as op_blc_nwt,
                               (IFNULL(blc.piece,0)) as op_blc_pcs,
                               IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
                               IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
                               IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
                               IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
                               IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
                               Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name
                               FROM ret_taging t
                               LEFT JOIN ret_product_master p on p.pro_id=t.product_id
                               LEFT JOIN branch b on b.id_branch=t.current_branch
                               left join ret_category c on c.id_ret_category=p.cat_id
                               left join metal m on m.id_metal=c.id_metal
                               LEFT JOIN(SELECT tag.tag_code,tag.tag_id,tag.old_tag_id,p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
                               ifnull(SUM(tag.net_wt),0) as net_wt,
                               ifnull(SUM(tag.piece),0) as piece,tag.product_id as id_product,p.cat_id
                               FROM ret_taging_status_log m1
                               LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
                               LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                               LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                               left join ret_category c on c.id_ret_category=p.cat_id
                               WHERE m2.id_tag_status_log IS NULL  and m1.issuspensestock = 0
                               ".($id_branch!='' ? " and m1.to_branch=".$id_branch."" :'')."
                               AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
                               GROUP BY ".($group_by==1 ? " tag.product_id" :" p.cat_id").") as blc ON ".($group_by==1 ? " blc.id_product = t.product_id " : " blc.cat_id = p.cat_id" )."
                               LEFT JOIN(SELECT tag.tag_id,tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
                               ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
                               FROM ret_taging_status_log m1
                               LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt' ".($id_branch!='' ? " and m2.to_branch=".$id_branch."" :'')." and m2.status = 0)
                               LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                               LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                               WHERE tag.tag_id IS NOT NULL  and m1.issuspensestock = 0
                               ".($id_branch!='' ? " and m1.to_branch=".$id_branch."" :'')."
                               AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") INW on ".($group_by==1 ? " INW.product_id = t.product_id " : " INW.cat_id = p.cat_id" )."
                               LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                               SUM(b.piece) as piece,b.product_id,p.cat_id
                               FROM ret_taging tag
                               LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
                               LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                               LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                               WHERE bill.bill_status = 1 and
                               (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
                               ".($id_branch!='' ? " and bill.id_branch=".$id_branch." " :'')."
                               GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") s ON ".($group_by==1 ? " s.product_id = t.product_id " : "s.cat_id = p.cat_id" )."
                               LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
                                   SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece
                                   FROM ret_taging tag
                                   LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$id_branch." and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
                                   LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                               WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
                               (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
                               ".($id_branch!='' ? " and l.from_branch=".$id_branch."" :'')."
                                GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") br_out on ".($group_by==1 ? " br_out.product_id = t.product_id " : "br_out.cat_id = p.cat_id" )."
                               LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
                               ifnull(SUM(tag.net_wt),0) as net_wt,
                               ifnull(SUM(tag.piece),0) as piece,p.cat_id
                               FROM ret_taging_status_log m1
                               LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '$ToDt')
                               LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                               LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                               WHERE m2.id_tag_status_log IS NULL
                               ".($id_branch!='' ? " and m1.to_branch=".$id_branch."" :'')."
                               AND m1.status = 0 AND date(m1.date) <= '$ToDt' GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") as current ON  ".($group_by==1 ? " current.product_id = t.product_id " : "current.cat_id = p.cat_id" )."
                               LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,sum(t.net_wt) as net_wt,p.product_name,
                               p.cat_id
                               FROM ret_taging_status_log l
                               LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
                               LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
                               WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
                               ".($id_branch !='' ? " and l.from_branch=".$id_branch."" :'')."
                               GROUP by ".($group_by==1 ? " t.product_id" :" p.cat_id")." ) in_trans on ".($group_by==1 ? " in_trans.product_id = t.product_id" : " in_trans.cat_id = p.cat_id" )."
                               where t.tag_id is not null
                               ".($id_metal!='' && $id_metal!=0 ? " and m.id_metal=".$id_metal."" :'')."
                               GROUP by ".($group_by==1 ? " t.product_id" :" p.cat_id")."
                               order by c.sort,p.pro_id ASC");
                           //  print_r($this->db->last_query());exit;
            $result = $sql->result_array();
            foreach($result as $r){
				$stock_detail[$r['metal_name']][$r['category_name']][] = $r;
			}
    	    return $stock_detail;
    }
    function get_weight_rage_report($data)
    {
         $sql=$this->db->query("SELECT rpm.product_name,rdw.id_wc,rdm.design_name,rd.sub_design_name,rdw.wc_to_weight,rdw.wc_from_weight,rdw.wc_percent,IFNULL(rdw.mc,'-') as mc,IFNULL(rdw.mcrg_min,'-') as mcrg_min ,IFNULL(rdw.mcrg_max,'-') as mcrg_max, IFNULL(rdw.wc_min,'-') as wc_min,IFNULL(rdw.wc_max,'-') as wc_max  from ret_design_weight_range_wc rdw
         LEFT JOIN ret_sub_design_mapping rsd on rsd.id_sub_design_mapping =rdw.id_sub_design_mapping
         LEFT JOIN ret_design_master rdm on rdm.design_no=rsd.id_design
         LEFT JOIN ret_product_master rpm on rpm.pro_id=rsd.id_product
         LEFT JOIN ret_category rc on rc.id_ret_category=rpm.cat_id
         LEFT JOIN ret_sub_design_master rd on rd.id_sub_design=rsd.id_sub_design where rpm.product_status=1
         ".($data['category_id'] != '' && $data['category_id'] >0 ? ' and  rpm.cat_id  ='.$data['category_id']: '')."
         ".($data['id_product'] != '' && $data['id_product'] >0 ? '  and rsd.id_product='.$data['id_product']: '')."
          ".($data['id_design'] != '' && $data['id_design'] >0 ? ' and rsd.id_design ='.$data['id_design']: '')."
          ".($data['id_sub_design'] != '' && $data['id_sub_design'] >0 ? ' and rsd.id_sub_design ='.$data['id_sub_design']: '')."   order by rdw.id_wc ");
         $weight_rage=$sql->result_array();
        return $weight_rage;
    }
    function get_employee_wise_tag($data){
        if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
            }
        $sql = $this->db->query("SELECT p.product_name,d.design_name,sd.sub_design_name,e.firstname as emp_name,DATE_FORMAT(tag.created_time,'%d-%m-%Y') as tag_date,tag.tag_id,IFNULL(tag.old_tag_id,'-') as old_tag_id,tag_img.image as tag_img,tag.tag_code as tag_code,tag.tag_mc_value,tag.retail_max_wastage_percent,IFNULL(tag.gross_wt,'') as gross_wt,IFNULL(tag.less_wt,'') as less_wt,IFNULL(tag.net_wt,'') as net_wt,
        if(tag.tag_mc_type=1,'Piece',(IF(tag.tag_mc_type=2,'Gram',(If(tag.tag_mc_type=3,'Price','-'))))) as mc_type,IFNULL(tag.size,'-') as size,IFNULL(lot_det.lot_gross_wt,'') as lot_tot_gwt,lot_det.lot_no
        FROM employee e
        LEFT JOIN ret_taging tag ON tag.created_by = e.id_employee
        LEFT JOIN ret_taging_images tag_img ON tag_img.tag_id = tag.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id = tag.product_id
        LEFT JOIN ret_design_master d ON d.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = tag.id_sub_design
        LEFT JOIN (SELECT SUM(d.gross_wt) as lot_gross_wt,t.tag_id,l.lot_no from ret_lot_inwards l
                    left join ret_taging t on t.tag_lot_id = l.lot_no
                    left join ret_lot_inwards_detail d on d.lot_no = l.lot_no
                    GROUP BY t.tag_id) as lot_det on lot_det.tag_id = tag.tag_id
        where e.id_employee is not null
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and tag.current_branch='.$data['id_branch']: '')."
        ".($data['dt_range'] != '' ? ' and date(tag.created_time) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($data['id_emp'] != '' && $data['id_emp'] >0 ? ' and  e.id_employee  ='.$data['id_emp']: '')."
        ".($data['id_product'] != '' && $data['id_product'] >0 ? '  and p.pro_id='.$data['id_product']: '')."
        ".($data['id_design'] != '' && $data['id_design'] >0 ? ' and d.design_no ='.$data['id_design']: '')."
        ".($data['id_sub_design'] != '' && $data['id_sub_design'] >0 ? ' and sd.id_sub_design ='.$data['id_sub_design']: '')."
        ");
        return $sql->result_array();
    }
    function getTobe_history($data)
    {
            if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
            }
        $credit_detail = array();
            $sql1=$this->db->query("SELECT b.bill_id,b.bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,DATE_FORMAT(b.credit_due_date,'%d-%m-%Y') as credit_due_date,b.tot_bill_amount,b.tot_amt_received,b.bill_cus_id,c.mobile,c.firstname as cus_name,
            if(b.credit_status=1,'Paid','Pending') as credit_status,br.name as branch_name,(b.tot_bill_amount-b.tot_amt_received) as bal_amt,b.credit_disc_amt,'0' as type
            from ret_billing b
            LEFT JOIN customer c on c.id_customer=b.bill_cus_id
            LEFT JOIN branch br on br.id_branch=b.id_branch
            where  b.bill_id is not null and b.is_to_be=1 and b.bill_status=1  and b.bill_type!=8 and b.bill_type!=12
            ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
            ".($data['id_customer'] != '' && $data['id_customer'] >0 ? ' and b.bill_cus_id='.$data['id_customer']: '')."
            ORDER BY b.id_branch,b.bill_id");
            //print_r($this->db->last_query());exit;
            $result1 = $sql1->result_array();
            $issue_sql=$this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no as bill_no,cus.mobile,r.amount as tot_bill_amount,
            DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date,'' as credit_due_date,IFNULL(r.amount-IFNULL(coll.paid_amt,0),0) as bal_amt,
            IFNULL(coll.paid_amt,0) as tot_amt_received,cus.firstname as cus_name,br.name as branch_name,'1' as type,cus.id_customer as bill_cus_id,
            if(r.is_collect=0,'Pending','Collected') as credit_status,IFNULL(coll.credit_disc_amt,0) as credit_disc_amt
            FROM ret_issue_receipt r
            LEFT JOIN branch br on br.id_branch=r.id_branch
            LEFT JOIN (SELECT IFNULL(SUM(r.amount),0) as paid_amt,IFNULL(SUM(c.discount_amt),0) as credit_disc_amt,c.receipt_for
            FROM ret_issue_receipt r
            LEFT JOIN ret_issue_credit_collection_details c ON c.id_issue_receipt=r.id_issue_receipt
            where r.bill_status=1
            GROUP by c.receipt_for) as coll ON coll.receipt_for=r.id_issue_receipt
            LEFT JOIN customer cus ON cus.id_customer=r.id_customer
            WHERE r.type=1 AND r.is_collect=0 and r.bill_status=1  and (r.issue_type=2 or r.issue_type=4)
            ".($FromDt!= '' && $ToDt!='' ? ' and (date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
            ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
            ".($data['id_customer'] != '' && $data['id_customer'] >0 ? ' and r.id_customer='.$data['id_customer']: '')."
            ORDER BY r.id_branch,r.id_issue_receipt ");
            //print_r($this->db->last_query());exit;
            $result2 = $issue_sql->result_array();
            $result=array_merge($result1,$result2);
            foreach($result as $r)
            {
                $credit_detail[$r['branch_name']][] = array(
                    'type'              =>$r['type'],
                    'bill_no'           =>$this->get_bill_no_format_detail($r['bill_id']),
                    'bill_date'         =>$r['bill_date'],
                    'credit_due_date'   =>$r['credit_due_date'],
                    'tot_bill_amount'   =>$r['tot_bill_amount'],
                    'tot_amt_received'  =>$r['tot_amt_received'],
                    'bill_cus_id'       =>$r['bill_cus_id'],
                    'cus_name'          =>$r['cus_name'],
                    'mobile'            =>$r['mobile'],
                    'credit_status'     =>$r['credit_status'],
                    'branch_name'       =>$r['branch_name'],
                    'bal_amt'           =>$r['bal_amt'],
                    'bill_id'           =>$r['bill_id'],
                    'credit_disc_amt'   =>$r['credit_disc_amt'],
                    'credit_collection' =>$this->getCreditCollection($r['bill_id'])
                );
            }
            return $credit_detail;
    }
   function get_tobe_pending_details($data)
   {
       $return_data=array();
       $credit_detail = array();
       $credit_detai2 = array();
       $sql=$this->db->query("SELECT b.bill_id,b.sales_ref_no as bill_no,DATE_FORMAT(b.bill_date,'%d-%m-%Y') as bill_date,DATE_FORMAT(b.credit_due_date,'%d-%m-%Y') as credit_due_date,b.tot_bill_amount,b.tot_amt_received,b.bill_cus_id,c.mobile,c.firstname as cus_name,
       if(b.credit_status=1,'Paid','Pending') as credit_status,br.name as branch_name,b.tot_bill_amount,(b.tot_bill_amount-b.tot_amt_received-IFNULL(ret.credit_due_amt,0)) as bal_amt,b.credit_disc_amt,IFNULL(ret.credit_due_amt,0) as credit_due_amt,IFNULL(ret.credit_ret_amt,0) as credit_ret_amt
           from ret_billing b
           LEFT JOIN ret_bill_details btd on btd.bill_id = b.bill_id
           LEFT JOIN customer c on c.id_customer=b.bill_cus_id
           LEFT JOIN branch br on br.id_branch=b.id_branch
           LEFT JOIN(SELECT IFNULL((b.credit_due_amt),0) as credit_due_amt,
           r.ret_bill_id,IFNULL(b.credit_ret_amt,0) as credit_ret_amt
           FROM ret_bill_return_details r
           LEFT JOIN ret_billing b ON b.bill_id = r.bill_id
           WHERE b.bill_status = 1
           GROUP BY r.ret_bill_id) as ret ON ret.ret_bill_id = b.bill_id
           where  b.bill_id is not null and btd.is_delivered= 0 and b.bill_status=1  and b.bill_type!=8 and b.credit_status=2 and b.bill_type!=12
           ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and b.id_branch='.$data['id_branch']: '')."
           ".($data['id_customer'] != '' && $data['id_customer'] >0 ? ' and b.bill_cus_id='.$data['id_customer']: '')."
           ORDER BY b.bill_cus_id");
       $result = $sql->result_array();
	   $current_date = time();
       foreach($result as $r){
		   $days_count = 0;
           $datediff =0;
           $paid_amount=$this->get_credit_collection_details($r['bill_id']);
           $due_date = strtotime($r['credit_due_date']);
           $datediff = $due_date - $current_date;
           $due_date_cnt =round($datediff / (60 * 60 * 24));
           $paid_amount=$this->get_credit_collection_details($r['bill_id']);
           if($r['bal_amt']-$paid_amount > 0){
                $credit_detail[] = array(
                                'type'              =>0,
                                'bill_no'           =>$this->get_bill_no_format_detail($r['bill_id']),
                                'bill_date'         =>$r['bill_date'],
                                'cus_name'          =>$r['cus_name'],
                                'mobile'            =>$r['mobile'],
                                'branch_name'       =>$r['branch_name'],
                                'tot_bill_amount'   =>$r['tot_bill_amount'],
                                'credit_due_amt'    =>$r['credit_due_amt'],
                                'credit_ret_amt'    =>$r['credit_ret_amt'],
                                'bal_amt'           =>$r['bal_amt']-$paid_amount,
                                'due_amount'        =>$r['tot_bill_amount']-$r['tot_amt_received'],
                                'paid_amount'       =>$paid_amount,
                                'bill_id'           =>$r['bill_id'],
                                'credit_due_date'   =>$r['credit_due_date'],
                                'due_date_cnt'      =>( $r['credit_due_date'] !='' ? $due_date_cnt : ''),
                                'credit_collection' =>$this->getCreditCollection($r['bill_id'])
                            );
            }
       }
       /*$issue_sql=$this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no as bill_no,cus.mobile,r.amount as due_amount,
       DATE_FORMAT(r.bill_date,'%d-%m-%Y') as bill_date,'' as credit_due_date,IFNULL(r.amount-IFNULL(coll.paid_amt,0),0) as bal_amt,
       IFNULL(coll.paid_amt,0) as paid_amount,cus.firstname as cus_name,br.name as branch_name,'1' as type,'0' as credit_ret_amt,r.amount as tot_bill_amount,'' as due_date_cnt
       FROM ret_issue_receipt r
       LEFT JOIN branch br on br.id_branch=r.id_branch
       LEFT JOIN (SELECT IFNULL(SUM(c.received_amount+c.discount_amt),0) as paid_amt,c.receipt_for
       FROM ret_issue_receipt r
       LEFT JOIN ret_issue_credit_collection_details c ON c.id_issue_receipt=r.id_issue_receipt
       where r.bill_status=1
       GROUP by c.receipt_for) as coll ON coll.receipt_for=r.id_issue_receipt
       LEFT JOIN customer cus ON cus.id_customer=r.id_customer
       WHERE r.type=1  and r.bill_status=1 and (r.issue_type=2 or r.issue_type=4)
       ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and r.id_branch='.$data['id_branch']: '')."
       and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')  ");
       //print_r($this->db->last_query());exit;
       $result1 = $issue_sql->result_array();
           foreach($result1 as $r)
           {
               $issueCreditDetails = $this->get_IssueCreditCollectionDetails($r['bill_id']);
               $r['credit_collection']=$issueCreditDetails;
               $credit_detai2[]=$r;
           }
       //echo "<pre>"; print_r($credit_detai2);exit;
       $return_data=array_merge($credit_detail,$credit_detai2);*/
       return $credit_detail;
   }
  function get_reserve_order($data){
        if($_POST['dt_range'] != ''){
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
            }
    $sql = $this->db->query("SELECT cus.firstname  as customer_name,b.name as branch,IFNULL(t.old_tag_id,'-') as old_tag_id,d.design_name,subDes.sub_design_name,co.order_no,c.orderstatus as status,t.gross_wt,t.net_wt,p.product_name,t.tag_code, Date_Format(t.tag_datetime,'%d-%m-%Y') as tag_date,c.orderstatus
     FROM ret_taging t
        LEFT JOIN branch b ON b.id_branch = t.current_branch
        LEFT JOIN customerorderdetails c On c.id_orderdetails = t.id_orderdetails
        LEFT JOIN ret_product_master p ON p.pro_id = t.product_id
        LEFT  JOIN ret_design_master d ON d.design_no=t.design_id
        LEFT JOIN ret_sub_design_master subDes on subDes.id_sub_design=t.id_sub_design
        LEFT JOIN customerorder co ON co.id_customerorder = c.id_customerorder
        LEFT JOIN customer cus ON cus.id_customer = co.order_to
        where t.tag_id is not null and t.id_orderdetails is not null and (c.orderstatus = 3 OR c.orderstatus=4)
        ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and t.current_branch='.$data['id_branch']: '')."
        ".($data['dt_range'] != '' ? ' and date(t.created_time) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($data['status'] != '' ? ' and c.orderstatus="'.$data['status'].'"' : '')."
        ".($data['ro_cus_id'] != '' ? ' and co.order_to="'.$data['ro_cus_id'].'"' : '')."
        ".($data['id_design'] != '' ? ' and t.design_id="'.$data['id_design'].'"' : '')."
        ".($data['id_sub_design'] != '' ? ' and t.id_sub_design="'.$data['id_sub_design'].'"' : '')."
        ".($data['id_order_no'] != '' ? ' and co.id_customerorder="'.$data['id_order_no'].'"' : '')."
        ".($data['id_product'] != '' ? ' and p.pro_id="'.$data['id_product'].'"' : '')." ");
    return $sql->result_array();
    }
    function get_customer_reserveOrders($data)
    {
        $sql = $this->db->query("SELECT c.order_no,d.id_orderdetails,d.id_customerorder
        FROM customerorderdetails d
        LEFT JOIN customerorder c ON c.id_customerorder = d.id_customerorder
        WHERE d.orderno is not null AND (d.orderstatus = 3 OR d.orderstatus = 4)");
        return $sql->result_array();
    }
    function getAvailableCustomers($SearchTxt)
	{
        $data = $this->db->query("SELECT c.id_customer as value, concat(c.firstname,'-',c.mobile) as label
        FROM customer c
        WHERE (mobile like '%".$SearchTxt."%' OR firstname like '%".$SearchTxt."%')
        GROUP by c.id_customer");
        return $data->result_array();
	}
	// SectionWise Stock details
    function get_section_stock_inout_details_28_04_2023($data)
    {
        $stock_detail = [];
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $group_by = $data['GroupBy'];
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
        sec.section_name,
        (IFNULL(blc.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)) as op_blc_pcs,
        IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,
        IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
        IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
        IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,
        IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
        IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
        Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name
        FROM ret_taging t
        LEFT JOIN ret_section sec on sec.id_section=t.id_section
		LEFT JOIN ret_section_branch sect_br on sect_br.id_section = sec.id_section
        LEFT JOIN ret_product_master p on p.pro_id=t.product_id
        LEFT JOIN branch b on b.id_branch=t.current_branch
        left join ret_category c on c.id_ret_category=p.cat_id
        left join metal m on m.id_metal=c.id_metal
        LEFT JOIN(SELECT tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "tag.id_section" : "tag.product_id" )." ) as blc ON  ".($group_by==1 ? "blc.id_section = t.id_section" : " blc.id_product = t.product_id " )."
        LEFT JOIN(SELECT tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($data['id_section'] !='' ? " and m2.to_section=".$data['id_section']."" :'')."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ".($group_by==1 ? "m1.to_section":"tag.product_id").") INW on  ".($group_by==1 ? "INW.to_section = t.id_section" : "INW.product_id = t.product_id")."
        LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        WHERE bill.bill_status = 1 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
        GROUP by ".($group_by==1 ? "tag.id_section" : "tag.product_id").") s ON  ".($group_by==1 ? "s.id_section = t.id_section " : "s.product_id = t.product_id")."
        LEFT JOIN (SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.to_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
        ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP by ".($group_by==1 ? "l.to_section" : "tag.product_id").") as br_out  on  ".($group_by==1 ? "br_out.to_section = t.id_section" : "br_out.product_id = t.product_id")."
        LEFT JOIN(SELECT tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
        GROUP by ".($group_by==1 ? "l.from_section" : "tag.product_id").") as sect_out on ".($group_by==1 ? "sect_out.from_section = t.id_section
        " : "sect_out.product_id = t.product_id" )."
        LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,p.cat_id,tag.id_section
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '$ToDt')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        AND m1.status = 0 AND date(m1.date) <= '$ToDt' GROUP by ".($group_by==1 ? "tag.id_section" : "tag.product_id")." ) as current ON   ".($group_by==1 ? "current.id_section = t.id_section" : "current.product_id = t.product_id")."
        LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,
        sum(t.net_wt) as net_wt,p.product_name,
        p.cat_id,l.to_section
        FROM ret_section_tag_status_log l
        LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
        ".($data['id_branch'] !='' ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP by ".($group_by==1 ? "l.to_section" : "t.product_id" )." ) in_trans on  ".($group_by==1?"in_trans.to_section = t.id_section":"in_trans.product_id = t.product_id")."
        where t.tag_id is not null  and t.id_section is not null
        ".($data['id_section']!='' && $data['id_section']!=0 ? " and t.id_section=".$data['id_section']."" :'')."
        ".($data['pro_id']!='' && $data['pro_id']!=0 ? "and t.product_id=".$data['pro_id']."":'')."
		".($data['id_branch']!='' && $data['id_branch']!=0 ? "and sect_br.id_branch=".$data['id_branch']."":'')."
        GROUP by ".($group_by==1 ? "t.id_section" : "t.product_id")."");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $r)
        {
            if($group_by==1)
            {
                $stock_detail[$r['section_name']][] = $r;
            }
            else
            {
                $stock_detail[$r['product_name']][] = $r;
            }
        }
        return $stock_detail;
    }
	  function get_section_stock_inout_details_16_10_2023($data)
    {
        $stock_detail = [];
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
		$metal_type = implode(' , ', $data['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_cat = implode(',',$data['id_category']);
        if($multiple_id_cat!='')
        {
            $id_category = $multiple_id_cat;
        }
		else
        {
            $id_category = $data['id_category'];
        }
        $group_by = $data['GroupBy'];
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
        sec.section_name,
        (IFNULL(blc.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)) as op_blc_pcs,
        (IFNULL(stn_blc.dia_wt,0)) as op_blc_diawt,
        IFNULL(blc.tag_count,0) as blc_tags,
        IFNULL(INW.tag_count,0) as inw_tags,
        IFNULL(s.tag_count,0) as sold_tags,
        IFNULL(br_out.tag_count,0) as brout_tags,
        IFNULL(sect_out.tag_count,0) as sect_out_tags,
        IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(STONE_INW.diaWt,0) as inw_diawt,
        IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(stn_s.sold_diawt,0) as sold_diawt,
        IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,IFNULL(stn_br_out.dia_wt,0) as br_out_diawt,
        IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
        IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
        IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
        Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name
        FROM ret_taging t
        LEFT JOIN ret_section sec on sec.id_section=t.id_section
        LEFT JOIN ret_product_master p on p.pro_id=t.product_id
        LEFT JOIN branch b on b.id_branch=t.current_branch
        left join ret_category c on c.id_ret_category=p.cat_id
        left join metal m on m.id_metal=c.id_metal
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" : "tag.product_id,m1.to_section" )." ) as blc ON  ".($group_by==1 ? "blc.id_section = t.id_section" : " blc.id_product = t.product_id and blc.id_section = t.id_section" )."
        LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_sec_tag_status_log IS NULL and st.stone_type = 1
        ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" : "tag.product_id,m1.to_section" )." ) as stn_blc ON  ".($group_by==1 ? "stn_blc.id_section = t.id_section" : " stn_blc.id_product = t.product_id and stn_blc.id_section = t.id_section" )."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($data['id_section'] !='' ? " and m2.to_section=".$data['id_section']."" :'')."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ".($group_by==1 ? "m1.to_section":"tag.product_id,m1.to_section").") INW on  ".($group_by==1 ? "INW.to_section = t.id_section" : "INW.product_id = t.product_id and INW.to_section = t.id_section")."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($data['id_section'] !='' ? " and m2.to_section=".$data['id_section']."" :'')."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by ".($group_by==1 ? "m1.to_section":"tag.product_id,m1.to_section").") STONE_INW on  ".($group_by==1 ? "STONE_INW.to_section = t.id_section" : "STONE_INW.product_id = t.product_id and STONE_INW.to_section = t.id_section")."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
		".($data['id_section'] !='' ? " and tag.id_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "tag.id_section" : "tag.product_id,tag.id_section").") s ON  ".($group_by==1 ? "s.id_section = t.id_section " : "s.product_id = t.product_id and s.id_section = t.id_section")."
        LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id =tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
		".($data['id_section'] !='' ? " and tag.id_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "tag.id_section" : "tag.product_id,tag.id_section").") stn_s ON  ".($group_by==1 ? "stn_s.id_section = t.id_section " : "stn_s.product_id = t.product_id and stn_s.id_section = t.id_section")."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
        (l.status=0 or l.status=17)
        ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "l.from_section" : "tag.product_id,l.from_section").") as br_out  on  ".($group_by==1 ? "br_out.from_section = t.id_section" : "br_out.product_id = t.product_id and br_out.from_section = t.id_section")."
        LEFT JOIN (SELECT tag.id_section,IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1
		and (l.status=0) and l.from_branch IS NOT NULL
        ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "l.from_section" : "tag.product_id,l.from_section").") as stn_br_out  on  ".($group_by==1 ? "stn_br_out.from_section = t.id_section" : "stn_br_out.product_id = t.product_id and stn_br_out.from_section = t.id_section")."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL
        ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "l.from_section" : "tag.product_id,l.from_section").") as sect_out on ".($group_by==1 ? "sect_out.from_section = t.id_section
        " : "sect_out.product_id = t.product_id and sect_out.from_section = t.id_section" )."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0  and l.from_branch IS NULL
        ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "l.from_section" : "tag.product_id,l.from_section").") as stn_sect_out on ".($group_by==1 ? "stn_sect_out.from_section = t.id_section
        " : "stn_sect_out.product_id = t.product_id and stn_sect_out.from_section = t.id_section" )."
		LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,p.cat_id,tag.id_section
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '$ToDt')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND m1.status = 0 AND date(m1.date) <= '$ToDt' GROUP by ".($group_by==1 ? "tag.id_section" : "tag.product_id,tag.id_section")." ) as current ON   ".($group_by==1 ? "current.id_section = t.id_section" : "current.product_id = t.product_id and current.id_section = t.id_section")."
        LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,
        sum(t.net_wt) as net_wt,p.product_name,
        p.cat_id,l.to_section
        FROM ret_section_tag_status_log l
        LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
        ".($data['id_branch'] !='' ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP by ".($group_by==1 ? "l.to_section" : "t.product_id,l.to_section" )." ) in_trans on  ".($group_by==1?"in_trans.to_section = t.id_section":"in_trans.product_id = t.product_id and in_trans.to_section = t.id_section")."
        where t.tag_id is not null  and t.id_section is not null and sec.is_home_bill_counter = 0
        ".($data['id_section']!='' && $data['id_section']!=0 ? " and t.id_section=".$data['id_section']."" :'')."
        ".($data['pro_id']!='' && $data['pro_id']!=0 ? "and t.product_id=".$data['pro_id']."":'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" : "t.product_id,t.id_section")."");
        // print_r($this->db->last_query());exit;
        $result1 = $sql->result_array();
		$sql2 = $this->db->query("SELECT sec.section_name,sec.id_section,IFNULL(s.tag_count,0) as sold_tags,IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(stn_s.sold_diawt,0) as sold_diawt,
		(IFNULL(blc.gross_wt,0)-IFNULL(blc_sold.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)-IFNULL(blc_sold.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)-IFNULL(blc_sold.piece,0)) as op_blc_pcs,
        IFNULL(blc.tag_count,0) as blc_tags,
		(IFNULL(stn_blc.dia_wt,0)) as op_blc_diawt,
		IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(INW.tag_count,0) as inw_tags,IFNULL(STONE_INW.diaWt,0) as inw_diawt,
		IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
		0 as br_out_gwt,'0' as br_out_nwt,'0' as br_out_pcs,'0' as br_out_diawt,'0' as brout_tags,IFNULL(sect_out.tag_count,0) as sect_out_tags,'0' as in_trans_pcs
		FROM ret_section sec
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_home_section_itm_log IS NULL
        ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section ) as blc ON  blc.id_section = sec.id_section
		LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_home_section_itm_log IS NULL  and st.stone_type = 1
        ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section) as stn_blc ON  stn_blc.id_section = sec.id_section
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($data['id_section'] !='' ? " and m2.to_section=".$data['id_section']."" :'')."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) INW on  INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($data['id_section'] !='' ? " and m2.to_section=".$data['id_section']."" :'')."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($data['id_section'] !='' ? " and m1.to_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) STONE_INW on  STONE_INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=0
		AND (date(b.bill_date) < '$FromDt')
		".($data['id_branch']!='' ? " and b.id_branch=".$data['id_branch']." " :'')."
		".($data['id_section'] !='' ? " and d.id_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as blc_sold ON blc_sold.id_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=0
		AND (date(b.bill_date) BETWEEN '$FromDt' AND '$ToDt')
		".($data['id_branch']!='' ? " and b.id_branch=".$data['id_branch']." " :'')."
		".($data['id_section'] !='' ? " and d.id_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as s ON s.id_section = sec.id_section
		LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(d.gross_wt) as gross_wt,SUM(d.net_wt) as net_wt,
        SUM(d.piece) as piece,d.product_id,p.cat_id,d.id_section,'0' as tag_count
        FROM ret_bill_details d
        LEFT JOIN ret_billing bill on bill.bill_id = d.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = d.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_billing_item_stones s on s.bill_det_id =d.bill_det_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        LEFT JOIN ret_uom u on u.uom_id = st.uom_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and d.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']." " :'')."
		".($data['id_section'] !='' ? " and d.id_section=".$data['id_section']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by d.id_section) stn_s ON  stn_s.id_section = sec.id_section
		LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_home_section_item_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by l.from_section) as sect_out on sect_out.from_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($data['pro_id']!='' && $data['pro_id']!=0 ? "and tag.product_id=".$data['pro_id']."":'')."
        GROUP by l.from_section) as stn_sect_out on stn_sect_out.from_section = sec.id_section
		WHERE sec.is_home_bill_counter = 1
		".($data['id_section']!='' && $data['id_section']!=0 ? " and sec.id_section=".$data['id_section']."" :'')."
		");
		//print_r($this->db->last_query());exit;
		$result2 = $sql2->result_array();
		$result = array_merge($result1,$result2);
        foreach($result as $r)
        {
			if($r['op_blc_pcs']!=0 || $r['closing_pcs']!=0 || $r['op_blc_gwt']!=0 || $r['closing_gwt']!=0 || $r['inw_gwt']!=0 || $r['sold_gwt']!=0)
			{
				$stock_detail[$r['section_name']][] = $r;
			}
        }
        return $stock_detail;
    }
    /*function get_section_wise_stock_inout_details($data)
    {
        $stock_detail = [];
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
		$metal_type = implode(' , ', $data['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_cat = implode(',',$data['id_category']);
        if($multiple_id_cat!='')
        {
            $id_category = $multiple_id_cat;
        }
		else
        {
            $id_category = $data['id_category'];
        }
        $multiple_id_section = implode(',',$data['id_section']);
        if($multiple_id_section!='')
        {
            $id_section = $multiple_id_section;
        }
		else
        {
            $id_section = $data['id_section'];
        }
        $group_by = $data['GroupBy'];
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
        sec.section_name,
        (IFNULL(blc.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)) as op_blc_pcs,
        (IFNULL(stn_blc.dia_wt,0)) as op_blc_diawt,
        IFNULL(blc.tag_count,0) as blc_tags,
        IFNULL(INW.tag_count,0) as inw_tags,
        IFNULL(s.tag_count,0) as sold_tags,
        IFNULL(br_out.tag_count,0) as brout_tags,
        IFNULL(sect_out.tag_count,0) as sect_out_tags,
        IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(STONE_INW.diaWt,0) as inw_diawt,
        IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(stn_s.sold_diawt,0) as sold_diawt,
        IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,IFNULL(stn_br_out.dia_wt,0) as br_out_diawt,
        IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
        IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
        IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
        Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name,t.design_id,t.id_sub_design,
        IFNULL(subdes.sub_design_name,'') as sub_design_name,IFNULL(des.design_name,'') as design_name
        FROM ret_product_section ps
        LEFT JOIN ret_product_master p ON p.pro_id = ps.pro_id
        LEFT JOIN ret_section sec ON sec.id_section = ps.id_section
        LEFT JOIN ret_taging t ON t.product_id = p.pro_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        LEFT JOIN branch b on b.id_branch=t.current_branch
        left join ret_category c on c.id_ret_category=p.cat_id
        left join metal m on m.id_metal=c.id_metal
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as blc ON  ".($group_by==1 ? "blc.id_section = sec.id_section" :($group_by==2 ? "blc.id_product = p.pro_id and blc.id_section = sec.id_section":"blc.id_product = p.pro_id and blc.design_id = t.design_id and blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,tag.design_id,tag.id_sub_design,
        tag.product_id as id_product,p.cat_id
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_sec_tag_status_log IS NULL and st.stone_type = 1
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section":($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_blc ON  ".($group_by==1 ? "stn_blc.id_section = sec.id_section": ($group_by==2 ? "stn_blc.id_product = t.product_id and stn_blc.id_section = sec.id_section":"stn_blc.id_product = t.product_id and stn_blc.design_id = t.design_id and stn_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as INW ON  ".($group_by==1 ? "INW.to_section = sec.id_section" :($group_by==2 ? "INW.product_id = t.product_id and INW.to_section = sec.id_section":"INW.product_id = t.product_id and INW.design_id = t.design_id and INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as STONE_INW ON  ".($group_by==1 ? "STONE_INW.to_section = sec.id_section": ($group_by==2 ? "STONE_INW.product_id = t.product_id and STONE_INW.to_section = sec.id_section":"STONE_INW.product_id = t.product_id and STONE_INW.design_id = t.design_id and STONE_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as s ON  ".($group_by==1 ? "s.id_section = sec.id_section": ($group_by==2 ? "s.product_id = t.product_id and s.id_section = sec.id_section":"s.product_id = t.product_id and s.design_id = t.design_id and s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id =tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_s ON  ".($group_by==1 ? "stn_s.id_section = sec.id_section": ($group_by==2 ? "stn_s.product_id = t.product_id and stn_s.id_section = sec.id_section":"stn_s.product_id = t.product_id and stn_s.design_id = t.design_id and stn_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
        (l.status=0 or l.status=17)
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as br_out ON  ".($group_by==1 ? "br_out.from_section  = sec.id_section": ($group_by==2 ? "br_out.product_id = t.product_id and br_out.from_section = sec.id_section":"br_out.product_id = t.product_id and br_out.design_id = t.design_id and br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT tag.id_section,IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
        and (l.status=0 or l.status=17)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1
		and (l.status=0 or l.status=17) and l.from_branch IS NOT NULL
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.design_id,tag.id_sub_design"))." ) as stn_br_out ON  ".($group_by==1 ? "stn_br_out.from_section  = sec.id_section": ($group_by==2 ? "stn_br_out.product_id = t.product_id and stn_br_out.from_section = sec.id_section":"stn_br_out.design_id = t.design_id and stn_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as sect_out ON  ".($group_by==1 ? "sect_out.from_section  = sec.id_section": ($group_by==2 ? "sect_out.product_id = p.pro_id and sect_out.from_section = sec.id_section":"sect_out.product_id = p.pro_id and sect_out.design_id = t.design_id and sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0  and l.from_branch IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_sect_out ON  ".($group_by==1 ? "stn_sect_out.from_section  = sec.id_section": ($group_by==2 ? "stn_sect_out.product_id = t.product_id and stn_sect_out.from_section = sec.id_section":"stn_sect_out.product_id = t.product_id and stn_sect_out.design_id = t.design_id and stn_sect_out.id_sub_design = t.id_sub_design"))."
		LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '$ToDt')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND m1.status = 0 AND date(m1.date) <= '$ToDt'
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as current ON  ".($group_by==1 ? "current.id_section  = sec.id_section": ($group_by==2 ? "current.product_id = t.product_id and current.id_section = sec.id_section":"current.product_id = t.product_id and current.design_id = t.design_id and current.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,t.design_id,t.id_sub_design,
        sum(t.net_wt) as net_wt,p.product_name,
        p.cat_id,l.to_section
        FROM ret_section_tag_status_log l
        LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
        ".($data['id_branch'] !=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP BY ".($group_by==1 ? "l.to_section" :($group_by==2 ? "t.product_id,l.to_section":"t.product_id,t.design_id,t.id_sub_design"))." ) as in_trans ON  ".($group_by==1 ? "in_trans.to_section  = sec.id_section": ($group_by==2 ? "in_trans.product_id = t.product_id and in_trans.to_section = sec.id_section":"in_trans.product_id = t.product_id and in_trans.design_id = t.design_id and in_trans.id_sub_design = t.id_sub_design"))."
        where sec.id_section is not null and sec.is_home_bill_counter = 0
        ".($id_section!='' && $id_section !='0' ? " and  sec.id_section in (".$id_section.") " :'' )."
        ".($data['pro_id']!='' && $data['pro_id']!=0 ? "and t.product_id=".$data['pro_id']."":'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "sec.id_section" : ($group_by==2 ?"p.pro_id,sec.id_section":"t.design_id,t.id_sub_design"))."");
        // print_r($this->db->last_query());exit;
        $result1 = $sql->result_array();
		$sql2 = $this->db->query("SELECT sec.section_name,sec.id_section,IFNULL(s.tag_count,0) as sold_tags,IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(stn_s.sold_diawt,0) as sold_diawt,
		(IFNULL(blc.gross_wt,0)-IFNULL(blc_sold.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)-IFNULL(blc_sold.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)-IFNULL(blc_sold.piece,0)) as op_blc_pcs,
        IFNULL(blc.tag_count,0) as blc_tags,'' as design_name,'' as sub_design_name,
		(IFNULL(stn_blc.dia_wt,0)) as op_blc_diawt,
		IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(INW.tag_count,0) as inw_tags,IFNULL(STONE_INW.diaWt,0) as inw_diawt,
		IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
		0 as br_out_gwt,'0' as br_out_nwt,'0' as br_out_pcs,'0' as br_out_diawt,'0' as brout_tags,IFNULL(sect_out.tag_count,0) as sect_out_tags,'0' as in_trans_pcs
		FROM ret_section sec
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_home_section_itm_log IS NULL
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section ) as blc ON  blc.id_section = sec.id_section
		LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_home_section_itm_log IS NULL  and st.stone_type = 1
        ".($data['id_branch']!='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section) as stn_blc ON  stn_blc.id_section = sec.id_section
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' && $data['id_branch']>0? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) INW on  INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) STONE_INW on  STONE_INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=2
		AND (date(b.bill_date) < '$FromDt')
		".($data['id_branch']!='' && $data['id_branch']>0? " and b.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as blc_sold ON blc_sold.id_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=2
		AND (date(b.bill_date) BETWEEN '$FromDt' AND '$ToDt')
		".($data['id_branch']!=''&& $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as s ON s.id_section = sec.id_section
		LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(d.gross_wt) as gross_wt,SUM(d.net_wt) as net_wt,
        SUM(d.piece) as piece,d.product_id,p.cat_id,d.id_section,'0' as tag_count
        FROM ret_bill_details d
        LEFT JOIN ret_billing bill on bill.bill_id = d.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = d.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_billing_item_stones s on s.bill_det_id =d.bill_det_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        LEFT JOIN ret_uom u on u.uom_id = st.uom_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and d.item_type=2 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by d.id_section) stn_s ON  stn_s.id_section = sec.id_section
		LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_home_section_item_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by l.from_section) as sect_out on sect_out.from_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' && $data['id_branch'] > 0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($data['pro_id']!='' && $data['pro_id']!=0 ? "and tag.product_id=".$data['pro_id']."":'')."
        GROUP by l.from_section) as stn_sect_out on stn_sect_out.from_section = sec.id_section
		WHERE sec.is_home_bill_counter = 1
        ".($id_section!='' && $id_section !='0' ? " and sec.id_section in (".$id_section.") " :'' )."
        ");
		// print_r($this->db->last_query());exit;
		$result2 = $sql2->result_array();
		$result = array_merge($result1,$result2);
        foreach($result as $r)
        {
            if($r['op_blc_pcs']!=0 || $r['closing_pcs']!=0 || $r['op_blc_gwt']!=0 || $r['closing_gwt']!=0 || $r['inw_gwt']!=0 || $r['sold_gwt']!=0)
			{
                if($group_by==1 || $group_by==2){
                    $stock_detail[$r['section_name']][][] = $r;
                }
                else{
                    $stock_detail[$r['product_name']][$r['design_name']][] = $r;
                }
           }
        }
        return $stock_detail;
    }*/
    function get_section_wise_stock_inout_details_15_07_24($data)
    {
        $stock_detail = [];
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
		$metal_type = implode(' , ', $data['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_cat = implode(',',$data['id_category']);
        if($multiple_id_cat!='')
        {
            $id_category = $multiple_id_cat;
        }
		else
        {
            $id_category = $data['id_category'];
        }
        $multiple_id_section = implode(',',$data['id_section']);
        if($multiple_id_section!='')
        {
            $id_section = $multiple_id_section;
        }
		else
        {
            $id_section = $data['id_section'];
        }
        $group_by = $data['GroupBy'];
        $pro_id = $data['pro_id'];
        $des_id = $data['des_id'];
        $subdes_id = $data['subdes_id'];
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
        sec.section_name,
        IFNULL(blc.tag_count,0) as blc_tags,
        (IFNULL(blc.piece,0)) as op_blc_pcs,
        (IFNULL(blc.gross_wt,0)) as op_blc_gwt, (IFNULL(blc.net_wt,0)) as op_blc_nwt,
        (IFNULL(stn_blc.dia_wt,0) + IFNULL(looseDia_blc.gross_wt,0)) as op_blc_diawt,
        IFNULL(grm_blc.tag_count,0) as grm_blc_tags,
        (IFNULL(grm_blc.piece,0)) as op_grm_blc_pcs,
        (IFNULL(grm_blc.gross_wt,0)) as op_grm_blc_wt,
        (IFNULL(ct_blc.tag_count,0) + IFNULL(looseDia_blc.tag_count,0)) as ct_blc_tags,
        (IFNULL(ct_blc.piece,0)) as op_ct_blc_pcs,
        (IFNULL(ct_blc.gross_wt,0)) as op_ct_blc_wt,
        IFNULL(INW.tag_count,0) as inw_tags,
        IFNULL(INW.piece,0) as inw_pcs,
        IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,
        (IFNULL(STONE_INW.diaWt,0) + IFNULL(looseDia_INW.gross_wt,0)) as inw_diawt,
        IFNULL(GRM_INW.tag_count,0) as grm_inw_tags,
        IFNULL(GRM_INW.piece,0) as grm_inw_pcs,
        IFNULL(GRM_INW.gross_wt,0) as grm_inw_wt,
        (IFNULL(CT_INW.tag_count,0) + IFNULL(looseDia_INW.tag_count,0)) as ct_inw_tags,
        IFNULL(CT_INW.piece,0) as ct_inw_pcs,
        IFNULL(CT_INW.gross_wt,0) as ct_inw_wt,
        (IFNULL(s.tag_count,0) + IFNULL(grm_s.tag_count,0) + IFNULL(ct_s.tag_count,0) + IFNULL(looseDia_s.tag_count,0)) as sold_tags,
        (IFNULL(s.piece,0) + IFNULL(grm_s.piece,0) + IFNULL(ct_s.piece,0)) as sold_pcs,
        IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,
        (IFNULL(stn_s.sold_diawt,0) + IFNULL(looseDia_s.gross_wt,0)) as sold_diawt,
        IFNULL(grm_s.gross_wt,0) as sold_grm_wt,
        IFNULL(ct_s.gross_wt,0) as sold_ct_wt,
        (IFNULL(br_out.tag_count,0) + IFNULL(grm_br_out.tag_count,0) + IFNULL(ct_br_out.tag_count,0) + IFNULL(looseDia_br_out.tag_count,0)) as brout_tags,
        (IFNULL(br_out.piece,0) + IFNULL(grm_br_out.piece,0) + IFNULL(ct_br_out.piece,0)) as br_out_pcs,
        IFNULL(br_out.gross_wt,0) as br_out_gwt,
        IFNULL(br_out.net_wt,0) as br_out_nwt,
        (IFNULL(stn_br_out.dia_wt,0) + IFNULL(looseDia_br_out.gross_wt,0)) as br_out_diawt,
        IFNULL(grm_br_out.gross_wt,0) as grm_br_out_wt,
        IFNULL(ct_br_out.gross_wt,0) as ct_br_out_wt,
        (IFNULL(sect_out.tag_count,0) + IFNULL(grm_sect_out.tag_count,0) + IFNULL(ct_sect_out.tag_count,0) + IFNULL(looseDia_sect_out.tag_count,0)) as sect_out_tags,
        (IFNULL(sect_out.piece,0) + IFNULL(grm_sect_out.piece,0) + IFNULL(ct_sect_out.piece,0)) as sect_out_pcs,
        IFNULL(sect_out.gross_wt,0) as sect_out_gwt,
        IFNULL(sect_out.net_wt,0) as sect_out_nwt,
        IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
        IFNULL(grm_sect_out.gross_wt,0) as grm_sect_out_wt,
        IFNULL(ct_sect_out.gross_wt,0) as ct_sect_out_wt,
        (IFNULL(pur_ret.tag_count,0) +  IFNULL(pur_ret_grm.tag_count,0) + IFNULL(pur_ret_ct.tag_count,0)) as ret_tags,
        (IFNULL(pur_ret.pcs,0) + IFNULL(pur_ret_grm.pcs,0) + IFNULL(pur_ret_ct.pcs,0)) as ret_pcs,
        IFNULL(pur_ret.gross_wt,0) as ret_gwt,IFNULL(pur_ret.net_wt,0) as ret_nwt,
        (IFNULL(stn_pur_ret.diaWt,0) + IFNULL(pur_ret_looseDia.gross_wt,0)) as ret_diawt,
        IFNULL(pur_ret_grm.tag_count,0) as grm_ret_tags,IFNULL(pur_ret_grm.gross_wt,0) as grm_ret_wt,
        (IFNULL(pur_ret_ct.tag_count,0) + IFNULL(pur_ret_looseDia.tag_count,0)) as ct_ret_tags,IFNULL(pur_ret_ct.gross_wt,0) as ct_ret_wt,
        (IFNULL(kar_iss.tag_count,0) + IFNULL(kar_iss_grm.tag_count,0) + IFNULL(kar_iss_ct.tag_count,0)) as iss_tags,
        (IFNULL(kar_iss.pcs,0) + IFNULL(kar_iss_grm.pcs,0) + IFNULL(kar_iss_ct.pcs,0)) as iss_pcs,
        IFNULL(kar_iss.gross_wt,0) as iss_gwt,IFNULL(kar_iss.net_wt,0) as iss_nwt,
        IFNULL(kar_iss_looseDia.gross_wt,0) as iss_diawt,
        IFNULL(kar_iss_grm.tag_count,0) as grm_iss_tags,IFNULL(kar_iss_grm.gross_wt,0) as grm_iss_wt,
        (IFNULL(kar_iss_ct.tag_count,0) + IFNULL(kar_iss_looseDia.tag_count,0)) as ct_iss_tags,IFNULL(kar_iss_ct.gross_wt,0) as ct_iss_wt,
        IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
        IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
        Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name,t.design_id,t.id_sub_design,
        IFNULL(subdes.sub_design_name,'') as sub_design_name,IFNULL(des.design_name,'') as design_name
        FROM ret_product_section ps
        LEFT JOIN ret_product_master p ON p.pro_id = ps.pro_id
        LEFT JOIN ret_section sec ON sec.id_section = ps.id_section
        LEFT JOIN ret_taging t ON t.product_id = p.pro_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        LEFT JOIN branch b on b.id_branch=t.current_branch
        left join ret_category c on c.id_ret_category=p.cat_id
        left join metal m on m.id_metal=c.id_metal
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL and p.stone_type = 0
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as blc ON  ".($group_by==1 ? "blc.id_section = sec.id_section" :($group_by==2 ? "blc.id_product = p.pro_id and blc.id_section = sec.id_section":"blc.id_product = p.pro_id and blc.design_id = t.design_id and blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as grm_blc ON  ".($group_by==1 ? "grm_blc.id_section = sec.id_section" :($group_by==2 ? "grm_blc.id_product = p.pro_id and grm_blc.id_section = sec.id_section":"grm_blc.id_product = p.pro_id and grm_blc.design_id = t.design_id and grm_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL and p.stone_type = 1 and tag.uom_gross_wt = 6
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as ct_blc ON  ".($group_by==1 ? "ct_blc.id_section = sec.id_section" :($group_by==2 ? "ct_blc.id_product = p.pro_id and ct_blc.id_section = sec.id_section":"ct_blc.id_product = p.pro_id and ct_blc.design_id = t.design_id and ct_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL and p.stone_type = 2
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_blc ON  ".($group_by==1 ? "looseDia_blc.id_section = sec.id_section" :($group_by==2 ? "looseDia_blc.id_product = p.pro_id and looseDia_blc.id_section = sec.id_section":"looseDia_blc.id_product = p.pro_id and looseDia_blc.design_id = t.design_id and looseDia_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,tag.design_id,tag.id_sub_design,
        tag.product_id as id_product,p.cat_id
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_sec_tag_status_log IS NULL and st.stone_type = 1
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section":($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_blc ON  ".($group_by==1 ? "stn_blc.id_section = sec.id_section": ($group_by==2 ? "stn_blc.id_product = t.product_id and stn_blc.id_section = sec.id_section":"stn_blc.id_product = t.product_id and stn_blc.design_id = t.design_id and stn_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL and p.stone_type = 0
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as INW ON  ".($group_by==1 ? "INW.to_section = sec.id_section" :($group_by==2 ? "INW.product_id = t.product_id and INW.to_section = sec.id_section":"INW.product_id = t.product_id and INW.design_id = t.design_id and INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as GRM_INW ON  ".($group_by==1 ? "GRM_INW.to_section = sec.id_section" :($group_by==2 ? "GRM_INW.product_id = t.product_id and GRM_INW.to_section = sec.id_section":"GRM_INW.product_id = t.product_id and GRM_INW.design_id = t.design_id and GRM_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL and p.stone_type = 1 and tag.uom_gross_wt = 6
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as CT_INW ON  ".($group_by==1 ? "CT_INW.to_section = sec.id_section" :($group_by==2 ? "CT_INW.product_id = t.product_id and CT_INW.to_section = sec.id_section":"CT_INW.product_id = t.product_id and CT_INW.design_id = t.design_id and GRM_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL and p.stone_type = 2
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_INW ON  ".($group_by==1 ? "looseDia_INW.to_section = sec.id_section" :($group_by==2 ? "looseDia_INW.product_id = t.product_id and looseDia_INW.to_section = sec.id_section":"looseDia_INW.product_id = t.product_id and looseDia_INW.design_id = t.design_id and GRM_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as STONE_INW ON  ".($group_by==1 ? "STONE_INW.to_section = sec.id_section": ($group_by==2 ? "STONE_INW.product_id = t.product_id and STONE_INW.to_section = sec.id_section":"STONE_INW.product_id = t.product_id and STONE_INW.design_id = t.design_id and STONE_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 0
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as s ON  ".($group_by==1 ? "s.id_section = sec.id_section": ($group_by==2 ? "s.product_id = t.product_id and s.id_section = sec.id_section":"s.product_id = t.product_id and s.design_id = t.design_id and s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as grm_s ON  ".($group_by==1 ? "grm_s.id_section = sec.id_section": ($group_by==2 ? "grm_s.product_id = t.product_id and grm_s.id_section = sec.id_section":"grm_s.product_id = t.product_id and grm_s.design_id = t.design_id and grm_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 1 and tag.uom_gross_wt = 6
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as ct_s ON  ".($group_by==1 ? "ct_s.id_section = sec.id_section": ($group_by==2 ? "ct_s.product_id = t.product_id and ct_s.id_section = sec.id_section":"ct_s.product_id = t.product_id and ct_s.design_id = t.design_id and ct_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 2
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_s ON  ".($group_by==1 ? "looseDia_s.id_section = sec.id_section": ($group_by==2 ? "looseDia_s.product_id = t.product_id and looseDia_s.id_section = sec.id_section":"looseDia_s.product_id = t.product_id and looseDia_s.design_id = t.design_id and looseDia_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id =tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_s ON  ".($group_by==1 ? "stn_s.id_section = sec.id_section": ($group_by==2 ? "stn_s.product_id = t.product_id and stn_s.id_section = sec.id_section":"stn_s.product_id = t.product_id and stn_s.design_id = t.design_id and stn_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
        (l.status=0 or l.status=17 or l.status=7)  and p.stone_type = 0
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as br_out ON  ".($group_by==1 ? "br_out.from_section  = sec.id_section": ($group_by==2 ? "br_out.product_id = t.product_id and br_out.from_section = sec.id_section":"br_out.product_id = t.product_id and br_out.design_id = t.design_id and br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
        (l.status=0 or l.status=17 or l.status=7)  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as grm_br_out ON  ".($group_by==1 ? "grm_br_out.from_section  = sec.id_section": ($group_by==2 ? "grm_br_out.product_id = t.product_id and grm_br_out.from_section = sec.id_section":"grm_br_out.product_id = t.product_id and grm_br_out.design_id = t.design_id and grm_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
        (l.status=0 or l.status=17 or l.status=7)  and p.stone_type = 1 and tag.uom_gross_wt = 6
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as ct_br_out ON  ".($group_by==1 ? "ct_br_out.from_section  = sec.id_section": ($group_by==2 ? "ct_br_out.product_id = t.product_id and ct_br_out.from_section = sec.id_section":"ct_br_out.product_id = t.product_id and ct_br_out.design_id = t.design_id and ct_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
        (l.status=0 or l.status=17 or l.status=7)  and p.stone_type = 2
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_br_out ON  ".($group_by==1 ? "looseDia_br_out.from_section  = sec.id_section": ($group_by==2 ? "looseDia_br_out.product_id = t.product_id and looseDia_br_out.from_section = sec.id_section":"looseDia_br_out.product_id = t.product_id and looseDia_br_out.design_id = t.design_id and looseDia_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT tag.id_section,IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
        and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1
		and (l.status=0 or l.status=17 or l.status=7) and l.from_branch IS NOT NULL
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.design_id,tag.id_sub_design"))." ) as stn_br_out ON  ".($group_by==1 ? "stn_br_out.from_section  = sec.id_section": ($group_by==2 ? "stn_br_out.product_id = t.product_id and stn_br_out.from_section = sec.id_section":"stn_br_out.design_id = t.design_id and stn_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type = 0
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as sect_out ON  ".($group_by==1 ? "sect_out.from_section  = sec.id_section": ($group_by==2 ? "sect_out.product_id = p.pro_id and sect_out.from_section = sec.id_section":"sect_out.product_id = p.pro_id and sect_out.design_id = t.design_id and sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type =1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as grm_sect_out ON  ".($group_by==1 ? "grm_sect_out.from_section  = sec.id_section": ($group_by==2 ? "grm_sect_out.product_id = p.pro_id and grm_sect_out.from_section = sec.id_section":"grm_sect_out.product_id = p.pro_id and grm_sect_out.design_id = t.design_id and grm_sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type =1 and tag.uom_gross_wt = 6
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as ct_sect_out ON  ".($group_by==1 ? "ct_sect_out.from_section  = sec.id_section": ($group_by==2 ? "ct_sect_out.product_id = p.pro_id and ct_sect_out.from_section = sec.id_section":"ct_sect_out.product_id = p.pro_id and ct_sect_out.design_id = t.design_id and ct_sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type = 2
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_sect_out ON  ".($group_by==1 ? "looseDia_sect_out.from_section  = sec.id_section": ($group_by==2 ? "looseDia_sect_out.product_id = p.pro_id and looseDia_sect_out.from_section = sec.id_section":"looseDia_sect_out.product_id = p.pro_id and looseDia_sect_out.design_id = t.design_id and looseDia_sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0  and l.from_branch IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_sect_out ON  ".($group_by==1 ? "stn_sect_out.from_section  = sec.id_section": ($group_by==2 ? "stn_sect_out.product_id = t.product_id and stn_sect_out.from_section = sec.id_section":"stn_sect_out.product_id = t.product_id and stn_sect_out.design_id = t.design_id and stn_sect_out.id_sub_design = t.id_sub_design"))."
		LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '$ToDt')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND m1.status = 0 AND date(m1.date) <= '$ToDt'
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as current ON  ".($group_by==1 ? "current.id_section  = sec.id_section": ($group_by==2 ? "current.product_id = t.product_id and current.id_section = sec.id_section":"current.product_id = t.product_id and current.design_id = t.design_id and current.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,t.design_id,t.id_sub_design,
        sum(t.net_wt) as net_wt,p.product_name,
        p.cat_id,l.to_section
        FROM ret_section_tag_status_log l
        LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
        ".($data['id_branch'] !=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP BY ".($group_by==1 ? "l.to_section" :($group_by==2 ? "t.product_id,l.to_section":"t.product_id,t.design_id,t.id_sub_design"))." ) as in_trans ON  ".($group_by==1 ? "in_trans.to_section  = sec.id_section": ($group_by==2 ? "in_trans.product_id = t.product_id and in_trans.to_section = sec.id_section":"in_trans.product_id = t.product_id and in_trans.design_id = t.design_id and in_trans.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_items pri
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
        and pro.stone_type = 0
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as pur_ret on ".($group_by==1 ? "pur_ret.id_section  = sec.id_section": ($group_by==2 ? "pur_ret.product_id = t.product_id and pur_ret.id_section = sec.id_section":"pur_ret.id_section = sec.id_section and pur_ret.product_id = t.product_id and pur_ret.design_id = t.design_id and pur_ret.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_items pri
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
        and pro.stone_type = 1 and (t.uom_gross_wt != 6 or t.uom_gross_wt is null)
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as pur_ret_grm on ".($group_by==1 ? "pur_ret_grm.id_section  = sec.id_section": ($group_by==2 ? "pur_ret_grm.product_id = t.product_id and pur_ret_grm.id_section = sec.id_section":"pur_ret_grm.id_section = sec.id_section and pur_ret_grm.product_id = t.product_id and pur_ret_grm.design_id = t.design_id and pur_ret_grm.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_items pri
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
        and pro.stone_type = 1 and t.uom_gross_wt = 6
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as pur_ret_ct on ".($group_by==1 ? "pur_ret_ct.id_section  = sec.id_section": ($group_by==2 ? "pur_ret_ct.product_id = t.product_id and pur_ret_ct.id_section = sec.id_section":"pur_ret_ct.id_section = sec.id_section and pur_ret_ct.product_id = t.product_id and pur_ret_ct.design_id = t.design_id and pur_ret_ct.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_items pri
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
        and pro.stone_type = 2
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as pur_ret_looseDia on ".($group_by==1 ? "pur_ret_looseDia.id_section  = sec.id_section": ($group_by==2 ? "pur_ret_looseDia.product_id = t.product_id and pur_ret_looseDia.id_section = sec.id_section":"pur_ret_looseDia.id_section = sec.id_section and pur_ret_looseDia.product_id = t.product_id and pur_ret_looseDia.design_id = t.design_id and pur_ret_looseDia.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT sum(ret_stn.ret_stone_wt) as diaWt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_stone_items ret_stn
        LEFT JOIN ret_purchase_return_items pri on pri.pur_ret_itm_id = ret_stn.pur_ret_return_id
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_stone st on st.stone_id = ret_stn.ret_stone_id
        LEFT JOIN ret_uom u on u.uom_id = ret_stn.ret_stone_uom
        WHERE pr.bill_status = 1 and (date(bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and st.stone_type = 1 and pro.stone_type = 0
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as stn_pur_ret on ".($group_by==1 ? "stn_pur_ret.id_section  = sec.id_section": ($group_by==2 ? "stn_pur_ret.product_id = t.product_id and stn_pur_ret.id_section = sec.id_section":"stn_pur_ret.id_section = sec.id_section and stn_pur_ret.product_id = t.product_id and stn_pur_ret.design_id = t.design_id and stn_pur_ret.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_karigar_metal_issue_details kmi
        LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
        LEFT join ret_taging t on t.tag_id = kmi.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
        and kmi.tag_id is not null and pro.stone_type = 0
        ".($data['id_branch'] !='' ? " and km.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as kar_iss on ".($group_by==1 ? "kar_iss.id_section  = sec.id_section": ($group_by==2 ? "kar_iss.product_id = t.product_id and kar_iss.id_section = sec.id_section":"kar_iss.id_section = sec.id_section and kar_iss.product_id = t.product_id and kar_iss.design_id = t.design_id and kar_iss.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_karigar_metal_issue_details kmi
        LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
        LEFT join ret_taging t on t.tag_id = kmi.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
        and kmi.tag_id is not null and pro.stone_type = 1 and (t.uom_gross_wt != 6 or t.uom_gross_wt is null)
        ".($data['id_branch'] !='' ? " and km.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as kar_iss_grm on ".($group_by==1 ? "kar_iss_grm.id_section  = sec.id_section": ($group_by==2 ? "kar_iss_grm.product_id = t.product_id and kar_iss_grm.id_section = sec.id_section":"kar_iss_grm.id_section = sec.id_section and kar_iss_grm.product_id = t.product_id and kar_iss_grm.design_id = t.design_id and kar_iss_grm.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_karigar_metal_issue_details kmi
        LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
        LEFT join ret_taging t on t.tag_id = kmi.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
        and kmi.tag_id is not null and pro.stone_type = 1 and t.uom_gross_wt = 6
        ".($data['id_branch'] !='' ? " and km.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as kar_iss_ct on ".($group_by==1 ? "kar_iss_ct.id_section  = sec.id_section": ($group_by==2 ? "kar_iss_ct.product_id = t.product_id and kar_iss_ct.id_section = sec.id_section":"kar_iss_ct.id_section = sec.id_section and kar_iss_ct.product_id = t.product_id and kar_iss_ct.design_id = t.design_id and kar_iss_ct.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_karigar_metal_issue_details kmi
        LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
        LEFT join ret_taging t on t.tag_id = kmi.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
        and kmi.tag_id is not null and pro.stone_type = 2
        ".($data['id_branch'] !='' ? " and km.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as kar_iss_looseDia on ".($group_by==1 ? "kar_iss_looseDia.id_section  = sec.id_section": ($group_by==2 ? "kar_iss_looseDia.product_id = t.product_id and kar_iss_looseDia.id_section = sec.id_section":"kar_iss_looseDia.id_section = sec.id_section and kar_iss_looseDia.product_id = t.product_id and kar_iss_looseDia.design_id = t.design_id and kar_iss_looseDia.id_sub_design = t.id_sub_design"))."
        where sec.id_section is not null and sec.is_home_bill_counter = 0
        ".($id_section!='' && $id_section !='0' ? " and  sec.id_section in (".$id_section.") " :'' )."
        ".($data['pro_id']!='' && $data['pro_id']!=0 ? "and t.product_id=".$data['pro_id']."":'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "sec.id_section" : ($group_by==2 ?"p.pro_id,sec.id_section":"t.design_id,t.id_sub_design"))."");
        // print_r($this->db->last_query());exit;
        $result1 = $sql->result_array();
        
        
        
        if($group_by==1){
		$sql2 = $this->db->query("SELECT sec.section_name,sec.id_section,IFNULL(s.tag_count,0) as sold_tags,IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(stn_s.sold_diawt,0) as sold_diawt,
		(IFNULL(blc.gross_wt,0)-IFNULL(blc_sold.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)-IFNULL(blc_sold.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)-IFNULL(blc_sold.piece,0)) as op_blc_pcs,
        IFNULL(blc.tag_count,0) as blc_tags,'' as design_name,'' as sub_design_name,
		(IFNULL(stn_blc.dia_wt,0)) as op_blc_diawt,
		IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(INW.tag_count,0) as inw_tags,IFNULL(STONE_INW.diaWt,0) as inw_diawt,
		IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
		0 as br_out_gwt,'0' as br_out_nwt,'0' as br_out_pcs,'0' as br_out_diawt,'0' as brout_tags,IFNULL(sect_out.tag_count,0) as sect_out_tags,'0' as in_trans_pcs,
        0 as grm_blc_tags,'0' as ct_blc_tags,'0' as grm_inw_tags,'0' as ct_inw_tags,0 as op_ct_blc_pcs,'0' as op_grm_blc_pcs,'0' as ct_inw_pcs,'0' as grm_inw_pcs,'0' as iss_pcs,
        '0' as ret_gwt,'0' as iss_gwt,'0' as iss_nwt,'0' as ret_nwt,'0' as iss_diawt,'0' as ret_diawt,'0' as grm_iss_wt,'0' as op_grm_blc_wt,'0' as op_ct_blc_wt,'0' as grm_iss_wt,'0' as ct_iss_wt,
        '0' as ct_inw_wt,'0' as sold_ct_wt,'0' as ct_br_out_wt,'0' as ct_ret_wt,'0' as ct_sect_out_wt,'0' as ct_iss_wt,
        '0' as grm_iss_wt,'0' as grm_ret_wt,'0' as grm_br_out_wt,'0' as sold_grm_wt,'0' as grm_inw_wt,'0' as op_grm_blc_wt,'0' as ret_pcs
		FROM ret_section sec
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_home_section_itm_log IS NULL
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section ) as blc ON  blc.id_section = sec.id_section
		LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_home_section_itm_log IS NULL  and st.stone_type = 1
        ".($data['id_branch']!='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section) as stn_blc ON  stn_blc.id_section = sec.id_section
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' && $data['id_branch']>0? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) INW on  INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) STONE_INW on  STONE_INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=2
		AND (date(b.bill_date) < '$FromDt')
		".($data['id_branch']!='' && $data['id_branch']>0? " and b.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as blc_sold ON blc_sold.id_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=2
		AND (date(b.bill_date) BETWEEN '$FromDt' AND '$ToDt')
		".($data['id_branch']!=''&& $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as s ON s.id_section = sec.id_section
		LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(d.gross_wt) as gross_wt,SUM(d.net_wt) as net_wt,
        SUM(d.piece) as piece,d.product_id,p.cat_id,d.id_section,'0' as tag_count
        FROM ret_bill_details d
        LEFT JOIN ret_billing bill on bill.bill_id = d.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = d.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_billing_item_stones s on s.bill_det_id =d.bill_det_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        LEFT JOIN ret_uom u on u.uom_id = st.uom_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and d.item_type=2 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by d.id_section) stn_s ON  stn_s.id_section = sec.id_section
		LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_home_section_item_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by l.from_section) as sect_out on sect_out.from_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' && $data['id_branch'] > 0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($data['pro_id']!='' && $data['pro_id']!=0 ? "and tag.product_id=".$data['pro_id']."":'')."
        GROUP by l.from_section) as stn_sect_out on stn_sect_out.from_section = sec.id_section
		WHERE sec.is_home_bill_counter = 1
        ".($id_section!='' && $id_section !='0' ? " and sec.id_section in (".$id_section.") " :'' )."
        ");
		// print_r($this->db->last_query());exit;
		$result2 = $sql2->result_array();
        }else{
            $result2 =[];
        }
		$result = array_merge($result1,$result2);
        foreach($result as $r)
        {
            if($r['op_blc_pcs']!=0 || $r['closing_pcs']!=0 || $r['op_blc_gwt']!=0 || $r['closing_gwt']!=0 || $r['inw_gwt']!=0 || $r['sold_gwt']!=0)
			{
                if($group_by==1 || $group_by==2){
                    $stock_detail[$r['section_name']][][] = $r;
                }
                else{
                    $stock_detail[$r['product_name']][$r['design_name']][] = $r;
                }
           }
        }
        return $stock_detail;
    }

    function get_section_wise_stock_inout_details($data)
    {
        $stock_detail = [];
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
		$metal_type = implode(' , ', $data['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_cat = implode(',',$data['id_category']);
        if($multiple_id_cat!='')
        {
            $id_category = $multiple_id_cat;
        }
		else
        {
            $id_category = $data['id_category'];
        }
        $multiple_id_section = implode(',',$data['id_section']);
        if($multiple_id_section!='')
        {
            $id_section = $multiple_id_section;
        }
		else
        {
            $id_section = $data['id_section'];
        }
        $group_by = $data['GroupBy'];
        $pro_id = $data['pro_id'];
        $des_id = $data['des_id'];
        $subdes_id = $data['subdes_id'];
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
        sec.section_name,
        IFNULL(blc.tag_count,0) as blc_tags,
        (IFNULL(blc.piece,0)) as op_blc_pcs,
        (IFNULL(blc.gross_wt,0)) as op_blc_gwt, (IFNULL(blc.net_wt,0)) as op_blc_nwt,
        (IFNULL(stn_blc.dia_wt,0) + IFNULL(looseDia_blc.gross_wt,0)) as op_blc_diawt,
        IFNULL(grm_blc.tag_count,0) as grm_blc_tags,
        (IFNULL(grm_blc.piece,0)) as op_grm_blc_pcs,
        (IFNULL(grm_blc.gross_wt,0)) as op_grm_blc_wt,
        (IFNULL(ct_blc.tag_count,0) + IFNULL(looseDia_blc.tag_count,0)) as ct_blc_tags,
        (IFNULL(ct_blc.piece,0)) as op_ct_blc_pcs,
        (IFNULL(ct_blc.gross_wt,0)) as op_ct_blc_wt,
        IFNULL(INW.tag_count,0) as inw_tags,
        IFNULL(INW.piece,0) as inw_pcs,
        IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,
        (IFNULL(STONE_INW.diaWt,0) + IFNULL(looseDia_INW.gross_wt,0)) as inw_diawt,
        IFNULL(GRM_INW.tag_count,0) as grm_inw_tags,
        IFNULL(GRM_INW.piece,0) as grm_inw_pcs,
        IFNULL(GRM_INW.gross_wt,0) as grm_inw_wt,
        (IFNULL(CT_INW.tag_count,0) + IFNULL(looseDia_INW.tag_count,0)) as ct_inw_tags,
        IFNULL(CT_INW.piece,0) as ct_inw_pcs,
        IFNULL(CT_INW.gross_wt,0) as ct_inw_wt,
        (IFNULL(s.tag_count,0) + IFNULL(grm_s.tag_count,0) + IFNULL(ct_s.tag_count,0) + IFNULL(looseDia_s.tag_count,0)) as sold_tags,
        (IFNULL(s.piece,0) + IFNULL(grm_s.piece,0) + IFNULL(ct_s.piece,0)) as sold_pcs,
        IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,
        (IFNULL(stn_s.sold_diawt,0) + IFNULL(looseDia_s.gross_wt,0)) as sold_diawt,
        IFNULL(grm_s.gross_wt,0) as sold_grm_wt,
        IFNULL(ct_s.gross_wt,0) as sold_ct_wt,
        (IFNULL(br_out.tag_count,0) + IFNULL(grm_br_out.tag_count,0) + IFNULL(ct_br_out.tag_count,0) + IFNULL(looseDia_br_out.tag_count,0)) as brout_tags,
        (IFNULL(br_out.piece,0) + IFNULL(grm_br_out.piece,0) + IFNULL(ct_br_out.piece,0)) as br_out_pcs,
        IFNULL(br_out.gross_wt,0) as br_out_gwt,
        IFNULL(br_out.net_wt,0) as br_out_nwt,
        (IFNULL(stn_br_out.dia_wt,0) + IFNULL(looseDia_br_out.gross_wt,0)) as br_out_diawt,
        IFNULL(grm_br_out.gross_wt,0) as grm_br_out_wt,
        IFNULL(ct_br_out.gross_wt,0) as ct_br_out_wt,
        (IFNULL(sect_out.tag_count,0) + IFNULL(grm_sect_out.tag_count,0) + IFNULL(ct_sect_out.tag_count,0) + IFNULL(looseDia_sect_out.tag_count,0)) as sect_out_tags,
        (IFNULL(sect_out.piece,0) + IFNULL(grm_sect_out.piece,0) + IFNULL(ct_sect_out.piece,0)) as sect_out_pcs,
        IFNULL(sect_out.gross_wt,0) as sect_out_gwt,
        IFNULL(sect_out.net_wt,0) as sect_out_nwt,
        IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
        IFNULL(grm_sect_out.gross_wt,0) as grm_sect_out_wt,
        IFNULL(ct_sect_out.gross_wt,0) as ct_sect_out_wt,
        (IFNULL(pur_ret.tag_count,0) +  IFNULL(pur_ret_grm.tag_count,0) + IFNULL(pur_ret_ct.tag_count,0)) as ret_tags,
        (IFNULL(pur_ret.pcs,0) + IFNULL(pur_ret_grm.pcs,0) + IFNULL(pur_ret_ct.pcs,0)) as ret_pcs,
        IFNULL(pur_ret.gross_wt,0) as ret_gwt,IFNULL(pur_ret.net_wt,0) as ret_nwt,
        (IFNULL(stn_pur_ret.diaWt,0) + IFNULL(pur_ret_looseDia.gross_wt,0)) as ret_diawt,
        IFNULL(pur_ret_grm.tag_count,0) as grm_ret_tags,IFNULL(pur_ret_grm.gross_wt,0) as grm_ret_wt,
        (IFNULL(pur_ret_ct.tag_count,0) + IFNULL(pur_ret_looseDia.tag_count,0)) as ct_ret_tags,IFNULL(pur_ret_ct.gross_wt,0) as ct_ret_wt,
        (IFNULL(kar_iss.tag_count,0) + IFNULL(kar_iss_grm.tag_count,0) + IFNULL(kar_iss_ct.tag_count,0)) as iss_tags,
        (IFNULL(kar_iss.pcs,0) + IFNULL(kar_iss_grm.pcs,0) + IFNULL(kar_iss_ct.pcs,0)) as iss_pcs,
        IFNULL(kar_iss.gross_wt,0) as iss_gwt,IFNULL(kar_iss.net_wt,0) as iss_nwt,
        IFNULL(kar_iss_looseDia.gross_wt,0) as iss_diawt,
        IFNULL(kar_iss_grm.tag_count,0) as grm_iss_tags,IFNULL(kar_iss_grm.gross_wt,0) as grm_iss_wt,
        (IFNULL(kar_iss_ct.tag_count,0) + IFNULL(kar_iss_looseDia.tag_count,0)) as ct_iss_tags,IFNULL(kar_iss_ct.gross_wt,0) as ct_iss_wt,
        IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
        IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
        Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name,t.design_id,t.id_sub_design,
        IFNULL(subdes.sub_design_name,'') as sub_design_name,IFNULL(des.design_name,'') as design_name
        FROM ret_product_section ps
        LEFT JOIN ret_product_master p ON p.pro_id = ps.pro_id
        LEFT JOIN ret_section sec ON sec.id_section = ps.id_section
        LEFT JOIN ret_taging t ON t.product_id = p.pro_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        LEFT JOIN branch b on b.id_branch=t.current_branch
        left join ret_category c on c.id_ret_category=p.cat_id
        left join metal m on m.id_metal=c.id_metal
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design        
        WHERE m2.id_sec_tag_status_log IS NULL and p.stone_type = 0
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        ".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as blc ON  ".($group_by==1 ? "blc.id_section = sec.id_section" :($group_by==2 ? "blc.id_product = p.pro_id and blc.id_section = sec.id_section":"blc.id_product = p.pro_id and blc.design_id = t.design_id and blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE m2.id_sec_tag_status_log IS NULL and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as grm_blc ON  ".($group_by==1 ? "grm_blc.id_section = sec.id_section" :($group_by==2 ? "grm_blc.id_product = p.pro_id and grm_blc.id_section = sec.id_section":"grm_blc.id_product = p.pro_id and grm_blc.design_id = t.design_id and grm_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE m2.id_sec_tag_status_log IS NULL and p.stone_type = 1 and tag.uom_gross_wt = 6
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as ct_blc ON  ".($group_by==1 ? "ct_blc.id_section = sec.id_section" :($group_by==2 ? "ct_blc.id_product = p.pro_id and ct_blc.id_section = sec.id_section":"ct_blc.id_product = p.pro_id and ct_blc.design_id = t.design_id and ct_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE m2.id_sec_tag_status_log IS NULL and p.stone_type = 2
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_blc ON  ".($group_by==1 ? "looseDia_blc.id_section = sec.id_section" :($group_by==2 ? "looseDia_blc.id_product = p.pro_id and looseDia_blc.id_section = sec.id_section":"looseDia_blc.id_product = p.pro_id and looseDia_blc.design_id = t.design_id and looseDia_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,tag.design_id,tag.id_sub_design,
        tag.product_id as id_product,p.cat_id
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE m2.id_sec_tag_status_log IS NULL and st.stone_type = 1
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section":($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_blc ON  ".($group_by==1 ? "stn_blc.id_section = sec.id_section": ($group_by==2 ? "stn_blc.id_product = t.product_id and stn_blc.id_section = sec.id_section":"stn_blc.id_product = t.product_id and stn_blc.design_id = t.design_id and stn_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE tag.tag_id IS NOT NULL and p.stone_type = 0
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as INW ON  ".($group_by==1 ? "INW.to_section = sec.id_section" :($group_by==2 ? "INW.product_id = t.product_id and INW.to_section = sec.id_section":"INW.product_id = t.product_id and INW.design_id = t.design_id and INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE tag.tag_id IS NOT NULL and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as GRM_INW ON  ".($group_by==1 ? "GRM_INW.to_section = sec.id_section" :($group_by==2 ? "GRM_INW.product_id = t.product_id and GRM_INW.to_section = sec.id_section":"GRM_INW.product_id = t.product_id and GRM_INW.design_id = t.design_id and GRM_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE tag.tag_id IS NOT NULL and p.stone_type = 1 and tag.uom_gross_wt = 6
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as CT_INW ON  ".($group_by==1 ? "CT_INW.to_section = sec.id_section" :($group_by==2 ? "CT_INW.product_id = t.product_id and CT_INW.to_section = sec.id_section":"CT_INW.product_id = t.product_id and CT_INW.design_id = t.design_id and GRM_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE tag.tag_id IS NOT NULL and p.stone_type = 2
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_INW ON  ".($group_by==1 ? "looseDia_INW.to_section = sec.id_section" :($group_by==2 ? "looseDia_INW.product_id = t.product_id and looseDia_INW.to_section = sec.id_section":"looseDia_INW.product_id = t.product_id and looseDia_INW.design_id = t.design_id and GRM_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
            date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
            and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as STONE_INW ON  ".($group_by==1 ? "STONE_INW.to_section = sec.id_section": ($group_by==2 ? "STONE_INW.product_id = t.product_id and STONE_INW.to_section = sec.id_section":"STONE_INW.product_id = t.product_id and STONE_INW.design_id = t.design_id and STONE_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 0
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as s ON  ".($group_by==1 ? "s.id_section = sec.id_section": ($group_by==2 ? "s.product_id = t.product_id and s.id_section = sec.id_section":"s.product_id = t.product_id and s.design_id = t.design_id and s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as grm_s ON  ".($group_by==1 ? "grm_s.id_section = sec.id_section": ($group_by==2 ? "grm_s.product_id = t.product_id and grm_s.id_section = sec.id_section":"grm_s.product_id = t.product_id and grm_s.design_id = t.design_id and grm_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 1 and tag.uom_gross_wt = 6
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as ct_s ON  ".($group_by==1 ? "ct_s.id_section = sec.id_section": ($group_by==2 ? "ct_s.product_id = t.product_id and ct_s.id_section = sec.id_section":"ct_s.product_id = t.product_id and ct_s.design_id = t.design_id and ct_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(tag.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 2
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_s ON  ".($group_by==1 ? "looseDia_s.id_section = sec.id_section": ($group_by==2 ? "looseDia_s.product_id = t.product_id and looseDia_s.id_section = sec.id_section":"looseDia_s.product_id = t.product_id and looseDia_s.design_id = t.design_id and looseDia_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        LEFT JOIN ret_taging_stone s on s.tag_id =tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_s ON  ".($group_by==1 ? "stn_s.id_section = sec.id_section": ($group_by==2 ? "stn_s.product_id = t.product_id and stn_s.id_section = sec.id_section":"stn_s.product_id = t.product_id and stn_s.design_id = t.design_id and stn_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and l.from_section IS NOT NULL and
        (l.status=0 or l.status=17 or l.status=7)  and p.stone_type = 0
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as br_out ON  ".($group_by==1 ? "br_out.from_section  = sec.id_section": ($group_by==2 ? "br_out.product_id = t.product_id and br_out.from_section = sec.id_section":"br_out.product_id = t.product_id and br_out.design_id = t.design_id and br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and l.from_section IS NOT NULL and
        (l.status=0 or l.status=17 or l.status=7)  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as grm_br_out ON  ".($group_by==1 ? "grm_br_out.from_section  = sec.id_section": ($group_by==2 ? "grm_br_out.product_id = t.product_id and grm_br_out.from_section = sec.id_section":"grm_br_out.product_id = t.product_id and grm_br_out.design_id = t.design_id and grm_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and l.from_section IS NOT NULL and
        (l.status=0 or l.status=17 or l.status=7)  and p.stone_type = 1 and tag.uom_gross_wt = 6
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as ct_br_out ON  ".($group_by==1 ? "ct_br_out.from_section  = sec.id_section": ($group_by==2 ? "ct_br_out.product_id = t.product_id and ct_br_out.from_section = sec.id_section":"ct_br_out.product_id = t.product_id and ct_br_out.design_id = t.design_id and ct_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and l.from_section IS NOT NULL and
        (l.status=0 or l.status=17 or l.status=7)  and p.stone_type = 2
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_br_out ON  ".($group_by==1 ? "looseDia_br_out.from_section  = sec.id_section": ($group_by==2 ? "looseDia_br_out.product_id = t.product_id and looseDia_br_out.from_section = sec.id_section":"looseDia_br_out.product_id = t.product_id and looseDia_br_out.design_id = t.design_id and looseDia_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT tag.id_section,IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
        and (l.status=0 or l.status=17 or l.status=7)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1
		and (l.status=0 or l.status=17 or l.status=7) and l.from_branch IS NOT NULL and l.from_section IS NOT NULL
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.design_id,tag.id_sub_design"))." ) as stn_br_out ON  ".($group_by==1 ? "stn_br_out.from_section  = sec.id_section": ($group_by==2 ? "stn_br_out.product_id = t.product_id and stn_br_out.from_section = sec.id_section":"stn_br_out.design_id = t.design_id and stn_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type = 0
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as sect_out ON  ".($group_by==1 ? "sect_out.from_section  = sec.id_section": ($group_by==2 ? "sect_out.product_id = p.pro_id and sect_out.from_section = sec.id_section":"sect_out.product_id = p.pro_id and sect_out.design_id = t.design_id and sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type =1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as grm_sect_out ON  ".($group_by==1 ? "grm_sect_out.from_section  = sec.id_section": ($group_by==2 ? "grm_sect_out.product_id = p.pro_id and grm_sect_out.from_section = sec.id_section":"grm_sect_out.product_id = p.pro_id and grm_sect_out.design_id = t.design_id and grm_sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type =1 and tag.uom_gross_wt = 6
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as ct_sect_out ON  ".($group_by==1 ? "ct_sect_out.from_section  = sec.id_section": ($group_by==2 ? "ct_sect_out.product_id = p.pro_id and ct_sect_out.from_section = sec.id_section":"ct_sect_out.product_id = p.pro_id and ct_sect_out.design_id = t.design_id and ct_sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type = 2
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as looseDia_sect_out ON  ".($group_by==1 ? "looseDia_sect_out.from_section  = sec.id_section": ($group_by==2 ? "looseDia_sect_out.product_id = p.pro_id and looseDia_sect_out.from_section = sec.id_section":"looseDia_sect_out.product_id = p.pro_id and looseDia_sect_out.design_id = t.design_id and looseDia_sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0  and l.from_branch IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_sect_out ON  ".($group_by==1 ? "stn_sect_out.from_section  = sec.id_section": ($group_by==2 ? "stn_sect_out.product_id = t.product_id and stn_sect_out.from_section = sec.id_section":"stn_sect_out.product_id = t.product_id and stn_sect_out.design_id = t.design_id and stn_sect_out.id_sub_design = t.id_sub_design"))."
		LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '$ToDt')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        AND m1.status = 0 AND date(m1.date) <= '$ToDt'
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as current ON  ".($group_by==1 ? "current.id_section  = sec.id_section": ($group_by==2 ? "current.product_id = t.product_id and current.id_section = sec.id_section":"current.product_id = t.product_id and current.design_id = t.design_id and current.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,t.design_id,t.id_sub_design,
        sum(t.net_wt) as net_wt,p.product_name,
        p.cat_id,l.to_section
        FROM ret_section_tag_status_log l
        LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
        ".($data['id_branch'] !=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "l.to_section" :($group_by==2 ? "t.product_id,l.to_section":"t.product_id,t.design_id,t.id_sub_design"))." ) as in_trans ON  ".($group_by==1 ? "in_trans.to_section  = sec.id_section": ($group_by==2 ? "in_trans.product_id = t.product_id and in_trans.to_section = sec.id_section":"in_trans.product_id = t.product_id and in_trans.design_id = t.design_id and in_trans.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_items pri
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
        and pro.stone_type = 0
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as pur_ret on ".($group_by==1 ? "pur_ret.id_section  = sec.id_section": ($group_by==2 ? "pur_ret.product_id = t.product_id and pur_ret.id_section = sec.id_section":"pur_ret.id_section = sec.id_section and pur_ret.product_id = t.product_id and pur_ret.design_id = t.design_id and pur_ret.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_items pri
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
        and pro.stone_type = 1 and (t.uom_gross_wt != 6 or t.uom_gross_wt is null)
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as pur_ret_grm on ".($group_by==1 ? "pur_ret_grm.id_section  = sec.id_section": ($group_by==2 ? "pur_ret_grm.product_id = t.product_id and pur_ret_grm.id_section = sec.id_section":"pur_ret_grm.id_section = sec.id_section and pur_ret_grm.product_id = t.product_id and pur_ret_grm.design_id = t.design_id and pur_ret_grm.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_items pri
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
        and pro.stone_type = 1 and t.uom_gross_wt = 6
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as pur_ret_ct on ".($group_by==1 ? "pur_ret_ct.id_section  = sec.id_section": ($group_by==2 ? "pur_ret_ct.product_id = t.product_id and pur_ret_ct.id_section = sec.id_section":"pur_ret_ct.id_section = sec.id_section and pur_ret_ct.product_id = t.product_id and pur_ret_ct.design_id = t.design_id and pur_ret_ct.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_items pri
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
        and pro.stone_type = 2
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as pur_ret_looseDia on ".($group_by==1 ? "pur_ret_looseDia.id_section  = sec.id_section": ($group_by==2 ? "pur_ret_looseDia.product_id = t.product_id and pur_ret_looseDia.id_section = sec.id_section":"pur_ret_looseDia.id_section = sec.id_section and pur_ret_looseDia.product_id = t.product_id and pur_ret_looseDia.design_id = t.design_id and pur_ret_looseDia.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT sum(ret_stn.ret_stone_wt) as diaWt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_purchase_return_stone_items ret_stn
        LEFT JOIN ret_purchase_return_items pri on pri.pur_ret_itm_id = ret_stn.pur_ret_return_id
        LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
        LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        LEFT JOIN ret_stone st on st.stone_id = ret_stn.ret_stone_id
        LEFT JOIN ret_uom u on u.uom_id = ret_stn.ret_stone_uom
        WHERE pr.bill_status = 1 and (date(bill_date) BETWEEN '$FromDt' AND '$ToDt')
        and pri.return_item_type = 2 and pr.tag_issue_from = 1 and st.stone_type = 1 and pro.stone_type = 0
        ".($data['id_branch'] !='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP BY ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as stn_pur_ret on ".($group_by==1 ? "stn_pur_ret.id_section  = sec.id_section": ($group_by==2 ? "stn_pur_ret.product_id = t.product_id and stn_pur_ret.id_section = sec.id_section":"stn_pur_ret.id_section = sec.id_section and stn_pur_ret.product_id = t.product_id and stn_pur_ret.design_id = t.design_id and stn_pur_ret.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_karigar_metal_issue_details kmi
        LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
        LEFT join ret_taging t on t.tag_id = kmi.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
        and kmi.tag_id is not null and pro.stone_type = 0
        ".($data['id_branch'] !='' ? " and km.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as kar_iss on ".($group_by==1 ? "kar_iss.id_section  = sec.id_section": ($group_by==2 ? "kar_iss.product_id = t.product_id and kar_iss.id_section = sec.id_section":"kar_iss.id_section = sec.id_section and kar_iss.product_id = t.product_id and kar_iss.design_id = t.design_id and kar_iss.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_karigar_metal_issue_details kmi
        LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
        LEFT join ret_taging t on t.tag_id = kmi.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
        and kmi.tag_id is not null and pro.stone_type = 1 and (t.uom_gross_wt != 6 or t.uom_gross_wt is null)
        ".($data['id_branch'] !='' ? " and km.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
        ".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as kar_iss_grm on ".($group_by==1 ? "kar_iss_grm.id_section  = sec.id_section": ($group_by==2 ? "kar_iss_grm.product_id = t.product_id and kar_iss_grm.id_section = sec.id_section":"kar_iss_grm.id_section = sec.id_section and kar_iss_grm.product_id = t.product_id and kar_iss_grm.design_id = t.design_id and kar_iss_grm.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_karigar_metal_issue_details kmi
        LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
        LEFT join ret_taging t on t.tag_id = kmi.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
        and kmi.tag_id is not null and pro.stone_type = 1 and t.uom_gross_wt = 6
        ".($data['id_branch'] !='' ? " and km.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as kar_iss_ct on ".($group_by==1 ? "kar_iss_ct.id_section  = sec.id_section": ($group_by==2 ? "kar_iss_ct.product_id = t.product_id and kar_iss_ct.id_section = sec.id_section":"kar_iss_ct.id_section = sec.id_section and kar_iss_ct.product_id = t.product_id and kar_iss_ct.design_id = t.design_id and kar_iss_ct.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design
        FROM ret_karigar_metal_issue_details kmi
        LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
        LEFT join ret_taging t on t.tag_id = kmi.tag_id
        LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
        and kmi.tag_id is not null and pro.stone_type = 2
        ".($data['id_branch'] !='' ? " and km.id_branch=".$data['id_branch']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and cat.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and pro.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" :($group_by==2 ? "t.product_id,t.id_section":"t.id_section,t.product_id,t.design_id,t.id_sub_design")).") as kar_iss_looseDia on ".($group_by==1 ? "kar_iss_looseDia.id_section  = sec.id_section": ($group_by==2 ? "kar_iss_looseDia.product_id = t.product_id and kar_iss_looseDia.id_section = sec.id_section":"kar_iss_looseDia.id_section = sec.id_section and kar_iss_looseDia.product_id = t.product_id and kar_iss_looseDia.design_id = t.design_id and kar_iss_looseDia.id_sub_design = t.id_sub_design"))."
        where sec.id_section is not null and sec.is_home_bill_counter = 0
        ".($id_section!='' && $id_section !='0' ? " and  sec.id_section in (".$id_section.") " :'' )."
        ".($data['pro_id']!='' && $data['pro_id']!=0 ? "and t.product_id=".$data['pro_id']."":'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($pro_id!='' && $pro_id !='0' ? "and p.pro_id in (".$pro_id.")" : "")."
        ".($des_id!='' && $des_id !='0' ? "and des.design_no in (".$des_id.")" : "")."
        ".($subdes_id!='' && $subdes_id !='0' ? "and subdes.id_sub_design in (".$subdes_id.")" : "")."
        GROUP by ".($group_by==1 ? "sec.id_section" : ($group_by==2 ?"p.pro_id,sec.id_section":"t.design_id,t.id_sub_design"))."");
       // print_r($this->db->last_query());exit;
        $result1 = $sql->result_array();
        
        
        
        if($group_by==1){
		$sql2 = $this->db->query("SELECT sec.section_name,sec.id_section,IFNULL(s.tag_count,0) as sold_tags,IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(stn_s.sold_diawt,0) as sold_diawt,
		(IFNULL(blc.gross_wt,0)-IFNULL(blc_sold.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)-IFNULL(blc_sold.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)-IFNULL(blc_sold.piece,0)) as op_blc_pcs,
        IFNULL(blc.tag_count,0) as blc_tags,'' as design_name,'' as sub_design_name,
		(IFNULL(stn_blc.dia_wt,0)) as op_blc_diawt,
		IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(INW.tag_count,0) as inw_tags,IFNULL(STONE_INW.diaWt,0) as inw_diawt,
		IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
		0 as br_out_gwt,'0' as br_out_nwt,'0' as br_out_pcs,'0' as br_out_diawt,'0' as brout_tags,IFNULL(sect_out.tag_count,0) as sect_out_tags,'0' as in_trans_pcs,
        0 as grm_blc_tags,'0' as ct_blc_tags,'0' as grm_inw_tags,'0' as ct_inw_tags,0 as op_ct_blc_pcs,'0' as op_grm_blc_pcs,'0' as ct_inw_pcs,'0' as grm_inw_pcs,'0' as iss_pcs,
        '0' as ret_gwt,'0' as iss_gwt,'0' as iss_nwt,'0' as ret_nwt,'0' as iss_diawt,'0' as ret_diawt,'0' as grm_iss_wt,'0' as op_grm_blc_wt,'0' as op_ct_blc_wt,'0' as grm_iss_wt,'0' as ct_iss_wt,
        '0' as ct_inw_wt,'0' as sold_ct_wt,'0' as ct_br_out_wt,'0' as ct_ret_wt,'0' as ct_sect_out_wt,'0' as ct_iss_wt,
        '0' as grm_iss_wt,'0' as grm_ret_wt,'0' as grm_br_out_wt,'0' as sold_grm_wt,'0' as grm_inw_wt,'0' as op_grm_blc_wt,'0' as ret_pcs
		FROM ret_section sec
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_home_section_itm_log IS NULL
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section ) as blc ON  blc.id_section = sec.id_section
		LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_home_section_itm_log IS NULL  and st.stone_type = 1
        ".($data['id_branch']!='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section) as stn_blc ON  stn_blc.id_section = sec.id_section
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' && $data['id_branch']>0? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) INW on  INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) STONE_INW on  STONE_INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=2
		AND (date(b.bill_date) < '$FromDt')
		".($data['id_branch']!='' && $data['id_branch']>0? " and b.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as blc_sold ON blc_sold.id_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=2
		AND (date(b.bill_date) BETWEEN '$FromDt' AND '$ToDt')
		".($data['id_branch']!=''&& $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as s ON s.id_section = sec.id_section
		LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(d.gross_wt) as gross_wt,SUM(d.net_wt) as net_wt,
        SUM(d.piece) as piece,d.product_id,p.cat_id,d.id_section,'0' as tag_count
        FROM ret_bill_details d
        LEFT JOIN ret_billing bill on bill.bill_id = d.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = d.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_billing_item_stones s on s.bill_det_id =d.bill_det_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        LEFT JOIN ret_uom u on u.uom_id = st.uom_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and d.item_type=2 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by d.id_section) stn_s ON  stn_s.id_section = sec.id_section
		LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_home_section_item_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by l.from_section) as sect_out on sect_out.from_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' && $data['id_branch'] > 0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($data['pro_id']!='' && $data['pro_id']!=0 ? "and tag.product_id=".$data['pro_id']."":'')."
        GROUP by l.from_section) as stn_sect_out on stn_sect_out.from_section = sec.id_section
		WHERE sec.is_home_bill_counter = 1
        ".($id_section!='' && $id_section !='0' ? " and sec.id_section in (".$id_section.") " :'' )."
        ");
		// print_r($this->db->last_query());exit;
		$result2 = $sql2->result_array();
        }else{
            $result2 =[];
        }
		$result = array_merge($result1,$result2);
        foreach($result as $r)
        {
            if($r['op_blc_pcs']!=0 || $r['closing_pcs']!=0 || $r['op_blc_gwt']!=0 || $r['closing_gwt']!=0 || $r['inw_gwt']!=0 || $r['sold_gwt']!=0)
			{
                if($group_by==1 || $group_by==2){
                    $stock_detail[$r['section_name']][][] = $r;
                }
                else{
                    $stock_detail[$r['product_name']][$r['design_name']][] = $r;
                }
           }
        }
        return $stock_detail;
    }
    function get_section_stock_inout_details($data)
    {
        $stock_detail = [];
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
		$metal_type = implode(' , ', $data['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_cat = implode(',',$data['id_category']);
        if($multiple_id_cat!='')
        {
            $id_category = $multiple_id_cat;
        }
		else
        {
            $id_category = $data['id_category'];
        }
        $multiple_id_section = implode(',',$data['id_section']);
        if($multiple_id_section!='')
        {
            $id_section = $multiple_id_section;
        }
		else
        {
            $id_section = $data['id_section'];
        }
        $group_by = $data['GroupBy'];
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $sql = $this->db->query("SELECT t.product_id,p.product_name,b.name as branch_name,c.name as category_name,
        sec.section_name,
        (IFNULL(blc.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)) as op_blc_pcs,
        (IFNULL(stn_blc.dia_wt,0)) as op_blc_diawt,
        IFNULL(blc.tag_count,0) as blc_tags,
        IFNULL(INW.tag_count,0) as inw_tags,
        IFNULL(s.tag_count,0) as sold_tags,
        IFNULL(br_out.tag_count,0) as brout_tags,
        IFNULL(sect_out.tag_count,0) as sect_out_tags,
        IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(STONE_INW.diaWt,0) as inw_diawt,
        IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(stn_s.sold_diawt,0) as sold_diawt,
        IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,IFNULL(stn_br_out.dia_wt,0) as br_out_diawt,
        IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
        IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
        IFNULL(current.piece,0) as closing_pcs, IFNULL(current.gross_wt,0) as closing_gwt, IFNULL(current.net_wt,0) as closing_nwt,
        Date_Format(current_date(),'%d-%m-%Y') as date_add,m.metal as metal_name,t.design_id,t.id_sub_design,
        IFNULL(subdes.sub_design_name,'') as sub_design_name,IFNULL(des.design_name,'') as design_name
        FROM ret_taging t
        LEFT JOIN ret_section sec on sec.id_section=t.id_section
        LEFT JOIN ret_product_master p on p.pro_id=t.product_id
        LEFT JOIN ret_design_master des on des.design_no = t.design_id
        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
        LEFT JOIN branch b on b.id_branch=t.current_branch
        left join ret_category c on c.id_ret_category=p.cat_id
        left join metal m on m.id_metal=c.id_metal
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as blc ON  ".($group_by==1 ? "blc.id_section = t.id_section" :($group_by==2 ? "blc.id_product = t.product_id and blc.id_section = t.id_section":"blc.id_product = t.product_id and blc.design_id = t.design_id and blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,tag.design_id,tag.id_sub_design,
        tag.product_id as id_product,p.cat_id
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_sec_tag_status_log IS NULL and st.stone_type = 1
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY ".($group_by==1 ? "m1.to_section":($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_blc ON  ".($group_by==1 ? "stn_blc.id_section = t.id_section": ($group_by==2 ? "stn_blc.id_product = t.product_id and stn_blc.id_section = t.id_section":"stn_blc.id_product = t.product_id and stn_blc.design_id = t.design_id and stn_blc.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as INW ON  ".($group_by==1 ? "INW.to_section = t.id_section" :($group_by==2 ? "INW.product_id = t.product_id and INW.to_section = t.id_section":"INW.product_id = t.product_id and INW.design_id = t.design_id and INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
        tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
        GROUP BY ".($group_by==1 ? "m1.to_section" :($group_by==2 ? "tag.product_id,m1.to_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as STONE_INW ON  ".($group_by==1 ? "STONE_INW.to_section = t.id_section": ($group_by==2 ? "STONE_INW.product_id = t.product_id and STONE_INW.to_section = t.id_section":"STONE_INW.product_id = t.product_id and STONE_INW.design_id = t.design_id and STONE_INW.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE bill.bill_status = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as s ON  ".($group_by==1 ? "s.id_section = t.id_section": ($group_by==2 ? "s.product_id = t.product_id and s.id_section = t.id_section":"s.product_id = t.product_id and s.design_id = t.design_id and s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
        SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id =tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and b.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and  tag.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_s ON  ".($group_by==1 ? "stn_s.id_section = t.id_section": ($group_by==2 ? "stn_s.product_id = t.product_id and stn_s.id_section = t.id_section":"stn_s.product_id = t.product_id and stn_s.design_id = t.design_id and stn_s.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                    and (l.status=0 or l.status=17)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
        (l.status=0 or l.status=17)
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as br_out ON  ".($group_by==1 ? "br_out.from_section  = t.id_section": ($group_by==2 ? "br_out.product_id = t.product_id and br_out.from_section = t.id_section":"br_out.product_id = t.product_id and br_out.design_id = t.design_id and br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT tag.id_section,IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
        and (l.status=0 or l.status=17)
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1
		and (l.status=0 or l.status=17) and l.from_branch IS NOT NULL
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.from_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.design_id,tag.id_sub_design"))." ) as stn_br_out ON  ".($group_by==1 ? "stn_br_out.from_section  = t.id_section": ($group_by==2 ? "stn_br_out.product_id = t.product_id and stn_br_out.from_section = t.id_section":"stn_br_out.design_id = t.design_id and stn_br_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,
        tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0 and l.from_branch IS NULL
        ".($data['id_branch']!='' && $data['id_branch']>0? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as sect_out ON  ".($group_by==1 ? "sect_out.from_section  = t.id_section": ($group_by==2 ? "sect_out.product_id = t.product_id and sect_out.from_section = t.id_section":"sect_out.product_id = t.product_id and sect_out.design_id = t.design_id and sect_out.id_sub_design = t.id_sub_design"))."
        LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0  and l.from_branch IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP BY ".($group_by==1 ? "l.from_section" :($group_by==2 ? "tag.product_id,l.from_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as stn_sect_out ON  ".($group_by==1 ? "stn_sect_out.from_section  = t.id_section": ($group_by==2 ? "stn_sect_out.product_id = t.product_id and stn_sect_out.from_section = t.id_section":"stn_sect_out.product_id = t.product_id and stn_sect_out.design_id = t.design_id and stn_sect_out.id_sub_design = t.id_sub_design"))."
		LEFT JOIN (SELECT tag.product_id, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design
        FROM ret_section_tag_status_log m1
        LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '$ToDt')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_sec_tag_status_log IS NULL
        ".($data['id_branch']!=''&& $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND m1.status = 0 AND date(m1.date) <= '$ToDt'
        GROUP BY ".($group_by==1 ? "tag.id_section" :($group_by==2 ? "tag.product_id,tag.id_section":"tag.product_id,tag.design_id,tag.id_sub_design"))." ) as current ON  ".($group_by==1 ? "current.id_section  = t.id_section": ($group_by==2 ? "current.product_id = t.product_id and current.id_section = t.id_section":"current.product_id = t.product_id and current.design_id = t.design_id and current.id_sub_design = t.id_sub_design"))."
        LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,t.design_id,t.id_sub_design,
        sum(t.net_wt) as net_wt,p.product_name,
        p.cat_id,l.to_section
        FROM ret_section_tag_status_log l
        LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
        ".($data['id_branch'] !=''&& $data['id_branch']>0 ? " and l.from_branch=".$data['id_branch']."" :'')."
        GROUP BY ".($group_by==1 ? "l.to_section" :($group_by==2 ? "t.product_id,l.to_section":"t.product_id,t.design_id,t.id_sub_design"))." ) as in_trans ON  ".($group_by==1 ? "in_trans.to_section  = t.id_section": ($group_by==2 ? "in_trans.product_id = t.product_id and in_trans.to_section = t.id_section":"in_trans.product_id = t.product_id and in_trans.design_id = t.design_id and in_trans.id_sub_design = t.id_sub_design"))."
        where t.tag_id is not null  and t.id_section is not null and sec.is_home_bill_counter = 0
        ".($id_section!='' && $id_section !='0' ? " and  t.id_section in (".$id_section.") " :'' )."
        ".($data['pro_id']!='' && $data['pro_id']!=0 ? "and t.product_id=".$data['pro_id']."":'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by ".($group_by==1 ? "t.id_section" : ($group_by==2 ?"t.product_id,t.id_section":"t.design_id,t.id_sub_design"))."");
        // print_r($this->db->last_query());exit;
        $result1 = $sql->result_array();
		$sql2 = $this->db->query("SELECT sec.section_name,sec.id_section,IFNULL(s.tag_count,0) as sold_tags,IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,IFNULL(stn_s.sold_diawt,0) as sold_diawt,
		(IFNULL(blc.gross_wt,0)-IFNULL(blc_sold.gross_wt,0)) as op_blc_gwt,
        (IFNULL(blc.net_wt,0)-IFNULL(blc_sold.net_wt,0)) as op_blc_nwt,
        (IFNULL(blc.piece,0)-IFNULL(blc_sold.piece,0)) as op_blc_pcs,
        IFNULL(blc.tag_count,0) as blc_tags,'' as design_name,'' as sub_design_name,
		(IFNULL(stn_blc.dia_wt,0)) as op_blc_diawt,
		IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,IFNULL(INW.piece,0) as inw_pcs,IFNULL(INW.tag_count,0) as inw_tags,IFNULL(STONE_INW.diaWt,0) as inw_diawt,
		IFNULL(sect_out.gross_wt,0) as sect_out_gwt,IFNULL(sect_out.net_wt,0) as sect_out_nwt,IFNULL(sect_out.piece,0) as sect_out_pcs,IFNULL(stn_sect_out.dia_wt,0) as sect_out_diawt,
		0 as br_out_gwt,'0' as br_out_nwt,'0' as br_out_pcs,'0' as br_out_diawt,'0' as brout_tags,IFNULL(sect_out.tag_count,0) as sect_out_tags,'0' as in_trans_pcs
		FROM ret_section sec
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        WHERE m2.id_home_section_itm_log IS NULL
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section ) as blc ON  blc.id_section = sec.id_section
		LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,tag.id_section,
        p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt,
        ifnull(SUM(tag.piece),0) as piece,
        tag.product_id as id_product,p.cat_id
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND date(m2.date) <= '".$op_blc_to_date."')
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
        left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE m2.id_home_section_itm_log IS NULL  and st.stone_type = 1
        ".($data['id_branch']!='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
        GROUP BY tag.id_section) as stn_blc ON  stn_blc.id_section = sec.id_section
		LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' && $data['id_branch']>0? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE tag.tag_id IS NOT NULL
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) INW on  INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
        p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
        ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece
        FROM ret_home_section_item_log m1
        LEFT JOIN ret_home_section_item_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_home_section_itm_log < m2.id_home_section_itm_log AND
                                                    date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
                                                    ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
                                                    ".($id_section!='' && $id_section !='0' ? " and  m2.to_section in (".$id_section.") " :'' )."
                                                    and m2.status = 0)
        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id=s.uom_id
        LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE tag.tag_id IS NOT NULL and st.stone_type = 1
        ".($data['id_branch'] !='' && $data['id_branch']>0? " and m1.to_branch=".$data['id_branch']."" :'')."
        ".($id_section!='' && $id_section !='0' ? " and  m1.to_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt' GROUP by m1.to_section) STONE_INW on  STONE_INW.to_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=0
		AND (date(b.bill_date) < '$FromDt')
		".($data['id_branch']!='' && $data['id_branch']>0? " and b.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as blc_sold ON blc_sold.id_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(SUM(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.piece),0) as piece,
		IFNULL(SUM(d.net_wt),0) as net_wt,d.product_id,d.id_section,'0' as tag_count
		FROM ret_bill_details d
		LEFT JOIN ret_billing b ON b.bill_id = d.bill_id
		LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
        LEFT JOIN metal mt ON mt.id_metal = c.id_metal
		WHERE b.bill_status =1 AND d.id_section IS NOT NULL and d.item_type=0
		AND (date(b.bill_date) BETWEEN '$FromDt' AND '$ToDt')
		".($data['id_branch']!=''&& $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		GROUP BY d.id_section) as s ON s.id_section = sec.id_section
		LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(d.gross_wt) as gross_wt,SUM(d.net_wt) as net_wt,
        SUM(d.piece) as piece,d.product_id,p.cat_id,d.id_section,'0' as tag_count
        FROM ret_bill_details d
        LEFT JOIN ret_billing bill on bill.bill_id = d.bill_id
        LEFT JOIN ret_product_master as p ON p.pro_id = d.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_billing_item_stones s on s.bill_det_id =d.bill_det_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        LEFT JOIN ret_uom u on u.uom_id = st.uom_id
        WHERE bill.bill_status = 1 and st.stone_type = 1 and d.item_type=0 and
        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
        ".($data['id_branch']!='' && $data['id_branch']>0? " and bill.id_branch=".$data['id_branch']." " :'')."
        ".($id_section!='' && $id_section !='0' ? " and d.id_section in (".$id_section.") " :'' )."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by d.id_section) stn_s ON  stn_s.id_section = sec.id_section
		LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_home_section_item_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
        GROUP by l.from_section) as sect_out on sect_out.from_section = sec.id_section
		LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
        SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section
        FROM ret_taging tag
        LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
		left join ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
        LEFT JOIN ret_uom u on u.uom_id = s.uom_id
		LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
        l.from_section is not null and l.status=0
        ".($data['id_branch']!='' && $data['id_branch'] > 0 ? " and l.to_branch=".$data['id_branch']."" :'')."
		".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
		".($data['pro_id']!='' && $data['pro_id']!=0 ? "and tag.product_id=".$data['pro_id']."":'')."
        GROUP by l.from_section) as stn_sect_out on stn_sect_out.from_section = sec.id_section
		WHERE sec.is_home_bill_counter = 1
        ".($id_section!='' && $id_section !='0' ? " and sec.id_section in (".$id_section.") " :'' )."
        ");
		// print_r($this->db->last_query());exit;
		$result2 = $sql2->result_array();
		$result = array_merge($result1,$result2);
        foreach($result as $r)
        {
            if($r['op_blc_pcs']!=0 || $r['closing_pcs']!=0 || $r['op_blc_gwt']!=0 || $r['closing_gwt']!=0 || $r['inw_gwt']!=0 || $r['sold_gwt']!=0)
			{
                if($group_by==1 || $group_by==2){
                    $stock_detail[$r['section_name']][][] = $r;
                }
                else{
                    $stock_detail[$r['product_name']][$r['design_name']][] = $r;
                }
           }
        }
        return $stock_detail;
    }
    // SectionWise Stock details
	//Contract Price Report
	function get_contract_pricing($data)
	{
		$sql = $this->db->query("SELECT kw.id_karikar_wast,kw.id_karikar,kw.id_product,kw.id_design,kw.id_sub_design,
		if(kw.wastage_type=1,concat(kw.wastage_per,' ','%'),concat(kw.wastage_wt,' ','Gm')) as wastage_per,kw.mc_type,if(kw.mc_type=1,'Per Grm','Per Pcs') as type, kw.mc_value,kw.pur_touch,
		kar.firstname as karigar,pro.product_name,des.design_name,subdes.sub_design_name,wast_img.image_name,
		if(kw.calc_type=0,'MC & V.A Based on Gross',if(kw.calc_type=1,'MC & V.A Based on Net','MC On Gross,V.A On Net')) as calc_type
		FROM ret_karikar_items_wastage kw
		LEFT JOIN ret_karigar kar on kar.id_karigar=kw.id_karikar
		LEFT JOIN ret_product_master pro on pro.pro_id=kw.id_product
		LEFT JOIN ret_design_master des on des.design_no=kw.id_design
		LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design=kw.id_sub_design
		LEFT JOIN (SELECT ki.id_karikar_wast,ki.image_name
                   FROM ret_karigar_item_wast_pro_images ki
                   where ki.is_default =1 ) as wast_img on wast_img.id_karikar_wast = kw.id_karikar_wast
		WHERE
        ".($data['status']!=''  ? " kw.status=".$data['status']."" :'')."
        ".($data['id_karigar']!='' && $data['id_karigar'] > 0 ? "and kw.id_karikar=".$data['id_karigar']."":'')."
         ORDER BY kw.id_karikar_wast DESC");
		//print_r($this->db->last_query());exit;
	    return $sql->result_array();
	}
	//Contract Price Report
    function getlotMergeNos()
    {
        $sql = $this->db->query("SELECT lot_no from ret_lot_inwards where lot_from =7");
        return $sql->result_array();
    }
    function get_lot_merge_details($data)
    {
        $lot_merge = array();
        $sql = $this->db->query("SELECT l.lot_no,lt.id_lot_inward_detail,l.gold_smith,
        lt.lot_id_category,lt.lot_product,
        c.name as category,pro.product_name,kar.firstname as karigar,
        lt.no_of_piece,lt.gross_wt,lt.net_wt,
        ifnull(dia_stn.stn_wt,0) as dia_wt,ifnull(nrml_stn.stn_wt,0) as stn_wt
        FROM ret_lot_inwards l
        LEFT JOIN ret_lot_inwards_detail lt on lt.lot_no = l.lot_no
        LEFT JOIN ret_category c on c.id_ret_category = lt.lot_id_category
        LEFT JOIN ret_product_master pro on pro.pro_id = lt.lot_product
        LEFT JOIN ret_karigar kar on kar.id_karigar = l.gold_smith
        LEFT JOIN(SELECT lot_stn.stone_id,lot_stn.uom_id,lot_stn.id_lot_inward_detail,
				 sum(lot_stn.stone_pcs) as stn_pcs,sum(lot_stn.stone_wt) as stn_wt
				 FROM ret_lot_inwards_stone_detail lot_stn
				 LEFT JOIN ret_uom u on u.uom_id = lot_stn.uom_id
				 WHERE lot_stn.uom_id=6
		GROUP BY lot_stn.id_lot_inward_detail) as dia_stn on dia_stn.id_lot_inward_detail = lt.id_lot_inward_detail
		LEFT JOIN(SELECT lot_stn.stone_id,lot_stn.uom_id,lot_stn.id_lot_inward_detail,
				 sum(lot_stn.stone_pcs) as stn_pcs,sum(lot_stn.stone_wt) as stn_wt
				 FROM ret_lot_inwards_stone_detail lot_stn
				 LEFT JOIN ret_uom u on u.uom_id = lot_stn.uom_id
				 WHERE lot_stn.uom_id=1
		GROUP BY lot_stn.id_lot_inward_detail) as nrml_stn on nrml_stn.id_lot_inward_detail = lt.id_lot_inward_detail
        WHERE l.lot_from = 7
        ".($data['lot_no']!='' && $data['lot_no'] > 0 ? "and l.lot_no =".$data['lot_no']."":"")."
        ");
        $data = $sql->result_array();
        foreach($data as $itm)
        {
            $lot_merge[]=array(
                'lot_no'                  =>   $itm['lot_no'],
                'id_lot_inward_detail'    =>   $itm['id_lot_inward_detail'],
                'category'                =>   $itm['category'],
                'product_name'            =>   $itm['product_name'],
                'category'                =>   $itm['category'],
                'karigar'                 =>   $itm['karigar'],
                'pcs'                     =>   $itm['no_of_piece'],
                'gross_wt'                =>   $itm['gross_wt'],
                'net_wt'                  =>   $itm['net_wt'],
                'dia_wt'                  =>   $itm['dia_wt'],
                'stn_wt'                  =>   $itm['stn_wt'],
                'lot_det'                 =>   $this->get_lotDetails($itm['lot_no']),
            );
        }
        return $lot_merge;
    }
    function get_lotDetails($lot_no)
    {
        $sql = $this->db->query("SELECT l.lot_no,pro.product_name,lt.no_of_piece,
        lt.gross_wt,lt.net_wt,ifnull(dia_stn.stn_wt,0) as dia_wt,ifnull(nrml_stn.stn_wt,0) as stn_wt
        FROM ret_lot_merge lm
        LEFT JOIN ret_lot_inwards_detail lt on lt.id_lot_inward_detail = lm.id_lot_inward_detail
        LEFT JOIN ret_lot_inwards l on l.lot_no = lt.lot_no
        LEFT JOIN ret_product_master pro on pro.pro_id = lt.lot_product
        LEFT JOIN(SELECT lot_stn.stone_id,lot_stn.uom_id,lot_stn.id_lot_inward_detail,
				 sum(lot_stn.stone_pcs) as stn_pcs,sum(lot_stn.stone_wt) as stn_wt
				 FROM ret_lot_inwards_stone_detail lot_stn
				 LEFT JOIN ret_uom u on u.uom_id = lot_stn.uom_id
				 WHERE lot_stn.uom_id=6
		GROUP BY lot_stn.id_lot_inward_detail) as dia_stn on dia_stn.id_lot_inward_detail = lt.id_lot_inward_detail
		LEFT JOIN(SELECT lot_stn.stone_id,lot_stn.uom_id,lot_stn.id_lot_inward_detail,
				 sum(lot_stn.stone_pcs) as stn_pcs,sum(lot_stn.stone_wt) as stn_wt
				 FROM ret_lot_inwards_stone_detail lot_stn
				 LEFT JOIN ret_uom u on u.uom_id = lot_stn.uom_id
				 WHERE lot_stn.uom_id=1
		GROUP BY lot_stn.id_lot_inward_detail) as nrml_stn on nrml_stn.id_lot_inward_detail = lt.id_lot_inward_detail
        WHERE lm.lot_no =".$lot_no."");
        return $sql->result_array();
    }
    function get_lot_split_details($data)
    {
        $sql=$this->db->query("SELECT l.lot_no,ls.id_lot_inward_detail,
        sum(ls.split_pcs) as split_pcs,sum(ls.split_grs_wt) as split_grs_wt,sum(ls.split_net_wt) as split_net_wt,
        sum(ls.split_dia_wt) as split_dia_wt,sum(ls.split_stn_wt) as split_stn_wt,
        concat(e.firstname,'-',e.emp_code) as emp_name,cat.name as category,pro.product_name
        FROM ret_lot_split_details ls
        LEFT JOIN ret_lot_inwards_detail lt on lt.id_lot_inward_detail = ls.id_lot_inward_detail
        LEFT JOIN ret_lot_inwards l on l.lot_no = lt.lot_no
        LEFT JOIN ret_category cat on cat.id_ret_category = ls.id_category
        LEFT JOIN ret_product_master pro on pro.pro_id = ls.id_product
        LEFT JOIN employee e on e.id_employee = ls.id_employee
        WHERE l.lot_no is not null
        ".($data['id_employee']!='' && $data['id_employee']>0 ? "and ls.id_employee =".$data['id_employee']."":"")."
        GROUP BY ls.id_employee,ls.id_lot_inward_detail");
        return $sql->result_array();
    }
	function get_advance_transfer($post)
	{
        if($post['dt_range'] != '')
        {
            $dateRange = explode('-',$post['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $data  =  $this->db->query("SELECT ir.id_issue_receipt,ir.bill_no,adt.transfer_amount,adt.transfer_receipt_id,c.firstname as to_cust,DATE_FORMAT(ir.bill_date,'%d-%m-%Y') as bill_date,cus.firstname as from_cust
        FROM ret_advance_transfer adt
        LEFT JOIN ret_issue_receipt ir ON ir.id_issue_receipt = adt.id_issue_receipt
        LEFT JOIN ret_issue_receipt irpt ON irpt.id_issue_receipt = adt.transfer_receipt_id
        LEFT JOIN customer cus ON cus.id_customer = irpt.id_customer
        LEFT JOIN customer c ON c.id_customer = ir.id_customer
        where ir.receipt_type=7
        ".($FromDt != '' && $ToDt!='' ? ' and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ".($post['id_branch']!='' && $post['id_branch']!=0 ? "and ir.id_branch=".$post['id_branch']."":'')."");
        return $data->result_array();
    }
	function branch_outward($data)
	{
	    $result1 = array();
	    $result2 = array();
		if($_POST['dt_range'] != '')
		{
			$dateRange = explode('-',$_POST['dt_range']);
			$from = str_replace('/','-',$dateRange[0]);
			$to = str_replace('/','-',$dateRange[1]);
			$d1 = date_create($from);
			$d2 = date_create($to);
			$FromDt = date_format($d1,"Y-m-d");
			$ToDt = date_format($d2,"Y-m-d");
		}
		$multiple_id_metal = implode(' , ', $data['id_metal']);
		if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$id_branch = $multiple_id_branch;
		}else{
			$id_branch = $data['id_branch'];
		}
		$br_out=$this->db->query("SELECT IFNULL(sum(tag.gross_wt),0) as tot_gwt,IFNULL(SUM(tag.net_wt),0) as net_wt,IFNULL(SUM(tag.piece),0) as tot_pcs
		FROM ret_taging tag
		LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id ".( !empty($id_branch) ? " and l.from_branch in (".$id_branch.")" :'and l.from_branch IS NOT NULL')." and (l.status=3 or l.status=4 or l.status=9 )
		LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        left join ret_category c on c.id_ret_category=prod.cat_id
        left join metal m on m.id_metal=c.id_metal
		WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and (l.status=3 or l.status=4 or l.status=9 )
        ".($data['id_category']!='' && $data['id_category']!=0 ? " and prod.cat_id=".$data['id_category']."" :'')."
        ".($data['id_product']!='' ? " and tag.product_id=".$data['id_product']."" :'')."
        ".($data['id_design']!='' ? " and tag.design_id=".$data['id_design']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($data['prod_group_id']!='' && $data['prod_group_id']!=0 ? " and prod.prod_group_id=".$data['prod_group_id']."" :'')."
        ".($id_branch!='' && $id_branch !='0' ? " and  l.from_branch in (".$id_branch.") " :'and l.from_branch IS NOT NULL')."
        ");
		//print_r($this->db->last_query());exit;
        $result1 = $br_out->result_array();
		$sales_ret_trans = $this->db->query("SELECT sum(tag.gross_wt) as tot_gwt,SUM(tag.net_wt) as net_wt,
        	SUM(tag.piece) as tot_pcs
            FROM ret_billing bill
            LEFT JOIN ret_bill_return_details r ON r.bill_id = bill.bill_id
            LEFT JOIN ret_bill_details d ON d.bill_det_id = r.ret_bill_det_id
            LEFT JOIN ret_taging tag ON tag.tag_id = d.tag_id
        	LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
        	WHERE bill.bill_status = 1 and bill.bill_type=14 and
        	(date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND d.product_id = p.pro_id
           ".($data['id_category']!='' && $data['id_category']!=0 ? " and p.cat_id=".$data['id_category']."" :'')."
           ".($data['id_product']!='' ? " and tag.product_id=".$data['id_product']."" :'')."
           ".($data['id_design']!='' ? " and tag.design_id=".$data['id_design']."" :'')."
           ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
           ".($data['prod_group_id']!='' && $data['prod_group_id']!=0 ? " and p.prod_group_id=".$data['prod_group_id']."" :'')."
           ".($id_branch!='' && $id_branch !='0' ? " and bill.from_branch in (".$id_branch.") " :'' )."
            ");
        $result2 = $sales_ret_trans->result_array();
		return array_merge($result1,$result2);
	}
    function other_ow($data)
	{
		if($_POST['dt_range'] != '')
		{
			$dateRange = explode('-',$_POST['dt_range']);
			$from = str_replace('/','-',$dateRange[0]);
			$to = str_replace('/','-',$dateRange[1]);
			$d1 = date_create($from);
			$d2 = date_create($to);
			$FromDt = date_format($d1,"Y-m-d");
			$ToDt = date_format($d2,"Y-m-d");
		}
		$return_data=array();
		$multiple_id_metal = implode(' , ', $data['id_metal']);
		if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $data['id_metal'];
		}
         $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$id_branch = $multiple_id_branch;
		}else{
			$id_branch = $data['id_branch'];
		}
	    $partly_sale=$this->db->query("SELECT IFNULL(SUM(tag.gross_wt - d.gross_wt),0) as tot_gwt,IFNULL(SUM(tag.piece),0) as tot_pcs
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
        LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        left join ret_category c on c.id_ret_category=prod.cat_id
        WHERE d.tag_id IS NOT null AND d.is_partial_sale=1 and b.bill_status=1
        ".($data['id_category']!='' && $data['id_category']!=0 ? " and prod.cat_id=".$data['id_category']."" :'')."
        ".($data['id_product']!='' ? " and tag.product_id=".$data['id_product']."" :'')."
        ".($data['id_design']!='' ? " and tag.design_id=".$data['id_design']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_branch !='' && $id_branch !=0 ? " and b.id_branch in ( ".$id_branch .") " :'')."
        ".($FromDt!= '' && $ToDt!='' ? ' and (date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."  ");
        $return_data['partly_sold']=$partly_sale->result_array()[0];
		$deleted_tag = $this->db->query("SELECT IFNULL(sum(tag.gross_wt),0) as tot_gwt,IFNULL(SUM(tag.net_wt),0) as net_wt,IFNULL(SUM(tag.piece),0) as tot_pcs
		FROM ret_taging tag
		LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and l.from_branch in ( ".$id_branch .") and l.status=2
		LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
        left join ret_category c on c.id_ret_category=prod.cat_id
		WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.status=2
        ".($data['id_category']!='' && $data['id_category']!=0 ? " and prod.cat_id=".$data['id_category']."" :'')."
        ".($data['id_design']!='' ? " and tag.design_id=".$data['id_design']."" :'')."
        ".($data['id_product']!='' ? " and tag.product_id=".$data['id_product']."" :'')."
        ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
        ".($id_branch !='' && $id_branch !=0 ? " and l.from_branch in ( ".$id_branch .") " :'and l. from_branch IS NOT NULL')."
        ");
		$return_data['deleted']=$deleted_tag->result_array()[0];
		return $return_data;
	}
    function showroom_sales($data)
	{
		if($_POST['dt_range'] != '')
		{
			$dateRange = explode('-',$_POST['dt_range']);
			$from = str_replace('/','-',$dateRange[0]);
			$to = str_replace('/','-',$dateRange[1]);
			$d1 = date_create($from);
			$d2 = date_create($to);
			$FromDt = date_format($d1,"Y-m-d");
			$ToDt = date_format($d2,"Y-m-d");
		}
		$multiple_id_metal = implode(' , ', $data['id_metal']);
		if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$id_branch = $multiple_id_branch;
		}else{
			$id_branch = $data['id_branch'];
		}
		$showroomsales = $this->db->query("SELECT IFNULL(SUM(tag.piece),0) as piece, IFNULL(SUM(b.gross_wt),0) as gwt
			FROM ret_taging tag
			LEFT JOIN ret_bill_details b on b.tag_id=tag.tag_id
			lEFT JOIN ret_billing bill on bill.bill_id=b.bill_id
			LEFT JOIN ret_product_master prod on prod.pro_id=b.product_id
            left join ret_category c on c.id_ret_category=prod.cat_id
			WHERE  bill.bill_status=1 and (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') and bill.bill_type!=13
            ".($data['id_category']!='' && $data['id_category']!=0 ? " and prod.cat_id=".$data['id_category']."" :'')."
            ".($data['id_design']!='' ? " and tag.design_id=".$data['id_design']."" :'')."
            ".($data['id_product']!='' ? " and tag.product_id=".$data['id_product']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            ".($id_branch!='' && $id_branch !='0' ? " and bill.id_branch in (".$id_branch.") " :'' )."
            ".($data['prod_group_id']!='' && $data['prod_group_id']!=0 ? " and prod.prod_group_id=".$data['prod_group_id']."" :'')."
            ");
		$result1= $showroomsales->row_array();
		$sales_trans = $this->db->query("SELECT b.tag_id,IFNULL(sum(tag.gross_wt),0) as gross_wt,SUM(tag.net_wt) as net_wt,IFNULL(SUM(tag.piece),0) as piece,
		        b.product_id
        		FROM ret_taging tag
        		LEFT JOIN ret_bill_details b on b.tag_id=tag.tag_id
        		lEFT JOIN ret_billing bill on bill.bill_id=b.bill_id
        		LEFT JOIN ret_product_master prod on prod.pro_id=b.product_id
                left join ret_category c on c.id_ret_category=prod.cat_id
        		WHERE  bill.bill_status=1 and date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND b.product_id=prod.pro_id and bill.bill_type = 13
                ".($data['id_category']!='' && $data['id_category']!=0 ? " and prod.cat_id=".$data['id_category']."" :'')."
            ".($data['id_design']!='' ? " and tag.design_id=".$data['id_design']."" :'')."
            ".($data['id_product']!='' ? " and tag.product_id=".$data['id_product']."" :'')."
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
                ".($id_branch!='' && $id_branch !='0' ? " and bill.id_branch in (".$id_branch.") " :'' )."
                ".($data['prod_group_id']!='' && $data['prod_group_id']!=0 ? " and prod.prod_group_id=".$data['prod_group_id']."" :'')."
                ");
        $result2= $sales_trans->row_array();
        return array("piece"=>$result1['piece']+$result2['piece'],"gwt"=>$result1['gwt']+$result2['gross_wt']);
	}
    function issued_stock($data)
    {
    	if($_POST['dt_range'] != '')
    	{
    		$dateRange = explode('-',$_POST['dt_range']);
    		$from = str_replace('/','-',$dateRange[0]);
    		$to = str_replace('/','-',$dateRange[1]);
    		$d1 = date_create($from);
    		$d2 = date_create($to);
    		$FromDt = date_format($d1,"Y-m-d");
    		$ToDt = date_format($d2,"Y-m-d");
    	}
		$multiple_id_metal = implode(' , ', $data['id_metal']);
		if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $data['id_metal'];
		}
        	$multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$id_branch = $multiple_id_branch;
		}else{
			$id_branch = $data['id_branch'];
		}
    	$iss_out=$this->db->query("SELECT IFNULL(sum(tag.gross_wt),0) as tot_gwt,IFNULL(SUM(tag.net_wt),0) as   net_wt,IFNULL(SUM(tag.piece),0) as tot_pcs
    		FROM ret_taging tag
    		LEFT JOIN ret_taging_status_log l on l.tag_id=tag.tag_id and l.from_branch in (".$id_branch.") and (l.status=7)
    		LEFT JOIN ret_product_master prod on prod.pro_id=tag.product_id
            left join ret_category c on c.id_ret_category=prod.cat_id
    		WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and (l.status=7)
            ".($data['id_category']!='' && $data['id_category']!=0 ? " and prod.cat_id=".$data['id_category']."" :'')."
            ".($data['id_product']!='' ? " and tag.product_id=".$data['id_product']."" :'')."
            ".($data['id_design']!='' ? " and tag.design_id=".$data['id_design']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            ".($data['prod_group_id']!='' && $data['prod_group_id']!=0 ? " and prod.prod_group_id=".$data['prod_group_id']."" :'')."
            ".($id_branch!='' && $id_branch !='0' ? " and  l.from_branch in (".$id_branch.") " :'and l.from_branch IS NOT NULL' )."
            ");
    		// print_r($this->db->last_query());exit;
    		// print_r($this->db->last_query());exit;
    		return $iss_out->result_array();
    }
	function getActiveCategorymtr($data)
    {
        $id_metal=(isset($data['id_metal']) ? ($data['id_metal']!='' ? $data['id_metal'] :'') :'');
		$result = array();
        $multiple_id_metal = implode(' , ', $data['id_metal']);
		if($multiple_id_metal != '')
		{
			$id_metal = $multiple_id_metal;
		}else{
			$id_metal = $data['id_metal'];
		}
		$data = $this->db->query("SELECT id_ret_category,name,description,id_metal,image,tgrp_id FROM `ret_category` WHERE status = 1
	  ".($id_metal!='' && $id_metal !='0' ? " and id_metal in (".$id_metal.") " :'' )."	");
		// print_r($this->db->last_query());exit;
		return $data->result_array();
	}
    function get_DeliveryListDetails($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        $sql = $this->db->query("SELECT b.bill_id,b.sales_ref_no as bill_no,
		CASE WHEN b.customer_name is NOT null then b.customer_name
	        ELSE cus.firstname END as cus_name,
		cus.mobile,t.tag_code,d.item_cost,
        d.is_delivered,p.product_name,des.design_name,br.name as branch_name,
        date_format(b.bill_date,'%d-%m-%Y') as bill_date,d.bill_det_id,ifnull(date_format(d.delivered_date,'%d-%m-%Y'),'-') as delivered_date,ifnull(emp.firstname,'-') as delivered_by,IFNULL(t.tag_code,'') as tag_code,ifnull(d.gross_wt,0) as gross_wt,ifnull(d.net_wt,0) as net_wt,
        ifnull(d.item_cost,0) as item_cost
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_taging t ON t.tag_id=d.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN ret_design_master des ON des.design_no=d.design_id
        LEFT JOIN branch br ON br.id_branch=b.id_branch
        LEFT JOIN employee emp on emp.id_employee=d.delivered_by
        WHERE b.bill_status=1 AND (d.is_delivered=0 or d.is_delivered=2)
        ".($data['id_branch']!=0 && $data['id_branch']!='' ? " and b.id_branch=".$data['id_branch']."" :'')."
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($data['deliver_status']!='' ? "and d.is_delivered=".$data['deliver_status']."":"")."
        ORDER BY b.bill_id desc");
        //echo $this->db->last_query();exit;
        return $sql->result_array();
    }
	//Non Tag Section report
// 	function get_nontag_section_details($data)
// {
//     if($_POST['dt_range'] != ''){
//        $dateRange = explode('-',$_POST['dt_range']);
//        $from = str_replace('/','-',$dateRange[0]);
//        $to = str_replace('/','-',$dateRange[1]);
//        $d1 = date_create($from);
//        $d2 = date_create($to);
//        $FromDt = date_format($d1,"Y-m-d");
//        $ToDt = date_format($d2,"Y-m-d");
//        }
//        $metal_type = implode(' , ', $data['id_metal']);
// 		if($metal_type!= '')
// 		{
// 			$id_metal = $metal_type;
// 		}else{
// 			$id_metal = $data['id_metal'];
// 		}
//         $multiple_id_cat = implode(' , ', $data['id_category']);
// 		if($multiple_id_cat!= '')
// 		{
// 			$id_category = $multiple_id_cat;
// 		}else{
// 			$id_category = $data['id_category'];
// 		}
// 			$stock_detail= [];
//             $id_section = $data['id_section'];
//             $group_by = $data['group_by'];//1-Product,2-Category
//             $sql = $this->db->query("SELECT p.pro_id,p.product_name,c.name as category_name,m.metal as metal_name,
//             (IFNULL(blc_inw.no_of_piece,0)-IFNULL(blc_sales.piece,0)-IFNULL(blc_br_out.no_of_piece,0)) as op_blc_pcs,
//             (IFNULL(blc_inw.gross_wt,0)-IFNULL(blc_sales.gross_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_gwt,
//             (IFNULL(blc_inw.net_wt,0)-IFNULL(blc_sales.net_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_nwt,
//             IFNULL(inw.gross_wt,0) as inw_gwt,IFNULL(inw.net_wt,0) as inw_nwt,IFNULL(inw.no_of_piece,0) as inw_pcs,
//             IFNULL(sales.gross_wt,0) as sales_gwt,IFNULL(sales.net_wt,0) as sales_nwt,IFNULL(sales.piece,0) as sales_pcs,
//             IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.no_of_piece,0) as br_out_pcs,p.id_section,sn.section_name
// 			FROM ret_nontag_item nt_itm
//             LEFT JOIN  ret_product_master p ON p.pro_id = nt_itm.product
//             LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
//             LEFT JOIN metal m on m.id_metal=c.id_metal
//             LEFT JOIN ret_section sn on sn.id_section = nt_itm.id_section
//             LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,m1.to_section
//             FROM ret_section_nontag_item_log  m1
//             LEFT JOIN ret_product_master p on p.pro_id = m1.product
//             WHERE m1.product IS NOT NULL  AND m1.status = 0
// 			".($id_section!='' ? " AND m1.to_section = ".$id_section."" :'')."
// 			".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
//             AND date(m1.date) < '$FromDt'
//             GROUP by ".($group_by==1 ? " m1.product" :" m1.product,m1.to_section")." ) as blc_inw ON ".($group_by==1 ? " blc_inw.product = p.pro_id" : " blc_inw.to_section = nt_itm.id_section" )."
//             LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
//             SUM(b.piece) as piece,b.product_id,p.cat_id,b.id_section
//             FROM ret_bill_details b
//             LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
//             LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
//             WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
//             (date(bill.bill_date) < '$FromDt')
// 			".($id_section!='' ? " AND b.id_section = ".$id_section."" :'')."
// 			".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
//             GROUP by ".($group_by==1 ? " b.product_id" :" b.product_id,b.id_section")." ) blc_sales ON  ".($group_by==1 ? " blc_sales.product_id = p.pro_id" : " blc_sales.id_section = nt_itm.id_section" )."
//             LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
//             SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,l.from_section
//             FROM  ret_section_nontag_item_log l
//             LEFT JOIN ret_product_master as p ON p.pro_id = l.product
//             WHERE (date(l.date) < '$FromDt' ) and
//             (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
// 			".($id_section!='' ? " AND l.from_section = ".$id_section."" :'')."
// 			".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
//             GROUP by ".($group_by==1 ? " l.product" :" l.product,l.from_section")." ) blc_br_out on ".($group_by==1 ? " blc_br_out.product = p.pro_id" : " blc_br_out.from_section = nt_itm.id_section" )."
//             LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,m1.to_section
//             FROM ret_section_nontag_item_log m1
//             LEFT JOIN ret_product_master p on p.pro_id = m1.product
//             WHERE m1.product IS NOT NULL AND m1.status = 0 AND
//             date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
// 			".($id_section!='' ? " AND m1.to_section = ".$id_section."" :'')."
// 			".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
//             GROUP by ".($group_by==2 ? " m1.product" :" m1.product,m1.to_section").") as inw ON ".($group_by==1 ? " inw.product = p.pro_id" : " inw.product = p.pro_id and inw.to_section = nt_itm.id_section" )."
//             LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
//             SUM(b.piece) as piece,b.product_id,p.cat_id,b.id_section
//             FROM ret_bill_details b
//             LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
//             LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
//             WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
//             (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
// 			".($id_section!='' ? " AND b.id_section = ".$id_section."" :'')."
// 			".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
//             GROUP by ".($group_by==1 ? " b.product_id" :" b.product_id,b.id_section")." ) sales ON  ".($group_by==1 ? " sales.product_id = p.pro_id" : " sales.product_id = p.pro_id and sales.id_section = nt_itm.id_section" )."
//             LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
//             SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,l.from_section
//             FROM  ret_section_nontag_item_log l
//             LEFT JOIN ret_product_master as p ON p.pro_id = l.product
//             left join ret_category c on c.id_ret_category=p.cat_id
//             WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
//             (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
// 			".($id_section!='' ? " AND l.from_section = ".$id_section."" :'')."
// 			".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
//             GROUP by ".($group_by==1 ? " l.product" :" l.product,l.from_section").") br_out on ".($group_by==1 ? " br_out.product = p.pro_id" : " br_out.product = p.pro_id and br_out.from_section = nt_itm.id_section" )."
//             WHERE p.stock_type = 2 and nt_itm.id_section IS NOT NULL
//             ".($data['id_product']!='' ? " and p.pro_id=".$data['id_product']."" :'')."
//             ".($metal_type!='' && $metal_type !='0' ? " and c.id_metal in (".$metal_type.") " :'' )."
//             ".($id_category!='' && $id_category !='0' ? " and c.id_ret_category in (".$id_category.") " :'' )."
// 			".($data['id_branch']!='' ? " and nt_itm.branch=".$data['id_branch']."" :'')."
// 			".($id_section!='' ? " AND nt_itm.id_section = ".$id_section."" :'')."
//             GROUP by ".($group_by==1 ? " p.pro_id" :" p.pro_id,sn.id_section")."
//             ");
//         //print_r($this->db->last_query());exit;
//         $result = $sql->result_array();
//         foreach($result as $r){
// 			$stock_detail[$r['section_name']][] = $r;
//         }
function get_nontag_section_details_16_10_2023($data)
{
    if($_POST['dt_range'] != ''){
       $dateRange = explode('-',$_POST['dt_range']);
       $from = str_replace('/','-',$dateRange[0]);
       $to = str_replace('/','-',$dateRange[1]);
       $d1 = date_create($from);
       $d2 = date_create($to);
       $FromDt = date_format($d1,"Y-m-d");
       $ToDt = date_format($d2,"Y-m-d");
       }
       $metal_type = implode(' , ', $data['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_cat = implode(' , ', $data['id_category']);
		if($multiple_id_cat!= '')
		{
			$id_category = $multiple_id_cat;
		}else{
			$id_category = $data['id_category'];
		}
			$stock_detail= [];
            $id_section = $data['id_section'];
            $group_by = $data['GroupBy'];//1-Product,2-Category
            $sql = $this->db->query("SELECT p.pro_id,p.product_name,c.name as category_name,m.metal as metal_name,
            (IFNULL(blc_inw.no_of_piece,0)-IFNULL(blc_sales.piece,0)-IFNULL(blc_br_out.no_of_piece,0)) as op_blc_pcs,
            (IFNULL(blc_inw.gross_wt,0)-IFNULL(blc_sales.gross_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_gwt,
            (IFNULL(blc_inw.net_wt,0)-IFNULL(blc_sales.net_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_nwt,
            IFNULL(inw.gross_wt,0) as inw_gwt,IFNULL(inw.net_wt,0) as inw_nwt,IFNULL(inw.no_of_piece,0) as inw_pcs,
            IFNULL(sales.gross_wt,0) as sales_gwt,IFNULL(sales.net_wt,0) as sales_nwt,IFNULL(sales.piece,0) as sales_pcs,
            IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.no_of_piece,0) as br_out_pcs,p.id_section,sn.section_name
			FROM ret_nontag_item nt_itm
            LEFT JOIN  ret_product_master p ON p.pro_id = nt_itm.product
            LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN metal m on m.id_metal=c.id_metal
            LEFT JOIN ret_section sn on sn.id_section = nt_itm.id_section
            LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,m1.to_section
            FROM ret_section_nontag_item_log  m1
            LEFT JOIN ret_product_master p on p.pro_id = m1.product
            WHERE m1.product IS NOT NULL  AND m1.status = 0
			".($id_section!='' ? " AND m1.to_section = ".$id_section."" :'')."
			".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            AND date(m1.date) < '$FromDt'
            GROUP by ".($group_by==1 ? " m1.to_section" :" m1.product,m1.to_section")." ) as blc_inw ON ".($group_by==2 ? " blc_inw.product = p.pro_id and blc_inw.to_section = nt_itm.id_section" : " blc_inw.to_section = nt_itm.id_section" )."
            LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,b.id_section
            FROM ret_bill_details b
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
            WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
            (date(bill.bill_date) < '$FromDt')
			".($id_section!='' ? " AND b.id_section = ".$id_section."" :'')."
			".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " b.id_section" :" b.product_id,b.id_section")." ) blc_sales ON  ".($group_by==2 ? " blc_sales.product_id = p.pro_id and blc_sales.id_section = nt_itm.id_section" : " blc_sales.id_section = nt_itm.id_section" )."
            LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
            SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,l.from_section
            FROM  ret_section_nontag_item_log l
            LEFT JOIN ret_product_master as p ON p.pro_id = l.product
            WHERE (date(l.date) < '$FromDt' ) and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
			".($id_section!='' ? " AND l.from_section = ".$id_section."" :'')."
			".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " l.from_section" :" l.product,l.from_section")." ) blc_br_out on ".($group_by==2 ? " blc_br_out.product = p.pro_id and blc_br_out.from_section = nt_itm.id_section" : " blc_br_out.from_section = nt_itm.id_section" )."
            LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,m1.to_section
            FROM ret_section_nontag_item_log m1
            LEFT JOIN ret_product_master p on p.pro_id = m1.product
            WHERE m1.product IS NOT NULL AND m1.status = 0 AND
            date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
			".($id_section!='' ? " AND m1.to_section = ".$id_section."" :'')."
			".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " m1.to_section" :" m1.product,m1.to_section").") as inw ON ".($group_by==2 ? " inw.product = p.pro_id and inw.to_section = nt_itm.id_section" : " inw.to_section = nt_itm.id_section" )."
            LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,b.id_section
            FROM ret_bill_details b
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
            WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
			".($id_section!='' ? " AND b.id_section = ".$id_section."" :'')."
			".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " b.id_section" :" b.product_id,b.id_section")." ) sales ON  ".($group_by==2 ? " sales.product_id = p.pro_id and sales.id_section = nt_itm.id_section" : "  sales.id_section = nt_itm.id_section" )."
            LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
            SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,l.from_section
            FROM  ret_section_nontag_item_log l
            LEFT JOIN ret_product_master as p ON p.pro_id = l.product
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
			".($id_section!='' ? " AND l.from_section = ".$id_section."" :'')."
			".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " l.from_section" :" l.product,l.from_section").") br_out on ".($group_by==2 ? " br_out.product = p.pro_id and br_out.from_section = nt_itm.id_section" : "  br_out.from_section = nt_itm.id_section" )."
            WHERE p.stock_type = 2 and nt_itm.id_section IS NOT NULL
            ".($data['id_product']!='' ? " and p.pro_id=".$data['id_product']."" :'')."
            ".($metal_type!='' && $metal_type !='0' ? " and c.id_metal in (".$metal_type.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? " and c.id_ret_category in (".$id_category.") " :'' )."
			".($data['id_branch']!='' ? " and nt_itm.branch=".$data['id_branch']."" :'')."
			".($id_section!='' ? " AND nt_itm.id_section = ".$id_section."" :'')."
            GROUP by ".($group_by==1 ? " nt_itm.id_section" :" nt_itm.product,nt_itm.id_section")."
            ");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $r){
			$stock_detail[$r['section_name']][] = $r;
        }
        return $stock_detail;
}
function get_nontag_section_details($data)
{
    if($_POST['dt_range'] != ''){
       $dateRange = explode('-',$_POST['dt_range']);
       $from = str_replace('/','-',$dateRange[0]);
       $to = str_replace('/','-',$dateRange[1]);
       $d1 = date_create($from);
       $d2 = date_create($to);
       $FromDt = date_format($d1,"Y-m-d");
       $ToDt = date_format($d2,"Y-m-d");
       }
       $metal_type = implode(' , ', $data['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $data['id_metal'];
		}
        $multiple_id_cat = implode(' , ', $data['id_category']);
		if($multiple_id_cat!= '')
		{
			$id_category = $multiple_id_cat;
		}else{
			$id_category = $data['id_category'];
        }
        $multiple_id_section = implode(' , ', $data['id_section']);
        if($multiple_id_section!= '')
		{
			$id_section = $multiple_id_section;
		}else{
			$id_section = $data['id_section'];
		}
			$stock_detail= [];
            // $id_section = $data['id_section'];
            $group_by = $data['GroupBy'];//1-Product,2-Category
            $sql = $this->db->query("SELECT p.pro_id,p.product_name,c.name as category_name,m.metal as metal_name,
            (IFNULL(blc_inw.no_of_piece,0)-IFNULL(blc_sales.piece,0)-IFNULL(blc_br_out.no_of_piece,0)) as op_blc_pcs,
            (IFNULL(blc_inw.gross_wt,0)-IFNULL(blc_sales.gross_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_gwt,
            (IFNULL(blc_inw.net_wt,0)-IFNULL(blc_sales.net_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_nwt,
            IFNULL(inw.gross_wt,0) as inw_gwt,IFNULL(inw.net_wt,0) as inw_nwt,IFNULL(inw.no_of_piece,0) as inw_pcs,
            IFNULL(sales.gross_wt,0) as sales_gwt,IFNULL(sales.net_wt,0) as sales_nwt,IFNULL(sales.piece,0) as sales_pcs,
            (IFNULL(br_out.gross_wt,0) + IFNULL(kar_iss.gross_wt,0) + IFNULL(pur_ret.gross_wt,0)) as br_out_gwt,
            (IFNULL(br_out.net_wt,0) + IFNULL(kar_iss.net_wt,0) + IFNULL(pur_ret.net_wt,0)) as br_out_nwt,
            (IFNULL(br_out.no_of_piece,0)+ IFNULL(kar_iss.pcs,0) + IFNULL(pur_ret.pcs,0)) as br_out_pcs,
            p.id_section,sn.section_name,nt_itm.design,nt_itm.id_sub_design,IFNULL(des.design_name,'') as design_name,
            IFNULL(sub.sub_design_name,'') as sub_design_name
			FROM ret_nontag_item nt_itm
            LEFT JOIN  ret_product_master p ON p.pro_id=nt_itm.product
            LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN metal m on m.id_metal=c.id_metal
            LEFT JOIN ret_section sn on sn.id_section=nt_itm.id_section
            LEFT JOIN ret_design_master des on des.design_no=nt_itm.design
            LEFT JOIN ret_sub_design_master sub on sub.id_sub_design=nt_itm.id_sub_design
            LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,
            IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,
            m1.to_section,m1.design,m1.id_sub_design
            FROM ret_section_nontag_item_log  m1
            LEFT JOIN ret_product_master p on p.pro_id = m1.product
            WHERE m1.product IS NOT NULL  AND m1.status = 0
            ".($id_section!='' && $id_section !='0' ? " and m1.to_section  in (".$id_section.") " :'' )."
			".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            AND date(m1.date) < '$FromDt'
            GROUP by ".($group_by==1 ? " m1.to_section" :($group_by==2 ? "m1.product,m1.to_section":"m1.design,m1.id_sub_design"))." ) as blc_inw ON ".($group_by==1 ? " blc_inw.to_section = nt_itm.id_section" :($group_by==2 ? " blc_inw.product = p.pro_id and blc_inw.to_section = nt_itm.id_section":"blc_inw.design = nt_itm.design and blc_inw.id_sub_design = nt_itm.id_sub_design" ))."
            LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,b.id_section,b.design_id,b.id_sub_design
            FROM ret_bill_details b
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
            WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
            (date(bill.bill_date) < '$FromDt')
            ".($id_section!='' && $id_section !='0' ? " and b.id_section  in (".$id_section.") " :'' )."
			".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " b.id_section" :($group_by==2 ? "b.product_id,b.id_section":"b.design_id,b.id_sub_design"))." ) as blc_sales ON ".($group_by==1 ? " blc_sales.id_section = nt_itm.id_section" :($group_by==2 ? " blc_sales.product_id = p.pro_id and blc_sales.id_section = nt_itm.id_section":"blc_sales.design_id = nt_itm.design and blc_sales.id_sub_design = nt_itm.id_sub_design") )."
            LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
            SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,l.from_section,
            l.design,l.id_sub_design
            FROM  ret_section_nontag_item_log l
            LEFT JOIN ret_product_master as p ON p.pro_id = l.product
            WHERE (date(l.date) < '$FromDt' ) and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
            ".($id_section!='' && $id_section !='0' ? " and l.from_section   in (".$id_section.") " :'' )."
			".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " l.from_section" :($group_by==2 ? "l.product,l.from_section":"l.design,l.id_sub_design"))." ) as blc_br_out ON ".($group_by==1 ? " blc_br_out.from_section = nt_itm.id_section" :($group_by==2 ? " blc_br_out.product = p.pro_id and blc_br_out.from_section = nt_itm.id_section":"blc_br_out.design = nt_itm.design and blc_br_out.id_sub_design = nt_itm.id_sub_design" ))."
            LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,m1.to_section,
            m1.design,m1.id_sub_design
            FROM ret_section_nontag_item_log m1
            LEFT JOIN ret_product_master p on p.pro_id = m1.product
            WHERE m1.product IS NOT NULL AND m1.status = 0 AND
            date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            ".($id_section!='' && $id_section !='0' ? " and m1.to_section in (".$id_section.") " :'' )."
			".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " m1.to_section" :($group_by==2 ? "m1.product,m1.to_section":"m1.design,m1.id_sub_design"))." ) as inw ON ".($group_by==1 ? " inw.to_section = nt_itm.id_section" :($group_by==2 ? " inw.product = p.pro_id and inw.to_section = nt_itm.id_section":"inw.design = nt_itm.design and inw.id_sub_design = nt_itm.id_sub_design") )."
            LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,b.id_section,
            b.design_id,b.id_sub_design
            FROM ret_bill_details b
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
            WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            ".($id_section!='' && $id_section !='0' ? " and b.id_section in (".$id_section.") " :'' )."
			".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " b.id_section" :($group_by==2 ? "b.product_id,b.id_section":"b.design_id,b.id_sub_design"))." ) as sales ON ".($group_by==1 ? " sales.id_section = nt_itm.id_section" :($group_by==2 ? " sales.product_id = p.pro_id and sales.id_section = nt_itm.id_section":"sales.design_id = nt_itm.design and sales.id_sub_design = nt_itm.id_sub_design" ))."
            LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
            SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,l.from_section,
            l.design,l.id_sub_design
            FROM  ret_section_nontag_item_log l
            LEFT JOIN ret_product_master as p ON p.pro_id = l.product
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
            ".($id_section!='' && $id_section !='0' ? " and l.from_section in (".$id_section.") " :'' )."
			".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            GROUP by ".($group_by==1 ? " l.from_section" :($group_by==2 ? "l.product,l.from_section":"l.design,l.id_sub_design"))." ) as br_out ON ".($group_by==1 ? " br_out.from_section = nt_itm.id_section" :($group_by==2 ? " br_out.product = p.pro_id and br_out.from_section = nt_itm.id_section":"br_out.design = nt_itm.design and br_out.id_sub_design = nt_itm.id_sub_design" ))."
            LEFT JOIN (SELECT sum(km.issue_metal_wt) as gross_wt,sum(km.issue_metal_wt) as net_wt,
            sum(km.issue_pcs) as pcs,km.issu_met_pro_id as product_id,km.issu_met_id_section as id_section,pro.cat_id,
            km.issu_met_id_design,km.issu_met_id_sub_design
            FROM ret_karigar_metal_issue_details km
            LEFT JOIN ret_product_master pro on pro.pro_id = km.issu_met_pro_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_karigar_metal_issue k on k.met_issue_id = km.issue_met_parent_id
            where k.bill_status = 1 and (date(k.met_issue_date) BETWEEN '$FromDt' AND '$ToDt') and nontag_issue_from = 1
            ".($id_section!='' ? " AND km.issu_met_id_section = ".$id_section."" :'')."
            ".($data['id_branch']!='' ? " and k.id_branch=".$data['id_branch']."" :'')."
            ".($data['pro_id']!='' ? " and km.issu_met_pro_id=".$data['pro_id']."" :'')."
            ".($metal_type!='' && $metal_type !='0' ? " and c.id_metal in (".$metal_type.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? " and c.id_ret_category in (".$id_category.") " :'' )."
            GROUP by  ".($group_by==1 ? "km.issu_met_id_section" : ($group_by==2 ? "km.issu_met_pro_id,km.issu_met_id_section" :"km.issu_met_pro_id,km.issu_met_id_section,km.issu_met_id_design,km.issu_met_id_sub_design") ).") kar_iss on ".($group_by==1 ? "kar_iss.id_section = nt_itm.id_section" : ($group_by==2 ? "kar_iss.product_id = p.pro_id and kar_iss.id_section = nt_itm.id_section" : "kar_iss.product_id = p.pro_id and kar_iss.id_section = nt_itm.id_section and kar_iss.issu_met_id_design = nt_itm.design and kar_iss.issu_met_id_sub_design = nt_itm.id_sub_design " )  )."
            LEFT JOIN (SELECT sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,
            sum(pri.pur_ret_pcs) as pcs,pri.id_product as product_id ,pri.id_section as id_section,
            pri.id_design,pri.id_sub_design
            FROM ret_purchase_return_items pri
            LEFT JOIN ret_product_master pro on pro.pro_id = pri.id_product
                LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            where pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            ".($id_section!='' ? " AND pri.id_section = ".$id_section."" :'')."
            ".($data['id_branch']!='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
            ".($data['pro_id']!='' ? " and pri.id_product=".$data['pro_id']."" :'')."
            ".($metal_type!='' && $metal_type !='0' ? " and c.id_metal in (".$metal_type.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? " and c.id_ret_category in (".$id_category.") " :'' )."
            and pri.return_item_type = 3
            GROUP BY ".($group_by==1 ? "pri.id_section" : ($group_by==2 ? "pri.id_product,pri.id_section" : "pri.id_product,pri.id_section,pri.id_design,pri.id_sub_design" ) ).") pur_ret on ".($group_by==1 ? "pur_ret.id_section = nt_itm.id_section" : ($group_by==2 ? "pur_ret.product_id = p.pro_id and pur_ret.id_section = nt_itm.id_section" : " pur_ret.product_id = p.pro_id and pur_ret.id_section = nt_itm.id_section and pur_ret.id_design = nt_itm.id_section and pur_ret.id_sub_design = nt_itm.id_sub_design " ) )."
            WHERE p.stock_type = 2 and nt_itm.id_section IS NOT NULL
            ".($data['id_product']!='' ? " and p.pro_id=".$data['id_product']."" :'')."
            ".($metal_type!='' && $metal_type !='0' ? " and c.id_metal in (".$metal_type.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? " and c.id_ret_category in (".$id_category.") " :'' )."
			".($data['id_branch']!=''  && $data['id_branch']>0 ? " and nt_itm.branch=".$data['id_branch']."" :'')."
            ".($id_section!='' && $id_section !='0' ? " and nt_itm.id_section in (".$id_section.") " :'' )."
            GROUP by ".($group_by==1 ? "nt_itm.id_section" :($group_by==2 ?"nt_itm.product,nt_itm.id_section":"nt_itm.design,nt_itm.id_sub_design"))."
            ");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $r){
        if($group_by==1 || $group_by==2){
			$stock_detail[$r['section_name']][][] = $r;
        }
        else{
            $stock_detail[$r['product_name']][$r['design_name']][] = $r;
        }
        }
        return $stock_detail;
     }
	//Non Tag Section report
    function get_gstr1_sales_details($data)
    {
        $return_data = array("sales_details" => array(), "tot_sales_details" => array(), "tot_sales_ret_details" => array());
        $sales_query =$this->db->query("SELECT row_number() over(partition by b.bill_id order by b.bill_id) as sr_no,b.bill_id,if(b.billing_for=1,'R-Regular B2C Invoices','R-Regular B2B Invoices') as invoice_type,date_format(b.bill_date,'%d-%m-%Y') as invoice_date,SUBSTRING_INDEX(b.sales_ref_no,'/',-2) as invoice_no,cus.firstname as customer_name,IFNULL(cus.gst_number,'') as gst_no,
        IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,IFNULL(del.address3,'') as address3,st.name as state,cty.name as city,
        cus.mobile as contact_no,ifnull(pro.hsn_code,'') as hsn_code,pro.product_name as product_name,
        d.item_cost as invoice_value,
        d.piece as pcs,(d.item_cost-d.item_total_tax) as taxable_amt,
        IFNULL(d.total_igst,0) as igst,IFNULL(d.total_cgst,0) as cgst,IFNULL(d.total_sgst,0) as sgst,
        IFNULL(d.gross_wt,0) as grs_wt,IFNULL(d.net_wt,0) as net_wt,tax.tax_percentage
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        LEFT JOIN ret_product_master pro ON pro.pro_id=d.product_id
        LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
        LEFT JOIN state st on st.id_state=del.id_state
        LEFT JOIN  city cty on cty.id_city = del.id_city
        LEFT JOIN (select i.tgi_taxcode,i.tgi_tgrpcode,
        m.tax_percentage as tax_percentage,
        i.tgi_calculation as tgi_calculation
        FROM ret_taxgroupitems i
        LEFT JOIN ret_taxmaster m on m.tax_id=i.tgi_taxcode) as tax on tax.tgi_tgrpcode=pro.tgrp_id
        WHERE b.bill_status=1 and b.sales_ref_no IS NOT NULL
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and b.id_branch=".$data['id_branch']."" :'')."");
        //print_r($this->db->last_query());exit;
        $sales_details = $sales_query->result_array();
        foreach($sales_details as $s)
        {
            $return_data['sales_details'][] = $s;
        }
        $sales_total_query = $this->db->query("SELECT ifnull(sum(d.piece),0) as sales_tot_pcs ,
        ifnull(sum(d.gross_wt),0) as sales_tot_grswt,ifnull(sum(d.net_wt),0) as sales_tot_nwt,
        ifnull(sum(d.item_cost-d.item_total_tax),0) as sales_taxable_amt,ifnull(sum(d.item_total_tax),0) as sales_tax_amt,
        ifnull(sum(d.item_cost),0) as sales_tot_item_cost
        FROM ret_bill_details d
        LEFT JOIN ret_billing b ON b.bill_id=d.bill_id
        WHERE b.bill_status=1 and b.sales_ref_no IS NOT NULL
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and b.id_branch=".$data['id_branch']."" :'')."");
        $tot_sales_details = $sales_total_query->result_array();
        foreach($tot_sales_details as $tol)
        {
            $return_data['tot_sales_details'][] = $tol;
        }
        $sales_return_query = $this->db->query("SELECT ifnull(sum(d.piece),0) as sales_ret_tot_pcs ,
        ifnull(sum(d.gross_wt),0) as sales_ret_tot_grswt,ifnull(sum(d.net_wt),0) as sales_ret_tot_nwt,
        ifnull(sum(d.item_cost-d.item_total_tax),0) as sales_ret_taxable_amt,ifnull(sum(d.item_total_tax),0) as sales_ret_tax_amt,
        ifnull(sum(d.item_cost),0) as sales_ret_tot_item_cost
        FROM ret_bill_return_details r
        LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
        LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
        LEFT JOIN ret_billing bill ON bill.bill_id=r.ret_bill_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN metal as met ON met.id_metal = c.id_metal
        LEFT JOIN branch br on br.id_branch=b.id_branch
        WHERE b.bill_status=1 AND (tag.tag_status = 6 OR d.tag_id IS NULL)
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and b.id_branch=".$data['id_branch']."" :'')."");
        $tot_sales_ret_details = $sales_return_query->result_array();
        foreach($tot_sales_ret_details as $ret)
        {
            $return_data['tot_sales_ret_details'][] = $ret;
        }
        return $return_data;
    }
    function get_gstr2_purchase_details($data)
    {
        $old_metal =array();
        $sql=$this->db->query("SELECT b.bill_id,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
        cus.firstname as customer_name,IFNULL(cus.gst_number,'') as gst_no,
         IFNULL(del.address1,'') as address1,IFNULL(del.address2,'') as address2,IFNULL(del.address3,'') as address3,cus.mobile,s.piece as pcs,IFNULL(s.rate,0) as total_amt,IFNULL(s.rate_per_grm,0) as rate_per_grm,
        IFNULL(s.net_wt,0) as net_wt,IFNULL(s.gross_wt,0) as gross_wt,
        IFNULL(cat.metal_type,'') as product_name,mt.metal
        FROM ret_bill_old_metal_sale_details s
        LEFT JOIN ret_estimation_old_metal_sale_details est ON est.old_metal_sale_id=s.esti_old_metal_sale_id
        LEFT JOIN ret_old_metal_type cat ON cat.id_metal_type=est.id_old_metal_type
        LEFT JOIN ret_billing b ON b.bill_id=s.bill_id
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id
        LEFT JOIN metal mt on mt.id_metal = est.id_category
        WHERE b.bill_status=1 and b.pur_ref_no IS NOT NULL
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        ".($data['id_metal']!='' && $data['id_metal']!=0 ? "and mt.id_metal=".$data['id_metal']."":"")."
        ");
        //print_r($this->db->last_query());exit;
        $data =  $sql->result_array();
        foreach($data as $old)
        {
            $old['bill_no'] = $this->get_bill_no_format_detail($old['bill_id'],3);
            $old_metal[$old['metal']][] = $old;
        }
        return $old_metal;
    }
    function get_OldMetal_ProfitLoss_details($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));

        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $sql=$this->db->query("SELECT bill_old.metal_type,bill.bill_id,DATE_FORMAT(bill_date,'%d-%m-%Y') as bill_date,bill_no,
        bill_old.gross_wt,bill_old.net_wt,
        (bill_old.gross_wt - bill_old.net_wt) as dust_gms,
        round(((bill_old.gross_wt - bill_old.net_wt)/bill_old.gross_wt*100),3) as less,
        ifnull(bill_old.purity,0) as touch,
        bill_old.rate as purch_amt,bill_old.rate_per_grm as pur_rate_per_grm,old_cat.old_metal_cat as old_item,
        round((bill_old.gross_wt*bill_old.purity/100),3) as exp_pur_grswt,
        round((bill_old.net_wt*bill_old.purity/100),3) as exp_pur_nwt
        FROM ret_bill_old_metal_sale_details as bill_old
        LEFT JOIN ret_billing as bill ON bill.bill_id = bill_old.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
        LEFT JOIN ret_estimation_old_metal_sale_details d on d.old_metal_sale_id=bill_old.esti_old_metal_sale_id
        LEFT JOIN ret_old_metal_type t on t.id_metal_type=bill_old.id_old_metal_type
        LEFT JOIN ret_old_metal_category old_cat on old_cat.id_old_metal_cat = bill_old.id_old_metal_category
        WHERE bill.bill_id is not null and bill.bill_status=1
        ".($data['id_branch']!='' && $data['id_branch'] !='0' ? " and bill.id_branch = ".$data['id_branch']."" :'' )."
        ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
        ".($data['metal'] != '' && $data['metal']>0 ? ' and bill_old.metal_type ='.$data['metal']: '')."
        ".($data['old_metal_type'] != '' ? "and bill_old.id_old_metal_type=".$data['old_metal_type']."" : '')."
        ".($data['dt_range'] != '' ? ' and date(bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
        ORDER BY bill_old.metal_type,bill_old.bill_id");
        //print_r($this->db->last_query());exit;
        return $sql->result_array();
    }
	function get_section_transfer_Details($data)
	{
        $sql = $this->db->query("SELECT IFNULL(stn.pcs,'-') as dia_pcs,IFNULL(stn.wt,'-') as dia_wt,ifnull(fs.section_name,'-') as from_section,IFNULL(ts.section_name,'-') as to_section,IFNULL(DATE_format(s.created_on,'%h:%m:%s'),'-')  as trans_time,tag.sales_value,tag.tag_code,tag.piece,tag.gross_wt,tag.net_wt,des.design_name,IFNULL(p.product_name,'-') AS product_name,s.tag_id,s.status,IFNULL(DATE_format(s.created_on,'%d-%m-%Y'),'-')  as created_on,IFNULL(e.firstname,'-') as created_by
        FROM ret_section_tag_status_log s
        LEFT JOIN ret_taging tag ON tag.tag_id = s.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id = tag.product_id
        LEFT JOIN ret_section fs ON fs.id_section = s.from_section
        LEFT JOIN ret_section ts ON ts.id_section = s.to_section
        LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
        LEFT JOIN employee e ON e.id_employee=s.created_by
         LEFT JOIN (SELECT tag_st.tag_id,ifnull(sum(tag_st.pieces),'') as pcs,ifnull(sum(tag_st.wt),'') as wt
        FROM ret_taging_stone tag_st
        left join ret_stone st on st.stone_id = tag_st.stone_id
        where st.stone_type=1
        GROUP BY tag_st.tag_id) as stn on stn.tag_id = tag.tag_id
        where s.status=0 and from_section is not null and to_section is not null
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? "and tag.current_branch=".$data['id_branch']."":'')."
        ".($data['from_section']!='' && $data['from_section']!=0 ? "and s.from_section=".$data['from_section']."":'')."
        ".($data['to_section']!='' && $data['to_section']!=0 ? "and s.to_section=".$data['to_section']."":'')."
        ".($data['id_product']!='' && $data['id_product']!=0 ? "and tag.product_id=".$data['id_product']."":'')."
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(s.date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ");
        return $sql->result_array();
    }
    function get_po_ref_nos()
    {
        $sql= $this->db->query("SELECT ord.po_id,ord.po_ref_no
        FROM ret_purchase_order_items p
        LEFT JOIN ret_purchase_order ord ON ord.po_id=p.po_item_po_id");
        return $sql->result_array();
    }
    function get_stock_issue_report($data)
    {
        $dataset = array();
       $multiple_id_branch = implode(' , ', $data['id_branch']);
       if($multiple_id_branch != '')
       {
           $branch = $multiple_id_branch;
       }else
       {
           $branch = $data['id_branch'];
       }
       if($_POST['dt_range'] != '')
       {
          $dateRange = explode('-',$_POST['dt_range']);
          $from = str_replace('/','-',$dateRange[0]);
          $to = str_replace('/','-',$dateRange[1]);
          $d1 = date_create($from);
          $d2 = date_create($to);
          $FromDt = date_format($d1,"Y-m-d");
          $ToDt = date_format($d2,"Y-m-d");
       }
       $report_type=$data['report_type'];
       $GroupBy=$data['GroupBy'];
          if($data['search_by']==1)
          {
           $sql=$this->db->query("SELECT si.id_stock_issue,cat.name as category,si.issued_to as karigar_id,si.issue_type as id_issue,
           IF(si.issue_type = 1, 'Repair', IF(si.issue_type = 2, 'Marketing', IF(si.issue_type = 3, 'Photo Shooting', ''))) as issue_type,
           IF(sid.status = 0, 'Approval Pending', IF(sid.status = 1, 'Issued', IF(sid.status =3, 'Recieved', ''))) as issue_status,
           t.tag_code as tag_code, SUM(t.piece) as tot_pcs, sum(t.gross_wt) as tot_weight,
           IF(si.issued_to = 1, 'Customer', IF(si.issued_to = 2, 'Employee', IF(si.issued_to = 3, 'Karigar', ''))) as issue_name,
           b.name, DATE_FORMAT(si.created_on,'%d-%m-%Y') as issue_created_date,DATE_FORMAT(si.issue_date,'%d-%m-%Y') as issue_date,DATE_FORMAT(sid.received_date,'%d-%m-%Y') as received_date,
           IF(si.issued_to = 1, (select c.firstname from customer c left join ret_stock_issue si ON si.id_customer = c.id_customer WHERE si.issued_to=1 and si.id_stock_issue =sid.id_stock_issue),
           IF(si.issued_to = 2, (select e.firstname from employee e left join ret_stock_issue si ON si.id_employee = e.id_employee WHERE si.issued_to=2 and si.id_stock_issue =sid.id_stock_issue),
           IF(si.issued_to = 3, (select k.firstname from ret_karigar k left join ret_stock_issue si ON si.id_karigar = k.id_karigar WHERE si.issued_to=3 and si.id_stock_issue =sid.id_stock_issue), ''))) as issued_to,t.tag_status
            from ret_stock_issue si
           Left join ret_stock_issue_detail sid on sid.id_stock_issue = si.id_stock_issue
           LEFT join ret_taging t on t.tag_id = sid.tag_id
           Left join branch b on b.id_branch = si.id_branch
           LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
           LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
           where si.status=1 and sid.tag_id!=0
           ".($data['search_by']==1 && $FromDt!='' ? " and (date(si.issue_date) BETWEEN '".date($FromDt)."' AND '".date($ToDt)."') " :'' )." AND  sid.tag_id!= '0'
           ".($branch!='' && $branch !='0' ? " and si.id_branch in (".$branch.") " :'' )."
           ".($_POST['issue_type']!='' ? " and si.issue_type in (".$_POST['issue_type'].") " :'' )."
           ".($data['status_type']!='' && $data['status_type'] !='0' ? " and sid.status in (".$data['status_type'].") " :'' )."
           ".($data['id_karigar']!='' && $data['id_karigar'] !='0' ? " and si.issued_to in (".$data['id_karigar'].") " :'' )."
           GROUP By ".($report_type==1 ? "t.tag_id" : ($report_type==2 && $GroupBy==2 ? "si.id_stock_issue" :"pro.cat_id" ) )." ");
           //print_r($this->db->last_query());exit;
          }
          else
          {
           $sql=$this->db->query("SELECT si.id_stock_issue,cat.name as category,si.issued_to as karigar_id,si.issue_type as id_issue,
           IF(si.issue_type = 1, 'Repair', IF(si.issue_type = 2, 'Marketing', IF(si.issue_type = 3, 'Photo Shooting', ''))) as issue_type,
           IF(sid.status = 0, 'Approval Pending', IF(sid.status = 1, 'Approved', IF(sid.status =3, 'Recieved', ''))) as issue_status,t.tag_code as tag_code, sum(t.piece) tot_pcs, sum(t.gross_wt) as tot_weight,
           b.name, DATE_FORMAT(si.created_on,'%d-%m-%Y') as issue_created_date, DATE_FORMAT(si.issue_date,'%d-%m-%Y') as issue_date,DATE_FORMAT(sid.received_date,'%d-%m-%Y') as received_date,
           t.tag_status
           from ret_stock_issue si
           Left join ret_stock_issue_detail sid on sid.id_stock_issue = si.id_stock_issue
           LEFT join ret_taging t on t.tag_id = sid.tag_id
           Left join branch b on b.id_branch = si.id_branch
           LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
           LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
           where sid.status=3 and sid.tag_id!=0
           ".($data['search_by']==2 && $FromDt!='' ? " and (date(sid.received_date) BETWEEN '".date($FromDt)."' AND '".date($ToDt)."') " :'' )." AND  sid.tag_id!= '0'
           ".($branch!='' && $branch !='0' ? " and si.id_branch in (".$branch.") " :'' )."
           ".($data['status_type']!='' && $data['status_type'] !='0' ? " and sid.status in (".$data['status_type'].") " :'' )."
           ".($_POST['issue_type']!='' ? " and si.issue_type in (".$_POST['issue_type'].") " :'' )."
           ".($data['id_karigar']!='' && $data['id_karigar'] !='0' ? " and si.issued_to in (".$data['id_karigar'].") " :'' )."
           GROUP By ".($report_type==1 ? "t.tag_id" : ($report_type==2 && $GroupBy==2 ? "si.id_stock_issue" :"pro.cat_id" ) )." ");
           //print_r($this->db->last_query());exit;
              }
           $data = $sql->result_array();
           foreach($data as $value)
           {
                   $dataset[] = array(
                       'id_stock_issue'        => $value['id_stock_issue'],
                       'category'              => $value['category'],
                       'issue_type'            => $value['issue_type'],
                       'karigar_id'            => $value['karigar_id'],
                       'issue_status'          => $value['issue_status'],
                       'tag_code'              => ($report_type==1?$value['tag_code']:'-'),
                       'tag_pcs'               => $value['tot_pcs'],
                       'tag_weight'            => $value['tot_weight'],
                       'issue_date'             => $value['issue_date'],
                       'received_date'         => $value['received_date'],
                       'branch'                => $value['name'],
                       'name'                  => $value['issued_to'],
                       'tag_status'            => $value['tag_status'],
                       'issue_name'            => $value['issue_name'],
                       'purchase_cost'         => $value['purchase_cost'],
                   );
           }
                      //print_r($this->db->last_query());exit;
       return $dataset;
    }
     //Bill number format settings
		function get_bill_no_format_detail($bill_id,$bill_type="")
		{
            // echo $bill_type;exit;
				$format1 = $this->db->query("SELECT b.bill_type,bf.bill_no_format,b.bill_id,b.pur_ref_no,b.order_adv_ref_no,b.s_ret_refno,b.credit_coll_refno,b.approval_ref_no,b.chit_preclose_refno,br.short_name as '@@branch_code@@',b.fin_year_code as '@@fin_year@@',
				IFNULL(m.metal_code,'') as '@@metal_code@@',
					CASE
						WHEN b.bill_type = 1 or b.bill_type = 2 or b.bill_type = 3 or b.bill_type = 9 then ifNULL(".($bill_type==3 ? 'b.pur_ref_no' : 'b.sales_ref_no' ).",b.bill_no)
						WHEN b.bill_type = 4 then ifNULL(b.pur_ref_no, b.bill_no)
                        WHEN b.bill_type = 5 then ifNULL(".($bill_type==3 ? 'b.pur_ref_no':'b.order_adv_ref_no').", b.bill_no)
                        WHEN b.bill_type = 7 then ifNULL(".($bill_type==3 ? 'b.pur_ref_no':'b.s_ret_refno').", b.bill_no)
                        WHEN b.bill_type = 8 then ifNULL(".($bill_type==3 ? 'b.pur_ref_no':'b.credit_coll_refno').", b.bill_no)
						WHEN b.bill_type = 15 then ifNULL(b.approval_ref_no, b.bill_no)
						WHEN b.bill_type = 10 then ifNULL(b.chit_preclose_refno, b.bill_no)
					ELSE b.bill_no
					END as '@@bill_no@@',
					CASE
						WHEN b.bill_type = 1 or b.bill_type = 2 or b.bill_type =3 or b.bill_type = 9 then ifNULL(".($bill_type==3 ? "'PU'" : "'SA'" ).",'')
						WHEN b.bill_type = 4 then ifNULL('PU','')
                        WHEN b.bill_type = 5 then ifNULL(".($bill_type==3 ? '"PU"':'"OD"').",'')
                        WHEN b.bill_type = 7 then ifNULL(".($bill_type==3 ? '"PU"':'"SR"').",'')
                        WHEN b.bill_type = 8 then ifNULL(".($bill_type==3 ? '"PU"':'"CC"').",'')
						WHEN b.bill_type = 15 then NULL
						WHEN b.bill_type = 10 then NULL
					ELSE NULL
					END as '@@short_code@@'
							FROM bill_no_format bf
							LEFT JOIN ret_billing b ON b.bill_type = b.bill_type
							LEFT JOIN metal m ON m.id_metal = b.metal_type
							LEFT JOIN branch br on br.id_branch=b.id_branch
							WHERE b.bill_id is not null
							".($bill_id != '' && $bill_id >0 ? 'and b.bill_id='.$bill_id.'': '')." ");
			$query1=  $format1->row_array();
            // print_r($this->db->last_query());exit;
			$format2 = $this->db->query("SELECT bill_no_format,
					CASE
						WHEN bill_type = 1 then ifNULL('SA','')
						WHEN bill_type = 2 then ifNULL('SA','')
						WHEN bill_type = 3 then ifNULL('SA','')
						WHEN bill_type = 4 then ifNULL('PU','')
						WHEN bill_type = 5 then ifNULL('OA','')
						WHEN bill_type = 7 then ifNULL('SR','')
						WHEN bill_type = 8 then ifNULL('CC','')
						WHEN bill_type = 15 then NULL
						WHEN bill_type = 10 then NULL
					ELSE NULL
					END as '@@short_code@@'
						from bill_no_format
						where ".($query1['bill_type'] != ''  ? ' bill_type='.$query1['bill_type']: '')."");
						$query2 = $format2->row()->bill_no_format;
						$query2 = substr($query2,1,strlen($query2)-1);
						$billno= strtr($query2,$query1);
						if (substr($billno, 0, 1) === '-') {
							$billno = ltrim($billno, '-');
							return $billno;
						}else{
							return $billno;
						}
		}
		function get_data()
		{
			$sql = $this->db->query("SELECT bill_type,id_bill_no_format,bill_no_format FROM bill_no_format");
			return $sql->result_array();
		}
	//Bill number format settings
    function get_gst_abstract_with_return_details($data,$billing_for)
    {
        $return_data = array();
        $return_data = array();
        $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        $multiple_id_category = implode(' , ', $data['category']);
		if($multiple_id_category != '')
		{
			$id_category = $multiple_id_category;
		}else{
			$id_category = $data['category'];
		}
        $multiple_hsn_code = implode(' , ', $data['hsn_code']);
		if($multiple_hsn_code != '')
		{
			$hsn_code = $multiple_hsn_code;
		}else{
			$hsn_code = $data['hsn_code'];
		}
        $multiple_tax_group = implode(' , ', $data['tax_group']);
		if($multiple_tax_group != '')
		{
			$tax_group = $multiple_tax_group;
		}else{
			$tax_group = $data['tax_group'];
		}
        $sql=$this->db->query("SELECT d.bill_id,sum(d.piece) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,
        sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(d.item_total_tax) as tax_amt,sum(d.item_cost) as total_amount,
        IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,IFNULL(sum(d.total_igst),0) as total_igst,
        p.product_name,br.name as branch_name,b.id_branch,c.name as category_name,p.cat_id,
        IFNULL(ROUND(sum(b.round_off_amt),2), 0) as round_off, IFNULL(p.hsn_code, '') AS hsn_code
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
        WHERE b.bill_status=1 AND d.bill_id is not null and d.item_cost>0 and b.bill_type != 5
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        ".($data['id_metal']!='' && $data['id_metal']>0 ? " and c.id_metal=".$data['id_metal']."" :'')."
        ".($id_category!='' && $id_category != 0 ? " and p.cat_id in (".$id_category.") " :'' )."
        ".($billing_for!=''  && $billing_for>0 ? " and b.billing_for=".$billing_for."" :'')."
        ".($hsn_code !='' && $hsn_code != 0 ? " and p.hsn_code in (".$hsn_code.")" :'')."
        ".($tax_group !='' && $tax_group != 0 ? " and d.tax_group_id in (".$tax_group.")" :'')."
        ".($data['gst_filter']>0 ? ($data['gst_filter']==1 ? " and d.total_igst>0 and d.item_total_tax != 0 " : " and d.total_sgst>0 and d.item_total_tax != 0  " ) :'and d.item_total_tax != 0 ')."
        group by p.cat_id ");
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $return_data[$items['cat_id']]['sales']=array(
                                'bill_id'       =>$items['bill_id'],
                                'branch_name'   =>$items['branch_name'],
                                'category_name' =>$items['category_name'],
                                'cat_id'        =>$items['cat_id'],
                                'hsn_code'      =>$items['hsn_code'],
                                'piece'         =>$items['piece'],
                                'gross_wt'      =>$items['gross_wt'],
                                'net_wt'        =>$items['net_wt'],
                                'taxable_amt'   =>$items['taxable_amt'],
                                'total_sgst'    =>$items['total_sgst'],
                                'total_cgst'    =>$items['total_cgst'],
                                'total_igst'    =>$items['total_igst'],
                                'tax_amt'       =>$items['tax_amt'],
                                'total_amount'  =>$items['total_amount'],
                                'round_off'     =>$items['round_off'],
                                'starting_bill' =>$this->getminMaxBills($data['id_branch'],$data['from_date'],$data['to_date'],$items['cat_id'],'ASC',$billing_for,$data['gst_filter'], $hsn_code, $tax_group),
                                'ending_bill'   =>$this->getminMaxBills($data['id_branch'],$data['from_date'],$data['to_date'],$items['cat_id'],'DESC',$billing_for,$data['gst_filter'], $hsn_code, $tax_group),
                               );
        }
        $sql=$this->db->query("SELECT c.name as category_name,IFNULL(sum(d.piece),0) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(d.item_total_tax) as tax_amt,sum(d.item_cost) as total_amount,
        IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,IFNULL(sum(d.total_igst),0) as total_igst,br.name as branch_name,b.id_branch,
        tag.tag_status,bill.bill_id,bill.bill_no as sales_bill_no,date_format(bill.bill_date,'%d-%m-%Y') as sales_date, IFNULL(p.hsn_code, '') AS hsn_code, IFNULL(ROUND(sum(b.round_off_amt),2), 0) as round_off, p.cat_id
        FROM ret_bill_return_details r
        LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
        LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
        LEFT JOIN ret_billing bill ON bill.bill_id=r.ret_bill_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        WHERE b.bill_status=1 AND d.bill_id is not null and d.item_cost > 0
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        ".($data['id_metal']!='' && $data['id_metal']>0 ? " and c.id_metal=".$data['id_metal']."" :'')."
        ".($id_category!='' && $id_category != 0 ? " and p.cat_id in (".$id_category.") " :'' )."
        ".($billing_for!=''  && $billing_for>0 ? " and b.billing_for=".$billing_for."" :'')."
        ".($hsn_code !='' && $hsn_code != 0 ? " and p.hsn_code in (".$hsn_code.")" :'')."
        ".($tax_group !='' && $tax_group != 0 ? " and d.tax_group_id in (".$tax_group.")" :'')."
        ".($data['gst_filter']>0 ? ($data['gst_filter']==1 ? " and d.total_igst>0 and d.item_total_tax != 0 " : " and d.total_sgst>0 and d.item_total_tax != 0  " ) :'and d.item_total_tax != 0 ')."
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        GROUP BY p.cat_id");
        //print_r($this->db->last_query());exit;
        $ret_result = $sql->result_array();
        foreach($ret_result as $ret_items)
        {
            $return_data[$ret_items['cat_id']]['return']=array(
                                'bill_id'       =>$ret_items['bill_id'],
                                'branch_name'   =>$ret_items['branch_name'],
                                'category_name' =>$ret_items['category_name'],
                                'cat_id'        =>$ret_items['cat_id'],
                                'hsn_code'      =>$ret_items['hsn_code'],
                                'piece'         =>$ret_items['piece'],
                                'gross_wt'      =>$ret_items['gross_wt'],
                                'net_wt'        =>$ret_items['net_wt'],
                                'taxable_amt'   =>$ret_items['taxable_amt'],
                                'total_sgst'    =>$ret_items['total_sgst'],
                                'total_cgst'    =>$ret_items['total_cgst'],
                                'total_igst'    =>$ret_items['total_igst'],
                                'tax_amt'       =>$ret_items['tax_amt'],
                                'total_amount'  =>$ret_items['total_amount'],
                                'round_off'     =>$ret_items['round_off'],
                                'starting_bill' =>'',
                                'ending_bill'   =>'',
                               );
        }
        /*echo "<pre>";
        print_r($return_data);
        echo "</pre>";exit;*/
        return $return_data;
    }
    function get_gst_abstract_with_return_overseas_details($data)
	{
		$multiple_id_category = implode(' , ', $data['category']);
		if($multiple_id_category != '')
		{
			$id_category = $multiple_id_category;
		}else{
			$id_category = $data['category'];
		}
        $multiple_hsn_code = implode(' , ', $data['hsn_code']);
		if($multiple_hsn_code != '')
		{
			$hsn_code = $multiple_hsn_code;
		}else{
			$hsn_code = $data['hsn_code'];
		}
        $multiple_tax_group = implode(' , ', $data['tax_group']);
		if($multiple_tax_group != '')
		{
			$tax_group = $multiple_tax_group;
		}else{
			$tax_group = $data['tax_group'];
		}
		$return_data=array();
        $sql=$this->db->query("SELECT d.bill_id,IFNULL(sum(b.round_off_amt), 0) as round_off,sum(d.piece) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(d.item_total_tax) as tax_amt,sum(d.item_cost) as total_amount,
        IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,IFNULL(sum(d.total_igst),0) as total_igst,p.product_name,br.name as branch_name,b.id_branch,c.name as category_name,p.cat_id,
        IFNULL(sum(b.round_off_amt), 0) as round_off, IFNULL(p.hsn_code, '') AS hsn_code
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
        WHERE b.bill_status=1 AND d.item_total_tax = 0 AND d.bill_id is not null and d.item_cost>0
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        ".($data['id_metal']!='' && $data['id_metal']>0 ? " and c.id_metal=".$data['id_metal']."" :'')."
        ".($id_category!='' && $id_category != 0 ? " and p.cat_id in (".$id_category.") " :'' )."
        ".($hsn_code !=''  && $hsn_code != 0 ? " and p.hsn_code in (".$hsn_code.")" :'')."
        ".($tax_group !=''  && $tax_group > 0 ? " and d.tax_group_id in (".$tax_group.")" :'')."
        group by p.cat_id ");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        foreach($result as $items)
        {
            $return_data[$items['cat_id']]['sales']=array(
                                'branch_name'   =>$items['branch_name'],
                                'category_name' =>$items['category_name'],
                                'cat_id'        =>$items['cat_id'],
                                'hsn_code'   	=>$items['hsn_code'],
                                'piece'         =>$items['piece'],
                                'gross_wt'      =>$items['gross_wt'],
                                'net_wt'        =>$items['net_wt'],
                                'taxable_amt'   =>$items['taxable_amt'],
                                'total_sgst'    =>$items['total_sgst'],
                                'total_cgst'    =>$items['total_cgst'],
                                'total_igst'    =>$items['total_igst'],
                                'tax_amt'       =>$items['tax_amt'],
								'round_off'   	=>$items['round_off'],
                                'total_amount'  =>$items['total_amount'],
                                'starting_bill' =>$this->getminMaxBillsOverSeas($data['id_branch'],$data['from_date'],$data['to_date'],$items['cat_id'],'ASC',$billing_for,$data['gst_filter'], $hsn_code, $tax_group),
                                'ending_bill'   =>$this->getminMaxBillsOverSeas($data['id_branch'],$data['from_date'],$data['to_date'],$items['cat_id'],'DESC',$billing_for,$data['gst_filter'], $hsn_code, $tax_group),
                               );
        }
        $sql=$this->db->query("SELECT c.name as category_name,IFNULL(sum(d.piece),0) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,sum(d.item_cost-d.item_total_tax) as taxable_amt,sum(d.item_total_tax) as tax_amt,sum(d.item_cost) as total_amount,
        IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,IFNULL(sum(d.total_igst),0) as total_igst,br.name as branch_name,b.id_branch,
        tag.tag_status,bill.bill_id,bill.bill_no as sales_bill_no,date_format(bill.bill_date,'%d-%m-%Y') as sales_date, IFNULL(p.hsn_code, '') AS hsn_code, IFNULL(ROUND(sum(b.round_off_amt),2), 0) as round_off, p.cat_id
        FROM ret_bill_return_details r
        LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
        LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
        LEFT JOIN ret_billing bill ON bill.bill_id=r.ret_bill_id
        LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        WHERE b.bill_status=1 AND d.item_total_tax = 0 AND d.bill_id is not null and d.item_cost > 0
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($data['id_branch']!='' && $data['id_branch']>0 ? " and b.id_branch=".$data['id_branch']."" :'')."
        ".($data['id_metal']!='' && $data['id_metal']>0 ? " and c.id_metal=".$data['id_metal']."" :'')."
        ".($id_category!='' && $id_category != 0 ? " and p.cat_id in (".$id_category.") " :'' )."
        ".($hsn_code !=''  && $hsn_code != 0 ? " and p.hsn_code in (".$hsn_code.")" :'')."
        ".($tax_group !=''  && $tax_group > 0 ? " and d.tax_group_id in (".$tax_group.")" :'')."
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        GROUP BY p.cat_id");
        //print_r($this->db->last_query());exit;
        $ret_result = $sql->result_array();
        foreach($ret_result as $ret_items)
        {
            $return_data[$ret_items['cat_id']]['return']=array(
                                'branch_name'   =>$ret_items['branch_name'],
                                'category_name' =>$ret_items['category_name'],
                                'cat_id'        =>$ret_items['cat_id'],
                                'hsn_code'      =>$ret_items['hsn_code'],
                                'piece'         =>$ret_items['piece'],
                                'gross_wt'      =>$ret_items['gross_wt'],
                                'net_wt'        =>$ret_items['net_wt'],
                                'taxable_amt'   =>$ret_items['taxable_amt'],
                                'total_sgst'    =>$ret_items['total_sgst'],
                                'total_cgst'    =>$ret_items['total_cgst'],
                                'total_igst'    =>$ret_items['total_igst'],
                                'tax_amt'       =>$ret_items['tax_amt'],
                                'total_amount'  =>$ret_items['total_amount'],
                                'round_off'     =>$ret_items['round_off'],
                                'starting_bill' =>'',
                                'ending_bill'   =>'',
                               );
        }
        return $return_data;
	}
	function getreceiptDetails($post)
	{
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
		if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
		$data=array();
        $receipt_query=$this->db->query("SELECT r.bill_no,b.name,if(r.type=1,'Issue','Receipt') as type,IFNULL(e.firstname,'-') as emp_name,IFNULL(c.firstname,'-') as cus_name,IFNULL(r.amount,0) as amount,IFNULL(adv.utilized_amt,0) as utilized_amt,r.bill_status as status,
			date_format(r.bill_date,'%d-%m-%Y') as date_add,r.issue_to,r.id_issue_receipt,IFNULL(r.weight,0) as weight,IF(r.bill_status=1,'Success','Cancelled') as bill_status,if(date(d.entry_date)=date(r.bill_date),'1','0') as allow_cancel,IF(r.amount = adv.utilized_amt,'1','0') as current_status,
			r.receipt_type,IFNULL(refund.refund_amount,0) as refund_amount, IFNULL(c.mobile,'') as mobile,IFNULL(v.village_name,'') as village_name,adv.bill_id,IFNULL(ad.address1,'-') as address,
            IFNULL(adv.pan,'') as pan , IFNULL(adv.gst_number,'') as gst_number,IFNULL(e.firstname,'' )as emp_name
			FROM ret_issue_receipt r
			left join ret_account_head a on r.issue_to=a.id_acc_head
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=r.id_branch
			LEFT join customer c on c.id_customer=r.id_customer
            LEFT JOIN address ad ON ad.id_address=c.id_address
            LEFT JOIN village v on v.id_village=c.id_village
			LEFT JOIN employee e on e.id_employee=r.id_employee
			LEFT JOIN ret_day_closing d on d.id_branch=r.id_branch
			LEFT JOIN branch b on b.id_branch=r.id_branch
            LEFT JOIN (SELECT b.bill_id,sum(IFNULL(adv.utilized_amt,0)) utilized_amt,adv.id_issue_receipt,
            IFNULL(b.pan_no, ifnull(c.pan, '')) as pan, IFNULL(c.gst_number,'') as gst_number
            FROM ret_billing b
                  left join customer c on c.id_customer=b.bill_cus_id
                LEFT JOIN ret_advance_utilized adv ON adv.bill_id=b.bill_id
                WHERE b.bill_status=1 AND adv.bill_id is NOT null
                GROUP BY adv.id_issue_receipt) adv ON adv.id_issue_receipt=r.id_issue_receipt
            LEFT JOIN (select a.refund_receipt,IFNULL(SUM(a.refund_amount),0) as refund_amount
                   From ret_advance_refund a
                   LEFT JOIN ret_issue_receipt r on r.id_issue_receipt=a.id_issue_receipt
                   Where r.bill_status=1
                   group by a.refund_receipt) as refund on refund.refund_receipt=r.id_issue_receipt
			where r.type=2
            ".($post['dt_range'] != '' ? 'and date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']!= 0 ? " and r.id_branch=".$post['id_branch']."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR  ( IF(r.is_eda=2,date(day_close.entry_date) = date(r.bill_date),'') and r.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2 and date(day_close.entry_date) = date(r.bill_date)") )."
            ".($post['id_village']!='' && $post['id_village']!=null ? " and v.id_village=".$post['id_village']."" :'')."
            ");
        $receipt_details = $receipt_query->result_array();
		// print_r($this->db->last_query());exit;
        foreach ($receipt_details as $bill) {
            // var_dump($bill['bill_id']);
			$data[$bill['bill_no']]= array(
                'id_issue_receipt'  => $bill['id_issue_receipt'],
                'type'              => $bill['type'],
                'mobile'            => $bill['mobile'],
                'address'           => $bill['address'],
                'date_add'          => $bill['date_add'],
                'bill_no'           => $bill['bill_no'],
                'bill_id'           => $bill['bill_id'],
                'cus_name'          => $bill['cus_name'],
                'amount'            => $bill['amount'],
                'village_name'	    => $bill['village_name'],
                'weight'            => $bill['weight'],
                'bill_status'       => $bill['bill_status'],
                'current_status'    => $bill['current_status'],
                'pan'               => $bill['pan'],
                'gst_number'        => $bill['gst_number'],
                'emp_name'          => $bill['emp_name'],
            );
            if ($bill['id_issue_receipt'] != "") {
                $data[$bill['bill_no']]['pay_details'] = $this->get_receipt_payment_details($bill['id_issue_receipt']);
            } else {
                $data[$bill['bill_no']]['pay_details'] = [];
            }
    }
		return $data;
	}
//Tag Movement History
function getTaggingBySearch($SearchTxt)
{
    $data = $this->db->query("SELECT tag.tag_id as value,tag.tag_code as label
    FROM ret_taging as tag
    where tag.tag_id LIKE '%".$SearchTxt."%' ");
    //print_r($this->db->last_query());exit;
    return $data->result_array();
}
function get_tag_history($data)
{
    $tag_data=array();
    $sql=$this->db->query("SELECT tag.tag_status as status,tag.tag_id,IFNULL(tag.gross_wt,0) as gross_wt,tag.tag_code,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date,IFNULL(tag.net_wt,0) as net_wt,
    IF(cd.ortertype=4,'Tag repair issued',IF(cd.ortertype=3,'Repair order',IF(tag.tag_status=0,'On Sale',if(tag.tag_status=1,'Sold Out',IF(tag.tag_status=2,'Deleted',IF(tag.tag_status=3,'Other Issue',if(tag.tag_status=4,'In Transit',if(tag.tag_status=5,'Deleted For Stock',if(tag.tag_status=6,'Sales Return',if(tag.tag_status=7,'Stock Issue For Marketing',' - ')))))))))) as tag_status,
    e.firstname as emp_name,IFNULL(tag.old_tag_id,'') as old_tag_id,p.product_name,des.design_name,subDes.sub_design_name,tag.piece,IFNULL(k.firstname,'') as supplier_name,
    p.cat_id, k.id_karigar, cat.name as catname, cat.tgrp_id,tag.tag_status as tagging_status,IFNULL(tag.tag_type,0) as tag_type,tag.is_approval_stock_converted,tag_img.image as tag_image,
    p.pro_id,des.design_no,subDes.id_sub_design,IFNULL(b.name,'') as current_branch,IFNULL(tag.less_wt,0) as less_wt,IFNULL(tag.retail_max_wastage_percent,0) as retail_max_wastage_percent,
    IF(tag.tag_mc_type=1,'Per Pc',(if(tag.tag_mc_type=2,'Per Gm','% on price'))) as tag_mc_type,IFNULL(tag.tag_mc_value,0)as tag_mc_value,
    IF(tag.calculation_based_on = 0 ,'Both Mc, Wast on Gross',IF(tag.calculation_based_on = 1 ,'Both Mc, Wast on Net', IF(tag.calculation_based_on  = 2,'Wastage on net and MC on Gross','Fixed'))) as calc_type,
    IFNULL(tag.hu_id,'') as huid1,IFNULL(tag.hu_id2,'') as huid2,IFNULL(tag.cert_no,0) as certi_no,IFNULL(tag.manufacture_code,0) as manufacture_code,IFNULL(tag.style_code,0) as style_code,IFNULL(tag.old_tag_id,'') as old_tag_id,
    IFNULL(i.lot_no,'') as lot_no,concat(k.firstname,' ',if(k.lastname!=NULL,k.lastname,'')) as karigar,IFNULL(tag.sales_value,0) as sales_value,
    tag.calculation_based_on,IFNULL(prs.purchase_touch,IFNULL(tag.lot_purchase_touch,0)) as purchase_touch,IFNULL(prs.item_wastage,IFNULL(tag.lot_wastage_percentage,0)) as item_wastage,IFNULL(po.po_othere_charges,0) as po_othere_charges,
    IFNULL(po.po_ref_no,'-') as pur_ref_no,po.po_id,date_format(i.lot_date,'%d-%m-%Y') as lot_date,date_format(tag.tag_datetime,'%d-%m-%Y') as tag_date,IFNULL(sec.section_name,'') as section,
    IFNULL(cd.orderno,'-') as orderno,IFNULL(tag.remarks,'') as remark,DATEDIFF(date(now()),date(tag.tag_datetime))AS age,
    date_format(tag.old_tag_date,'%d-%m-%Y') as old_tag_date,DATEDIFF(date(now()),date(tag.old_tag_date))AS old_age,
    concat(e.firstname,' ',if(e.lastname!=NULL,e.lastname,'')) as employee,rp.purity,concat(rs.value,' ',rs.name) as size,
    cd.id_customerorder,round(sum(ifnull((SELECT round(sum((bs.wt/5)),3) as totwt FROM ret_taging_stone bs
                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id
                                WHERE st.stone_type = 1
                                AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )),3) as totaldiawt,cat.id_metal,tag.id_section,rp.id_purity,
                                IFNULL(tag.uom_gross_wt,'') as uom,IFNULL(prs.mc_value,IFNULL(tag.lot_making_charge,0)) as purchase_mc
    FROM ret_taging tag
    LEFT JOIN branch b on b.id_branch = tag.current_branch
    LEFT JOIN employee e on e.id_employee=tag.created_by
    LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
    LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
    LEFT JOIN ret_design_master des ON des.design_no=tag.design_id
    LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design=tag.id_sub_design
    LEFT JOIN ret_section sec ON sec.id_section=tag.id_section
    LEFT JOIN ret_lot_inwards i ON i.lot_no = tag.tag_lot_id
    LEFT JOIN ret_purchase_order po ON po.po_id = i.po_id
    LEFT JOIN ret_purchase_order_items prs ON prs.po_item_po_id = po.po_id AND prs.po_item_pro_id = tag.product_id
    AND prs.po_item_des_id = tag.design_id AND prs.po_item_sub_des_id = tag.id_sub_design
    LEFT JOIN ret_karigar k ON k.id_karigar=i.gold_smith
    LEFT JOIN ret_taging_images tag_img ON tag_img.tag_id = tag.tag_id
    LEFT JOIN customerorderdetails cd on cd.id_orderdetails = tag.id_orderdetails
    LEFT JOIN ret_size  rs ON rs.id_size = tag.size
    LEFT JOIN ret_purity  rp ON rp.id_purity = tag.purity
    where ".($data['tag_id']!='' ? " tag_code='".$data['tag_id']."'" : ($data['old_tag_id']!='' ? "old_tag_id='".$data['old_tag_id']."'" :'') )." ");
    //print_r($this->db->last_query());exit;
    $data=$sql->result_array();
    foreach($data as $items)
    {
        $tag_data[]=array(
                            'tag_id'=>$items['tag_id'],
                            'age'=>$items['age'],
                            'employee'=>$items['employee'],
                            'orderno'=>$items['orderno'],
                            'remark'=>$items['remark'],
                            'tag_date'=>$items['tag_date'],
                            'section'=>$items['section'],
                            'lot_date'=>$items['lot_date'],
                            'old_age'=>$items['old_age'],
                            'old_tag_date'=>$items['old_tag_date'],
                            'gross_wt'=>$items['gross_wt'],
                            'po_id'   =>$items['po_id'],
                            'pur_ref_no' =>$items['pur_ref_no'],
                            'purchase_touch'=>$items['purchase_touch'],
                            'po_othere_charges'=>$items['purchase_mc'],
                            'item_wastage'=>$items['item_wastage'],
                            'tag_code'=>$items['tag_code'],
                            'tag_date'=>$items['tag_date'],
                            'net_wt'  =>$items['net_wt'],
                            'size'    =>$items['size'],
                            'tag_id'  =>$items['tag_id'],
                            'tag_type' =>$items['tag_type'],
                            'piece'   =>$items['piece'],
                            'weight'     => $items['net_wt'],
                            'old_tag_id' =>$items['old_tag_id'],
                            'tag_status' =>$items['tag_status'],
                            'status'     =>$items['status'],
                            'emp_name'   =>$items['emp_name'],
                            'product_name' =>$items['product_name'],
                            'design_name' =>$items['design_name'],
                            'sub_design_name' =>$items['sub_design_name'],
                            'supplier_name' =>$items['supplier_name'],
                            'is_approval_stock_converted' =>$items['is_approval_stock_converted'],
                            'cat_id' => $items['cat_id'],
                            'tgrp_id' => $items['tgrp_id'],
                            'karigar_id' => $items['id_karigar'],
                            'catname'       => $items['catname'],
                            'supplier' =>$items['supplier_name'],
                            'tagging_status' =>$items['tagging_status'],
                            'tag_image' =>$items['tag_image'],
                            'tag_history'=>$this->get_tag_det($items['tag_id']),
                            'branch_details'=>$this->get_branch_details($items['tag_id']),
                            'stone_details' =>$this->get_tag_stone_details($items['tag_id']),
                            'other_metal_details' =>$this->get_other_metal_details($items['tag_id']),
                            'purchasestones' => $this->get_tagItemStones($items['tag_id']),
                            'purchaseothermetals' => $this->get_tagItemOtherMetal($items['tag_id']),
                            'est_details'=>$this->getTagEstDetails($items['tag_id']),
                            'bill_details'=>$this->getTagbillDetails($items['tag_id']),
                            'section_history'=>$this->get_section_tag_det($items['tag_id']),
                            'scan_details'=>$this->get_scan_details($items['tag_id']),
                            'stock_details'=>$this->get_tag_stock_details($items['tag_id']),
                            'pro_id' => $items['pro_id'],
                            'des_id' => $items['design_no'],
                            'id_sub_design' => $items['id_sub_design'],
                            'current_branch' => $items['current_branch'],
                            'less_wt' => $items['less_wt'],
                            'tag_mc_type' => $items['tag_mc_type'],
                            'tag_mc_value' => $items['tag_mc_value'],
                            'calc_type' => $items['calc_type'],
                            'huid1' => $items['huid1'],
                            'huid2' => $items['huid2'],
                            'certi_no' => $items['certi_no'],
                            'manufacture_code' => $items['manufacture_code'],
                            'style_code' => $items['style_code'],
                            'old_tag_id' => $items['old_tag_id'],
                            'lot_no' => $items['lot_no'],
                            'karigar' => $items['karigar'],
                            'purity' => $items['purity'],
                            'totaldiawt' => $items['totaldiawt'],
                            'sales_value' => $items['sales_value'],
                            'id_customerorder' => $items['id_customerorder'],
                            'retail_max_wastage_percent' => $items['retail_max_wastage_percent'],
                            'calculation_based_on'=>$items['calculation_based_on'],
                            'metal_details'=>$this->getTagMultiMetalDetails($items['tag_id']),
                            'id_metal' => $items['id_metal'],
                            'id_section' => $items['id_section'],
                            'id_purity' => $items['id_purity'],
                            'uom'       => $items['uom'],
                         );
    }
    return $tag_data;
}
function get_branch_details($tag_id)
{
    $sql=$this->db->query("SELECT tag.tag_id,IFNULL(b.name,'') as from_branch,IFNULL(br.name,'') as to_branch,date_format(bt.created_time,'%d-%m-%Y') as date,
    if(bt.status=1,'Yet to Approve',if(bt.status=2,'In transit',if(bt.status=3,'Rejected','Stock Updated'))) as tag_status,
    IFNULL(concat(emp.firstname,' ',if(emp.lastname!=NULL,emp.lastname,'')),'') as employee,IFNULL(bt.branch_trans_code,'') as branch_trans_code,
    bt.transfer_item_type,IFNULL(date_format(bt.approved_datetime,'%d-%m-%Y'),'') as approved_date,
    IFNULL(date_format(bt.dwnload_datetime,'%d-%m-%Y'),'') as download_date,
    IFNULL(ep.firstname,'') as approved_by,IFNULL(ed.firstname,'') as downloaded_by
    FROM ret_branch_transfer bt
    Left join ret_brch_transfer_tag_items tag on tag.transfer_id=bt.branch_transfer_id
    LEFT JOIN branch b ON b.id_branch=bt.transfer_from_branch
    LEFT JOIN branch br ON br.id_branch=bt.transfer_to_branch
    LEFT JOIN employee emp ON emp.id_employee=bt.create_by
    LEFT JOIN employee ep ON ep.id_employee = bt.approved_by
    LEFT JOIN employee ed ON ed.id_employee = bt.downloaded_by
    where tag.tag_id=".$tag_id);
    //print_r($this->db->last_query());exit;
    return $sql->result_array();
}
function get_section_tag_det($tag_id)
{
            $sql=$this->db->query("SELECT rt.id_sec_tag_status_log,date_format(rt.date,'%d-%m-%Y') as date,ifnull(ro.section_name,'-')as from_section,ifnull(rn.section_name,'-') as to_section,
            emp.firstname as employee
            FROM ret_section_tag_status_log rt
            left join ret_section ro on ro.id_section = rt.from_section
            left join employee emp on emp.id_employee = rt.created_by
            left join ret_section rn on rn.id_section = rt.to_section
            where rt.tag_id=".$tag_id." and rt.status = 0");
    //print_r($this->db->last_query());exit;
    return $sql->result_array();
}
function get_scan_details($tag_id)
{
            $sql=$this->db->query("SELECT rs.tag_id,date_format(rs.date_add,'%d-%m-%Y') as date, concat(emp.firstname,' ',if(emp.lastname!=NULL,emp.lastname,'')) as employee
            FROM ret_tag_scanned rs
            left join employee emp on emp.id_employee = rs.created_by
            where rs.tag_id=".$tag_id." ");
    //print_r($this->db->last_query());exit;
    return $sql->result_array();
}
function get_tag_stock_details($tag_id)
{
            $sql=$this->db->query("SELECT rs.tag_id,IFNULL(concat(emp.firstname,' ',if(emp.lastname!=NULL,emp.lastname,'')),'')as created_by, IFNULL(date_format(re.created_on,'%d-%m-%Y'),'') as created_date,
            IFNULL(date_format(rs.received_date,'%d-%m-%Y'),'')as received_date,IFNULL(concat(ep.firstname,' ',if(ep.lastname!=NULL,ep.lastname,'')),'') as received_by,
            concat(k.firstname,' ',if(k.lastname!=NULL,k.lastname,'')) as karigar,IFNULL(re.issue_no,'') as issue_no,
            if(re.issue_type=1,'Repair',if(re.issue_type=2,'Marketing','Photoshooting')) as issue_type,
            IFNULL(tag.tag_code,'')as tag_code,IF(re.issued_to = 1, (select c.firstname from customer c left join ret_stock_issue re ON re.id_customer = c.id_customer WHERE re.issued_to=1 and re.id_stock_issue =rs.id_stock_issue),
             IF(re.issued_to = 2, (select e.firstname from employee e left join ret_stock_issue re ON re.id_employee = e.id_employee WHERE re.issued_to=2 and re.id_stock_issue =rs.id_stock_issue),
             IF(re.issued_to = 3, (select k.firstname from ret_karigar k left join ret_stock_issue re ON re.id_karigar = k.id_karigar WHERE re.issued_to=3 and re.id_stock_issue =rs.id_stock_issue), ''))) as issued_to
            FROM ret_stock_issue re
            left join ret_stock_issue_detail rs on rs.id_stock_issue = re.id_stock_issue
            left join ret_taging tag on tag.tag_id = rs.tag_id
            left join employee emp on emp.id_employee = re.created_by
            left join employee ep on ep.id_employee = rs.received_by
            LEFT JOIN ret_karigar k ON k.id_karigar = re.id_karigar
            where rs.tag_id=".$tag_id." ");
    // print_r($this->db->last_query());exit;
    return $sql->result_array();
}
function get_history_images($tag_id)
{
    $sql = $this->db->query("SELECT * FROM `ret_taging_images` where tag_id=".$tag_id."");
    return $sql->result_array();
}
function get_tagItemStones($tagId)
{
    $stonequery = $this->db->query("SELECT rets.stone_id as stone_id, sum(pieces) as pieces, sum(wt) as stonewt
                                    FROM ret_taging_stone as rets
                                    LEFT JOIN ret_stone as st ON st.stone_id = rets.stone_id
                                    WHERE st.stone_type = 1 AND rets.tag_id = '".$tagId."'
                                    GROUP BY rets.stone_id");
    if($stonequery->num_rows() > 0){
        return $stonequery->result_array();
    }else{
        return array();
    }
}
function get_other_metal_details($tagid)
{
     $data = $this->db->query("Select * from ret_tag_other_metals where tag_other_itm_tag_id = $tagid");
    return $data->result_array();
}
function get_tag_stone_details($tagId)
{
    $stonequery = $this->db->query("SELECT s.tag_stone_id,s.tag_id,s.pieces as stone_pcs,s.wt as stone_wt,s.amount as stone_price,s.stone_id,s.certification_cost,s.rate_per_gram as stone_rate,st.stone_name,
                                    um.uom_short_code,s.is_apply_in_lwt as show_in_lwt,st.stone_type,s.uom_id as stone_uom_id,um.uom_name,
                                    ifnull(qc.code,'')as quality_code,ifnull(rc.clarity,'')as clarity,ifnull(ro.color,'')as color,ifnull(rt.cut,'')as cut,ifnull(rs.name,'') as shape,
                                    if(s.stone_cal_type=1,'PER GRM','PER PCS') as stone_calc_type,if(s.stone_cal_type=1,'Weight','Pieces') as stone_cal_type
                                    FROM ret_taging_stone as s
                                    LEFT JOIN ret_stone st ON st.stone_id=s.stone_id
                                    LEFT JOIN ret_uom um ON um.uom_id = st.uom_id
                                    LEFT JOIN ret_quality_code as qc ON qc.quality_id = s.stone_quality_id
                                    LEFT JOIN ret_clarity rc  on rc.id_clarity = qc.clarity_id
                                    LEFT JOIN ret_color ro  on ro.id_color = qc.color_id
                                    LEFT JOIN ret_cut rt  on rt.id_cut = qc.cut_id
                                    LEFT JOIN ret_shape rs on rs.shape_id = qc.shape_id
                                    WHERE s.tag_id = '".$tagId."'");
    if($stonequery->num_rows() > 0){
        return $stonequery->result_array();
    }else{
        return array();
    }
}
function get_tagItemOtherMetal($tagId)
{
    $metalquery = $this->db->query("SELECT tag_other_itm_metal_id as item_metal, sum(tag_other_itm_pcs) as pieces, sum(tag_other_itm_grs_weight) as grosswt
                                    FROM ret_tag_other_metals as rets
                                    WHERE rets.tag_other_itm_tag_id = '".$tagId."'
                                    GROUP BY tag_other_itm_metal_id");
    if($metalquery->num_rows() > 0){
        return $metalquery->result_array();
    }else{
        return array();
    }
}
function get_tag_det($tag_id)
{
    $sql=$this->db->query("SELECT l.tag_id,IFNULL(b.name,'') as from_branch,IFNULL(br.name,'') as to_branch,date_format(l.date,'%d-%m-%Y') as date,
    IF(l.status=0,'Stock Inward',if(l.status=1,'Sold Out',IF(l.status=2,'Deleted',IF(l.status=3,'Other Issue',if(l.status=4,'In Transit',IF(l.status=5,'Deleted For Stock','Bill Cancelled')))))) as tag_status
    FROM ret_taging_status_log l
    LEFT JOIN branch b ON b.id_branch=l.from_branch
    LEFT JOIN branch br ON br.id_branch=l.to_branch
    where l.tag_id=".$tag_id." and l.status!=1");
    //print_r($this->db->last_query());exit;
    return $sql->result_array();
}
function getTagEstDetails($tag_id)
{
    $sql=$this->db->query("SELECT e.estimation_id,e.esti_no,date_format(e.estimation_datetime,'%d-%m-%Y') as date_add,IFNULL(bill.bill_id,'') as bill_id,
    ifnull(b.name,'') as branch,concat(c.firstname,' ',if(c.lastname!=NULL,c.lastname,'')) as customer,
    c.mobile
    FROM ret_estimation e
    LEFT JOIN branch b ON b.id_branch = e.id_branch
    LEFT JOIN customer c ON c.id_customer = e.cus_id
    LEFT JOIN ret_billing bill ON bill.bill_id = e.estbillid
    LEFT JOIN ret_estimation_items est ON est.esti_id = e.estimation_id
    WHERE est.tag_id=".$tag_id."");
    //print_r($this->db->last_query());exit;
    $result = $sql->result_array();
    foreach($result as $r){
        $r['bill_no'] =$r['bill_id']!=''? $this->get_bill_no_format_detail($r['bill_id']):'';
        $return_data[]= $r;
    }
    return $return_data;
}
function getTagBillDetails($tag_id)
{
    $sql=$this->db->query("SELECT IFNULL(bill.bill_no,'') as bill_no,
    date_format(bill.bill_date,'%d-%m-%Y') as date_add,IFNULL(bill.bill_id,'') as bill_id,c.mobile,concat(c.firstname,' ',if(c.lastname!=NULL,c.lastname,'')) as customer,ifnull(b.name,'') as branch
    FROM ret_billing bill
    LEFT JOIN ret_bill_details bd on bd.bill_id = bill.bill_id
    LEFT JOIN branch b ON b.id_branch = bill.id_branch
    LEFT JOIN customer c ON c.id_customer = bill.bill_cus_id
    WHERE bd.tag_id=".$tag_id."
   ");
    //print_r($this->db->last_query());exit;
    $result = $sql->result_array();
    foreach($result as $r){
        $r['bill_no'] =$r['bill_id']!=''? $this->get_bill_no_format_detail($r['bill_id']):'';
        $return_data[]= $r;
    }
    return $return_data;
}
//Tag Movement History
        function customer_sales_analysis($data)
        {
            $from_date=$data['from_date'];
            $to_date=$data['to_date'];
            $result = array();
            $filter = "";
            $wh=" ";
            $HAVING_FILTER="";
            //	print_r($data);exit;
            foreach ($data['filter_condtions'] as $i => $element)
            {
            //print_r($element);
                $whs='';
                if($element['methods']=='Between' && $element['values']!='' && $element['btw_values']!='')
                {
                    if($element['name'] =='bill_tot.tot_discount' || $element['name'] =='bill_tot.item_cost' || $element['name'] =='tot_silver.silver_wt'  || $element['name'] =='tot_gold.gold_wt' || $element['name'] =='bill_tot.bill_counts'){
                         $HAVING = $element['name']."  ".$element['methods']."  ". $element['values']." AND ".$element['btw_values'] ."  ".$element['flit_operators']."  ";
                    }else if($element['name'] =='last_biil_date'){
                        $from_date='';
                        $to_date='';
                        $days =$element['values'];
                        $days2 =$element['btw_values'];
                        $t = strtotime("- ".$days." days");
                        $t2 = strtotime("- ".$days2." days");
                        $date= date("Y-m-d", $t);
                        $date2= date("Y-m-d", $t2);
                        $HAVING = "(date(max(bill.bill_date))  ".$element['methods']."  '".$date."'  AND  ".$element['btw_values'] ." ".$element['flit_operators']."  )";
                    }else if ($element['name']  != '' ){
                        $bill_type =$element['name']." ".$element['methods']." ". $element['values']." AND ".$element['btw_values'] ."  ".$element['flit_operators']."  ";
                    }
                }else if($element['methods']=='Between' && $element['from_date']!='' && $element['to_date']!='')
                {
                    $from_date='';
                    $to_date='';
                    if($element['name']  != '' ){
                        $act_from_date=$element['from_date'] ;
                        $act_to_date=$element['to_date'] ;
                        $from_date_bt = date("Y-m-d", strtotime($act_from_date));
                        $to_date_bt = date("Y-m-d", strtotime($act_to_date));
                        $values=$element['values']." AND ".$element['btw_values'];
                        $bill_type =$element['name']." ".$element['methods']." '".$from_date_bt."' AND '" .$to_date_bt ."'  ".$element['flit_operators']."  ";
                    }
                }elseif ($element['methods']!='Between' && $element['values']!='')
                {
                    if($element['name'] =='bill_tot.tot_discount' || $element['name'] =='bill_tot.item_cost' || $element['name'] =='tot_silver.silver_wt' || $element['name'] =='tot_gold.gold_wt' || $element['name'] =='bill_tot.bill_counts'  ){
                       $HAVING = $element['name']."  ".$element['methods']."  ". $element['values'] ."  ".$element['flit_operators']."  ";
                    }else if($element['name'] =='last_biil_date'){
                        $from_date='';
                        $to_date='';
                        $days =$element['values'];
                        $t = strtotime("- ".$days." days");
                        $date= date("Y-m-d", $t);
                        $HAVING = "(date(max(bill.bill_date))  ".$element['methods']."  '".$date."'  ".$element['flit_operators']."  )";
                    }else{
                        $bill_type = $element['name']."  ".$element['methods']."  ". $element['values'] ."  ".$element['flit_operators']."  ";
                    }
                }elseif ($element['methods']!='Between' && $element['from_date']!=''){
                        $from_date='';
                        $to_date='';
                        if($element['name']  != '' && $element['methods'] != '' ){
                            $act_from_date=$element['from_date'] ;
                            $from_date_bt = date("Y-m-d", strtotime($act_from_date));
                            $bill_type=$element['name']."  ".$element['methods']."  '". $from_date_bt ."'  ".$element['flit_operators']."  ";
                        }
                }
                $wh=$wh.$whs;
                $filter = $filter.$bill_type;
                $HAVING_FILTER = $HAVING_FILTER.$HAVING;
                $HAVING='';
                $bill_type='';
            }
            // print_r($filter);
            // 	print_r($data['filter_condtions']);exit;
            // 	echo $filter;exit;
            if($filter != '' || $HAVING_FILTER != '' ){
                $sql=$this->db->query("SELECT c.firstname,c.id_customer,c.mobile,br.name as branch_name, IFNULL(tot_gold.gold_wt,0) as goldwt,bill_tot.tot_discount,bill_tot.item_cost,bill_tot.gross_wt,
                DATE_FORMAT(max(bill.bill_date),'%d-%m-%Y') as last_billdate,IFNULL(esti.tot_est,0) as estimation_no, IFNULL(bill_tot.bill_counts,0) as bill_count,
                IFNULL(tot_silver.silver_wt,0) as silverwt,IFNULL(tot_silver.tot_discount,0) as discount,tot_silver.silver_wt,tot_gold.gold_wt,
                IFNULL(fixed_rate.item_cost,0) as tot_fixed_rate,IFNULL(fixed_rate.fixed_discount,0) as fixed_discount,bill_tot.bill_counts,
                IF(c.is_vip=1,'YES','NO') as vip_customer,IFNULL(addr.address1,'') as address1,IFNULL(addr.address2,'') as address2,
                IFNULL(ci.name,'') as city,IFNULL(st.name,'') as state,IFNULL(vil.village_name,'') as village,IFNULL(c.pan,'') as pan,
                IFNULL('-','') as aadharid,IFNULL(c.gst_number,'') as gst
                FROM ret_billing bill
                LEFT JOIN customer c on c.id_customer=bill.bill_cus_id
                LEFT JOIN address addr on addr.id_customer = c.id_customer
                LEFT JOIN city ci on ci.id_city = addr.id_city
                LEFT JOIN state st on st.id_state = addr.id_state
                LEFT JOIN village vil on vil.id_village = c.id_village
                LEFT JOIN branch br on br.id_branch =bill.id_branch
                left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                left join ret_taging as  t on t.tag_id=bill_det.tag_id
                left join ret_product_master as pro on pro.pro_id=bill_det.product_id
                left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                left join (select count(est.estimation_id) as tot_est,est.cus_id
                        from ret_estimation est
                        left join customer as c on c.id_customer=est.cus_id where cus_id is not null
                        GROUP by cus_id)as esti on esti.cus_id=c.id_customer
                left join (select sum(bill_det.gross_wt) as gross_wt ,COUNT( DISTINCT bill.bill_id) as bill_counts,bill.bill_cus_id ,sum(DISTINCT bill.tot_discount) as tot_discount,sum(bill_det.item_cost) as item_cost
                        from ret_billing as bill
                        left join customer as c on c.id_customer=bill.bill_cus_id
                        left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                        left join branch b on (b.id_branch=c.id_branch)
                        left join ret_taging as  t on t.tag_id=bill_det.tag_id
                        left join ret_product_master as pro on pro.pro_id=bill_det.product_id
                        left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                        where bill.bill_status=1  and bill.bill_cus_id  is not null  ".($filter !='' ?"  AND  ".$filter." ":'')."
                        ".($from_date !='' && $to_date != ''?" AND  (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')":'')."
                            ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                        GROUP by bill.bill_cus_id) as bill_tot on bill_tot.bill_cus_id=c.id_customer
                LEFT JOIN (select sum(bill_det.gross_wt) as silver_wt,sum(bill.tot_discount) as tot_discount,c.id_customer
                        from ret_billing as bill
                        left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                        left join ret_taging as  t on t.tag_id=bill_det.tag_id
                        left join ret_product_master as pro on pro.pro_id=bill_det.product_id
                        left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                        left join metal as m on(m.id_metal=cat.id_metal)
                        left join customer as c on(c.id_customer=bill.bill_cus_id)
                        left join branch b on (b.id_branch=c.id_branch)
                        where bill.bill_status=1 and m.id_metal=2 and bill_det.status=1
                        ".($from_date !='' && $to_date != ''?" AND  (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')":'')."
                    ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                    ".($filter !='' ?"  AND  ".$filter." ":'')."
                        group by c.id_customer) as tot_silver on tot_silver.id_customer=c.id_customer
                LEFT JOIN (select sum(bill_det.gross_wt) as gold_wt ,sum(bill.tot_discount) as tot_discount,c.id_customer
                        from ret_billing as bill
                    left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                    left join ret_taging as  t on t.tag_id=bill_det.tag_id
                    left join ret_product_master as pro on pro.pro_id=bill_det.product_id
                    left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                    left join metal as m on(m.id_metal=cat.id_metal)
                    left join customer as c on(c.id_customer=bill.bill_cus_id)
                    left join branch b on (b.id_branch=c.id_branch)
                    where bill.bill_status=1 and m.id_metal=1 and bill_det.status=1
                    ".($from_date !='' && $to_date != ''?" AND  (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')":'')."
                    ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                    ".($filter !='' ?"  AND  ".$filter." ":'')."
                    group by c.id_customer) as tot_gold on tot_gold.id_customer=c.id_customer
                left join(SELECT sum(bill_det.item_cost) as item_cost,sum(bill_det.gross_wt) as fixed_weight,
                sum(bill.tot_discount) as fixed_discount,c.id_customer
                        from ret_billing as bill
                        left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                        left join ret_taging as  t on t.tag_id=bill_det.tag_id
                        left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
                        left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                        left join metal as m on(m.id_metal=cat.id_metal)
                        left join customer as c on(c.id_customer=bill.bill_cus_id)
                        left join branch b on (b.id_branch=c.id_branch)
                        LEFT join village v on (v.id_village=c.id_village)
                        LEFT JOIN village_zone z on (z.id_zone=v.id_zone)
                        where bill.bill_status=1 and bill_det.calculation_based_on = 3 and t.tag_status=1
                        ".($from_date !='' && $to_date != ''?" AND  (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')":'')."
                        ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                        ".($filter !='' ?"  AND  ".$filter." ":'')."
                        group by c.id_customer) as fixed_rate on fixed_rate.id_customer=c.id_customer
                WHERE bill.bill_cus_id is not null  AND tot_gold.gold_wt!=0 or tot_silver.silver_wt !=0
                ".($filter !='' ?"  AND  ".$filter." ":'')."
                ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                ".($from_date !='' && $to_date != ''?" AND  (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')":'')."
                GROUP BY bill.bill_cus_id
                HAVING  c.id_customer IS NOT NULL and bill_tot.bill_counts IS NOT NULL ".($HAVING_FILTER != ''?"AND ".$HAVING_FILTER." ":'')."
                ");
                // print_r($this->db->last_query());exit;
                return $sql->result_array();
            }
            else{
                $from_date=$data['from_date'];
                $to_date=$data['to_date'];
                $sql=$this->db->query("SELECT c.firstname,c.id_customer,c.mobile,br.name as branch_name,
                        DATE_FORMAT(max(b.bill_date),'%d-%m-%Y') as last_billdate,IFNULL(esti.tot_est,0) as estimation_no, IFNULL(bill_tot.bill_count,0) as bill_count,bill_tot.tot_discount,
                        IFNULL(bill_tot.item_cost,0) as item_cost,IFNULL(tot_gold.gold_wt,0) as goldwt,
                        IFNULL(tot_silver.silver_wt,0) as silverwt,IFNULL(tot_silver.tot_discount,0) as discount,
                        IFNULL(fixed_rate.item_cost,0) as tot_fixed_rate,IFNULL(fixed_rate.fixed_discount,0) as fixed_discount,
                        IF(c.is_vip=1,'YES','NO') as vip_customer,IFNULL(addr.address1,'') as address1,IFNULL(addr.address2,'') as address2,
                        IFNULL(ci.name,'') as city,IFNULL(st.name,'') as state,IFNULL(vil.village_name,'') as village,IFNULL(c.pan,'') as pan,
                        IFNULL('-','') as aadharid,IFNULL(c.gst_number,'') as gst
                        FROM ret_billing b
                        LEFT JOIN customer c on c.id_customer=b.bill_cus_id
                        LEFT JOIN branch br on br.id_branch =b.id_branch
                        LEFT JOIN address addr on addr.id_customer = c.id_customer
                        LEFT JOIN city ci on ci.id_city = addr.id_city
                        LEFT JOIN state st on st.id_state = addr.id_state
                        LEFT JOIN village vil on vil.id_village = c.id_village
                        left join (select count( est.estimation_id) as tot_est,est.cus_id
                                from ret_estimation est
                                left join customer as c on c.id_customer=est.cus_id
                                where cus_id is not null and
                                (date(est.estimation_datetime) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
                                ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and est.id_branch=".$data['id_branch']."" :'')."
                                GROUP by cus_id)as esti on esti.cus_id=c.id_customer
                        left join (select COUNT(DISTINCT bill.bill_id) as bill_count,bill.bill_cus_id ,sum(DISTINCT bill.tot_discount) as tot_discount,sum(bill_det.item_cost) as item_cost
                                from ret_billing as bill
                                left join customer as c on c.id_customer=bill.bill_cus_id
                                left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                                left join branch b on (b.id_branch=c.id_branch)
                                where  bill.bill_status=1  and bill.bill_cus_id  is not null and
                                (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
                                ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                                GROUP by bill.bill_cus_id) as bill_tot on bill_tot.bill_cus_id=c.id_customer
                        LEFT JOIN (select sum(bill_det.gross_wt) as silver_wt,bill.tot_discount as tot_discount,c.id_customer
                                from ret_billing as bill
                                left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                                left join ret_taging as  t on t.tag_id=bill_det.tag_id
                                left join ret_product_master as pro on pro.pro_id=bill_det.product_id
                                left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                                left join metal as m on(m.id_metal=cat.id_metal)
                                left join customer as c on(c.id_customer=bill.bill_cus_id)
                                left join branch b on (b.id_branch=c.id_branch)
                                where bill.bill_status=1 and m.id_metal=2 and bill_det.status=1 and
                                (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
                            ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                                group by c.id_customer) as tot_silver on tot_silver.id_customer=c.id_customer
                                LEFT JOIN (select sum(bill_det.gross_wt) as gold_wt ,bill.tot_discount as tot_discount,c.id_customer
                                from ret_billing as bill
                            left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                            left join ret_taging as  t on t.tag_id=bill_det.tag_id
                            left join ret_product_master as pro on pro.pro_id=bill_det.product_id
                            left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                            left join metal as m on(m.id_metal=cat.id_metal)
                            left join customer as c on(c.id_customer=bill.bill_cus_id)
                            left join branch b on (b.id_branch=c.id_branch)
                            where bill.bill_status=1 and m.id_metal=1 and bill_det.status=1
                            and (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
                            ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                            group by c.id_customer) as tot_gold on tot_gold.id_customer=c.id_customer
                        left join(SELECT sum(bill_det.item_cost) as item_cost, bill.tot_discount as fixed_discount,c.id_customer from ret_billing as bill
                                left JOIN ret_bill_details  as bill_det on(bill_det.bill_id=bill.bill_id)
                                left join ret_taging as  t on t.tag_id=bill_det.tag_id
                                left join ret_product_master as pro on(pro.pro_id=bill_det.product_id)
                                left join ret_category as cat on(cat.id_ret_category=pro.cat_id)
                                left join metal as m on(m.id_metal=cat.id_metal)
                                left join customer as c on(c.id_customer=bill.bill_cus_id)
                                left join branch b on (b.id_branch=c.id_branch)
                                LEFT join village v on (v.id_village=c.id_village)
                                LEFT JOIN village_zone z on (z.id_zone=v.id_zone)
                                where bill.bill_status=1 and bill_det.calculation_based_on = 3 and t.tag_status=1 and
                                (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
                                ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and bill.id_branch=".$data['id_branch']."" :'')."
                                group by c.id_customer) as fixed_rate on fixed_rate.id_customer=c.id_customer
                        WHERE b.bill_cus_id is not null
                        ".($data['id_branch']!='' && $data['id_branch'] >0 ? " and  b.id_branch=".$data['id_branch']."" :'')." and
                        (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($from_date))."' AND '".date('Y-m-d',strtotime($to_date))."')
                        GROUP BY b.bill_cus_id");
            // print_r($this->db->last_query());exit;
            return $sql->result_array();
        }
    }
    function dashboard_ordermanagementlist($from_date,$to_date,$type,$id_branch,$id_product,$id_design,$id_sub_design)
    {
        switch($type)
        {
            // 0-> Pending 1->Process 2-> Confirm 3->Work in progress 4->delivery ready 5-> delivered 6->Canceled 7->Closed
            case "1": // type 1 is customer order pending
                 $data=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,c.order_no,b.name as branch_name,od.weight,od.wast_percent,od.mc,od.totalitems,od.size,pro.product_name,des.design_name,m.order_status,
                 date_format(c.order_date,'%d-%m-%Y') as order_date,bill_det.tag_id,IFNULL(bill.bill_no,'') as bill_no,bill.bill_id,m.color,
                 date_format(od.delivered_date,'%d-%m-%Y') as delivered_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type,
                 date_format(od.cus_due_date,'%d-%m-%Y') as cus_due_date,od.id_orderdetails,
                 IFNULL(sd.sub_design_name,'') as sub_design_name,IFNULL(tag.tag_code,'') as tag_code,IFNULL(purdet.karigar_name,'') as karigar_name,
                 IFNULL(purdet.smith_due_date,'') as smith_due_date,IFNULL(purdet.pur_no,'') as pur_no,IFNULL(purdet.purord_id,'') as purord_id,
                 ifnull(od.less_wt,'') as less_wt,ifnull(od.net_wt,'') as net_wt,ifnull(od.stn_amt,'')as stn_amt,ifnull(od.description,'') as description,COALESCE(rbill.advance_amount, 0) as advance_amount,
                 COALESCE(adjbill.advance_amount, 0) as advance_adj_amount, e.firstname as emp_name, e.id_employee,od.assigned_by,od.assigned_on
                 FROM customerorderdetails od
                 LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
                 LEFT JOIN ret_product_master pro ON pro.pro_id=od.id_product
                 LEFT JOIN ret_design_master des ON des.design_no=od.design_no
                 LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design=od.id_sub_design
                 LEFT JOIN customer cus ON cus.id_customer=c.order_to
                 LEFT JOIN branch b ON b.id_branch=c.order_from
                 LEFT JOIN order_status_message m ON m.id_order_msg=od.orderstatus
                 LEFT JOIN ret_taging tag on tag.id_orderdetails=od.id_orderdetails
                 LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                 LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id and bill.bill_status = 1
                 LEFT join employee e on e.id_employee=c.order_taken_by
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as rbill ON rbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.adjusted_bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as adjbill ON adjbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT det.id_customerorder,det.id_product,det.design_no,det.id_sub_design,k.firstname as karigar_name,
                         date_format(det.smith_due_date,'%d-%m-%Y') as smith_due_date,purord.cus_ord_ref,IFNULL(purord.pur_no,'') as pur_no,det.id_customerorder as purord_id
                          FROM customerorderdetails det
                          LEFT JOIN customerorder purord ON purord.id_customerorder = det.id_customerorder
                          LEFT JOIN joborder j ON j.id_order = det.id_orderdetails
                          LEFT JOIN ret_karigar k ON k.id_karigar = j.id_vendor) as purdet ON purdet.cus_ord_ref = c.id_customerorder AND od.id_product = purdet.id_product AND od.design_no = purdet.design_no AND od.id_sub_design = purdet.id_sub_design
                 where c.order_type=2 AND c.pur_no IS NULL AND od.orderstatus=0
                ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
                ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
                ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
                ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
                Group BY od.id_orderdetails order by od.id_orderdetails asc
                ");
                // print_r($this->db->last_query());exit;
                return $data->result_array();
            break;
            case "2": //type 2  is stock order pending
                $data=$this->db->query("SELECT co.id_orderdetails,co.orderno,co.id_product,co.design_no,co.id_sub_design,co.id_karigar,IFNULL(DATE_FORMAT(co.order_date,'%d-%m-%Y'),'-') as order_date,IFNULL(DATE_FORMAT(co.cus_due_date,'%d-%m-%Y'),'-') as cus_due_date,IFNULL(DATE_FORMAT(co.smith_remainder_date,'%d-%m-%Y'),'-') as smith_remainder_date,co.orderstatus,IFNULL(co.tag_id,'-') as tag_id,IFNULL(DATE_FORMAT(co.delivered_date,'%d-%m-%Y'),'-') as Delivered_date,IFNULL(co.bill_id,'') as bill_id,IFNULL(k.firstname,'-') as karigarname,IFNULL(pro.product_name,'-') as product_name,des.design_name,sd.sub_design_name,IF(co.orderstatus=0,'Pending',(IF(co.orderstatus=1,'Process',(IF(co.orderstatus=2,'Confirm',(IF(co.orderstatus=3,'Work in Progress',IF(co.orderstatus=4,'Delivery Ready',(IF(co.orderstatus=5,'Delivered',(IF(co.orderstatus=6,'Cancelled',(IF(co.orderstatus=7,'Closed','')))))))))))))) as order_status,IFNULL(img.image,'') as image,IFNULL(tag.tag_code,'-') as tag_code,IFNULL(c.pur_no,'-') as purchase_no,IFNULL(bill.bill_no,'-') as bill_no,IFNULL(DATE_FORMAT(bill.bill_date,'%d-%m-%Y'),'-') as bill_date,IFNULL(cus.firstname,'-') as firstname,IFNULL(cus.mobile,'-') as mobile,IFNULL(k.firstname,'-') as kar_name,IFNULL(k.contactno1,'-') as kar_mobile,IFNULL(DATE_FORMAT(co.smith_due_date,'%d-%m-%Y'),'-') as smith_due_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type
                FROM customerorderdetails as co
                LEFT JOIN customerorder as c on (c.id_customerorder=co.id_customerorder)
                LEFT JOIN customer as cus on (cus.id_customer=c.order_to)
                LEFT JOIN ret_karigar as k ON k.id_karigar =co.id_karigar
                LEFT JOIN ret_product_master as pro ON pro.pro_id = co.id_product
                LEFT JOIN ret_design_master des ON des.design_no = co.design_no
                LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = co.id_sub_design
                LEFT JOIN customer_order_image img ON img.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_taging tag ON tag.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id
                WHERE co.id_orderdetails is not null and ortertype=1 and co.orderstatus=0
               ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
                ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
                ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
                ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
               order by co.id_orderdetails asc");
               return $data->result_array();
            break;
            case "3": //type 3 customer order work in progress
                $data=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,c.order_no,b.name as branch_name,od.weight,od.wast_percent,od.mc,od.totalitems,od.size,pro.product_name,des.design_name,m.order_status,
                 date_format(c.order_date,'%d-%m-%Y') as order_date,bill_det.tag_id,IFNULL(bill.bill_no,'') as bill_no,bill.bill_id,m.color,
                 date_format(od.delivered_date,'%d-%m-%Y') as delivered_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type,
                 date_format(od.cus_due_date,'%d-%m-%Y') as cus_due_date,od.id_orderdetails,
                 IFNULL(sd.sub_design_name,'') as sub_design_name,IFNULL(tag.tag_code,'') as tag_code,IFNULL(k.firstname,'') as karigar_name,
                 IFNULL(od.smith_due_date,'') as smith_due_date,IFNULL(purdet.pur_no,'') as pur_no,IFNULL(purdet.purord_id,'') as purord_id,
                 ifnull(od.less_wt,'') as less_wt,ifnull(od.net_wt,'') as net_wt,ifnull(od.stn_amt,'')as stn_amt,ifnull(od.description,'') as description,COALESCE(rbill.advance_amount, 0) as advance_amount,
                 COALESCE(adjbill.advance_amount, 0) as advance_adj_amount, e.firstname as emp_name, e.id_employee,od.assigned_by,od.assigned_on
                 FROM customerorderdetails od
                 LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
                 LEFT JOIN ret_product_master pro ON pro.pro_id=od.id_product
                 LEFT JOIN ret_design_master des ON des.design_no=od.design_no
                 LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design=od.id_sub_design
                 LEFT JOIN customer cus ON cus.id_customer=c.order_to
                 LEFT JOIN branch b ON b.id_branch=c.order_from
                 LEFT JOIN order_status_message m ON m.id_order_msg=od.orderstatus
                 LEFT JOIN ret_taging tag on tag.id_orderdetails=od.id_orderdetails
                 LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                 LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id and bill.bill_status = 1
                 LEFT join employee e on e.id_employee=c.order_taken_by
                 LEFT JOIN ret_karigar k ON k.id_karigar = od.id_karigar
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as rbill ON rbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.adjusted_bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as adjbill ON adjbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT det.id_customerorder,det.id_product,det.design_no,det.id_sub_design,k.firstname as karigar_name,
                         date_format(det.smith_due_date,'%d-%m-%Y') as smith_due_date,purord.cus_ord_ref,IFNULL(purord.pur_no,'') as pur_no,det.id_customerorder as purord_id
                          FROM customerorderdetails det
                          LEFT JOIN customerorder purord ON purord.id_customerorder = det.id_customerorder
                          LEFT JOIN joborder j ON j.id_order = det.id_orderdetails
                          LEFT JOIN ret_karigar k ON k.id_karigar = j.id_vendor) as purdet ON purdet.cus_ord_ref = c.id_customerorder AND od.id_product = purdet.id_product AND od.design_no = purdet.design_no AND od.id_sub_design = purdet.id_sub_design
                 where c.order_type=2 AND c.pur_no IS NULL AND od.orderstatus=3
                ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
                ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
                ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
                ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
                order by od.id_orderdetails asc");
                //  print_r($this->db->last_query());exit;
                return $data->result_array();
            break;
            case "4": //type 4 is stock order work in progress
                $data=$this->db->query("SELECT co.id_orderdetails,co.orderno,co.id_product,co.design_no,co.id_sub_design,co.id_karigar,IFNULL(DATE_FORMAT(co.order_date,'%d-%m-%Y'),'-') as order_date,IFNULL(DATE_FORMAT(co.cus_due_date,'%d-%m-%Y'),'-') as cus_due_date,IFNULL(DATE_FORMAT(co.smith_remainder_date,'%d-%m-%Y'),'-') as smith_remainder_date,co.orderstatus,IFNULL(co.tag_id,'-') as tag_id,IFNULL(DATE_FORMAT(co.delivered_date,'%d-%m-%Y'),'-') as Delivered_date,IFNULL(co.bill_id,'') as bill_id,IFNULL(k.firstname,'-') as karigarname,IFNULL(pro.product_name,'-') as product_name,des.design_name,sd.sub_design_name,IF(co.orderstatus=0,'Pending',(IF(co.orderstatus=1,'Process',(IF(co.orderstatus=2,'Confirm',(IF(co.orderstatus=3,'Work in Progress',IF(co.orderstatus=4,'Delivery Ready',(IF(co.orderstatus=5,'Delivered',(IF(co.orderstatus=6,'Cancelled',(IF(co.orderstatus=7,'Closed','')))))))))))))) as order_status,IFNULL(img.image,'') as image,IFNULL(tag.tag_code,'-') as tag_code,IFNULL(c.pur_no,'-') as purchase_no,IFNULL(bill.bill_no,'-') as bill_no,IFNULL(DATE_FORMAT(bill.bill_date,'%d-%m-%Y'),'-') as bill_date,IFNULL(cus.firstname,'-') as firstname,IFNULL(cus.mobile,'-') as mobile,IFNULL(k.firstname,'-') as kar_name,IFNULL(k.contactno1,'-') as kar_mobile,IFNULL(DATE_FORMAT(co.smith_due_date,'%d-%m-%Y'),'-') as smith_due_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type
                FROM customerorderdetails as co
                LEFT JOIN customerorder as c on (c.id_customerorder=co.id_customerorder)
                LEFT JOIN customer as cus on (cus.id_customer=c.order_to)
                LEFT JOIN ret_karigar as k ON k.id_karigar =co.id_karigar
                LEFT JOIN ret_product_master as pro ON pro.pro_id = co.id_product
                LEFT JOIN ret_design_master des ON des.design_no = co.design_no
                LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = co.id_sub_design
                LEFT JOIN customer_order_image img ON img.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_taging tag ON tag.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id
                WHERE co.id_orderdetails is not null and ortertype=1 and co.orderstatus=3
               ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
               ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
               ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
               ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
               order by co.id_orderdetails asc");
               return $data->result_array();
            break;
            case "5": //type 5 is customer order delivery ready
                $data=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,c.order_no,b.name as branch_name,od.weight,od.wast_percent,od.mc,od.totalitems,od.size,pro.product_name,des.design_name,m.order_status,
                date_format(c.order_date,'%d-%m-%Y') as order_date,bill_det.tag_id,IFNULL(bill.bill_no,'') as bill_no,bill.bill_id,m.color,
                date_format(od.delivered_date,'%d-%m-%Y') as delivered_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type,
                date_format(od.cus_due_date,'%d-%m-%Y') as cus_due_date,od.id_orderdetails,
                IFNULL(sd.sub_design_name,'') as sub_design_name,IFNULL(tag.tag_code,'') as tag_code,IFNULL(purdet.karigar_name,'') as karigar_name,
                IFNULL(purdet.smith_due_date,'') as smith_due_date,IFNULL(purdet.pur_no,'') as pur_no,IFNULL(purdet.purord_id,'') as purord_id,
                ifnull(od.less_wt,'') as less_wt,ifnull(od.net_wt,'') as net_wt,ifnull(od.stn_amt,'')as stn_amt,ifnull(od.description,'') as description,COALESCE(rbill.advance_amount, 0) as advance_amount,
                COALESCE(adjbill.advance_amount, 0) as advance_adj_amount, e.firstname as emp_name, e.id_employee,od.assigned_by,od.assigned_on
                FROM customerorderdetails od
                LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
                LEFT JOIN ret_product_master pro ON pro.pro_id=od.id_product
                LEFT JOIN ret_design_master des ON des.design_no=od.design_no
                LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design=od.id_sub_design
                LEFT JOIN customer cus ON cus.id_customer=c.order_to
                LEFT JOIN branch b ON b.id_branch=c.order_from
                LEFT JOIN order_status_message m ON m.id_order_msg=od.orderstatus
                LEFT JOIN ret_taging tag on tag.id_orderdetails=od.id_orderdetails
                LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id and bill.bill_status = 1
                LEFT join employee e on e.id_employee=c.order_taken_by
                LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                FROM ret_billing_advance rb
                LEFT JOIN ret_billing b ON b.bill_id = rb.bill_id
                where b.bill_status = 1
                Group by rb.id_customerorder) as rbill ON rbill.id_customerorder = c.id_customerorder
                LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                FROM ret_billing_advance rb
                LEFT JOIN ret_billing b ON b.bill_id = rb.adjusted_bill_id
                where b.bill_status = 1
                Group by rb.id_customerorder) as adjbill ON adjbill.id_customerorder = c.id_customerorder
                LEFT JOIN(SELECT det.id_customerorder,det.id_product,det.design_no,det.id_sub_design,k.firstname as karigar_name,
                        date_format(det.smith_due_date,'%d-%m-%Y') as smith_due_date,purord.cus_ord_ref,IFNULL(purord.pur_no,'') as pur_no,det.id_customerorder as purord_id
                         FROM customerorderdetails det
                         LEFT JOIN customerorder purord ON purord.id_customerorder = det.id_customerorder
                         LEFT JOIN joborder j ON j.id_order = det.id_orderdetails
                         LEFT JOIN ret_karigar k ON k.id_karigar = j.id_vendor) as purdet ON purdet.cus_ord_ref = c.id_customerorder AND od.id_product = purdet.id_product AND od.design_no = purdet.design_no AND od.id_sub_design = purdet.id_sub_design
                where c.order_type=2 AND c.pur_no IS NULL AND od.orderstatus=4
               ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
               ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
               ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
               ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
               order by od.id_orderdetails asc");
               return $data->result_array();
            break;
            case "6"://type 6 is Stock order delivery ready
                $data=$this->db->query("SELECT co.id_orderdetails,co.orderno,co.id_product,co.design_no,co.id_sub_design,co.id_karigar,IFNULL(DATE_FORMAT(co.order_date,'%d-%m-%Y'),'-') as order_date,IFNULL(DATE_FORMAT(co.cus_due_date,'%d-%m-%Y'),'-') as cus_due_date,IFNULL(DATE_FORMAT(co.smith_remainder_date,'%d-%m-%Y'),'-') as smith_remainder_date,co.orderstatus,IFNULL(co.tag_id,'-') as tag_id,IFNULL(DATE_FORMAT(co.delivered_date,'%d-%m-%Y'),'-') as Delivered_date,IFNULL(co.bill_id,'') as bill_id,IFNULL(k.firstname,'-') as karigarname,IFNULL(pro.product_name,'-') as product_name,des.design_name,sd.sub_design_name,IF(co.orderstatus=0,'Pending',(IF(co.orderstatus=1,'Process',(IF(co.orderstatus=2,'Confirm',(IF(co.orderstatus=3,'Work in Progress',IF(co.orderstatus=4,'Delivery Ready',(IF(co.orderstatus=5,'Delivered',(IF(co.orderstatus=6,'Cancelled',(IF(co.orderstatus=7,'Closed','')))))))))))))) as order_status,IFNULL(img.image,'') as image,IFNULL(tag.tag_code,'-') as tag_code,IFNULL(c.pur_no,'-') as purchase_no,IFNULL(bill.bill_no,'-') as bill_no,IFNULL(DATE_FORMAT(bill.bill_date,'%d-%m-%Y'),'-') as bill_date,IFNULL(cus.firstname,'-') as firstname,IFNULL(cus.mobile,'-') as mobile,IFNULL(k.firstname,'-') as kar_name,IFNULL(k.contactno1,'-') as kar_mobile,IFNULL(DATE_FORMAT(co.smith_due_date,'%d-%m-%Y'),'-') as smith_due_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type
                FROM customerorderdetails as co
                LEFT JOIN customerorder as c on (c.id_customerorder=co.id_customerorder)
                LEFT JOIN customer as cus on (cus.id_customer=c.order_to)
                LEFT JOIN ret_karigar as k ON k.id_karigar =co.id_karigar
                LEFT JOIN ret_product_master as pro ON pro.pro_id = co.id_product
                LEFT JOIN ret_design_master des ON des.design_no = co.design_no
                LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = co.id_sub_design
                LEFT JOIN customer_order_image img ON img.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_taging tag ON tag.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id
                WHERE co.id_orderdetails is not null and ortertype=1 and co.orderstatus=4
               ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
               ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
               ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
               ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
               order by co.id_orderdetails asc");
               return $data->result_array();
            break;
            case "7": //type 7 is customer order Delivered
               $data=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,c.order_no,b.name as branch_name,od.weight,od.wast_percent,od.mc,od.totalitems,od.size,pro.product_name,des.design_name,m.order_status,
                 date_format(c.order_date,'%d-%m-%Y') as order_date,bill_det.tag_id,IFNULL(bill.sales_ref_no,'') as bill_no,bill.bill_id,m.color,
                 date_format(od.delivered_date,'%d-%m-%Y') as delivered_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type,
                 date_format(od.cus_due_date,'%d-%m-%Y') as cus_due_date,od.id_orderdetails,
                 IFNULL(sd.sub_design_name,'') as sub_design_name,IFNULL(tag.tag_code,'') as tag_code,IFNULL(purdet.karigar_name,'') as karigar_name,
                 IFNULL(purdet.smith_due_date,'') as smith_due_date,IFNULL(purdet.pur_no,'') as pur_no,IFNULL(purdet.purord_id,'') as purord_id,
                 ifnull(od.less_wt,'') as less_wt,ifnull(od.net_wt,'') as net_wt,ifnull(od.stn_amt,'')as stn_amt,ifnull(od.description,'') as description,COALESCE(rbill.advance_amount, 0) as advance_amount,
                 COALESCE(adjbill.advance_amount, 0) as advance_adj_amount, e.firstname as emp_name, e.id_employee,od.assigned_by,od.assigned_on
                 FROM customerorderdetails od
                 LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
                 LEFT JOIN ret_product_master pro ON pro.pro_id=od.id_product
                 LEFT JOIN ret_design_master des ON des.design_no=od.design_no
                 LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design=od.id_sub_design
                 LEFT JOIN customer cus ON cus.id_customer=c.order_to
                 LEFT JOIN branch b ON b.id_branch=c.order_from
                 LEFT JOIN order_status_message m ON m.id_order_msg=od.orderstatus
                 LEFT JOIN ret_taging tag on tag.id_orderdetails=od.id_orderdetails
                 LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                 LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id and bill.bill_status = 1
                 LEFT join employee e on e.id_employee=c.order_taken_by
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as rbill ON rbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.adjusted_bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as adjbill ON adjbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT det.id_customerorder,det.id_product,det.design_no,det.id_sub_design,k.firstname as karigar_name,
                         date_format(det.smith_due_date,'%d-%m-%Y') as smith_due_date,purord.cus_ord_ref,IFNULL(purord.pur_no,'') as pur_no,det.id_customerorder as purord_id
                          FROM customerorderdetails det
                          LEFT JOIN customerorder purord ON purord.id_customerorder = det.id_customerorder
                          LEFT JOIN joborder j ON j.id_order = det.id_orderdetails
                          LEFT JOIN ret_karigar k ON k.id_karigar = j.id_vendor) as purdet ON purdet.cus_ord_ref = c.id_customerorder AND od.id_product = purdet.id_product AND od.design_no = purdet.design_no AND od.id_sub_design = purdet.id_sub_design
                 where c.order_type=2 AND c.pur_no IS NULL AND od.orderstatus=5 and bill.bill_type=9
                ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
                ".($from_date != '' ? 'and date(bill.bill_date) BETWEEN "'.$from_date.'" AND "'.$to_date.'"' : '')."
                ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
                ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
                ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
                group by bill.bill_id
                order by od.id_orderdetails asc");
                // print_r($this->db->last_query());exit;
               return $data->result_array();
            break;
            case "8": //type 8 is stock order delivered
                $data=$this->db->query("SELECT co.id_orderdetails,co.orderno,co.id_product,co.design_no,co.id_sub_design,co.id_karigar,IFNULL(DATE_FORMAT(co.order_date,'%d-%m-%Y'),'-') as order_date,IFNULL(DATE_FORMAT(co.cus_due_date,'%d-%m-%Y'),'-') as cus_due_date,IFNULL(DATE_FORMAT(co.smith_remainder_date,'%d-%m-%Y'),'-') as smith_remainder_date,co.orderstatus,IFNULL(co.tag_id,'-') as tag_id,IFNULL(DATE_FORMAT(co.delivered_date,'%d-%m-%Y'),'-') as Delivered_date,IFNULL(co.bill_id,'') as bill_id,IFNULL(k.firstname,'-') as karigarname,IFNULL(pro.product_name,'-') as product_name,des.design_name,sd.sub_design_name,IF(co.orderstatus=0,'Pending',(IF(co.orderstatus=1,'Process',(IF(co.orderstatus=2,'Confirm',(IF(co.orderstatus=3,'Work in Progress',IF(co.orderstatus=4,'Delivery Ready',(IF(co.orderstatus=5,'Delivered',(IF(co.orderstatus=6,'Cancelled',(IF(co.orderstatus=7,'Closed','')))))))))))))) as order_status,IFNULL(img.image,'') as image,IFNULL(tag.tag_code,'-') as tag_code,IFNULL(c.pur_no,'-') as purchase_no,IFNULL(bill.bill_no,'-') as bill_no,IFNULL(DATE_FORMAT(bill.bill_date,'%d-%m-%Y'),'-') as bill_date,IFNULL(cus.firstname,'-') as firstname,IFNULL(cus.mobile,'-') as mobile,IFNULL(k.firstname,'-') as kar_name,IFNULL(k.contactno1,'-') as kar_mobile,IFNULL(DATE_FORMAT(co.smith_due_date,'%d-%m-%Y'),'-') as smith_due_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type
                FROM customerorderdetails as co
                LEFT JOIN customerorder as c on (c.id_customerorder=co.id_customerorder)
                LEFT JOIN customer as cus on (cus.id_customer=c.order_to)
                LEFT JOIN ret_karigar as k ON k.id_karigar =co.id_karigar
                LEFT JOIN ret_product_master as pro ON pro.pro_id = co.id_product
                LEFT JOIN ret_design_master des ON des.design_no = co.design_no
                LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = co.id_sub_design
                LEFT JOIN customer_order_image img ON img.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_taging tag ON tag.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id
                WHERE co.id_orderdetails is not null and ortertype=1 and co.orderstatus=5
               ".($from_date != '' ? 'and date(co.order_date) BETWEEN "'.$from_date.'" AND "'.$to_date.'"' : '')."
               ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
               ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
               ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
               ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
               order by co.id_orderdetails asc");
               return $data->result_array();
            break;
            case "9": //type 9 is Karigar Reminder date for Customer
                $data=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,c.order_no,b.name as branch_name,od.weight,od.wast_percent,od.mc,od.totalitems,od.size,pro.product_name,des.design_name,m.order_status,
                 date_format(c.order_date,'%d-%m-%Y') as order_date,bill_det.tag_id,IFNULL(bill.bill_no,'') as bill_no,bill.bill_id,m.color,
                 date_format(od.delivered_date,'%d-%m-%Y') as delivered_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type,
                 date_format(od.cus_due_date,'%d-%m-%Y') as cus_due_date,od.id_orderdetails,
                 IFNULL(sd.sub_design_name,'') as sub_design_name,IFNULL(tag.tag_code,'') as tag_code,IFNULL(purdet.karigar_name,'') as karigar_name,
                 IFNULL(purdet.smith_due_date,'') as smith_due_date,IFNULL(purdet.pur_no,'') as pur_no,IFNULL(purdet.purord_id,'') as purord_id,
                 ifnull(od.less_wt,'') as less_wt,ifnull(od.net_wt,'') as net_wt,ifnull(od.stn_amt,'')as stn_amt,ifnull(od.description,'') as description,COALESCE(rbill.advance_amount, 0) as advance_amount,
                 COALESCE(adjbill.advance_amount, 0) as advance_adj_amount, e.firstname as emp_name, e.id_employee,od.assigned_by,od.assigned_on
                 FROM customerorderdetails od
                 LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
                 LEFT JOIN ret_product_master pro ON pro.pro_id=od.id_product
                 LEFT JOIN ret_design_master des ON des.design_no=od.design_no
                 LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design=od.id_sub_design
                 LEFT JOIN customer cus ON cus.id_customer=c.order_to
                 LEFT JOIN branch b ON b.id_branch=c.order_from
                 LEFT JOIN order_status_message m ON m.id_order_msg=od.orderstatus
                 LEFT JOIN ret_taging tag on tag.id_orderdetails=od.id_orderdetails
                 LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                 LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id and bill.bill_status = 1
                 LEFT join employee e on e.id_employee=c.order_taken_by
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as rbill ON rbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.adjusted_bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as adjbill ON adjbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT det.id_customerorder,det.id_product,det.design_no,det.id_sub_design,k.firstname as karigar_name,
                         date_format(det.smith_due_date,'%d-%m-%Y') as smith_due_date,purord.cus_ord_ref,IFNULL(purord.pur_no,'') as pur_no,det.id_customerorder as purord_id
                          FROM customerorderdetails det
                          LEFT JOIN customerorder purord ON purord.id_customerorder = det.id_customerorder
                          LEFT JOIN joborder j ON j.id_order = det.id_orderdetails
                          LEFT JOIN ret_karigar k ON k.id_karigar = j.id_vendor) as purdet ON purdet.cus_ord_ref = c.id_customerorder AND od.id_product = purdet.id_product AND od.design_no = purdet.design_no AND od.id_sub_design = purdet.id_sub_design
                 where c.order_type=2 AND c.pur_no IS NULL AND od.orderstatus=3
                 and date(od.smith_due_date) =  '".date('Y-m-d')." '
                ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
                ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
                ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
                ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
                order by od.id_orderdetails asc");
            //    print_r($this->db->last_query());exit;
               return $data->result_array();
            break;
            case "10": //type 10 is Karigar Reminder date for Stock
                $data=$this->db->query("SELECT co.id_orderdetails,co.orderno,co.id_product,co.design_no,co.id_sub_design,co.id_karigar,IFNULL(DATE_FORMAT(co.order_date,'%d-%m-%Y'),'-') as order_date,IFNULL(DATE_FORMAT(co.cus_due_date,'%d-%m-%Y'),'-') as cus_due_date,IFNULL(DATE_FORMAT(co.smith_remainder_date,'%d-%m-%Y'),'-') as smith_remainder_date,co.orderstatus,IFNULL(co.tag_id,'-') as tag_id,IFNULL(DATE_FORMAT(co.delivered_date,'%d-%m-%Y'),'-') as Delivered_date,IFNULL(co.bill_id,'') as bill_id,IFNULL(k.firstname,'-') as karigarname,IFNULL(pro.product_name,'-') as product_name,des.design_name,sd.sub_design_name,IF(co.orderstatus=0,'Pending',(IF(co.orderstatus=1,'Process',(IF(co.orderstatus=2,'Confirm',(IF(co.orderstatus=3,'Work in Progress',IF(co.orderstatus=4,'Delivery Ready',(IF(co.orderstatus=5,'Delivered',(IF(co.orderstatus=6,'Cancelled',(IF(co.orderstatus=7,'Closed','')))))))))))))) as order_status,IFNULL(img.image,'') as image,IFNULL(tag.tag_code,'-') as tag_code,IFNULL(c.pur_no,'-') as purchase_no,IFNULL(bill.bill_no,'-') as bill_no,IFNULL(DATE_FORMAT(bill.bill_date,'%d-%m-%Y'),'-') as bill_date,IFNULL(cus.firstname,'-') as firstname,IFNULL(cus.mobile,'-') as mobile,IFNULL(k.firstname,'-') as kar_name,IFNULL(k.contactno1,'-') as kar_mobile,IFNULL(DATE_FORMAT(co.smith_due_date,'%d-%m-%Y'),'-') as smith_due_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type
                FROM customerorderdetails as co
                LEFT JOIN customerorder as c on (c.id_customerorder=co.id_customerorder)
                LEFT JOIN customer as cus on (cus.id_customer=c.order_to)
                LEFT JOIN ret_karigar as k ON k.id_karigar =co.id_karigar
                LEFT JOIN ret_product_master as pro ON pro.pro_id = co.id_product
                LEFT JOIN ret_design_master des ON des.design_no = co.design_no
                LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = co.id_sub_design
                LEFT JOIN customer_order_image img ON img.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_taging tag ON tag.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id
                WHERE co.id_orderdetails is not null and ortertype=1  and co.orderstatus=3
               and date(co.smith_due_date) =  '".date('Y-m-d')." '
               ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
               ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
               ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
               ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
                order by co.id_orderdetails asc");
            //    print_r($this->db->last_query());exit;
               return $data->result_array();
            break;
            case "11": //type 11 is Karigar Over Due date for Cus
                $data=$this->db->query("SELECT cus.firstname as cus_name,cus.mobile,c.order_no,b.name as branch_name,od.weight,od.wast_percent,od.mc,od.totalitems,od.size,pro.product_name,des.design_name,m.order_status,
                 date_format(c.order_date,'%d-%m-%Y') as order_date,bill_det.tag_id,IFNULL(bill.bill_no,'') as bill_no,bill.bill_id,m.color,
                 date_format(od.delivered_date,'%d-%m-%Y') as delivered_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type,
                 date_format(od.cus_due_date,'%d-%m-%Y') as cus_due_date,od.id_orderdetails,
                 IFNULL(sd.sub_design_name,'') as sub_design_name,IFNULL(tag.tag_code,'') as tag_code,IFNULL(purdet.karigar_name,'') as karigar_name,
                 IFNULL(purdet.smith_due_date,'') as smith_due_date,IFNULL(purdet.pur_no,'') as pur_no,IFNULL(purdet.purord_id,'') as purord_id,
                 ifnull(od.less_wt,'') as less_wt,ifnull(od.net_wt,'') as net_wt,ifnull(od.stn_amt,'')as stn_amt,ifnull(od.description,'') as description,COALESCE(rbill.advance_amount, 0) as advance_amount,
                 COALESCE(adjbill.advance_amount, 0) as advance_adj_amount, e.firstname as emp_name, e.id_employee,od.assigned_by,od.assigned_on
                 FROM customerorderdetails od
                 LEFT JOIN customerorder c ON c.id_customerorder=od.id_customerorder
                 LEFT JOIN ret_product_master pro ON pro.pro_id=od.id_product
                 LEFT JOIN ret_design_master des ON des.design_no=od.design_no
                 LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design=od.id_sub_design
                 LEFT JOIN customer cus ON cus.id_customer=c.order_to
                 LEFT JOIN branch b ON b.id_branch=c.order_from
                 LEFT JOIN order_status_message m ON m.id_order_msg=od.orderstatus
                 LEFT JOIN ret_taging tag on tag.id_orderdetails=od.id_orderdetails
                 LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                 LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id and bill.bill_status = 1
                 LEFT join employee e on e.id_employee=c.order_taken_by
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as rbill ON rbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT rb.id_customerorder,IFNULL(SUM(rb.advance_amount),0) as advance_amount
                 FROM ret_billing_advance rb
                 LEFT JOIN ret_billing b ON b.bill_id = rb.adjusted_bill_id
                 where b.bill_status = 1
                 Group by rb.id_customerorder) as adjbill ON adjbill.id_customerorder = c.id_customerorder
                 LEFT JOIN(SELECT det.id_customerorder,det.id_product,det.design_no,det.id_sub_design,k.firstname as karigar_name,
                         date_format(det.smith_due_date,'%d-%m-%Y') as smith_due_date,purord.cus_ord_ref,IFNULL(purord.pur_no,'') as pur_no,det.id_customerorder as purord_id
                          FROM customerorderdetails det
                          LEFT JOIN customerorder purord ON purord.id_customerorder = det.id_customerorder
                          LEFT JOIN joborder j ON j.id_order = det.id_orderdetails
                          LEFT JOIN ret_karigar k ON k.id_karigar = j.id_vendor) as purdet ON purdet.cus_ord_ref = c.id_customerorder AND od.id_product = purdet.id_product AND od.design_no = purdet.design_no AND od.id_sub_design = purdet.id_sub_design
                 where c.order_type=2 AND c.pur_no IS NULL AND (od.orderstatus=3) and
                 date(od.smith_due_date) <  '".date('Y-m-d')."'
                ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
                ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
                ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
                ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
                order by od.id_orderdetails asc");
                // print_r($this->db->last_query());exit;
               return $data->result_array();
            break;
            case "12": //type 12 is Karigar Over Due date for Stock
                $data=$this->db->query("SELECT co.id_orderdetails,co.orderno,co.id_product,co.design_no,co.id_sub_design,co.id_karigar,IFNULL(DATE_FORMAT(co.order_date,'%d-%m-%Y'),'-') as order_date,IFNULL(DATE_FORMAT(co.cus_due_date,'%d-%m-%Y'),'-') as cus_due_date,IFNULL(DATE_FORMAT(co.smith_remainder_date,'%d-%m-%Y'),'-') as smith_remainder_date,co.orderstatus,IFNULL(co.tag_id,'-') as tag_id,IFNULL(DATE_FORMAT(co.delivered_date,'%d-%m-%Y'),'-') as Delivered_date,IFNULL(co.bill_id,'') as bill_id,IFNULL(k.firstname,'-') as karigarname,IFNULL(pro.product_name,'-') as product_name,des.design_name,sd.sub_design_name,IF(co.orderstatus=0,'Pending',(IF(co.orderstatus=1,'Process',(IF(co.orderstatus=2,'Confirm',(IF(co.orderstatus=3,'Work in Progress',IF(co.orderstatus=4,'Delivery Ready',(IF(co.orderstatus=5,'Delivered',(IF(co.orderstatus=6,'Cancelled',(IF(co.orderstatus=7,'Closed','')))))))))))))) as order_status,IFNULL(img.image,'') as image,IFNULL(tag.tag_code,'-') as tag_code,IFNULL(c.pur_no,'-') as purchase_no,IFNULL(bill.bill_no,'-') as bill_no,IFNULL(DATE_FORMAT(bill.bill_date,'%d-%m-%Y'),'-') as bill_date,IFNULL(cus.firstname,'-') as firstname,IFNULL(cus.mobile,'-') as mobile,IFNULL(k.firstname,'-') as kar_name,IFNULL(k.contactno1,'-') as kar_mobile,IFNULL(DATE_FORMAT(co.smith_due_date,'%d-%m-%Y'),'-') as smith_due_date,if(c.order_for=2,'Customer Order','Stock Order') as order_type
                FROM customerorderdetails as co
                LEFT JOIN customerorder as c on (c.id_customerorder=co.id_customerorder)
                LEFT JOIN customer as cus on (cus.id_customer=c.order_to)
                LEFT JOIN ret_karigar as k ON k.id_karigar =co.id_karigar
                LEFT JOIN ret_product_master as pro ON pro.pro_id = co.id_product
                LEFT JOIN ret_design_master des ON des.design_no = co.design_no
                LEFT JOIN ret_sub_design_master sd ON sd.id_sub_design = co.id_sub_design
                LEFT JOIN customer_order_image img ON img.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_taging tag ON tag.id_orderdetails = co.id_orderdetails
                LEFT JOIN ret_bill_details bill_det on bill_det.tag_id=tag.tag_id
                LEFT JOIN ret_billing bill on bill.bill_id=bill_det.bill_id
                WHERE co.id_orderdetails is not null and ortertype=1 and (co.orderstatus=3  or co.orderstatus=5)and
                date(co.smith_due_date) <  '".date('Y-m-d')." '
               ".($id_branch != '' && $id_branch>0  ? " and c.order_from=".$id_branch."" :'')."
               ".($id_product != '' && $id_product >0  ? " and pro.pro_id=".$id_product."" :'')."
               ".($id_design != '' && $id_design >0  ? " and des.design_no=".$id_design."" :'')."
               ".($id_sub_design != '' && $id_sub_design>0  ? " and sd.id_sub_design=".$id_sub_design."" :'')."
               order by co.id_orderdetails asc");
               return $data->result_array();
            break;
        }
    }
	function getSalesTransReport($data)
    {
        $return_data=array();
        if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
         $sql=$this->db->query("SELECT fb.name as from_branch,tb.name as to_branch,b.bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
         c.name as category_name,ifnull(sum(bs.piece),0) as piece,ifnull(sum(bs.less_wt),0) as less_wt,ifnull(sum(bs.net_wt),0) as net_wt,
         ifnull(sum(bs.gross_wt),0) as gross_wt
         FROM ret_billing b
         Left join ret_bill_details bs on bs.bill_id = b.bill_id
         LEFT JOIN ret_product_master pro ON pro.pro_id = bs.product_id
         LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
         Left join branch fb on fb.id_branch = b.from_branch
         Left join branch tb on tb.id_branch = b.to_branch
         WHERE b.bill_type=13 and b.bill_status = 1
         ".($data['id_metal']!='' && $data['id_metal']!=0 ? " and c.id_metal=".$data['id_metal']."" :'')."
         ".($data['id_category']!='' && $data['id_category']!=0 ? " and c.id_ret_category=".$data['id_category']."" :'')."
         ".($data['from_branch']!='' && $data['from_branch']!=0 ? " and b.from_branch=".$data['from_branch']."" :'')."
         ".($data['to_branch']!='' && $data['to_branch']!=0 ? " and b.to_branch=".$data['to_branch']."" :'')."
         ".($data['dt_range'] != '' ? ' and date(bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
           group by b.bill_id,pro.cat_id");
        //print_r($this->db->last_query());exit;
        $result=$sql->result_array();
        foreach($result as $items)
        {
                $return_data[]=array(
                                    'from_branch'       =>$items['from_branch'],
                                    'to_branch'         =>$items['to_branch'],
                                    'bill_date'         =>$items['bill_date'],
                                    'bill_no'           =>$items['bill_no'],
                                    'category_name'     =>$items['category_name'],
                                    'net_wt'            =>$items['net_wt'],
                                    'piece'             =>$items['piece'],
                                    'gross_wt'          =>$items['gross_wt'],
                                    'less_wt'           =>$items['less_wt'],
                                 );
        }
        return $return_data;
    }
    function get_karigar_wise_sales_detail($data)
{
    $sql=$this->db->query(" SELECT k.firstname as kaigar_name,p.product_name,d.design_name,sd.sub_design_name,
    IFNULL(SUM(tag.piece),0) as tot_pcs,IFNULL(SUM(tag.gross_wt),0) as tot_gwt, IFNULL(sold.tot_gwt,0) as sold_wt ,IFNULL(sold.tot_pcs,0) as sold_pcs,
    (IFNULL(SUM(tag.gross_wt),0) - IFNULL(sold.tot_gwt,0) ) as bal_wt,(IFNULL(SUM(tag.piece),0) - IFNULL(sold.tot_pcs,0) ) as bal_pcs
    FROM ret_taging tag
    LEFT JOIN ret_lot_inwards i ON i.lot_no=tag.tag_lot_id
    LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
    left JOIN ret_category cat on cat.id_ret_category=p.cat_id
    LEFT JOIN ret_design_master d on d.design_no=tag.design_id
    LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=tag.id_sub_design
    LEFT JOIN ret_karigar k ON k.id_karigar = i.gold_smith
    LEFT JOIN (SELECT k.firstname as kaigar_name,p.product_name,d.design_name,sd.sub_design_name,IFNULL(SUM(tag.piece),0) as tot_pcs,IFNULL(SUM(tag.gross_wt),0) as tot_gwt ,cat.id_ret_category , tag.product_id,tag.design_id,tag.id_sub_design,i.gold_smith
    FROM ret_taging tag
    LEFT JOIN ret_lot_inwards i ON i.lot_no=tag.tag_lot_id
    LEFT JOIN ret_product_master p ON p.pro_id=tag.product_id
    left JOIN ret_category cat on cat.id_ret_category=p.cat_id
    LEFT JOIN ret_design_master d on d.design_no=tag.design_id
    LEFT JOIN ret_sub_design_master sd on sd.id_sub_design=tag.id_sub_design
    LEFT JOIN ret_karigar k ON k.id_karigar = i.gold_smith
    WHERE tag.tag_status = 1
    ".($data['branch']!='' ? " and tag.current_branch=".$data['branch']."" :'')."
   and  (date(tag.created_time ) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
    GROUP BY  tag.product_id,tag.design_id,tag.id_sub_design,i.gold_smith ) as sold ON sold.product_id = tag.product_id and sold.design_id = tag.design_id and sold.id_sub_design = tag.id_sub_design and sold.gold_smith = i.gold_smith
    WHERE
    i.gold_smith is NOT NULL and
    (date(tag.created_time ) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
    ".($data['product_id']!='' && $data['product_id'] > 0 ? " and tag.product_id=".$data['product_id']."" :'')."
    ".($data['design_id']!='' && $data['design_id'] > 0  ? " and tag.design_id=".$data['design_id']."" :'')."
    ".($data['id_sub_design']!=''  && $data['id_sub_design'] > 0  ? " and tag.id_sub_design=".$data['id_sub_design']."" :'')."
    ".($data['branch']!=''  && $data['branch'] > 0 ? " and tag.current_branch=".$data['branch']."" :'')."
    ".($data['id_karigar']!=''  && $data['id_karigar'] > 0 ? " and i.gold_smith =".$data['id_karigar']."" :'')."
    GROUP BY  tag.product_id,tag.design_id,tag.id_sub_design,i.gold_smith order BY i.gold_smith
    ");
    //  print_r($this->db->last_query());exit;
    return $sql->result_array();
}
    function get_sales_transfer_details($data)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        $id_company = $this->session->userdata('id_company');
        $multiple_id_branch = implode(' , ', $data['id_branch']);
        if($multiple_id_branch != '')
        {
            $branch = $multiple_id_branch;
        }else{
            $branch = $data['id_branch'];
        }
        $return_data=array();
        $sql=$this->db->query("SELECT c.name as category_name,p.cat_id, b.sales_ref_no,b.bill_no,b.bill_id,
        sum(d.piece) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt,sum(d.item_cost-d.item_total_tax) as taxable_amt,
        sum(ifnull(d.total_sgst,0) + ifnull(d.total_cgst,0) + ifnull(d.total_igst,0)) as tax_amt,
        sum(d.item_cost) as total_amount, IFNULL(sum(d.total_sgst),0) as total_sgst,IFNULL(sum(d.total_cgst),0) as total_cgst,
        IFNULL(sum(d.total_igst),0) as total_igst,IFNULL(sum(b.round_off_amt), 0) as round_off,
        p.product_name,br.name as branch_name,b.id_branch,ifnull(stn.stn_wt,0) as less_wt,concat(cus.firstname,' ',IFNULL(cus.lastname,'')) as cus_name,m.metal_code,
         IFNULL(cus.gst_number,'') as gst_number,cus.mobile,
        IFNULL(b.pan_no, ifnull(cus.pan, '')) as pan,
        date_format(b.bill_date,'%d-%m-%Y') as bill_date, st.name as statename, br.short_name,fbr.name as from_branch ,tbr.name as to_branch
        FROM ret_billing b
        LEFT JOIN ret_bill_details d ON d.bill_id=b.bill_id
        LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
        LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
        LEFT JOIN branch br on br.id_branch=b.id_branch
        LEFT JOIN branch fbr on fbr.id_branch=b.from_branch
        LEFT JOIN branch tbr on tbr.id_branch=b.to_branch
        LEFT JOIN company cmp on cmp.id_company=br.id_company
        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
        LEFT JOIN metal m on m.id_metal=c.id_metal
        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
        LEFT JOIN state as st ON st.id_state = adr.id_state
            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,p.cat_id,dt.bill_det_id, dt.bill_id
            FROM ret_billing_item_stones st
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
            LEFT JOIN ret_product_master p ON p.pro_id=dt.product_id
            LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_billing bill ON bill.bill_id=dt.bill_id
            LEFT JOIN branch br on br.id_branch=bill.id_branch
            LEFT JOIN company cmp on cmp.id_company=br.id_company
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE bill.bill_status=1 AND uom.uom_short_code='CT'
            and (date(bill.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
            ".($branch!='' && $branch !='0' ? " and bill.id_branch in (".$branch.") " :("and cmp.id_company=".$id_company."") )."
            GROUP by dt.bill_id)  as stn ON stn.bill_id = d.bill_id
        Where b.sales_ref_no IS NOT NULL AND b.sales_ref_no!='' and b.bill_status=1  AND d.bill_id is not null and b.bill_type = 13
        and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($data['from_date']))."' AND '".date('Y-m-d',strtotime($data['to_date']))."')
        ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :("and cmp.id_company=".$id_company."") )."
        ".($data['id_category'] != '' && $data['id_category'] >0 ? ' and p.cat_id ='.$data['id_category']: '')."
        group by b.bill_id ");
       // print_r($this->db->last_query());exit;
        $result =$sql->result_array();
        foreach($result as $items)
        {
            $return_data[]=array(
                                'bill_id'       =>$items['bill_id'],
                                'bill_date'    =>$items['bill_date'],
                                'branch_name'   =>$items['branch_name'],
                                'metal_code'   =>$items['metal_code'],
                                'cus_name'      =>$items['cus_name'],
                                'from_branch'      =>$items['from_branch'],
                                'to_branch'      =>$items['to_branch'],
                                'gst_number'      =>$items['gst_number'],
                                'pan'           =>$items['pan'],
                                'category_name' =>$items['category_name'],
                                'piece'         =>$items['piece'],
                                'gross_wt'      =>$items['gross_wt'],
                                'net_wt'        =>$items['net_wt'],
                                'less_wt'        =>$items['less_wt'],
                                'taxable_amt'   =>$items['taxable_amt'],
                                'total_sgst'    =>$items['total_sgst'],
                                'total_cgst'    =>$items['total_cgst'],
                                'total_igst'    =>$items['total_igst'],
                                'tax_amt'       =>$items['tax_amt'],
                                'total_amount'  =>$items['total_amount'],
                                'round_off'     =>$items['round_off'],
                                'sales_ref_no'  =>$items['sales_ref_no'],
                                'statename'     => $items['statename'],
                                'short_name'     => $items['short_name'],
                            );
        }
        return  $return_data;
    }
	function get_stock_age_analysis($data){
		if($data['dt_range'] != ''){
			$dateRange = explode('-',$data['dt_range']);
			$d1 = date_create($dateRange[0]);
			$d2 = date_create($dateRange[1]);
			$FromDt = date_format($d1,"Y-d-m");
			$ToDt = date_format($d2,"Y-d-m");
		}
		$sql = "SELECT
					DATEDIFF(date(now()),date(tag_datetime)) AS age,p.pro_id,
					b.name as branch_name,
					if(product_short_code = '' or product_short_code is null ,product_name ,CONCAT(product_short_code,' - ',product_name) ) as product_name,
					CONCAT(if(lastname is null,firstname,CONCAT(firstname,' ',lastname)),' ',code_karigar) as karigar,
					sum(ifnull(tag.piece,0)) as pieces,sum(ifnull(tag.gross_wt,0)) as gross_wt, sum(ifnull(tag.net_wt,0)) as net_wt
				FROM `ret_taging` tag
					LEFT JOIN ret_lot_inwards lt on lt.lot_no = tag.tag_lot_id
					LEFT JOIN ret_product_master p on p.pro_id = tag.product_id
					LEFT JOIN ret_karigar k on k.id_karigar = lt.gold_smith
					LEFT JOIN ret_category cat on cat.id_ret_category = lt.id_category
					LEFT JOIN branch b on b.id_branch = tag.current_branch
				WHERE p.pro_id is not null and tag.tag_status = 0 ".($data['id_branch'] != '' && $data['id_branch'] >0 ? ' and tag.current_branch='.$data['id_branch']: '')." ".($data['id_category'] != '' && $data['id_category'] > 0 ? ' and lt.id_category ='.$data['id_category']: '')." ".($data['karigar'] != '' && $data['karigar'] > 0 ? ' and lt.gold_smith ='.$data['karigar']: '')." ".($data['id_metal'] != '' && $data['id_metal'] > 0 ? ' and cat.id_metal ='.$data['id_metal']: '')."
				".($data['id_collection']!='' ? " and p.collection_id =".$data['id_collection']."" :'')."
				".($data['id_product'] != '' ? ' and product_id ='.$data['id_product']: '')." ".($data['dt_range'] != '' ? ' and (date(tag_datetime) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'")' : '')."
				GROUP BY p.pro_id";
		if($data['age_from'] != '' && $data['age_to'] != ''){
			$sql = $sql." HAVING (age >=".$data['age_from']." and age <=".$data['age_to'].")";
		}
		elseif($data['age_from'] != ''){
			$sql = $sql." HAVING age >=".$data['age_from'];
		}
		$result = $this->db->query($sql)->result_array();
		return $result;
	}
    function irn_details($post){
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        $id_branch = $post['id_branch'];
        $FromDt = $post['from_date'];
		$ToDt = $post['to_date'];
        $d1 = date_create($FromDt);
        $d2 = date_create($ToDt);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        // print_r($FromDt);exit;
        if($post['report_type']==1){
            $data = $this->db->query("SELECT c.name as cat_name,c.hsn_code,b.bill_date,cus.firstname,s.name as state_name,sum(d.piece) as piece,sum(d.gross_wt) as gross_wt,sum(d.net_wt) as net_wt,IFNULL(stn.stn_wt,0) as stn_wt,sum(d.total_sgst) as total_sgst,sum(d.total_cgst) as total_cgst,sum(d.total_igst) as total_igst,sum(ifnull(d.total_sgst, 0) + ifnull(d.total_cgst, 0) + ifnull(d.total_igst, 0)) as item_total_tax,sum(d.item_cost) as item_cost,tax.tax_percentage,IFNULL(cus.gst_number,'-') as gst_number,IFNULL(cus.pan,'-') as pan,'-' as cusdel_irn,'-' as ack_no,IFNULL(b.sales_ref_no,'-') as bill_no,
            IFNULL(SUM(d.item_cost-d.item_total_tax),0) as taxable_amt,b.round_off_amt,b.bill_id,if(b.billing_for = 2 AND b.cusdel_irn IS  NULL AND is_eda != 2,0,1) as is_einvoice
            FROM ret_billing b
            LEFT JOIN ret_bill_details d ON d.bill_id = b.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=b.id_branch
            LEFT JOIN ret_product_master p ON p.pro_id = d.product_id
            LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
            LEFT JOIN customer cus ON cus.id_customer = b.bill_cus_id
            LEFT JOIN address a ON a.id_customer = cus.id_customer
            LEFT JOIN state s ON s.id_state = a.id_state
            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id,c.id_ret_category,b.bill_id
                FROM ret_billing_item_stones st
                LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
                LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
                LEFT JOIN ret_product_master as pro ON pro.pro_id = dt.product_id
                LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
                LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
                LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
                WHERE b.bill_status=1 and uom.uom_short_code='CT'
                ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
                ".($FromDt != '' && $ToDt!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($FromDt)).'" AND "'.date('Y-m-d',strtotime($ToDt)).'"' : '')."
                )  as stn ON stn.bill_id = b.bill_id
            LEFT JOIN (select i.tgi_taxcode,i.tgi_tgrpcode,
                m.tax_percentage as tax_percentage,
                i.tgi_calculation as tgi_calculation
                FROM ret_taxgroupitems i
                LEFT JOIN ret_taxmaster m on m.tax_id=i.tgi_taxcode) as tax on tax.tgi_tgrpcode=p.tgrp_id
            where  b.bill_status=1 and b.billing_for=2 and b.bill_id is not null and b.bill_type!=5
            ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR  ( IF(b.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
            ".($FromDt != '' && $ToDt!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($FromDt)).'" AND "'.date('Y-m-d',strtotime($ToDt)).'"' : '')."
            GROUP BY b.bill_id");
            $bill_detail=$data->result_array();
            foreach ($bill_detail as &$item) {
                $bill_id = $item['bill_id'];
                $item['bill_no'] = $this->get_bill_no_format_detail($bill_id);
            }
            return $bill_detail;
        }else if($post['report_type']==2){
            $data = $this->db->query("SELECT IFNULL(s.name,'') as state_name,c.name as cat_name,c.hsn_code,pr.bill_date,IFNULL( concat(k.firstname,' ',k.lastname) ,'') as firstname,IFNULL(sum(i.pur_ret_pcs),'-') as piece,IFNULL(sum(i.pur_ret_gwt),'-') as gross_wt,IFNULL(sum(i.pur_ret_nwt),'-') as net_wt,IFNULL(IFNULL(stn.stn_wt,0),'-') as stn_wt,IFNULL(sum(i.total_sgst_cost),'-') as total_sgst,IFNULL(sum(i.total_cgst_cost),'-') as total_cgst,IFNULL(sum(i.total_igst_cost) ,'-') as total_igst,sum(ifnull(i.total_sgst_cost, 0) + ifnull(i.total_cgst_cost, 0) + ifnull(i.total_igst_cost, 0)) as item_total_tax,IFNULL(sum(i.pur_ret_debit_note_amt),0) as item_cost,IFNULL(tax.tax_percentage,'-') as tax_percentage,IFNULL(k.gst_number,'-') as gst_number,IFNULL(k.pan_no,'-') as pan,'-' as cusdel_irn,'-' as ack_no,IFNULL(pr.pur_ret_ref_no,'-') as bill_no,
            IFNULL(SUM(i.pur_ret_debit_note_amt-i.total_total_tax),0) as taxable_amt,pr.pur_ret_round_off as round_off_amt,pr.pur_return_id as bill_id,if(pr.purchase_type = 1 AND pr.supdel_irn IS  NULL,0,1) as is_einvoice
            FROM ret_purchase_return pr
            LEFT JOIN ret_purchase_return_items i ON i.pur_ret_id = pr.pur_return_id
            LEFT JOIN ret_product_master p ON p.pro_id = i.id_product
            LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
            LEFT JOIN ret_karigar k ON k.id_karigar = pr.pur_ret_supplier_id
            LEFT JOIN state s ON s.id_state = k.id_state
            LEFT join(SELECT IFNULL(SUM(st.ret_stone_wt),0) as stn_wt,ri.id_product,c.id_ret_category,r.pur_return_id
                FROM ret_purchase_return_stone_items st
                LEFT JOIN ret_purchase_return_items ri ON ri.pur_ret_itm_id=st.pur_ret_return_id
                LEFT JOIN ret_purchase_return r ON r.pur_return_id=ri.pur_ret_id
                LEFT JOIN ret_product_master as pro ON pro.pro_id = ri.id_product
                LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
                LEFT JOIN ret_stone s ON s.stone_id=st.ret_stone_id
                LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
                WHERE r.bill_status=1 and uom.uom_short_code='CT'
                ".($FromDt != '' && $ToDt!='' ? ' and date(r.bill_date) BETWEEN "'.date('Y-m-d',strtotime($FromDt)).'" AND "'.date('Y-m-d',strtotime($ToDt)).'"' : '')."
                )  as stn ON stn.pur_return_id = pr.pur_return_id
            LEFT JOIN (select i.tgi_taxcode,i.tgi_tgrpcode,
                m.tax_percentage as tax_percentage,
                i.tgi_calculation as tgi_calculation
                FROM ret_taxgroupitems i
                LEFT JOIN ret_taxmaster m on m.tax_id=i.tgi_taxcode) as tax on tax.tgi_tgrpcode=p.tgrp_id
            where  pr.bill_status=1   and pr.purchase_type=1
            ".($FromDt != '' && $ToDt!='' ? ' and date(pr.bill_date) BETWEEN "'.date('Y-m-d',strtotime($FromDt)).'" AND "'.date('Y-m-d',strtotime($ToDt)).'"' : '')."
            GROUP BY pr.pur_return_id");
            $bill_detail=$data->result_array();
            // echo '<pre>';print_r($this->db->last_query());exit;
            return $bill_detail;
        }
		}
    function getAllbranchIds()
    {
        $sql = $this->db->query("SELECT GROUP_CONCAT(id_branch) as idbranch from branch where active = 1");
        return $sql->row()->idbranch;
    }
    function get_categorywise_bookstocks_report($data)
	{
	    $return_array = array();
        if(empty($data['id_branch'])){
            $data['id_branch'] = 0;
        }
		$multiple_id_branch = implode(' , ', $data['id_branch']);
		$multiple_transitemtype = implode(' , ', $data['transitemtype']);
		if(empty($data['transitemtype'])){
		    $data['transitemtype'] = array(0);
		}
		//var_dump($data['transitemtype']);exit;
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
        if(empty($branch)){
            $branch = $this->getAllbranchIds();
        }
		if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
        }
       $stock_detail = [];
        $group_by = 2;//1-Product,2-Category
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        //IFNULL(in_trans.gross_wt,0) as in_trans_gwt,IFNULL(in_trans.net_wt,0) as in_trans_nwt,IFNULL(in_trans.piece,0) as in_trans_pcs,
        //IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,IFNULL(s.piece,0) as sold_pcs,
        //IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.piece,0) as br_out_pcs,
        //IFNULL(sales.gross_wt,0) as sold_gwt,IFNULL(sales.net_wt,0) as sold_nwt,IFNULL(sales.piece,0) as sold_pcs,
        //IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,IFNULL(br_out.no_of_piece,0) as br_out_pcs,
        //Tagged items
        $transitemtype[1] = $this->db->query("SELECT c.sort, c.name as category_name,
                            (IFNULL(blc.gross_wt,0) + IFNULL(opblc.gross_wt,0) + IFNULL(accopblc.gross_wt, 0) + IFNULL(opretagged_brin.gross_wt,0) - (IFNULL(obto.gross_wt,0) + IFNULL(osl.gross_wt,0) )) as op_blc_gwt,
                        	(IFNULL(blc.net_wt,0) + IFNULL(opblc.net_wt,0) + IFNULL(accopblc.net_wt, 0) + IFNULL(opretagged_brin.net_wt,0) - (IFNULL(obto.net_wt,0) + IFNULL(osl.net_wt,0) )) as op_blc_nwt,
                        	(IFNULL(blc.piece,0) + IFNULL(opblc.piece,0) + IFNULL(accopblc.piece, 0) + IFNULL(opretagged_brin.piece,0) - (IFNULL(obto.piece,0) + IFNULL(osl.piece,0) )) as op_blc_pcs,
                        	'-' as op_blc_value,
                        	IFNULL(INW.gross_wt,0) + IFNULL(retagged_brin.gross_wt,0) + IFNULL(accblc.gross_wt,0) as inw_gwt,
                        	IFNULL(INW.net_wt,0) + IFNULL(retagged_brin.net_wt,0) + IFNULL(accblc.net_wt,0) as inw_nwt,
                        	IFNULL(INW.piece,0) + IFNULL(retagged_brin.piece,0) + IFNULL(accblc.piece,0)  as inw_pcs,
                        	'-' as inw_blc_value,
                        	IFNULL(s.gross_wt,0) + IFNULL(bto.gross_wt, 0) as out_gwt,
                        	IFNULL(s.net_wt,0) + IFNULL(bto.net_wt, 0) as out_netwt,
                        	IFNULL(s.piece,0) + IFNULL(bto.piece, 0) as out_piece, '-' as out_blc_value,
                        	((IFNULL(blc.piece,0) + IFNULL(opblc.piece,0) + IFNULL(retagged_brin.piece,0) + IFNULL(INW.piece,0) + IFNULL(accblc.piece,0)) - (IFNULL(s.piece,0) + IFNULL(bto.piece,0) + IFNULL(obto.piece,0) + IFNULL(osl.piece,0) + IFNULL(opretagged_brin.piece,0) + IFNULL(accopblc.piece, 0))) as closing_pcs,
                        	((IFNULL(blc.gross_wt,0) + IFNULL(opblc.gross_wt,0) + IFNULL(retagged_brin.gross_wt,0)  + IFNULL(INW.gross_wt,0) + IFNULL(accblc.gross_wt,0))- (IFNULL(s.gross_wt,0) + IFNULL(bto.gross_wt,0) + IFNULL(obto.gross_wt,0) + IFNULL(osl.gross_wt,0) + IFNULL(opretagged_brin.gross_wt,0) + IFNULL(accopblc.gross_wt, 0))) as closing_gwt,
                        	((IFNULL(blc.net_wt,0) + IFNULL(opblc.net_wt,0) + IFNULL(retagged_brin.net_wt,0) + IFNULL(INW.net_wt,0) + IFNULL(accblc.net_wt,0)) -(IFNULL(s.net_wt,0) + IFNULL(bto.net_wt,0) + IFNULL(obto.net_wt,0) + IFNULL(osl.net_wt,0) + IFNULL(opretagged_brin.net_wt,0) + IFNULL(accopblc.net_wt, 0))) as closing_nwt,
                        	'-' as closing_blc_value,
							(IFNULL(blc_dia.stone_wt,0) + IFNULL(opdia.gross_wt,0) - (IFNULL(obto_dia.stone_wt,0) + IFNULL(osl_dia.stone_wt,0) )) as op_blc_diawt,
							(IFNULL(blc_stn.stone_wt,0) - (IFNULL(obto_stn.stone_wt,0) + IFNULL(osl_stn.stone_wt,0) )) as op_blc_stnwt,
							IFNULL(grn_inw_dia.stone_wt,0) as inw_diawt,IFNULL(grn_inw_stn.stone_wt,0) as inw_stnwt,
							IFNULL(sales_dia.stone_wt,0) + IFNULL(bto_dia.stone_wt, 0) as out_diawt,
							IFNULL(sales_stn.stone_wt,0) + IFNULL(bto_stn.stone_wt, 0) as out_stnwt
                        	FROM ret_category c
                            LEFT JOIN(SELECT ifnull(sum(m1.grn_gross_wt),0) as gross_wt,
                                        ifnull(SUM(m1.grn_net_wt),0) as net_wt,
                                        ifnull(SUM(m1.grn_no_of_pcs),0) as piece, m1.grn_item_cat_id as cat_id
                                        FROM ret_grn_items m1
                                        LEFT JOIN ret_grn_entry as grn ON grn.grn_id = m1.grn_item_grn_id
                                        left join ret_category c on c.id_ret_category = m1.grn_item_cat_id
                                        WHERE (m1.grn_gross_wt > 0 OR m1.grn_no_of_pcs >0) AND grn.grn_bill_status = 1 AND date(grn.grn_date) <= '".$op_blc_to_date."'
                                        GROUP BY m1.grn_item_cat_id) as blc ON blc.cat_id = c.id_ret_category
							LEFT JOIN (SELECT IFNULL(SUM(st.wt),0) as stone_wt,itm.grn_item_cat_id
										FROM ret_grn_item_stone st
										LEFT JOIN ret_grn_items itm ON itm.grn_item_id = st.grn_item_id
										LEFT JOIN ret_grn_entry g ON g.grn_id = itm.grn_item_grn_id
										LEFT JOIN ret_stone s ON s.stone_id = st.stone_id
										LEFT JOIN ret_uom m ON m.uom_id = s.uom_id
										WHERE s.stone_type = 1 AND g.grn_bill_status = 1
										AND date(g.grn_date) <= '".$op_blc_to_date."'
							GROUP BY itm.grn_item_cat_id) as blc_dia ON blc_dia.grn_item_cat_id = c.id_ret_category
							LEFT JOIN (SELECT IFNULL(SUM(st.wt),0) as stone_wt,itm.grn_item_cat_id
										FROM ret_grn_item_stone st
										LEFT JOIN ret_grn_items itm ON itm.grn_item_id = st.grn_item_id
										LEFT JOIN ret_grn_entry g ON g.grn_id = itm.grn_item_grn_id
										LEFT JOIN ret_stone s ON s.stone_id = st.stone_id
										LEFT JOIN ret_uom m ON m.uom_id = s.uom_id
										WHERE s.stone_type != 1 AND g.grn_bill_status = 1
										AND date(g.grn_date) <= '".$op_blc_to_date."'
							GROUP BY itm.grn_item_cat_id) as blc_stn ON blc_stn.grn_item_cat_id = c.id_ret_category
							LEFT JOIN(SELECT ifnull(sum(m1.weight),0) as gross_wt,
                                        ifnull(SUM(m1.net_wt),0) as net_wt,
                                        ifnull(SUM(m1.pieces),0) as piece,ifnull(SUM(m1.dia_wt),0) as dia_wt, m1.id_category as cat_id
                                        FROM smith_company_op_balance m1
                                        left join ret_category c on c.id_ret_category = m1.id_category
                                        WHERE (m1.weight > 0 OR m1.pieces > 0) AND m1.balance_type = 2 AND m1.stock_type = 1 AND metal_type = 1  and m1.uom_id = 6
                                        GROUP BY m1.id_category) as opdia ON opdia.cat_id = c.id_ret_category
                            LEFT JOIN(SELECT ifnull(sum(m1.weight),0) as gross_wt,
                                        ifnull(SUM(m1.net_wt),0) as net_wt,
                                        ifnull(SUM(m1.pieces),0) as piece, m1.id_category as cat_id
                                        FROM smith_company_op_balance m1
                                        left join ret_category c on c.id_ret_category = m1.id_category
                                        WHERE (m1.weight > 0 OR m1.pieces > 0) AND m1.balance_type = 1 AND m1.stock_type = 1 AND metal_type = 1
                                        GROUP BY m1.id_category) as opblc ON opblc.cat_id = c.id_ret_category
                            LEFT JOIN(SELECT ifnull(sum(m1.gross_wt),0) as gross_wt,
                                        ifnull(SUM(m1.net_wt),0) as net_wt,
                                        ifnull(SUM(m1.piece),0) as piece, stm.id_ret_category as cat_id
                                        FROM ret_purchase_item_stock_summary_log m1
                                        LEFT JOIN ret_purchase_item_stock_summary as stm ON stm.id_stock_summary = m1.id_stock_summary
                                        left join ret_category c on c.id_ret_category = stm.id_ret_category
                                        WHERE m1.gross_wt != 0 AND m1.transcation_type = 0 AND date(m1.date_add) <= '".$op_blc_to_date."'
                                        GROUP BY stm.id_ret_category) as accopblc ON accopblc.cat_id = c.id_ret_category
                            LEFT JOIN(SELECT ifnull(sum(m1.gross_wt),0) as gross_wt,
                                        ifnull(SUM(m1.net_wt),0) as net_wt,
                                        ifnull(SUM(m1.piece),0) as piece, stm.id_ret_category as cat_id
                                        FROM ret_purchase_item_stock_summary_log m1
                                        LEFT JOIN ret_purchase_item_stock_summary as stm ON stm.id_stock_summary = m1.id_stock_summary
                                        left join ret_category c on c.id_ret_category = stm.id_ret_category
                                        WHERE m1.gross_wt != 0 AND m1.transcation_type = 0 AND date(m1.date_add) BETWEEN '$FromDt' AND '$ToDt'
                                        GROUP BY stm.id_ret_category) as accblc ON accblc.cat_id = c.id_ret_category
                            LEFT JOIN(SELECT ifnull(sum(m1.grn_gross_wt),0) as gross_wt,
                                        ifnull(SUM(m1.grn_net_wt),0) as net_wt,
                                        ifnull(SUM(m1.grn_no_of_pcs),0) as piece, m1.grn_item_cat_id as cat_id
                                        FROM ret_grn_items m1
                                        LEFT JOIN ret_grn_entry as grn ON grn.grn_id = m1.grn_item_grn_id
                                        left join ret_category c on c.id_ret_category = m1.grn_item_cat_id
                                        WHERE (m1.grn_gross_wt > 0 OR m1.grn_no_of_pcs >0) AND grn.grn_bill_status = 1 AND date(grn.grn_date) BETWEEN '$FromDt' AND '$ToDt'
                                        GROUP BY m1.grn_item_cat_id) as INW ON INW.cat_id = c.id_ret_category
							LEFT JOIN (SELECT IFNULL(SUM(st.wt),0) as stone_wt,itm.grn_item_cat_id
										FROM ret_grn_item_stone st
										LEFT JOIN ret_grn_items itm ON itm.grn_item_id = st.grn_item_id
										LEFT JOIN ret_grn_entry g ON g.grn_id = itm.grn_item_grn_id
										LEFT JOIN ret_stone s ON s.stone_id = st.stone_id
										LEFT JOIN ret_uom m ON m.uom_id = s.uom_id
										WHERE s.stone_type = 1 AND g.grn_bill_status = 1
										AND date(g.grn_date) BETWEEN '$FromDt' AND '$ToDt'
							GROUP BY itm.grn_item_cat_id) as grn_inw_dia ON grn_inw_dia.grn_item_cat_id = c.id_ret_category
							LEFT JOIN (SELECT IFNULL(SUM(st.wt),0) as stone_wt,itm.grn_item_cat_id
										FROM ret_grn_item_stone st
										LEFT JOIN ret_grn_items itm ON itm.grn_item_id = st.grn_item_id
										LEFT JOIN ret_grn_entry g ON g.grn_id = itm.grn_item_grn_id
										LEFT JOIN ret_stone s ON s.stone_id = st.stone_id
										LEFT JOIN ret_uom m ON m.uom_id = s.uom_id
										WHERE s.stone_type != 1 AND g.grn_bill_status = 1
										AND date(g.grn_date) BETWEEN '$FromDt' AND '$ToDt'
							GROUP BY itm.grn_item_cat_id) as grn_inw_stn ON grn_inw_stn.grn_item_cat_id = c.id_ret_category
                        	LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
                        	SUM(b.piece) as piece,b.product_id,p.cat_id
                        	FROM ret_bill_details b
                            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                        	LEFT JOIN ret_category as  cat ON cat.id_ret_category = p.cat_id
                        	WHERE bill.bill_status = 1 and
                        	(date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
                        	GROUP by ".($group_by==1 ? " b.product_id" :" p.cat_id").") s ON ".($group_by==1 ? " s.product_id = t.product_id " : "s.cat_id = c.id_ret_category" )."
							LEFT JOIN (SELECT IFNULL(sum(st.wt),0) as stone_wt,b.product_id,p.cat_id
									FROM ret_bill_details b
									LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
									LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
									LEFT JOIN ret_category as  cat ON cat.id_ret_category = p.cat_id
									LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = b.bill_det_id
									LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
							WHERE bill.bill_status = 1 AND stn.stone_type = 1 AND st.bill_item_stone_id IS NOT NULL
                        	and (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
                        	GROUP by p.cat_id) sales_dia ON sales_dia.cat_id = c.id_ret_category
							LEFT JOIN (SELECT IFNULL(sum(st.wt),0) as stone_wt,b.product_id,p.cat_id
									FROM ret_bill_details b
									LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
									LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
									LEFT JOIN ret_category as  cat ON cat.id_ret_category = p.cat_id
									LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = b.bill_det_id
									LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
							WHERE bill.bill_status = 1 AND stn.stone_type != 1 AND st.bill_item_stone_id IS NOT NULL
                        	and (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
                        	GROUP by p.cat_id) sales_stn ON sales_stn.cat_id = c.id_ret_category
                            LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
                        	SUM(b.piece) as piece,b.product_id,p.cat_id
                        	FROM ret_bill_details b
                        	LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        	LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                        	LEFT JOIN ret_category as  cat ON cat.id_ret_category = p.cat_id
                        	WHERE bill.bill_status = 1 and
                        	date(bill.bill_date) <= '".$op_blc_to_date."' AND date(bill.bill_date) >= '2023-04-01' AND b.product_id = p.pro_id
                        	GROUP by ".($group_by==1 ? " b.product_id" :" p.cat_id").") osl ON ".($group_by==1 ? " osl.product_id = t.product_id " : "osl.cat_id = c.id_ret_category" )."
							LEFT JOIN (SELECT IFNULL(sum(st.wt),0) as stone_wt,b.product_id,p.cat_id
									FROM ret_bill_details b
									LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
									LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
									LEFT JOIN ret_category as  cat ON cat.id_ret_category = p.cat_id
									LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = b.bill_det_id
									LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
							WHERE bill.bill_status = 1 AND stn.stone_type = 1 AND st.bill_item_stone_id IS NOT NULL
							and date(bill.bill_date) <= '".$op_blc_to_date."' AND date(bill.bill_date) >= '2023-04-01' AND b.product_id = p.pro_id
							GROUP by p.cat_id) as osl_dia ON osl_dia.cat_id = c.id_ret_category
							LEFT JOIN (SELECT IFNULL(sum(st.wt),0) as stone_wt,b.product_id,p.cat_id
									FROM ret_bill_details b
									LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
									LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
									LEFT JOIN ret_category as  cat ON cat.id_ret_category = p.cat_id
									LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = b.bill_det_id
									LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
							WHERE bill.bill_status = 1 AND stn.stone_type = 1 AND st.bill_item_stone_id IS NOT NULL
							and date(bill.bill_date) <= '".$op_blc_to_date."' AND date(bill.bill_date) >= '2023-04-01' AND b.product_id = p.pro_id
							GROUP by p.cat_id) as osl_stn ON osl_stn.cat_id = c.id_ret_category
                            LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                        	SUM(tag.piece) as piece,tag.product_id,p.cat_id
                            FROM ret_branch_transfer as bt
                            LEFT JOIN ret_brch_transfer_tag_items as bti ON bti.transfer_id = bt.branch_transfer_id
                        	LEFT JOIN ret_taging tag ON tag.tag_id = bti.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	LEFT JOIN ret_category as  cat ON cat.id_ret_category = p.cat_id
                        	WHERE bt.transfer_item_type = 1 and bt.is_other_issue = 1 AND bt.status != 3 AND
                        	date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") bto ON ".($group_by==1 ? " bto.product_id = t.product_id " : "bto.cat_id = c.id_ret_category" )."
							LEFT JOIN (SELECT IFNULL(sum(st.wt),0) as stone_wt,p.cat_id
                            FROM ret_branch_transfer as bt
                            LEFT JOIN ret_brch_transfer_tag_items as bti ON bti.transfer_id = bt.branch_transfer_id
                        	LEFT JOIN ret_taging tag ON tag.tag_id = bti.tag_id
                            LEFT JOIN ret_taging_stone st ON st.tag_id = tag.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                            LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
                        	WHERE bt.transfer_item_type = 1 and bt.is_other_issue = 1 AND bt.status != 3 AND
                        	date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt' AND stn.stone_type = 1
                        	GROUP by p.cat_id) bto_dia ON bto_dia.cat_id = c.id_ret_category
							LEFT JOIN (SELECT IFNULL(sum(st.wt),0) as stone_wt,p.cat_id
                            FROM ret_branch_transfer as bt
                            LEFT JOIN ret_brch_transfer_tag_items as bti ON bti.transfer_id = bt.branch_transfer_id
                        	LEFT JOIN ret_taging tag ON tag.tag_id = bti.tag_id
                            LEFT JOIN ret_taging_stone st ON st.tag_id = tag.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                            LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
                        	WHERE bt.transfer_item_type = 1 and bt.is_other_issue = 1 AND bt.status != 3 AND
                        	date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt' AND stn.stone_type != 1
                        	GROUP by p.cat_id) bto_stn ON bto_stn.cat_id = c.id_ret_category
                            LEFT JOIN (SELECT sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
                        	SUM(tag.piece) as piece,tag.product_id,p.cat_id
                            FROM ret_branch_transfer as bt
                            LEFT JOIN ret_brch_transfer_tag_items as bti ON bti.transfer_id = bt.branch_transfer_id
                        	LEFT JOIN ret_taging tag ON tag.tag_id = bti.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	LEFT JOIN ret_category as  cat ON cat.id_ret_category = p.cat_id
                        	WHERE bt.transfer_item_type = 1 and bt.is_other_issue = 1 AND bt.status != 3 AND
                        	date(bt.approved_datetime) <= '".$op_blc_to_date."'
                        	GROUP by ".($group_by==1 ? " tag.product_id" :" p.cat_id").") obto ON ".($group_by==1 ? " obto.product_id = t.product_id " : "obto.cat_id = c.id_ret_category" )."
							LEFT JOIN (SELECT IFNULL(sum(st.wt),0) as stone_wt,p.cat_id
                            FROM ret_branch_transfer as bt
                            LEFT JOIN ret_brch_transfer_tag_items as bti ON bti.transfer_id = bt.branch_transfer_id
                        	LEFT JOIN ret_taging tag ON tag.tag_id = bti.tag_id
                            LEFT JOIN ret_taging_stone st ON st.tag_id = tag.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                            LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
                        	WHERE bt.transfer_item_type = 1 and bt.is_other_issue = 1 AND bt.status != 3
							AND date(bt.approved_datetime) <= '".$op_blc_to_date."'
							AND stn.stone_type = 1) as obto_dia ON obto_dia.cat_id = c.id_ret_category
							LEFT JOIN (SELECT IFNULL(sum(st.wt),0) as stone_wt,p.cat_id
                            FROM ret_branch_transfer as bt
                            LEFT JOIN ret_brch_transfer_tag_items as bti ON bti.transfer_id = bt.branch_transfer_id
                        	LEFT JOIN ret_taging tag ON tag.tag_id = bti.tag_id
                            LEFT JOIN ret_taging_stone st ON st.tag_id = tag.tag_id
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        	LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                            LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
                        	WHERE bt.transfer_item_type = 1 and bt.is_other_issue = 1 AND bt.status != 3
							AND date(bt.approved_datetime) <= '".$op_blc_to_date."'
							AND stn.stone_type != 1) as obto_stn ON obto_stn.cat_id = c.id_ret_category
                            LEFT JOIN (SELECT prs.id_ret_category,IFNULL(SUM(osl.piece),0) as piece,
                                        IFNULL(SUM(prsdt.gross_wt),0) as gross_wt, IFNULL(SUM(prsdt.net_wt),0) as net_wt
                                    FROM `ret_acc_stock_process` as prs
                                    LEFT JOIN ret_acc_stock_process_details as prsdt ON prsdt.id_process = prs.id_process
                                    LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = prsdt.ref_no
                                    WHERE date(prs.date_add) BETWEEN '$FromDt' AND '$ToDt' AND prs.type = 4 AND prs.process_for = 1
                                    GROUP by prs.id_ret_category ) retagged_brin ON retagged_brin.id_ret_category = c.id_ret_category
                            LEFT JOIN (SELECT prs.id_ret_category,IFNULL(SUM(osl.piece),0) as piece,
                                    IFNULL(SUM(prsdt.gross_wt),0) as gross_wt, IFNULL(SUM(prsdt.net_wt),0) as net_wt
                                FROM `ret_acc_stock_process` as prs
                                LEFT JOIN ret_acc_stock_process_details as prsdt ON prsdt.id_process = prs.id_process
                                LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = prsdt.ref_no
                                WHERE date(prs.date_add) <= '$op_blc_to_date' AND prs.type = 4 AND prs.process_for = 1
                                GROUP by prs.id_ret_category ) opretagged_brin ON opretagged_brin.id_ret_category = c.id_ret_category
                            where c.status = 1
                            	".($data['id_category']!='' && $data['id_category']!=0 ? " and c.id_ret_category=".$data['id_category']."" :'')."
                            	GROUP by c.id_ret_category");
                //echo $this->db->last_query();exit;
                //Non tag items stock
        $transitemtype[2] = $this->db->query("SELECT c.sort, c.name as category_name,
                        	(IFNULL(blc_inw.gross_wt,0)+IFNULL(ref_blc_inw.gross_wt,0) - IFNULL(op_blc_metal_issue.gross_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_gwt,
                        	(IFNULL(blc_inw.net_wt,0)+IFNULL(ref_blc_inw.net_wt,0)-IFNULL(op_blc_metal_issue.net_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_nwt,
                        	(IFNULL(blc_inw.no_of_piece,0)+IFNULL(ref_blc_inw.no_of_piece,0)-IFNULL(op_blc_metal_issue.piece,0)-IFNULL(blc_br_out.no_of_piece,0)) as op_blc_pcs,
                        	'-' as op_blc_value,
                        	(ifnull(inw.gross_wt, 0)+ifnull(ref_inw.gross_wt, 0)) as inw_gwt,
							(ifnull(inw.net_wt, 0)+ifnull(ref_inw.net_wt, 0)) as inw_nwt,
							(ifnull(inw.no_of_piece, 0)+ifnull(ref_inw.no_of_piece, 0)) as inw_pcs,
                        	'-' as inw_blc_value,
                        	(IFNULL(br_out.gross_wt,0) + IFNULL(metal_issue.gross_wt,0)) as out_gwt,
                        	(IFNULL(br_out.net_wt,0) + IFNULL(metal_issue.net_wt,0)) as out_netwt,
                        	(IFNULL(br_out.no_of_piece,0) + IFNULL(metal_issue.piece,0)) as out_piece, '-' as out_blc_value,
							((IFNULL(blc_inw.no_of_piece,0)+IFNULL(ref_blc_inw.no_of_piece,0)-IFNULL(blc_br_out.no_of_piece,0)-IFNULL(op_blc_metal_issue.piece,0)) + IFNULL(inw.no_of_piece,0)+ifnull(ref_inw.no_of_piece, 0) -IFNULL(metal_issue.piece,0) - IFNULL(br_out.no_of_piece,0)) as closing_pcs,
							(IFNULL(blc_inw.gross_wt,0)+IFNULL(ref_blc_inw.gross_wt,0) - IFNULL(op_blc_metal_issue.gross_wt,0)-IFNULL(blc_br_out.gross_wt,0) + IFNULL(inw.gross_wt,0)+ifnull(ref_inw.gross_wt, 0) -IFNULL(metal_issue.gross_wt,0)- IFNULL(br_out.gross_wt,0))  as closing_gwt,
							(IFNULL(blc_inw.net_wt,0)+IFNULL(ref_blc_inw.net_wt,0)-IFNULL(op_blc_metal_issue.net_wt,0)-IFNULL(blc_br_out.net_wt,0) + IFNULL(inw.net_wt,0)+ifnull(ref_inw.net_wt, 0) -IFNULL(metal_issue.net_wt,0) - IFNULL(br_out.net_wt,0)) as closing_nwt,
                        	'-' as closing_blc_value,
							'0' as op_blc_diawt,
							'0' as op_blc_stnwt,
							'0' as inw_stnwt,
							'0' as out_diawt,
							'0' as out_stnwt
                FROM ret_product_master p
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                LEFT JOIN(SELECT rec.received_category as cat_id,IFNULL(SUM(rec.testing_completed_wt),0) as gross_wt,IFNULL(SUM(rec.testing_completed_wt),0) as net_wt,IFNULL(SUM(rec.recd_pcs),0) as no_of_piece
                FROM ret_old_metal_testing m1
				LEFT JOIN ret_old_metal_melting_recd_details as rec ON rec.id_melting_recd = m1.id_melting_recd
				LEFT JOIN ret_old_metal_process as prs ON prs.id_old_metal_process = m1.id_old_metal_process_receipt
                WHERE rec.received_category IS NOT NULL and rec.melting_status = 3 AND
                date(prs.date_add) < '$FromDt'
                GROUP by rec.received_category) as blc_inw ON blc_inw.cat_id = p.cat_id
				LEFT JOIN(SELECT rec.received_category as cat_id,IFNULL(SUM(rec.received_wt),0) as gross_wt,IFNULL(SUM(rec.received_wt),0) as net_wt,IFNULL(SUM(rec.piece),0) as no_of_piece
                FROM ret_old_metal_refining_details rec
				LEFT JOIN ret_old_metal_refining as r ON r.id_metal_refining = rec.id_metal_refining
				LEFT JOIN ret_old_metal_process as prs ON prs.id_old_metal_process = r.id_old_metal_process_receipt
                WHERE rec.received_category IS NOT NULL AND
                date(prs.date_add) < '$FromDt'
                GROUP by rec.received_category) as ref_blc_inw ON ref_blc_inw.cat_id = p.cat_id
                LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
                SUM(b.piece) as piece,b.product_id,p.cat_id
                FROM ret_bill_details b
                LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
                (date(bill.bill_date) < '$FromDt') AND bill.id_branch IN (".$branch.")
                GROUP by ".($group_by==1 ? " b.product_id" :" p.cat_id")." ) blc_sales ON  ".($group_by==1 ? " blc_sales.product_id = p.pro_id" : " blc_sales.cat_id = p.cat_id" )."
                LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
                SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece
                FROM  ret_nontag_item_log l
                LEFT JOIN ret_product_master as p ON p.pro_id = l.product
                WHERE (date(l.date) < '$FromDt' ) and
                (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=8)
                and l.from_branch IN (".$branch.")
                GROUP by ".($group_by==1 ? " l.product" :" p.cat_id")." ) blc_br_out on ".($group_by==1 ? " blc_br_out.product = p.pro_id" : " blc_br_out.cat_id = p.cat_id" )."
                LEFT JOIN (SELECT sum(b.issue_metal_wt) as gross_wt,SUM(b.issue_metal_wt) as net_wt, IFNULL(SUM(b.issue_pcs),0) as piece,b.issu_met_pro_id as product_id,p.cat_id
                FROM ret_karigar_metal_issue_details b
                LEFT JOIN ret_karigar_metal_issue m ON m.met_issue_id = b.issue_met_parent_id
                LEFT JOIN ret_product_master p ON p.pro_id = b.issu_met_pro_id
                WHERE m.bill_status = 1
                AND (date(m.met_issue_date) < '$FromDt') AND m.id_branch IN (".$branch.")
                GROUP by ".($group_by==1 ? " b.issu_met_pro_id" :" p.cat_id")." ) op_blc_metal_issue ON  ".($group_by==1 ? " op_blc_metal_issue.product_id = p.pro_id" : " op_blc_metal_issue.cat_id = p.cat_id" )."
                LEFT JOIN(SELECT rec.received_category as cat_id,IFNULL(SUM(rec.testing_completed_wt),0) as gross_wt,IFNULL(SUM(rec.testing_completed_wt),0) as net_wt,IFNULL(SUM(rec.recd_pcs),0) as no_of_piece
                FROM ret_old_metal_testing m1
				LEFT JOIN ret_old_metal_melting_recd_details as rec ON rec.id_melting_recd = m1.id_melting_recd
				LEFT JOIN ret_old_metal_process as prs ON prs.id_old_metal_process = m1.id_old_metal_process_receipt
                WHERE rec.received_category IS NOT NULL and rec.melting_status = 3
                AND date(prs.date_add) BETWEEN '$FromDt' AND '$ToDt'
                GROUP by rec.received_category) as inw ON inw.cat_id = p.cat_id
				LEFT JOIN(SELECT rec.received_category as cat_id,IFNULL(SUM(rec.received_wt),0) as gross_wt,IFNULL(SUM(rec.received_wt),0) as net_wt,IFNULL(SUM(rec.piece),0) as no_of_piece
                FROM ret_old_metal_refining_details rec
				LEFT JOIN ret_old_metal_refining as r ON r.id_metal_refining = rec.id_metal_refining
				LEFT JOIN ret_old_metal_process as prs ON prs.id_old_metal_process = r.id_old_metal_process_receipt
                WHERE rec.received_category IS NOT NULL AND
                date(prs.date_add) BETWEEN '$FromDt' AND '$ToDt'
                GROUP by rec.received_category) as ref_inw ON ref_inw.cat_id = p.cat_id
                LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
                SUM(b.piece) as piece,b.product_id,p.cat_id
                FROM ret_bill_details b
                LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
                (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
                GROUP by ".($group_by==1 ? " b.product_id" :" p.cat_id")." ) sales ON  ".($group_by==1 ? " sales.product_id = p.pro_id" : " sales.cat_id = p.cat_id" )."
                LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
                SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece
                FROM  ret_nontag_item_log l
                LEFT JOIN ret_product_master as p ON p.pro_id = l.product
                WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
                (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=8)
                and l.from_branch IN (".$branch.")
                GROUP by ".($group_by==1 ? " l.product" :" p.cat_id").") br_out on ".($group_by==1 ? " br_out.product = p.pro_id" : " br_out.cat_id = p.cat_id" )."
                LEFT JOIN (SELECT sum(b.issue_metal_wt) as gross_wt,SUM(b.issue_metal_wt) as net_wt, IFNULL(SUM(b.issue_pcs),0) as piece,b.issu_met_pro_id as product_id,p.cat_id
                FROM ret_karigar_metal_issue_details b
                LEFT JOIN ret_karigar_metal_issue m ON m.met_issue_id = b.issue_met_parent_id
                LEFT JOIN ret_product_master p ON p.pro_id = b.issu_met_pro_id
                WHERE m.bill_status = 1
                AND (date(m.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
                GROUP by ".($group_by==1 ? " b.issu_met_pro_id" :" p.cat_id")." ) metal_issue ON  ".($group_by==1 ? " metal_issue.product_id = p.pro_id" : " metal_issue.cat_id = p.cat_id" )."
                WHERE p.stock_type = 2
                ".($data['id_category']!='' && $data['id_category']!=0 ? " and p.cat_id=".$data['id_category']."" :'')."
                ".($data['id_product']!='' ? " and p.pro_id=".$data['id_product']."" :'')."
                GROUP by ".($group_by==1 ? " p.pro_id" :" p.cat_id")." ORDER BY c.sort");
                //echo $this->db->last_query();exit;
                //Sales return
        $transitemtype[3] = $this->db->query("SELECT c.sort,c.name as category_name,
                IFNULL(op_blc.gross_wt,0)  - IFNULL(retagged_op_br_out.gross_wt,0) as op_blc_gwt,
                IFNULL(op_blc.net_wt,0) - IFNULL(retagged_op_br_out.net_wt,0)  as op_blc_nwt,
                IFNULL(op_blc.piece,0) - IFNULL(retagged_op_br_out.piece,0)  as op_blc_pcs,
                '-' as op_blc_value,
                IFNULL(in_blc.gross_wt,0) as inw_gwt,
                IFNULL(in_blc.net_wt,0) as inw_nwt,
                IFNULL(in_blc.piece,0)  as inw_pcs,
                '-' as inw_blc_value,
                IFNULL(retagged_br_out.gross_wt,0) as out_gwt,
                IFNULL(retagged_br_out.net_wt,0) as out_netwt,
                IFNULL(retagged_br_out.piece,0) as out_piece,
                '-' as out_blc_value,
                ((IFNULL(op_blc.piece,0)  + IFNULL(in_blc.piece,0) ) - IFNULL(retagged_br_out.piece,0) - IFNULL(retagged_op_br_out.piece,0)) as closing_pcs,
                ((IFNULL(op_blc.gross_wt,0)  + IFNULL(in_blc.gross_wt,0) )  - IFNULL(retagged_br_out.gross_wt,0) - IFNULL(retagged_op_br_out.gross_wt,0)) as closing_gwt,
                ((IFNULL(op_blc.net_wt,0)  + IFNULL(in_blc.net_wt,0) )  - IFNULL(retagged_br_out.net_wt,0) - IFNULL(retagged_op_br_out.net_wt,0)) as closing_nwt,
                '-' as closing_blc_value,
				IFNULL(op_blc_dia.stone_wt,0) as op_blc_diawt,IFNULL(op_blc_stn.stone_wt,0) as op_blc_stnwt,
				IFNULL(inw_dia.stone_wt,0) as inw_diawt,IFNULL(inw_stn.stone_wt,0) as inw_stnwt,'0' as out_diawt,'0' as out_stnwt
                FROM ret_category as c
                LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt, ifnull(SUM(bd.piece),0) as piece
                FROM ret_bill_return_details as sr
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                WHERE bill.id_branch IN (".$branch.") AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'
                AND bd.gross_wt != 0 AND cat.tally_qty_type != 1
                GROUP by p.cat_id) op_blc on op_blc.cat_id = c.id_ret_category
				LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(st.wt),0) as stone_wt
                FROM ret_bill_return_details as sr
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = bd.bill_det_id
                LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
                WHERE bill.id_branch IN (".$branch.") AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'  AND stn.stone_type = 1
                AND bd.gross_wt != 0 AND cat.tally_qty_type != 1
                GROUP by p.cat_id) op_blc_dia on op_blc_dia.cat_id = c.id_ret_category
				LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(st.wt),0) as stone_wt
                FROM ret_bill_return_details as sr
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = bd.bill_det_id
                LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
                WHERE bill.id_branch IN (".$branch.") AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'  AND stn.stone_type != 1
                AND bd.gross_wt != 0 AND cat.tally_qty_type != 1
                GROUP by p.cat_id) op_blc_stn on op_blc_stn.cat_id = c.id_ret_category
                LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt, ifnull(SUM(bd.piece),0) as piece
                FROM ret_bill_return_details as sr
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                WHERE bill.id_branch IN (".$branch.") AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                AND bd.gross_wt != 0 AND cat.tally_qty_type != 1
                GROUP by p.cat_id) in_blc on in_blc.cat_id = c.id_ret_category
				LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(st.wt),0) as stone_wt
                FROM ret_bill_return_details as sr
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = bd.bill_det_id
                LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
                WHERE bill.id_branch IN (".$branch.") AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND stn.stone_type = 1
                AND bd.gross_wt != 0 AND cat.tally_qty_type != 1
                GROUP by p.cat_id) inw_dia on inw_dia.cat_id = c.id_ret_category
				LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(st.wt),0) as stone_wt
                FROM ret_bill_return_details as sr
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = bd.bill_det_id
                LEFT JOIN ret_stone stn ON stn.stone_id = st.stone_id
                WHERE bill.id_branch IN (".$branch.") AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND stn.stone_type != 1
                AND bd.gross_wt != 0 AND cat.tally_qty_type != 1
                GROUP by p.cat_id) inw_stn on inw_stn.cat_id = c.id_ret_category
                LEFT JOIN (SELECT p.cat_id,IFNULL(SUM(tag.piece),0) as piece,IFNULL(SUM(prsdt.gross_wt),0) as gross_wt, IFNULL(SUM(prsdt.net_wt),0) as net_wt
                            FROM `ret_acc_stock_process` as prs
                            LEFT JOIN ret_acc_stock_process_details as prsdt ON prsdt.id_process = prs.id_process
                            LEFT JOIN ret_taging as tag ON tag.tag_id = prsdt.ref_no
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                            WHERE date(prs.date_add) <= '$op_blc_to_date'
                            AND (prs.process_for = 1 OR prs.process_for = 2 OR prs.process_for = 4) AND prs.type = 1
                            AND tag.gross_wt != 0
                            GROUP by p.cat_id ) retagged_op_br_out ON retagged_op_br_out.cat_id = c.id_ret_category
                 LEFT JOIN (SELECT p.cat_id,IFNULL(SUM(tag.piece),0) as piece,IFNULL(SUM(prsdt.gross_wt),0) as gross_wt, IFNULL(SUM(prsdt.net_wt),0) as net_wt
                            FROM `ret_acc_stock_process` as prs
                            LEFT JOIN ret_acc_stock_process_details as prsdt ON prsdt.id_process = prs.id_process
                            LEFT JOIN ret_taging as tag ON tag.tag_id = prsdt.ref_no
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            LEFT JOIN ret_category as cat ON cat.id_ret_category = p.cat_id
                            WHERE date(prs.date_add)  BETWEEN '$FromDt' AND '$ToDt' AND (prs.process_for = 1 OR prs.process_for = 2 OR prs.process_for = 4) AND prs.type = 1
                            AND tag.gross_wt != 0
                            GROUP by p.cat_id ) retagged_br_out ON retagged_br_out.cat_id = c.id_ret_category
                WHERE c.status = 1
                ".($data['id_category']!='' && $data['id_category']!=0 ? " and c.id_ret_category=".$data['id_category']."" :'')."
                GROUP by c.id_ret_category
                HAVING op_blc_pcs > 0 OR inw_pcs > 0 OR  out_piece > 0 OR closing_pcs > 0 OR op_blc_nwt > 0  OR inw_nwt > 0 OR out_netwt > 0
                ");
                //echo $this->db->last_query();exit;
                //PArtly Sale
        $transitemtype[4] = $this->db->query("SELECT c.sort,c.name as category_name,
                IFNULL(op_blc.gross_wt,0) - IFNULL(retagged_op_br_out.gross_wt,0)  as op_blc_gwt,
                IFNULL(op_blc.net_wt,0)  - IFNULL(retagged_op_br_out.net_wt,0) as op_blc_nwt,
                IFNULL(op_blc.piece,0)  - IFNULL(retagged_op_br_out.piece,0) as op_blc_pcs,
                '-' as op_blc_value,
                IFNULL(br_in.gross_wt,0) as inw_gwt,
                IFNULL(br_in.net_wt,0) as inw_nwt,
                IFNULL(br_in.piece,0) as inw_pcs,
                '-' as inw_blc_value,
                IFNULL(retagged_br_out.gross_wt,0) as out_gwt,
                IFNULL(retagged_br_out.net_wt,0) as out_netwt,
                IFNULL(retagged_br_out.piece,0) as out_piece,
                '-' as out_blc_value,
                ((IFNULL(op_blc.piece,0) + IFNULL(br_in.piece,0))  - IFNULL(retagged_br_out.piece,0) - IFNULL(retagged_op_br_out.piece,0)) as closing_pcs,
                ((IFNULL(op_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0)) -  IFNULL(retagged_br_out.gross_wt,0)  - IFNULL(retagged_op_br_out.gross_wt,0)) as closing_gwt,
                ((IFNULL(op_blc.net_wt,0) + IFNULL(br_in.net_wt,0))  - IFNULL(retagged_br_out.net_wt,0) - IFNULL(retagged_op_br_out.net_wt,0)) as closing_nwt,
                '-' as closing_blc_value,
				'0' as op_blc_diawt,
				'0' as op_blc_stnwt,
				'0' as inw_stnwt,
				'0' as inw_diawt,
				'0' as out_diawt,
				'0' as out_stnwt
                FROM ret_category as c
                LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(sold_gross_wt) as sold_gross_wt FROM ret_partlysold as pas
				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
				WHERE date(pas.created_on) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(sold_net_wt) as sold_net_wt FROM ret_partlysold as pas
				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
				WHERE date(pas.created_on) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece
                FROM ret_partlysold as ps
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = ps.sold_bill_det_id
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                WHERE bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt'
                GROUP by p.cat_id) op_blc on op_blc.cat_id = c.id_ret_category
                LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(sold_gross_wt) as sold_gross_wt FROM ret_partlysold as pas
				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
				WHERE date(pas.created_on) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(sold_net_wt) as sold_net_wt FROM ret_partlysold as pas
				LEFT JOIN ret_bill_details as rbd ON rbd.bill_det_id = pas.sold_bill_det_id
				LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
				WHERE date(pas.created_on) <= date(ps.created_on) AND pas.tag_id = ps.tag_id AND rb.bill_status = 1 GROUP BY pas.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece
                FROM ret_partlysold as ps
                LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = ps.sold_bill_det_id
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                WHERE bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                GROUP by p.cat_id) br_in on br_in.cat_id = c.id_ret_category
                LEFT JOIN (SELECT p.cat_id,IFNULL(SUM(tag.piece),0) as piece,IFNULL(SUM(prsdt.gross_wt),0) as gross_wt, IFNULL(SUM(prsdt.net_wt),0) as net_wt
                            FROM `ret_acc_stock_process` as prs
                            LEFT JOIN ret_acc_stock_process_details as prsdt ON prsdt.id_process = prs.id_process
                            LEFT JOIN ret_taging as tag ON tag.tag_id = prsdt.ref_no
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE date(prs.date_add)  <= '$op_blc_to_date' AND (prs.process_for = 1 OR prs.process_for = 2 OR prs.process_for = 4) AND prs.type = 3
                            GROUP by p.cat_id ) retagged_op_br_out ON retagged_op_br_out.cat_id = c.id_ret_category
                LEFT JOIN (SELECT p.cat_id,IFNULL(SUM(tag.piece),0) as piece,IFNULL(SUM(prsdt.gross_wt),0) as gross_wt, IFNULL(SUM(prsdt.net_wt),0) as net_wt
                            FROM `ret_acc_stock_process` as prs
                            LEFT JOIN ret_acc_stock_process_details as prsdt ON prsdt.id_process = prs.id_process
                            LEFT JOIN ret_taging as tag ON tag.tag_id = prsdt.ref_no
                            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                            WHERE date(prs.date_add)  BETWEEN '$FromDt' AND '$ToDt' AND (prs.process_for = 1 OR prs.process_for = 2 OR prs.process_for = 4) AND prs.type = 3
                            GROUP by p.cat_id ) retagged_br_out ON retagged_br_out.cat_id = c.id_ret_category
                WHERE c.status = 1
                ".($data['id_category']!='' && $data['id_category']!=0 ? " and c.id_ret_category=".$data['id_category']."" :'')."
                GROUP by c.id_ret_category
                HAVING op_blc_pcs > 0 OR inw_pcs > 0 OR  out_piece > 0 OR closing_pcs > 0");
            //echo $this->db->last_query();exit;
            //Old metal transfer
        $transitemtype[5] = $this->db->query("SELECT c.id_metal_type as sort,c.metal_type as category_name,
            IFNULL(op_blc.gross_wt,0) + IFNULL(oldop_blc.gross_wt, 0) - IFNULL(oldmet_op_br_out.gross_wt,0) - IFNULL(oldmelt_op_br_out.gross_wt,0) - IFNULL(retagged_op_br_out.gross_wt,0) as op_blc_gwt,
            IFNULL(op_blc.net_wt,0) + IFNULL(oldop_blc.net_wt, 0) - IFNULL(oldmet_op_br_out.net_wt,0)  - IFNULL(oldmelt_op_br_out.net_wt,0) - IFNULL(retagged_op_br_out.net_wt,0)  as op_blc_nwt,
            IFNULL(op_blc.piece,0)+ IFNULL(oldop_blc.piece, 0) - IFNULL(oldmet_op_br_out.piece,0)  - IFNULL(oldmelt_op_br_out.piece,0) - IFNULL(retagged_op_br_out.piece,0)  as op_blc_pcs,
            '-' as op_blc_value,
            IFNULL(in_blc.gross_wt,0) as inw_gwt,
            IFNULL(in_blc.net_wt,0) as inw_nwt,
            IFNULL(in_blc.piece,0) as inw_pcs,
            '-' as inw_blc_value,
            (IFNULL(oldmet_br_out.gross_wt,0) + IFNULL(oldmelt_br_out.gross_wt,0) + IFNULL(retagged_br_out.gross_wt,0)) as out_gwt,
            (IFNULL(oldmet_br_out.net_wt,0) + IFNULL(oldmelt_br_out.net_wt,0) + IFNULL(retagged_br_out.net_wt,0)) as out_netwt,
            (IFNULL(oldmet_br_out.piece,0) + IFNULL(oldmelt_br_out.piece,0)  + IFNULL(retagged_br_out.piece,0)) as out_piece,
            '-' as out_blc_value,
            ((IFNULL(op_blc.piece,0) + IFNULL(oldop_blc.piece, 0) + IFNULL(in_blc.piece,0)) - IFNULL(oldmet_br_out.piece,0) - IFNULL(oldmelt_br_out.piece,0) - IFNULL(retagged_br_out.piece,0) - IFNULL(oldmet_op_br_out.piece,0) - IFNULL(oldmelt_op_br_out.piece,0)  - IFNULL(retagged_op_br_out.piece,0)) as closing_pcs,
            ((IFNULL(op_blc.gross_wt,0) + IFNULL(oldop_blc.gross_wt, 0) + IFNULL(in_blc.gross_wt,0)) - IFNULL(oldmet_br_out.gross_wt,0) - IFNULL(oldmelt_br_out.gross_wt,0)  - IFNULL(retagged_br_out.gross_wt,0) - IFNULL(oldmet_op_br_out.gross_wt,0) - IFNULL(oldmelt_op_br_out.gross_wt,0)  - IFNULL(retagged_op_br_out.gross_wt,0)) as closing_gwt,
            ((IFNULL(op_blc.net_wt,0) + IFNULL(oldop_blc.net_wt, 0) + IFNULL(in_blc.net_wt,0)) - IFNULL(oldmet_br_out.net_wt,0) - IFNULL(oldmelt_br_out.net_wt,0)  - IFNULL(retagged_br_out.net_wt,0) - IFNULL(oldmet_op_br_out.net_wt,0) - IFNULL(oldmelt_op_br_out.net_wt,0)  - IFNULL(retagged_op_br_out.net_wt,0)) as closing_nwt,
            '-' as closing_blc_value,
			'0' as op_blc_diawt,
			'0' as op_blc_stnwt,
			'0' as inw_stnwt,
			'0' as inw_diawt,
			'0' as out_diawt,
			'0' as out_stnwt
            FROM ret_old_metal_type as c
            LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt, ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
            FROM ret_bill_old_metal_sale_details as osl
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_billing as bill ON bill.bill_id = osl.bill_id
            WHERE bill.id_branch IN (".$branch.")
            AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2023-04-01'
            AND bill.bill_status = 1
            GROUP by oldt.id_metal_type) op_blc on op_blc.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt, ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
            FROM ret_bill_old_metal_sale_details as osl
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_billing as bill ON bill.bill_id = osl.bill_id
            WHERE bill.id_branch IN (".$branch.") AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
			AND bill.bill_status = 1
            GROUP by oldt.id_metal_type) in_blc on in_blc.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.weight),0) as gross_wt, ifnull(SUM(osl.net_wt),0) as net_wt, 0 as piece
            FROM smith_company_op_balance as osl
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = osl.id_old_metal_catid
            WHERE osl.metal_type = 2 AND osl.stock_type = 1 AND osl.balance_type = 1
            GROUP by oldt.id_metal_type) oldop_blc on oldop_blc.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,IFNULL(SUM(d.issue_pcs),0) as piece,IFNULL(SUM(d.issue_gwt),0) as gross_wt, IFNULL(SUM(d.issue_nwt),0) as net_wt
			FROM ret_old_metal_polishing_details d
			LEFT JOIN ret_old_metal_polishing p ON p.id_polishing = d.id_polishing
			LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = p.id_old_metal_process
			LEFT JOIN ret_old_metal_type oldt ON oldt.id_metal_type = d.id_old_metal_type
			WHERE date(pr.date_add) <= '$op_blc_to_date'
			GROUP by oldt.id_metal_type) oldmet_op_br_out ON oldmet_op_br_out.id_metal_type = c.id_metal_type
			LEFT JOIN (SELECT oldt.id_metal_type,IFNULL(SUM(d.issue_pcs),0) as piece,IFNULL(SUM(d.issue_gwt),0) as gross_wt, IFNULL(SUM(d.issue_nwt),0) as net_wt
			FROM ret_old_metal_melting_details d
			LEFT JOIN ret_old_metal_melting m ON m.id_melting = d.id_melting
			LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = m.id_old_metal_process
			LEFT JOIN ret_old_metal_type oldt ON oldt.id_metal_type = d.id_metal_type
			WHERE date(pr.date_add)  <= '$op_blc_to_date'
			GROUP by oldt.id_metal_type ) oldmelt_op_br_out ON oldmelt_op_br_out.id_metal_type = c.id_metal_type
			LEFT JOIN (SELECT oldt.id_metal_type,IFNULL(SUM(osl.piece),0) as piece,IFNULL(SUM(osl.gross_wt),0) as gross_wt, IFNULL(SUM(osl.net_wt),0) as net_wt
			FROM `ret_acc_stock_process` as prs
			LEFT JOIN ret_acc_stock_process_details as prsdt ON prsdt.id_process = prs.id_process
			LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = prsdt.ref_no
			LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
			LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
			WHERE date(prs.date_add)  <= '$op_blc_to_date'  AND prs.type = 4
			GROUP by oldt.id_metal_type ) retagged_op_br_out ON retagged_op_br_out.id_metal_type = c.id_metal_type
			LEFT JOIN (SELECT oldt.id_metal_type,IFNULL(SUM(d.issue_pcs),0) as piece,IFNULL(SUM(d.issue_gwt),0) as gross_wt, IFNULL(SUM(d.issue_nwt),0) as net_wt
			FROM ret_old_metal_polishing_details d
			LEFT JOIN ret_old_metal_polishing p ON p.id_polishing = d.id_polishing
			LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = p.id_old_metal_process
			LEFT JOIN ret_old_metal_type oldt ON oldt.id_metal_type = d.id_old_metal_type
			WHERE date(pr.date_add)  BETWEEN '$FromDt' AND '$ToDt'
			GROUP by oldt.id_metal_type ) oldmet_br_out ON oldmet_br_out.id_metal_type = c.id_metal_type
			LEFT JOIN (SELECT oldt.id_metal_type,IFNULL(SUM(d.issue_pcs),0) as piece,IFNULL(SUM(d.issue_gwt),0) as gross_wt, IFNULL(SUM(d.issue_nwt),0) as net_wt
			FROM ret_old_metal_melting_details d
			LEFT JOIN ret_old_metal_melting m ON m.id_melting = d.id_melting
			LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = m.id_old_metal_process
			LEFT JOIN ret_old_metal_type oldt ON oldt.id_metal_type = d.id_metal_type
			WHERE date(pr.date_add)  BETWEEN '$FromDt' AND '$ToDt'
			GROUP by oldt.id_metal_type ) oldmelt_br_out ON oldmelt_br_out.id_metal_type = c.id_metal_type
			LEFT JOIN (SELECT oldt.id_metal_type,IFNULL(SUM(osl.piece),0) as piece,IFNULL(SUM(osl.gross_wt),0) as gross_wt, IFNULL(SUM(osl.net_wt),0) as net_wt
			FROM `ret_acc_stock_process` as prs
			LEFT JOIN ret_acc_stock_process_details as prsdt ON prsdt.id_process = prs.id_process
			LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = prsdt.ref_no
			LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
			LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
			WHERE date(prs.date_add)  BETWEEN '$FromDt' AND '$ToDt' AND prs.type = 4
			GROUP by oldt.id_metal_type ) retagged_br_out ON retagged_br_out.id_metal_type = c.id_metal_type
            ".($data['id_category']!='' && $data['id_category']!=0 ? " WHERE c.id_metal_type=".$data['id_category']."" :'')."
            GROUP by c.id_metal_type
            HAVING op_blc_pcs > 0 OR inw_pcs > 0 OR  out_piece > 0 OR closing_pcs > 0 OR op_blc_nwt > 0 OR inw_nwt > 0 OR out_netwt > 0 OR closing_nwt > 0 OR op_blc_nwt > 0");
            //echo $this->db->last_query();exit;
            foreach($data['transitemtype'] as $tkey => $tval){
                if($tval == 0){
                    $return_array = array_merge( $transitemtype[1]->result_array(),  $transitemtype[2]->result_array(),  $transitemtype[3]->result_array(), $transitemtype[4]->result_array(),
					$transitemtype[5]->result_array()); //, $transitemtype[8]->result_array()
                }else if($tval == 5){
                    $return_array = array_merge($transitemtype[5]->result_array());
                }/*else if($tval == 4){
                    $return_array = array_merge($transitemtype[4]->result_array(), $transitemtype[8]->result_array());
                }*/else{
                    $return_array = array_merge($return_array, $transitemtype[$tval]->result_array());
                }
            }
           // print_r($this->db->last_query());exit;
           // $result = $sql->result_array();
            foreach($return_array as $r){
				$stock_detail[$r['category_name']][] = $r;
			}
			$response_data = array();
			foreach($stock_detail as $key => $val){
			    $cat_name   = $key;
			    $op_pcs     = 0;
			    $op_gwt     = 0;
			    $op_nwt     = 0;
			    $op_value   = 0;
			    $op_blc_diawt = 0;
			    $op_blc_stnwt = 0;
			    $in_pcs     = 0;
			    $in_gwt     = 0;
			    $in_nwt     = 0;
			    $in_value   = 0;
			    $inw_diawt   = 0;
			    $inw_stnwt   = 0;
			    $out_pcs     = 0;
			    $out_gwt     = 0;
			    $out_nwt     = 0;
			    $out_value   = 0;
			    $out_diawt   = 0;
			    $out_stnwt   = 0;
			    $cl_pcs     = 0;
			    $cl_gwt     = 0;
			    $cl_nwt     = 0;
			    $cl_value   = 0;
			    $cl_diawt   = 0;
			    $cl_stnwt   = 0;
			    foreach($val as $catdet){
			        $op_pcs += $catdet['op_blc_pcs'];
			        $op_gwt += $catdet['op_blc_gwt'];
			        $op_nwt += $catdet['op_blc_nwt'];
			        $op_blc_diawt += $catdet['op_blc_diawt'];
			        $op_blc_stnwt += $catdet['op_blc_stnwt'];
			        $in_pcs += $catdet['inw_pcs'];
			        $in_gwt += $catdet['inw_gwt'];
			        $in_nwt += $catdet['inw_nwt'];
			        $inw_diawt += $catdet['inw_diawt'];
			        $inw_stnwt += $catdet['inw_stnwt'];
			        $out_pcs += $catdet['out_piece'];
			        $out_gwt += $catdet['out_gwt'];
			        $out_nwt += $catdet['out_netwt'];
			        $out_diawt += $catdet['out_diawt'];
			        $out_stnwt += $catdet['out_stnwt'];
			        $cl_pcs += $catdet['closing_pcs'];
			        $cl_gwt += $catdet['closing_gwt'];
			        $cl_nwt += $catdet['closing_nwt'];
			        $cl_diawt += ($catdet['op_blc_diawt']+$catdet['inw_diawt']-$catdet['out_diawt']);
			        $cl_stnwt += ($catdet['op_blc_stnwt']+$catdet['inw_stnwt']-$catdet['out_stnwt']);
			    }
			    $response_data[] = array("category_name" => $cat_name,
			                            "op_blc_pcs"    => number_format($op_pcs,0,'.',''),
			                            "op_blc_gwt"    => number_format($op_gwt, 3, '.','') ,
			                            "op_blc_nwt"    => number_format($op_nwt, 3, '.',''),
			                            "op_blc_diawt"    => number_format($op_blc_diawt, 3, '.',''),
			                            "op_blc_stnwt"    => number_format($op_blc_stnwt, 3, '.',''),
			                            "op_blc_value"  => "-",
			                            "inw_pcs"       => $in_pcs,
			                            "inw_gwt"       => number_format($in_gwt, 3, '.',''),
			                            "inw_nwt"       => number_format($in_nwt, 3, '.',''),
			                            "inw_diawt"       => number_format($inw_diawt, 3, '.',''),
			                            "inw_stnwt"       => number_format($inw_stnwt, 3, '.',''),
			                            "inw_blc_value" => "-",
			                            "out_piece"       => $out_pcs,
			                            "out_gwt"         => number_format($out_gwt, 3, '.',''),
			                            "out_netwt"       => number_format($out_nwt, 3, '.',''),
			                            "out_diawt"       => number_format($out_diawt, 3, '.',''),
			                            "out_stnwt"       => number_format($out_stnwt, 3, '.',''),
			                            "out_blc_value"   => "-",
			                            /*"closing_pcs"       => $cl_pcs,
			                            "closing_gwt"       => number_format($cl_gwt, 3, '.',''),
			                            "closing_nwt"       => number_format($cl_nwt, 3, '.',''),*/
			                            "closing_pcs"       => ($op_pcs + $in_pcs) - $out_pcs,
			                            "closing_gwt"       => number_format((($op_gwt + $in_gwt) - $out_gwt), 3, '.',''),
			                            "closing_nwt"       => number_format((($op_nwt + $in_nwt) - $out_nwt), 3, '.',''),
			                            "cl_diawt"       	=> number_format(($cl_diawt), 3, '.',''),
			                            "cl_stnwt"       	=> number_format(($cl_stnwt), 3, '.',''),
			                            "closing_blc_value" => "-"
			                            );
			}
    	    return $response_data;
	}
    //Reorder report
    function get_weight_range_details($id_product)
    {
        $returnData = [];
        $sql = $this->db->query("SELECT * FROM ret_weight where id_product=".$id_product);
        $result = $sql->result_array();
        foreach($result as $val){
            $val['size_details'] = $this->get_product_size_details($id_product);
            $returnData[]=$val;
        }
        return $returnData;
    }
    function get_product_size_details($id_product)
    {
        $resultArray = [];
        $returnData[]= [ "id_product" => $id_product,
        "name" => "",
        "inch" => "",
        "value" =>"",
        "id_size" =>""  ];
        $sql = $this->db->query("SELECT s.id_size,s.name,s.id_product,IFNULL(s.value,'') as value, '0' as tot_pcs
        FROM ret_size s  where s.id_product=".$id_product);
        $resultArray = array_merge($returnData,$sql->result_array());
        return  $resultArray;
    }
    function get_reorder_details($data)
    {
        $returnData = [];
        $weight_details = $this->get_weight_range_details($data['id_product']);
        $size_details = $this->get_product_size_details($data['id_product']);
        if($data['item_type']==1)
        {
            $sql = $this->db->query("SELECT p.product_name,d.design_name,subDes.sub_design_name,sec.section_name,
            s.id_product,s.id_design,s.id_sub_design,s.id_section,s.id_branch,br.name as branch_name,p.reorder_based_on
            FROM ret_reorder_settings s
            LEFT JOIN ret_product_master p ON p.pro_id = s.id_product
            LEFT JOIN ret_design_master d ON d.design_no = s.id_design
            LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design = s.id_sub_design
            LEFT JOIN ret_section sec ON sec.id_section = s.id_section
            LEFT JOIN branch br ON br.id_branch = s.id_branch
            where s.id_product = ".$data['id_product']."
            ".($data['id_design']!=''  && $data['id_design']!= 0 ? " and s.id_design=".$data['id_design']."" :'')."
            ".($data['id_sub_design']!='' && $data['id_sub_design']!= 0? " and s.id_sub_design=".$data['id_sub_design']."" :'')."
            ".($data['id_branch']!='' && $data['id_branch']!= 0? " and s.id_branch=".$data['id_branch']."" :'')."
            ".($data['id_section']!=''  && $data['id_section']!= 0? " and s.id_section=".$data['id_section']."" :'')."
            GROUP BY s.id_branch,s.id_product,s.id_design,s.id_sub_design,s.id_section");
            // print_r($this->db->last_query());exit;
        }else{
            $sql = $this->db->query("SELECT p.product_name,d.design_name,subDes.sub_design_name,sec.section_name,
            s.product_id as id_product,s.design_id as id_design,s.id_sub_design,s.id_section,s.current_branch as id_branch,br.name as branch_name,p.reorder_based_on
            FROM ret_taging s
            LEFT JOIN ret_product_master p ON p.pro_id = s.product_id
            LEFT JOIN ret_design_master d ON d.design_no = s.design_id
            LEFT JOIN ret_sub_design_master subDes ON subDes.id_sub_design = s.id_sub_design
            LEFT JOIN ret_section sec ON sec.id_section = s.id_section
            LEFT JOIN branch br ON br.id_branch = s.current_branch
            where s.product_id = ".$data['id_product']."
            ".($data['id_design']!='' && $data['id_design']!= 0 ? " and s.design_id=".$data['id_design']."" :'')."
            ".($data['id_sub_design']!='' && $data['id_sub_design']!= 0 ? " and s.id_sub_design=".$data['id_sub_design']."" :'')."
            ".($data['id_branch']!='' && $data['id_branch']!= 0 ? " and s.current_branch=".$data['id_branch']."" :'')."
            ".($data['id_section']!=''  && $data['id_section']!= 0 ? " and s.id_section=".$data['id_section']."" :'')."
            GROUP BY s.id_branch,s.product_id,s.design_id,s.id_sub_design,s.id_section");
        }
        $result = $sql->result_array();
        foreach($result as $val)
        {
            if($data['item_type'] == 1){
                $weight_range_details = [];
                foreach($weight_details as $itm)
                {
                    $tag_details = [];
                    foreach($itm['size_details'] as $key)
                    {
                        $tot_pcs = $this->get_reorder_stock_details($val['id_branch'],$val['id_section'],$val['id_product'],$val['id_design'],$val['id_sub_design'],$itm['from_weight'],$itm['to_weight'],$key['id_size'],$itm['id_weight'],$data['report_type'],$data['available_stock_type']);
                        $tag_details[]=array(
                            'id_weight'       =>$itm['id_weight'],
                            'id_size'         =>$key['id_size'],
                            'value'           =>$tot_pcs,
                        );
                    }
                    $weight_range_details[]=array(
                        'id_weight'         =>$itm['id_weight'],
                        'from_weight'       =>$itm['from_weight'],
                        'id_product'        =>$itm['id_product'],
                        'to_weight'         =>$itm['to_weight'],
                        'value'             =>$itm['value'],
                        'weight_description'=>$itm['weight_description'],
                        'tag_size_details'=>$tag_details,
                    );
                }
                $returnData[]=array(
                    'branch_name'           =>$val['branch_name'],
                    'design_name'           =>$val['design_name'],
                    'id_branch'             =>$val['id_branch'],
                    'id_design'             =>$val['id_design'],
                    'id_product'            =>$val['id_product'],
                    'id_section'            =>$val['id_section'],
                    'id_sub_design'         =>$val['id_sub_design'],
                    'product_name'          =>$val['product_name'],
                    'section_name'          =>$val['section_name'],
                    'sub_design_name'       =>$val['sub_design_name'],
                    'reorder_based_on'       =>$val['reorder_based_on'],
                    'weight_details'        =>$weight_range_details,
                );
            }else{
                $size_item_details = [];
                foreach($size_details as $itm)
                {
                    $tag_details = [];
                    $tot_pcs = $this->get_reorder_stock_details($val['id_branch'],$val['id_section'],$val['id_product'],$val['id_design'],$val['id_sub_design'],$itm['from_weight'],$itm['to_weight'],$itm['id_size'],$itm['id_weight'],$data['report_type'],$data['available_stock_type']);
                    $size_item_details[]  =array(
                        'id_size'         =>$itm['id_size'],
                        'value'         =>$itm['value'],
                        'name'         =>$itm['name'],
                        'id_product'        =>$itm['id_product'],
                        'value'=>$tot_pcs,
                    );
                }
                $returnData[]=array(
                    'branch_name'           =>$val['branch_name'],
                    'design_name'           =>$val['design_name'],
                    'id_branch'             =>$val['id_branch'],
                    'id_design'             =>$val['id_design'],
                    'id_product'            =>$val['id_product'],
                    'id_section'            =>$val['id_section'],
                    'id_sub_design'         =>$val['id_sub_design'],
                    'product_name'          =>$val['product_name'],
                    'section_name'          =>$val['section_name'],
                    'sub_design_name'       =>$val['sub_design_name'],
                    'size_details'        =>$size_item_details,
                );
            }
        }
        return $returnData;
    }
    function get_reordervalue($id_branch,$id_section,$id_product,$id_design,$id_sub_design,$id_size,$id_weight)
    {
        $sql = $this->db->query("SELECT * FROM ret_reorder_settings s
        WHERE s.id_branch=".$id_branch."
         ".($id_section!='' ? " and  s.id_section=".$id_section."" :'')."
        and s.id_product=".$id_product."
        and s.id_design=".$id_design." and s.id_sub_design=".$id_sub_design."
        ".($id_size!='' ? " and  s.size=".$id_size."" :'')." ".($id_weight!='' ? " and  s.id_wt_range=".$id_weight."" :'')."");
        //print_r($this->db->last_query());exit;
        return $sql->row_array();
    }
    function get_reorder_stock_details($id_branch,$id_section,$id_product,$id_design,$id_sub_design,$from_weight,$to_weight,$id_size,$id_weight,$report_type,$available_stock_type)
    {
        $reorder_details = $this->get_reordervalue($id_branch,$id_section,$id_product,$id_design,$id_sub_design,$id_size,$id_weight);
        $sql = $this->db->query("SELECT IFNULL(SUM(t.piece),0) as tot_pcs,IFNULL(SUM(t.gross_wt),0) as gross_wt
        FROM ret_taging t
        WHERE t.tag_status = 0
        ".($id_branch!='' ? " and t.current_branch=".$id_branch."" :'')."
        ".($id_section!='' ? " and t.id_section=".$id_section."" :'')."
        ".($id_product!='' ? " and t.product_id=".$id_product."" :'')."
        ".($id_design!='' ? " and t.design_id=".$id_design."" :'')."
        ".($id_sub_design!='' ? " and t.id_sub_design=".$id_sub_design."" :'')."
        ".($id_size!='' ? " and t.size=".$id_size."" :'and t.size is NULL ')."
        ".($from_weight!='' && $to_weight !='' ? " AND t.gross_wt BETWEEN ".$from_weight." and ".$to_weight."" :'')."
        ");
        //echo "<pre>";print_r($this->db->last_query());exit;
        $avail_pcs = 0;
        $avail_gross_wt = 0;
        $avail_pcs = $sql->row()->tot_pcs;
        $avail_gross_wt = $sql->row()->gross_wt;
        if($report_type==1)
        {
            if($avail_pcs < $reorder_details['min_pcs'])
            {
                return $avail_pcs  == 0 ? $reorder_details['min_pcs']:  $reorder_details['min_pcs']-$avail_pcs;
            }
        }else if($report_type==2)
        {
            if($avail_pcs > $reorder_details['max_pcs'])
            {
                return $avail_pcs  == 0 ? $reorder_details['max_pcs']:  $avail_pcs- $reorder_details['max_pcs'];
            }
        }else{
            if($available_stock_type==1){
                return $avail_pcs;
            }else{
                return $avail_gross_wt;
            }
        }
    }
    function get_reorder_product($id_product)
    {
        $sql = $this->db->query("SELECT p.pro_id,p.reorder_based_on,p.product_name FROM ret_product_master p
        WHERE p.product_status  = 1 AND p.reorder_based_on IS NOT NULL
        ".($id_product!='' && $id_product!=0 ? " and p.pro_id =".$id_product."" :'')."");
        return $sql->result_array();
    }
    //Reorder report
    function get_inventory_turnover_details($data) {
        /*echo "<pre>";
        print_r($data);
        exit;*/
       $diffInDays = 0;
       $result = array();
       $stock_detail = [];
       $id_metal=(isset($_POST['id_metal']) ? ($_POST['id_metal'] !='' ? $_POST['id_metal'] :'') :'');
       $multiple_id_metal = implode(' , ', $id_metal);
       if($multiple_id_metal != '') {
           $id_metal = $multiple_id_metal;
       }
       $id_ret_category = (isset($_POST['id_ret_category']) ? ($_POST['id_ret_category'] !='' ? $_POST['id_ret_category'] :'') :'');
       $multiple_id_ret_category = implode(' , ', $id_ret_category);
       if($multiple_id_ret_category != '') {
           $id_ret_category = $multiple_id_ret_category;
       }
       $id_product = (isset($_POST['id_product']) ? ($_POST['id_product'] !='' ? $_POST['id_product'] :'') :'');
       $multiple_id_product = implode(' , ', $id_product);
       if($multiple_id_product != '') {
           $id_product = $multiple_id_product;
       }
       $des_select = (isset($_POST['des_select']) ? ($_POST['des_select'] !='' ? $_POST['des_select'] :'') :'');
       $multiple_des_select = implode(' , ', $des_select);
       if($multiple_des_select != '') {
           $des_select = $multiple_des_select;
       }
       $sub_des_select = (isset($_POST['sub_des_select']) ? ($_POST['sub_des_select'] !='' ? $_POST['sub_des_select'] :'') :'');
       $multiple_sub_des_select = implode(' , ', $sub_des_select);
       if($multiple_sub_des_select != '') {
           $sub_des_select = $multiple_sub_des_select;
       }
       $section_select = (isset($_POST['section_select']) ? ($_POST['section_select'] !='' ? $_POST['section_select'] :'') :'');
       $multiple_section_select = implode(' , ', $section_select);
       if($multiple_section_select != '') {
           $section_select = $multiple_section_select;
       }
       $karigar = (isset($_POST['karigar']) ? ($_POST['karigar'] !='' ? $_POST['karigar'] :'') :'');
       $multiple_karigar = implode(' , ', $karigar);
       if($multiple_karigar != '') {
           $karigar = $multiple_karigar;
       }
       $id_branch = (isset($_POST['id_branch']) ? ($_POST['id_branch'] !='' ? $_POST['id_branch'] :'') :'');
       $multiple_id_branch = implode(' , ', $id_branch);
       if($multiple_id_branch != '') {
           $id_branch = $multiple_id_branch;
       }
       if($_POST['dt_range'] != '') {
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $FromDt = date_format($d1,"Y-m-d");
           $ToDt = date_format($d2,"Y-m-d");
           $fromDateTime = new DateTime($FromDt);
           $toDateTime = new DateTime($ToDt);
           $interval = $fromDateTime->diff($toDateTime);
           $diffInDays = $interval->days + 1;
       }
        $group_by = $data['group_by'];
        $group_query = "";
        $sold_group_query = "";
        $inner_grp_query = "";
        $join1 = "";
        $join2 = "";
        $join3 = "";
        $join4 = "";
        $order_by= "";
        if((is_array($group_by) ? count($group_by) : 0) > 0) {
            foreach ($group_by as $group_val) {
                if($group_val == 1) {
                    $group_query = $group_query."tag.product_id";
                    $sold_group_query = $sold_group_query."b.product_id";
                    $inner_grp_query = $inner_grp_query."tag.product_id";
                    $join1 = "IFNULL(blc.product_id,'') = IFNULL(tag.product_id,'')";
                    $join2 = "IFNULL(INW.product_id,'') = IFNULL(tag.product_id,'')";
                    $join3 = "IFNULL(s.product_id,'') = IFNULL(tag.product_id,'')";
                    $join4 = "IFNULL(br_out.product_id,'') = IFNULL(tag.product_id,'')";
                    $order_by = $order_by."tag.product_id";
                }
                if($group_val == 2) {
                    if($group_query != "") {
                        $group_query =  $group_query.", ";
                        $sold_group_query =  $sold_group_query.", ";
                        $inner_grp_query =  $inner_grp_query.", ";
                    }
                    if($order_by != "")
                        $order_by =  $order_by.", ";
                    if($join1 != "")
                        $join1 = $join1." AND ";
                    if($join2 != "")
                        $join2 = $join2." AND ";
                    if($join3 != "")
                        $join3 = $join3." AND ";
                    if($join4 != "")
                        $join4 = $join4." AND ";
                    $group_query =  $group_query."tag.design_id";
                    $sold_group_query =  $sold_group_query."b.design_id";
                    $inner_grp_query =  $inner_grp_query."tag.design_id";
                    $join1 = $join1."IFNULL(blc.design_id,'') = IFNULL(tag.design_id,'')";
                    $join2 = $join2."IFNULL(INW.design_id,'') = IFNULL(tag.design_id,'')";
                    $join3 = $join3."IFNULL(s.design_id,'') = IFNULL(tag.design_id,'')";
                    $join4 = $join4."IFNULL(br_out.design_id,'') = IFNULL(tag.design_id,'')";
                    $order_by = $order_by."tag.design_id";
                }
                if($group_val == 3) {
                    if($group_query != "") {
                        $group_query =  $group_query.", ";
                        $sold_group_query =  $sold_group_query.", ";
                        $inner_grp_query =  $inner_grp_query.", ";
                    }
                    if($order_by != "")
                        $order_by =  $order_by.", ";
                    if($join1 != "")
                        $join1 = $join1." AND ";
                    if($join2 != "")
                        $join2 = $join2." AND ";
                    if($join3 != "")
                        $join3 = $join3." AND ";
                    if($join4 != "")
                        $join4 = $join4." AND ";
                    $group_query = $group_query."tag.id_sub_design";
                    $sold_group_query =  $sold_group_query."IF(b.tag_id IS NULL, est.id_sub_design, tag.id_sub_design)";
                    $inner_grp_query = $inner_grp_query."tag.id_sub_design";
                    $join1 = $join1."IFNULL(blc.id_sub_design,'') = IFNULL(tag.id_sub_design,'')";
                    $join2 = $join2."IFNULL(INW.id_sub_design,'') = IFNULL(tag.id_sub_design,'')";
                    $join3 = $join3."IFNULL(s.id_sub_design,'') = IFNULL(tag.id_sub_design,'')";
                    $join4 = $join4."IFNULL(br_out.id_sub_design,'') = IFNULL(tag.id_sub_design,'')";
                    $order_by = $order_by."tag.id_sub_design";
                }
                if($group_val == 4) {
                    if($group_query != "") {
                        $group_query =  $group_query.", ";
                        $sold_group_query =  $sold_group_query.", ";
                        $inner_grp_query =  $inner_grp_query.", ";
                    }
                    if($order_by != "")
                        $order_by =  $order_by.", ";
                    if($join1 != "")
                        $join1 = $join1." AND ";
                    if($join2 != "")
                        $join2 = $join2." AND ";
                    if($join3 != "")
                        $join3 = $join3." AND ";
                    if($join4 != "")
                        $join4 = $join4." AND ";
                    $group_query = $group_query."tag.id_section";
                    $sold_group_query =  $sold_group_query."IF(b.tag_id IS NULL, est_sec.id_section, tag.id_section)";
                    $inner_grp_query = $inner_grp_query."tag.id_section";
                    $join1 = $join1."IFNULL(blc.id_section,'') = IFNULL(tag.id_section,'')";
                    $join2 = $join2."IFNULL(INW.id_section,'') = IFNULL(tag.id_section,'')";
                    $join3 = $join3."IFNULL(s.id_section,'') = IFNULL(tag.id_section,'')";
                    $join4 = $join4."IFNULL(br_out.id_section,'') = IFNULL(tag.id_section,'')";
                    $order_by = $order_by."tag.id_section";
                }
                if($group_val == 5) {
                    if($group_query != "") {
                        $group_query =  $group_query.", ";
                        $sold_group_query =  $sold_group_query.", ";
                        $inner_grp_query =  $inner_grp_query.", ";
                    }
                    if($order_by != "")
                        $order_by =  $order_by.", ";
                    if($join1 != "")
                        $join1 = $join1." AND ";
                    if($join2 != "")
                        $join2 = $join2." AND ";
                    if($join3 != "")
                        $join3 = $join3." AND ";
                    if($join4 != "")
                        $join4 = $join4." AND ";
                    $group_query = $group_query."li.gold_smith";
                    $sold_group_query =  $sold_group_query."li.gold_smith";
                    $inner_grp_query = $inner_grp_query."tag.gold_smith";
                    $join1 = $join1."IFNULL(blc.gold_smith,'') = IFNULL(li.gold_smith,'')";
                    $join2 = $join2."IFNULL(INW.gold_smith,'') = IFNULL(li.gold_smith,'')";
                    $join3 = $join3."IFNULL(s.gold_smith,'') = IFNULL(li.gold_smith,'')";
                    $join4 = $join4."IFNULL(br_out.gold_smith,'') = IFNULL(li.gold_smith,'')";
                    $order_by = $order_by."gold_smith";
                }
                if($group_val == 6) {
                    if($group_query != "") {
                        $group_query =  $group_query.", ";
                        $sold_group_query =  $sold_group_query.", ";
                        $inner_grp_query =  $inner_grp_query.", ";
                    }
                    if($order_by != "")
                        $order_by =  $order_by.", ";
                    if($join1 != "")
                        $join1 = $join1." AND ";
                    if($join2 != "")
                        $join2 = $join2." AND ";
                    if($join3 != "")
                        $join3 = $join3." AND ";
                    if($join4 != "")
                        $join4 = $join4." AND ";
                    $group_query = $group_query."wt.id_weight";
                    $sold_group_query =  $sold_group_query."wt.id_weight";
                    $inner_grp_query = $inner_grp_query."tag.id_weight";
                    $join1 = $join1."IFNULL(blc.id_weight,'') = IFNULL(wt.id_weight,'')";
                    $join2 = $join2."IFNULL(INW.id_weight,'') = IFNULL(wt.id_weight,'')";
                    $join3 = $join3."IFNULL(s.id_weight,'') = IFNULL(wt.id_weight,'')";
                    $join4 = $join4."IFNULL(br_out.id_weight,'') = IFNULL(wt.id_weight,'')";
                    $order_by = $order_by."id_weight";
                }
                if($group_val == 7) {
                    if($group_query != "") {
                        $group_query =  $group_query.", ";
                        $sold_group_query =  $sold_group_query.", ";
                        $inner_grp_query =  $inner_grp_query.", ";
                    }
                    if($order_by != "")
                        $order_by =  $order_by.", ";
                    if($join1 != "")
                        $join1 = $join1." AND ";
                    if($join2 != "")
                        $join2 = $join2." AND ";
                    if($join3 != "")
                        $join3 = $join3." AND ";
                    if($join4 != "")
                        $join4 = $join4." AND ";
                    $group_query = $group_query."tag.size";
                    $sold_group_query =  $sold_group_query."tag.size";
                    $inner_grp_query = $inner_grp_query."tag.size";
                    $join1 = $join1."IFNULL(blc.size,'') = IFNULL(tag.size,'')";
                    $join2 = $join2."IFNULL(INW.size,'') = IFNULL(tag.size,'')";
                    $join3 = $join3."IFNULL(s.size,'') = IFNULL(tag.size,'')";
                    $join4 = $join4."IFNULL(br_out.size,'') = IFNULL(tag.size,'')";
                    $order_by = $order_by."tag.size";
                }
            }
            if($group_query != "") {
                $group_query = "GROUP BY ".$group_query;
                $sold_group_query = "GROUP BY ".$sold_group_query;
                $inner_grp_query = "GROUP BY ".$inner_grp_query;
            }
            if($order_by != "") {
                $order_by = "ORDER BY ".$order_by;
            }
        } else {
            $group_query = "GROUP BY tag.product_id, tag.design_id, tag.id_sub_design, wt.id_weight";
            $sold_group_query = "GROUP BY b.product_id, b.design_id, IF(b.tag_id IS NULL, est.id_sub_design, tag.id_sub_design), wt.id_weight";
            $inner_grp_query = "GROUP BY tag.product_id, tag.design_id, tag.id_sub_design, tag.id_weight";
            $join1 = "IFNULL(blc.product_id,'') = IFNULL(tag.product_id,'') AND IFNULL(blc.design_id,'') = IFNULL(tag.design_id,'') AND IFNULL(blc.id_sub_design,'') = IFNULL(tag.id_sub_design,'') AND IFNULL(blc.id_weight,'') = IFNULL(wt.id_weight,'')";
            $join2 = "IFNULL(INW.product_id,'') = IFNULL(tag.product_id,'') AND IFNULL(INW.design_id,'') = IFNULL(tag.design_id,'') AND IFNULL(INW.id_sub_design,'') = IFNULL(tag.id_sub_design,'') AND IFNULL(INW.id_weight,'') = IFNULL(wt.id_weight,'')";
            $join3 = "IFNULL(s.product_id,'') = IFNULL(tag.product_id,'') AND IFNULL(s.design_id,'') = IFNULL(tag.design_id,'') AND IFNULL(s.id_sub_design,'') = IFNULL(tag.id_sub_design,'') AND IFNULL(s.id_weight,'') = IFNULL(wt.id_weight,'')";
            $join4 = "IFNULL(br_out.product_id,'') = IFNULL(tag.product_id,'') AND IFNULL(br_out.design_id,'') = IFNULL(tag.design_id,'') AND IFNULL(br_out.id_sub_design,'') = IFNULL(tag.id_sub_design,'') AND IFNULL(br_out.id_weight,'') = IFNULL(wt.id_weight,'')";
            $order_by = "ORDER BY tag.product_id, tag.design_id, tag.id_sub_design, id_weight";
        }
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $sql_main = "SELECT
                        c.name as category_name,
                        m.metal as metal_name,
                        tag.product_id,
                        tag.design_id,
                        tag.id_sub_design,
                        tag.size,
                        tag.id_section,
                        li.gold_smith,
                        wt.id_weight,
                        p.product_name,
                        d.design_name as design_name,
                        sm.sub_design_name as sub_design_name,
                        IFNULL(sec.section_name, '') AS section_name,
                        IFNULL(k.firstname, '') AS karigar_name,
                        IFNULL(wt.weight_description, '') AS weight_name,
                        CONCAT(IFNULL(s.value,''),'',IFNULL(s.name,'')) as size_name
                    FROM ret_taging tag
                    LEFT JOIN ret_product_master p on p.pro_id=tag.product_id
                    LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                    LEFT JOIN metal m on m.id_metal=c.id_metal
                    LEFT JOIN ret_design_master d ON d.design_no = tag.design_id
                    LEFT JOIN ret_sub_design_master sm  ON sm.id_sub_design = tag.id_sub_design
                    LEFT JOIN ret_lot_inwards li ON li.lot_no = tag.tag_lot_id
                    LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND wt.id_design = tag.design_id AND wt.id_sub_design =tag.id_sub_design AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
                    LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                    LEFT JOIN ret_karigar k ON k.id_karigar = li.gold_smith
                    LEFT JOIN ret_size s on s.id_size=tag.size
                where tag.tag_id is not null
                ".($id_metal !='' && $id_metal !=0 ? " and m.id_metal IN (".$id_metal.")" :'')."
                ".($id_ret_category !='' && $id_ret_category !=0 ? " and p.cat_id IN (".$id_ret_category.")" :'')."
                ".($id_product !='' && $id_product !=0  ? " and tag.product_id IN (".$id_product.")" :'')."
                ".($des_select !='' && $des_select !=0 ? " and tag.design_id IN (".$des_select.")" :'')."
                ".($sub_des_select !='' && $sub_des_select !=0 ? " and tag.id_sub_design IN (".$sub_des_select.")" :'')."
                ".($karigar !='' && $karigar !=0 ? " and li.gold_smith IN (".$karigar.")" :'')."
                ".($section_select !='' && $section_select !=0 ? " and tag.id_section IN (".$section_select.")" :'')."
                ".$group_query."
                ".$order_by;
                $sql = $this->db->query($sql_main);
                $result_main = $sql->result_array();
        $sql_blc = "SELECT
                    tag.tag_code,
                    tag.tag_id,
                    tag.old_tag_id,
                    p.product_name,
                    d.design_name as design_name,
                    sm.sub_design_name as sub_design_name,
                    IFNULL(sec.section_name, '') AS section_name,
                    IFNULL(k.firstname, '') AS karigar_name,
                    IFNULL(wt.weight_description, '') AS weight_name,
                    CONCAT(IFNULL(s.value,''),'',IFNULL(s.name,'')) as size_name,
                    ifnull(sum(tag.gross_wt),0) as gross_wt,
                    tag.product_id,
                    tag.design_id,
                    tag.id_sub_design,
                    tag.id_section,
                    li.gold_smith,
                    p.cat_id,
                    wt.id_weight,
                    tag.size
                    FROM ret_taging_status_log m1
                    LEFT JOIN ret_taging_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_tag_status_log < m2.id_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
                    LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                    LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                    LEFT JOIN ret_design_master d ON d.design_no = tag.design_id
                    LEFT JOIN ret_sub_design_master sm  ON sm.id_sub_design = tag.id_sub_design
                    LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                    LEFT JOIN ret_lot_inwards li ON li.lot_no = tag.tag_lot_id
                    LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND wt.id_design = tag.design_id AND wt.id_sub_design =tag.id_sub_design AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
                    LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                    LEFT JOIN ret_karigar k ON k.id_karigar = li.gold_smith
                    LEFT JOIN ret_size s on s.id_size=tag.size
                    WHERE m2.id_tag_status_log IS NULL
                    ".($id_branch !='' && $id_branch != 0  ? " AND m1.to_branch IN (".$id_branch.")" :'')."
                    ".($id_metal !='' && $id_metal !=0 ? " and c.id_metal IN (".$id_metal.")" :'')."
                    ".($id_ret_category !='' && $id_ret_category !=0 ? " and p.cat_id IN (".$id_ret_category.")" :'')."
                    ".($id_product !='' && $id_product !=0  ? " and tag.product_id IN (".$id_product.")" :'')."
                    ".($des_select !='' && $des_select !=0 ? " and tag.design_id IN (".$des_select.")" :'')."
                    ".($sub_des_select !='' && $sub_des_select !=0 ? " and tag.id_sub_design IN (".$sub_des_select.")" :'')."
                    ".($karigar !='' && $karigar !=0 ? " and li.gold_smith IN (".$karigar.")" :'')."
                    ".($section_select !='' && $section_select !=0 ? " and tag.id_section IN (".$section_select.")" :'')."
                    AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
                    ".$group_query." "
                    .$order_by;
                    $sql = $this->db->query($sql_blc);
                    $result_blc = $sql->result_array();
        $sql_inw = "SELECT
                    tag.tag_id,
                    tag.product_id,
                    tag.cat_id,
                    GROUP_CONCAT(CONCAT(IFNULL((tag.gross_wt),0), ',', IFNULL(tag.date_inw,'-')) ORDER BY tag.date_inw ASC SEPARATOR ';') AS gross_combined,
                    tag.design_id,
                    tag.id_sub_design,
                    tag.id_section,
                    tag.gold_smith,
                    tag.id_weight,
                    tag.size,
                    tag.product_name,
                    tag.design_name,
                    tag.sub_design_name,
                    tag.section_name,
                    tag.karigar_name,
                    tag.weight_name,
                    tag.size_name
                    FROM
                        (SELECT
                            tag.tag_id,
                            tag.product_id,
                            p.cat_id,
                            ifnull(SUM(tag.gross_wt),0) as gross_wt,
                            DATE(m1.date) as date_inw,
                            tag.design_id,
                            tag.id_sub_design,
                            tag.id_section,
                            li.gold_smith,
                            wt.id_weight,
                            tag.size,
                            p.product_name,
                            d.design_name as design_name,
                            sm.sub_design_name as sub_design_name,
                            IFNULL(sec.section_name, '') AS section_name,
                            IFNULL(k.firstname, '') AS karigar_name,
                            IFNULL(wt.weight_description, '') AS weight_name,
                            CONCAT(IFNULL(s.value,''),'',IFNULL(s.name,'')) as size_name
                        FROM ret_taging_status_log m1
                        LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
                        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        LEFT JOIN ret_design_master d ON d.design_no = tag.design_id
                        LEFT JOIN ret_sub_design_master sm  ON sm.id_sub_design = tag.id_sub_design
                        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                        LEFT JOIN ret_lot_inwards li ON li.lot_no = tag.tag_lot_id
                        LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND wt.id_design = tag.design_id AND wt.id_sub_design =tag.id_sub_design AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
                        LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                        LEFT JOIN ret_karigar k ON k.id_karigar = li.gold_smith
                        LEFT JOIN ret_size s on s.id_size=tag.size
                        WHERE tag.tag_id IS NOT NULL
                        ".($id_branch !='' && $id_branch != 0  ? " AND m1.to_branch IN (".$id_branch.")" :'')."
                        ".($id_metal !='' && $id_metal !=0 ? " and c.id_metal IN (".$id_metal.")" :'')."
                        ".($id_ret_category !='' && $id_ret_category !=0 ? " and p.cat_id IN (".$id_ret_category.")" :'')."
                        ".($id_product !='' && $id_product !=0  ? " and tag.product_id IN (".$id_product.")" :'')."
                        ".($des_select !='' && $des_select !=0 ? " and tag.design_id IN (".$des_select.")" :'')."
                        ".($sub_des_select !='' && $sub_des_select !=0 ? " and tag.id_sub_design IN (".$sub_des_select.")" :'')."
                        ".($karigar !='' && $karigar !=0 ? " and li.gold_smith IN (".$karigar.")" :'')."
                        ".($section_select !='' && $section_select !=0 ? " and tag.id_section IN (".$section_select.")" :'')."
                        AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
                        ".$group_query.", DATE(m1.date)) as tag
                    ".$inner_grp_query." "
                    .$order_by;
                    $sql = $this->db->query($sql_inw);
                    $result_inw = $sql->result_array();
        $sql_sold = "SELECT
                        GROUP_CONCAT(CONCAT(IFNULL((tag.gross_wt),0), ',', IFNULL(tag.bill_date,'-')) ORDER BY tag.bill_date ASC SEPARATOR ';') AS gross_combined,
                        tag.product_id,
                        tag.cat_id,
                        tag.design_id,
                        tag.id_sub_design,
                        tag.gold_smith,
                        tag.id_section,
                        tag.id_weight,
                        tag.size,
                        tag.product_name,
                        tag.design_name,
                        tag.sub_design_name,
                        tag.section_name,
                        tag.karigar_name,
                        tag.weight_name,
                        tag.size_name
                    FROM
                        (SELECT
                            ifnull(SUM(b.gross_wt),0) as gross_wt,
                            
                            b.product_id,
                            
                            p.cat_id,
                            
                            b.design_id,
                           
                            IF(b.tag_id IS NULL, est.id_sub_design, tag.id_sub_design) AS id_sub_design,
                            
                            li.gold_smith,
                            
                            IF(b.tag_id IS NULL, est_sec.id_section, tag.id_section) AS id_section,
                            
                            wt.id_weight,
                            
                            tag.size,
                            
                            DATE(bill.bill_date) AS bill_date,
                            
                            p.product_name,
                            
                            d.design_name as design_name,
                            
                            sm.sub_design_name as sub_design_name,
                            
                            IFNULL(sec.section_name, '') AS section_name,
                            
                            IFNULL(k.firstname, '') AS karigar_name,
                            
                            IFNULL(wt.weight_description, '') AS weight_name,
                            
                            CONCAT(IFNULL(s.value,''),'',IFNULL(s.name,'')) as size_name
                        FROM ret_bill_details b 
                        
                        LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
                        
                        LEFT JOIN ret_estimation_items est on est.est_item_id = b.esti_item_id
                        
                        LEFT JOIN ret_taging tag on tag.tag_id = b.tag_id
                        
                        LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
                        
                        LEFT JOIN ret_design_master d ON d.design_no = b.design_id
                        
                        LEFT JOIN ret_sub_design_master sm  ON sm.id_sub_design = IF(b.tag_id IS NULL, est.id_sub_design, tag.id_sub_design)
                        
                        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                        
                        LEFT JOIN ret_lot_inwards li ON li.lot_no = tag.tag_lot_id
                        
                        LEFT JOIN ret_weight wt ON wt.id_product = b.product_id AND (b.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
                        
                        LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                        
                        LEFT JOIN ret_section est_sec ON est_sec.id_section = est.id_section
                        
                        LEFT JOIN ret_karigar k ON k.id_karigar = li.gold_smith
                        
                        LEFT JOIN ret_size s on s.id_size=tag.size
                        WHERE bill.bill_status = 1 and
                        (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id
                        ".($id_branch !='' && $id_branch != 0  ? " AND bill.id_branch IN (".$id_branch.")" :'')."
                        
                        ".($id_metal !='' && $id_metal !=0 ? " and c.id_metal IN (".$id_metal.")" :'')."
                        
                        ".($id_ret_category !='' && $id_ret_category !=0 ? " and p.cat_id IN (".$id_ret_category.")" :'')."
                        
                        ".($id_product !='' && $id_product !=0  ? " and b.product_id IN (".$id_product.")" :'')."
                        
                        ".($des_select !='' && $des_select !=0 ? " and b.design_id IN (".$des_select.")" :'')."
                        
                        ".($sub_des_select !='' && $sub_des_select !=0 ? " and IF(b.tag_id IS NULL, est.id_sub_design, tag.id_sub_design) IN (".$sub_des_select.")" :'')."
                        
                        ".($karigar !='' && $karigar !=0 ? " and li.gold_smith IN (".$karigar.")" :'')."
                        
                        ".($section_select !='' && $section_select !=0 ? " and IF(b.tag_id IS NULL, est_sec.id_section, tag.id_section) IN (".$section_select.")" :'')."
                        
                        ".$sold_group_query.", DATE(bill.bill_date)) as tag
                    ".$inner_grp_query." "
                    .$order_by;
                    $sql = $this->db->query($sql_sold);
                    $result_sold = $sql->result_array();
        $sql_br_out = "SELECT
                        tag.product_id,
                        tag.cat_id,
                        GROUP_CONCAT(CONCAT(IFNULL((tag.gross_wt),0), ',', IFNULL(DATE(tag.log_date),'-')) ORDER BY tag.log_date ASC SEPARATOR ';') AS gross_combined,
                        tag.design_id,
                        tag.id_sub_design,
                        tag.gold_smith,
                        tag.id_section,
                        tag.id_weight,
                        tag.size,
                        tag.product_name,
                        tag.design_name,
                        tag.sub_design_name,
                        tag.section_name,
                        tag.karigar_name,
                        tag.weight_name,
                        tag.size_name
                    FROM
                        (SELECT
                            tag.product_id,
                            p.cat_id,
                            ifnull(sum(tag.gross_wt),0) as gross_wt,
                            tag.design_id,
                            tag.id_sub_design,
                            li.gold_smith,
                            tag.id_section,
                            wt.id_weight,
                            tag.size,
                            date(l.date) AS log_date,
                            p.product_name,
                            d.design_name as design_name,
                            sm.sub_design_name as sub_design_name,
                            IFNULL(sec.section_name, '') AS section_name,
                            IFNULL(k.firstname, '') AS karigar_name,
                            IFNULL(wt.weight_description, '') AS weight_name,
                            CONCAT(IFNULL(s.value,''),'',IFNULL(s.name,'')) as size_name
                        FROM ret_taging tag
                        LEFT JOIN ret_taging_status_log l on l.tag_id = tag.tag_id and l.from_branch IN (".$id_branch.") and (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=15)
                        LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
                        LEFT JOIN ret_design_master d ON d.design_no = tag.design_id
                        LEFT JOIN ret_sub_design_master sm  ON sm.id_sub_design = tag.id_sub_design
                        LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
                        LEFT JOIN ret_lot_inwards li ON li.lot_no = tag.tag_lot_id
                        LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND wt.id_design = tag.design_id AND wt.id_sub_design =tag.id_sub_design AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
                        LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                        LEFT JOIN ret_karigar k ON k.id_karigar = li.gold_smith
                        LEFT JOIN ret_size s on s.id_size=tag.size
                        WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
                        (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7 or l.status=15)
                        ".($id_branch !='' && $id_branch != 0  ? " AND l.from_branch IN (".$id_branch.")" :'')."
                        ".($id_metal !='' && $id_metal !=0 ? " and c.id_metal IN (".$id_metal.")" :'')."
                        ".($id_ret_category !='' && $id_ret_category !=0 ? " and p.cat_id IN (".$id_ret_category.")" :'')."
                        ".($id_product !='' && $id_product !=0  ? " and tag.product_id IN (".$id_product.")" :'')."
                        ".($des_select !='' && $des_select !=0 ? " and tag.design_id IN (".$des_select.")" :'')."
                        ".($sub_des_select !='' && $sub_des_select !=0 ? " and tag.id_sub_design IN (".$sub_des_select.")" :'')."
                        ".($karigar !='' && $karigar !=0 ? " and li.gold_smith IN (".$karigar.")" :'')."
                        ".($section_select !='' && $section_select !=0 ? " and tag.id_section IN (".$section_select.")" :'')."
                        ".$group_query.", date(l.date)) AS tag
                    ".$inner_grp_query." "
                    .$order_by;
                    $sql = $this->db->query($sql_br_out);
                    $result_br_out = $sql->result_array();
            $indexedBlc = $this->indexing_array($result_blc, $group_by);
            $indexedInw = $this->indexing_array($result_inw, $group_by);
            $indexedSold = $this->indexing_array($result_sold, $group_by);
            $indexedBrout = $this->indexing_array($result_br_out, $group_by);
            $resultdata = array();
            foreach($result_main as $main) {
                $key = "";
                if(in_array(1, $group_by)) {
                    $key = $main["product_id"];
                }
                if(in_array(2, $group_by)) {
                    if($key != "")
                        $key = $key.".";
                    $key = $key.$main["design_id"];
                }
                if(in_array(3, $group_by)) {
                    if($key != "")
                        $key = $key.".";
                    $key = $key.$main["id_sub_design"];
                }
                if(in_array(4, $group_by)) {
                    if($key != "")
                        $key = $key.".";
                    $key = $key.$main["id_section"];
                }
                if(in_array(5, $group_by)) {
                    if($key != "")
                        $key = $key.".";
                    $key = $key.$main["gold_smith"];
                }
                if(in_array(6, $group_by)) {
                    if($key != "")
                        $key = $key.".";
                    $key = $key.$main["id_weight"];
                }
                if(in_array(7, $group_by)) {
                    if($key != "")
                        $key = $key.".";
                    $key = $key.$main["size"];
                }
                $main['op_blc_gwt'] = isset($indexedBlc[$key]["gross_wt"]) && trim($indexedBlc[$key]["gross_wt"]) > 0 ? $indexedBlc[$key]["gross_wt"] : 0;
                $main['inw_gross'] = isset($indexedInw[$key]["gross_combined"]) && trim($indexedInw[$key]["gross_combined"]) != "" ? $indexedInw[$key]["gross_combined"] : "";
                $main['sold_gross'] = isset($indexedSold[$key]["gross_combined"]) && trim($indexedSold[$key]["gross_combined"]) != "" ? $indexedSold[$key]["gross_combined"] : "";
                $main['br_gross'] = isset($indexedBrout[$key]["gross_combined"]) && trim($indexedBrout[$key]["gross_combined"]) != "" ? $indexedBrout[$key]["gross_combined"] : "";
                $resultdata[] = $main;
            }
            foreach ($resultdata as $data) {
                $opening_gross = $data['op_blc_gwt'];
                $closing_gross = 0;
                $total_closing_gross = 0;
                $total_sold = 0;
                $inw_gross = explode(";", $data['inw_gross']);
                $sold_gross = explode(";", $data['sold_gross']);
                $br_gross = explode(";", $data['br_gross']);
                $currentDate = $FromDt;
                while ($currentDate <= $ToDt) {
                    $inw_gross_wt = 0;
                    $sold_gross_wt = 0;
                    $brout_gross_wt = 0;
                    foreach ($inw_gross as $keyinw => $inwgross) {
                        $wt = 0;
                        $date = "";
                        if($inwgross != "") {
                            $inwgross = explode(",", $inwgross);
                            $wt = $inwgross[0];
                            $date = $inwgross[1];
                        }
                        if($currentDate == $date) {
                            $inw_gross_wt = $wt;
                            unset($inw_gross[$keyinw]);
                            break;
                        }
                    }
                    foreach ($sold_gross as $keysold => $sgross) {
                        $wt = 0;
                        $date = "";
                        if($sgross != "") {
                            $sgross = explode(",", $sgross);
                            $wt = $sgross[0];
                            $date = $sgross[1];
                        }
                        if($currentDate == $date) {
                            $sold_gross_wt = $wt;
                            unset($sold_gross[$keysold]);
                            break;
                        }
                    }
                    foreach ($br_gross as $keybr => $brgross) {
                        $wt = 0;
                        $date = "";
                        if($brgross != "") {
                            $brgross = explode(",", $brgross);
                            $wt = $brgross[0];
                            $date = $brgross[1];
                        }
                        if($currentDate == $date) {
                            $brout_gross_wt = $wt;
                            unset($br_gross[$keybr]);
                            break;
                        }
                    }
                    $closing_gross = $opening_gross + $inw_gross_wt - $sold_gross_wt - $brout_gross_wt;
                    $total_sold += $sold_gross_wt;
                    $total_closing_gross += $closing_gross;
                    $opening_gross = $closing_gross;
                    $currentDate = date('Y-m-d', strtotime($currentDate . ' +1 day'));
                }
                $avg_stock_gwt = round(($total_closing_gross / $diffInDays),3);
                $closing_gross = round($closing_gross, 3);
                $total_sold = round($total_sold, 3);
                if($avg_stock_gwt != 0 || $total_sold != 0) {
                    $result[] = array(
                        "category_name" => $data['category_name'],
                        "metal_name" => $data['metal_name'],
                        "product_id" => $data['product_id'],
                        "design_id" => $data['design_id'],
                        "id_sub_design" => $data['id_sub_design'],
                        "id_section" => $data['id_section'],
                        "gold_smith" => $data['gold_smith'],
                        "id_weight" => $data['id_weight'],
                        "id_size"   => $data['size'],
                        "product_name" => $data['product_name'],
                        "design_name" => $data['design_name'],
                        "sub_design_name" => $data['sub_design_name'],
                        "section_name" => $data['section_name'],
                        "karigar_name" => $data['karigar_name'],
                        "weight_name" => $data['weight_name'],
                        "size_name" => $data['size_name'],
                        "avg_stock_gwt" => $avg_stock_gwt,
                        "sold_gwt" => $total_sold,
                        "closing_wt" => $closing_gross
                    );
                }
            }
    	    return array("data" => $result, "diffInDays" => $diffInDays);
    }
    function indexing_array($array, $group_by) {
        $indexedArray = [];
        foreach ($array as $item) {
            $key = "";
            if(in_array(1, $group_by)) {
                $key = $item["product_id"];
            }
            if(in_array(2, $group_by)) {
                if($key != "")
                    $key = $key.".";
                $key = $key.$item["design_id"];
            }
            if(in_array(3, $group_by)) {
                if($key != "")
                    $key = $key.".";
                $key = $key.$item["id_sub_design"];
            }
            if(in_array(4, $group_by)) {
                if($key != "")
                    $key = $key.".";
                $key = $key.$item["id_section"];
            }
            if(in_array(5, $group_by)) {
                if($key != "")
                    $key = $key.".";
                $key = $key.$item["gold_smith"];
            }
            if(in_array(6, $group_by)) {
                if($key != "")
                    $key = $key.".";
                $key = $key.$item["id_weight"];
            }
            if(in_array(7, $group_by)) {
                if($key != "")
                    $key = $key.".";
                $key = $key.$item["size"];
            }
            $indexedArray[$key] = $item;
        }
        return $indexedArray;
    }
    function getDynamicStockAgeDetails($data) {
        $result_array = array();
        $id_metal=(isset($data['id_metal']) ? ($data['id_metal'] !='' ? $data['id_metal'] :'') :'');
        $multiple_id_metal = implode(' , ', $id_metal);
        if($multiple_id_metal != '') {
            $id_metal = $multiple_id_metal;
        } else {
            $id_metal = $data['id_product'];
        }
        $id_ret_category = (isset($data['id_ret_category']) ? ($data['id_ret_category'] !='' ? $data['id_ret_category'] :'') :'');
        $multiple_id_ret_category = implode(' , ', $id_ret_category);
        if($multiple_id_ret_category != '') {
            $id_ret_category = $multiple_id_ret_category;
        } else {
            $id_ret_category = $id_ret_category;
        }
        $id_product = (isset($data['id_product']) ? ($data['id_product'] !='' ? $data['id_product'] :'') :'');
        $multiple_id_product = implode(' , ', $id_product);
        if($multiple_id_product != '') {
            $id_product = $multiple_id_product;
        } else {
            $id_product = $id_product;
        }
        $des_select = (isset($data['des_select']) ? ($data['des_select'] !='' ? $data['des_select'] :'') :'');
        $multiple_des_select = implode(' , ', $des_select);
        if($multiple_des_select != '') {
            $des_select = $multiple_des_select;
        } else {
            $des_select = $des_select;
        }
        $sub_des_select = (isset($data['sub_des_select']) ? ($data['sub_des_select'] !='' ? $data['sub_des_select'] :'') :'');
        $multiple_sub_des_select = implode(' , ', $sub_des_select);
        if($multiple_sub_des_select != '') {
            $sub_des_select = $multiple_sub_des_select;
        } else {
            $sub_des_select = $sub_des_select;
        }
        $section_select = (isset($data['section_select']) ? ($data['section_select'] !='' ? $data['section_select'] :'') :'');
        $multiple_section_select = implode(' , ', $section_select);
        if($multiple_section_select != '') {
            $section_select = $multiple_section_select;
        } else {
            $section_select = $section_select;
        }
        $karigar = (isset($data['karigar']) ? ($data['karigar'] !='' ? $data['karigar'] :'') :'');
        $multiple_karigar = implode(' , ', $karigar);
        if($multiple_karigar != '') {
            $karigar = $multiple_karigar;
        } else {
            $karigar = $karigar;
        }
        $id_branch = (isset($data['id_branch']) ? ($data['id_branch'] !='' ? $data['id_branch'] :'') :'');
        $multiple_id_branch = implode(' , ', $id_branch);
        if($multiple_id_branch != '') {
            $id_branch = $multiple_id_branch;
        } else {
            $id_branch = $id_branch;
        }
        if($data['dt_range'] != '') {
            $dateRange = explode('-',$data['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $age_type = $data['age_type'];
        $total_pcs=0;
        $total_wt=0;
	    $stock_det=0;
        $days_validation = "";
        $days_column = "";
        foreach ($data['stock_days'] as $days) {
            if($days['days_from'] > 0 || $days['days_to'] > 0) {
                if($days_validation != "") {
                    $days_validation = $days_validation." || ";
                }
                $days_validation = $days_validation."(
                                                        IF(tag.old_tag_date IS NOT NULL,
                                                            DATEDIFF(DATE(NOW()), DATE(old_tag_date)),
                                                            DATEDIFF(DATE(NOW()), DATE(tag_datetime))
                                                        ) BETWEEN ".$days['days_from']." AND ".$days['days_to']."
                                                    )";
            }
        }
        if($days_validation != "") {
            $days_validation = "AND (".$days_validation.")";
        }
        $sql =$this->db->query("SELECT
                            br.short_name AS branch_code,
                            br.name AS branch_name,
                            tag.tag_code,
                            p.product_name,
                            des.design_name,
                            subdes.sub_design_name,
                            sec.section_name,
                            kar.firstname AS karigar_name,
                            IFNULL(tag.gross_wt,0) AS gross_wt,
                            IFNULL(tag.net_wt,0) AS net_wt,
                            IFNULL(tag.piece,0) AS piece,
                            IF(tag.old_tag_date IS NOT NULL,DATEDIFF(DATE(NOW()),date(old_tag_date)),DATEDIFF(DATE(NOW()),date(tag_datetime))) AS tag_age,
                            IFNULL(sz.value, '') AS size,
                            IFNULL(tagdia.dia_wt, 0) dia_wt,
                            tag.tag_id,
                            DATEDIFF(date(now()),date(received_tag.date)) AS received_age
                        FROM ret_taging tag
                        LEFT JOIN branch br ON br.id_branch = tag.current_branch
                        LEFT JOIN ret_product_master p ON p.pro_id = tag.product_id
                        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
                        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
                        LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                        LEFT JOIN ret_size sz ON sz.id_size = tag.size
                        LEFT JOIN ret_lot_inwards lot ON lot.lot_no = tag.tag_lot_id
                        LEFT JOIN ret_karigar kar ON kar.id_karigar = lot.gold_smith
                        LEFT JOIN ret_category c ON c.id_ret_category = p.cat_id
                        LEFT JOIN (SELECT ts.tag_id, IFNULL(SUM(IF(IFNULL(um.divided_by_value, 0 ) = 0, ts.wt, round((ts.wt / um.divided_by_value), 3))),0) AS stn_wt_in_gms,
                        IFNULL(SUM(ts.pieces),0) as stn_pcs, SUM(IFNULL(ts.wt,0)) AS dia_wt
                                        FROM ret_taging_stone as ts
                                        LEFT JOIN ret_stone as st ON st.stone_id = ts.stone_id
                                        LEFT JOIN ret_uom as um ON um.uom_id = ts.uom_id
                                        WHERE st.stone_type = 1
                                        GROUP by ts.tag_id) tagdia on tagdia.tag_id = tag.tag_id
                            LEFT JOIN (SELECT tag_id,date FROM ret_taging_status_log 
                            WHERE status = 0
                            " . ($id_branch != '' && $id_branch != 0 ? " and to_branch=" . $id_branch . "" : '') . "
                            GROUP BY tag_id 
                            ORDER BY tag_id DESC
                            ) as received_tag ON received_tag.tag_id = tag.tag_id
                        WHERE tag.tag_status = 0
                        ".($data['dt_range'] != '' ? 'AND IF(tag.old_tag_date IS NOT NULL, DATE(old_tag_date), DATE(tag_datetime)) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                        ".($id_metal !='' && $id_metal != 0 ? " AND c.id_metal IN (".$id_metal.")" :'')."
                        ".($id_ret_category !='' && $id_ret_category != 0 ? " AND p.cat_id IN (".$id_ret_category.")" :'')."
                        ".($id_product !='' && $id_product != 0  ? " AND tag.product_id IN (".$id_product.")" :'')."
                        ".($des_select !='' && $des_select != 0  ? " AND tag.design_id  IN (".$des_select.")" :'')."
                        ".($sub_des_select !='' && $sub_des_select != 0  ? " AND tag.id_sub_design  IN (".$sub_des_select.")" :'')."
                        ".($section_select !='' && $section_select != 0  ? " AND tag.id_section IN (".$section_select.")" :'')."
                        ".($karigar !='' && $karigar != 0  ? " AND lot.gold_smith IN (".$karigar.")" :'')."
                        ".($id_branch != '' && $id_branch != 0 ? " AND tag.current_branch IN (".$id_branch.")" :'')."
                        ".$days_validation."
                        ");
                        //print_r($this->db->last_query());exit;
        $result=$sql->result_array();

         // echo "<pre>";print_r($result);exit;
         foreach($result as $key=>$arr){
            $result[$key]['age'] = $age_type == 1 ? $arr['tag_age'] : $arr['received_age'];
        }
        $data_arr = array();
        if($data['group_type'] == 1) { }
        $prod_grp_by = 0;
        $sec_grp_by  = 0;
        $karg_grp_by = 0;
        $branch_grp_by = 0;
        $des_grp_by = 0;
        $subdes_grp_by = 0;
        $size_grp_by = 0;
        foreach($data['group_by'] as $grp_by) {
            if($grp_by == 1) {
                $prod_grp_by = 1;
            }
            if($grp_by == 2) {
                $sec_grp_by = 1;
            }
            if($grp_by == 3) {
                $karg_grp_by = 1;
            }
            if($grp_by == 4) {
                $branch_grp_by = 1;
            }
            if($grp_by == 5) {
                $des_grp_by = 1;
            }
            if($grp_by == 6) {
                $subdes_grp_by = 1;
            }
            if($grp_by == 7) {
                $size_grp_by = 1;
            }
        }
        /*echo "<pre>";
        print_r($result);
        exit;*/
        $i = 1;
        foreach($result as $arr) {
            $branch_name = trim($arr['branch_name']);
            $branch_code = trim($arr['branch_code']);
            $karigarName = trim($arr['karigar_name']);
            $sectionName = trim($arr['section_name']);
            $productName = trim($arr['product_name']);
            $designName = trim($arr['design_name']);
            $subDesignName = trim($arr['sub_design_name']);
            $tagCode     = $arr['tag_code'];
            $kar_section = "";
            if($branch_grp_by == 1 || $sec_grp_by == 1 || $karg_grp_by == 1 || $size_grp_by == 1) {
                $kar_section = trim(($branch_grp_by == 1 ? $arr['branch_name'] : "")."  ".($karg_grp_by == 1 ? $arr['karigar_name'] : "")."  ".($sec_grp_by == 1 ? $arr['section_name'] : "")."  ".($size_grp_by == 1 ? $arr['size'] : ""));
                $kar_section = $kar_section == "" ? "-" : $kar_section;
            }
            $prod_des = "";
            if($prod_grp_by == 1 || $des_grp_by == 1 || $subdes_grp_by == 1) {
                $prod_des = trim(($prod_grp_by == 1 ? $arr['product_name'] : "")."  ".($des_grp_by == 1 ? $arr['design_name'] : "")."  ".($subdes_grp_by == 1 ? $arr['sub_design_name'] : ""));
                $prod_des = $prod_des == "" ? "-" : $prod_des;
            }
            if ($kar_section != "" && $prod_des != "" && $data['group_type'] == 2) {
                $resultArr[$kar_section][$prod_des][$tagCode]['product_name'] = $productName;
                $resultArr[$kar_section][$prod_des][$tagCode]['design_name'] = $designName;
                $resultArr[$kar_section][$prod_des][$tagCode]['sub_design_name'] = $subDesignName;
                $resultArr[$kar_section][$prod_des][$tagCode]['section_name'] = $sectionName;
                $resultArr[$kar_section][$prod_des][$tagCode]['karigar_name'] = $karigarName;
                $resultArr[$kar_section][$prod_des][$tagCode]['tag_code']     = $tagCode;
                $resultArr[$kar_section][$prod_des][$tagCode]['age']          = $arr['age'];
                $resultArr[$kar_section][$prod_des][$tagCode]['piece'] = (isset($resultArr[$kar_section][$prod_des][$tagCode]['piece']) ? $resultArr[$kar_section][$prod_des][$tagCode]['piece'] : 0) + $arr['piece'];
                $resultArr[$kar_section][$prod_des][$tagCode]['gross_wt'] = (isset($resultArr[$kar_section][$prod_des][$tagCode]['gross_wt']) ? $resultArr[$kar_section][$prod_des][$tagCode]['gross_wt'] : 0) + $arr['gross_wt'];
                foreach ($data['stock_days'] as $days) {
                    if($arr['age'] >= $days['days_from'] && $arr['age'] <= $days['days_to']) {
                        $resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['pcs'] = (isset($resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['pcs']) ? $resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['pcs'] : 0) +  $arr['piece'];
                        $resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['wt'] = (isset($resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['wt']) ? $resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['wt'] : 0) + $arr['gross_wt'];
                        $resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['nwt'] = (isset($resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['nwt']) ? $resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['nwt'] : 0) + $arr['net_wt'];
                        $resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['dwt'] = (isset($resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['dwt']) ? $resultArr[$kar_section][$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['dwt'] : 0) + $arr['dia_wt'];
                    }
                }
            } elseif ($kar_section != "" && $prod_des != "") {
                $resultArr[$kar_section][$prod_des]['product_name'] = $productName;
                $resultArr[$kar_section][$prod_des]['design_name'] = $designName;
                $resultArr[$kar_section][$prod_des]['sub_design_name'] = $subDesignName;
                $resultArr[$kar_section][$prod_des]['section_name'] = $sectionName;
                $resultArr[$kar_section][$prod_des]['karigar_name'] = $karigarName;
                $resultArr[$kar_section][$prod_des]['tag_code']     = $tagCode;
                $resultArr[$kar_section][$prod_des]['age']          = $arr['age'];
                $resultArr[$kar_section][$prod_des]['piece'] = (isset($resultArr[$kar_section][$prod_des]['piece']) ? $resultArr[$kar_section][$prod_des]['piece'] : 0) + $arr['piece'];
                $resultArr[$kar_section][$prod_des]['gross_wt'] = (isset($resultArr[$kar_section][$prod_des]['gross_wt']) ? $resultArr[$kar_section][$prod_des]['gross_wt'] : 0) + $arr['gross_wt'];
                foreach ($data['stock_days'] as $days) {
                    if($arr['age'] >= $days['days_from'] && $arr['age'] <= $days['days_to']) {
                        $resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['pcs'] = (isset($resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['pcs']) ? $resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['pcs'] : 0) +  $arr['piece'];
                        $resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['wt'] = (isset($resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['wt']) ? $resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['wt'] : 0) + $arr['gross_wt'];
                        $resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['nwt'] = (isset($resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['nwt']) ? $resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['nwt'] : 0) + $arr['net_wt'];
                        $resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['dwt'] = (isset($resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['dwt']) ? $resultArr[$kar_section][$prod_des][$days['days_from']."_".$days['days_to']]['dwt'] : 0) + $arr['dia_wt'];
                    }
                }
            } elseif ($kar_section != "" && $data['group_type'] == 2) {
                $resultArr[$kar_section][$tagCode]['product_name'] = $productName;
                $resultArr[$kar_section][$tagCode]['design_name'] = $designName;
                $resultArr[$kar_section][$tagCode]['sub_design_name'] = $subDesignName;
                $resultArr[$kar_section][$tagCode]['section_name'] = $sectionName;
                $resultArr[$kar_section][$tagCode]['karigar_name'] = $karigarName;
                $resultArr[$kar_section][$tagCode]['tag_code']     = $tagCode;
                $resultArr[$kar_section][$tagCode]['age']          = $arr['age'];
                $resultArr[$kar_section][$tagCode]['piece'] = (isset($resultArr[$kar_section][$tagCode]['piece']) ? $resultArr[$kar_section][$tagCode]['piece'] : 0) + $arr['piece'];
                $resultArr[$kar_section][$tagCode]['gross_wt'] = (isset($resultArr[$kar_section][$tagCode]['gross_wt']) ? $resultArr[$kar_section][$tagCode]['gross_wt'] : 0) + $arr['gross_wt'];
                foreach ($data['stock_days'] as $days) {
                    if($arr['age'] >= $days['days_from'] && $arr['age'] <= $days['days_to']) {
                        $resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['pcs'] = (isset($resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['pcs']) ? $resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['pcs'] : 0) +  $arr['piece'];
                        $resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['wt'] = (isset($resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['wt']) ? $resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['wt'] : 0) + $arr['gross_wt'];
                        $resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['nwt'] = (isset($resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['nwt']) ? $resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['nwt'] : 0) + $arr['net_wt'];
                        $resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['dwt'] = (isset($resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['dwt']) ? $resultArr[$kar_section][$tagCode][$days['days_from']."_".$days['days_to']]['dwt'] : 0) + $arr['dia_wt'];
                    }
                }
            } elseif ($prod_des != "" && $data['group_type'] == 2) {
                $resultArr[$prod_des][$tagCode]['product_name'] = $productName;
                $resultArr[$prod_des][$tagCode]['design_name'] = $designName;
                $resultArr[$prod_des][$tagCode]['sub_design_name'] = $subDesignName;
                $resultArr[$prod_des][$tagCode]['section_name'] = $sectionName;
                $resultArr[$prod_des][$tagCode]['karigar_name'] = $karigarName;
                $resultArr[$prod_des][$tagCode]['tag_code']     = $tagCode;
                $resultArr[$prod_des][$tagCode]['age']          = $arr['age'];
                $resultArr[$prod_des][$tagCode]['piece'] = (isset($resultArr[$prod_des][$tagCode]['piece']) ? $resultArr[$prod_des][$tagCode]['piece'] : 0) + $arr['piece'];
                $resultArr[$prod_des][$tagCode]['gross_wt'] = (isset($resultArr[$prod_des][$tagCode]['gross_wt']) ? $resultArr[$prod_des][$tagCode]['gross_wt'] : 0) + $arr['gross_wt'];
                foreach ($data['stock_days'] as $days) {
                    if($arr['age'] >= $days['days_from'] && $arr['age'] <= $days['days_to']) {
                        $resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['pcs'] = (isset($resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['pcs']) ? $resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['pcs'] : 0) +  $arr['piece'];
                        $resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['wt'] = (isset($resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['wt']) ? $resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['wt'] : 0) + $arr['gross_wt'];
                        $resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['nwt'] = (isset($resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['nwt']) ? $resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['nwt'] : 0) + $arr['net_wt'];
                        $resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['dwt'] = (isset($resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['dwt']) ? $resultArr[$prod_des][$tagCode][$days['days_from']."_".$days['days_to']]['dwt'] : 0) + $arr['dia_wt'];
                    }
                }
            } elseif ($kar_section != "") {
                $resultArr[$kar_section]['product_name'] = $productName;
                $resultArr[$kar_section]['design_name'] = $designName;
                $resultArr[$kar_section]['sub_design_name'] = $subDesignName;
                $resultArr[$kar_section]['section_name'] = $sectionName;
                $resultArr[$kar_section]['karigar_name'] = $karigarName;
                $resultArr[$kar_section]['tag_code']     = $tagCode;
                $resultArr[$kar_section]['age']          = $arr['age'];
                $resultArr[$kar_section]['piece'] = (isset($resultArr[$kar_section]['piece']) ? $resultArr[$kar_section]['piece'] : 0) + $arr['piece'];
                $resultArr[$kar_section]['gross_wt'] = (isset($resultArr[$kar_section]['gross_wt']) ? $resultArr[$kar_section]['gross_wt'] : 0) + $arr['gross_wt'];
                foreach ($data['stock_days'] as $days) {
                    if($arr['age'] >= $days['days_from'] && $arr['age'] <= $days['days_to']) {
                        $resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['pcs'] = (isset($resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['pcs']) ? $resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['pcs'] : 0) +  $arr['piece'];
                        $resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['wt'] = (isset($resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['wt']) ? $resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['wt'] : 0) + $arr['gross_wt'];
                        $resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['nwt'] = (isset($resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['nwt']) ? $resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['nwt'] : 0) + $arr['net_wt'];
                        $resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['dwt'] = (isset($resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['dwt']) ? $resultArr[$kar_section][$days['days_from']."_".$days['days_to']]['dwt'] : 0) + $arr['dia_wt'];
                    }
                }
            } elseif ($prod_des != "") {
                $resultArr[$prod_des]['product_name'] = $productName;
                $resultArr[$prod_des]['design_name'] = $designName;
                $resultArr[$prod_des]['sub_design_name'] = $subDesignName;
                $resultArr[$prod_des]['section_name'] = $sectionName;
                $resultArr[$prod_des]['karigar_name'] = $karigarName;
                $resultArr[$prod_des]['tag_code']     = $tagCode;
                $resultArr[$prod_des]['age']          = $arr['age'];
                $resultArr[$prod_des]['piece'] = (isset($resultArr[$prod_des]['piece']) ? $resultArr[$prod_des]['piece'] : 0) + $arr['piece'];
                $resultArr[$prod_des]['gross_wt'] = (isset($resultArr[$prod_des]['gross_wt']) ? $resultArr[$prod_des]['gross_wt'] : 0) + $arr['gross_wt'];
                foreach ($data['stock_days'] as $days) {
                    if($arr['age'] >= $days['days_from'] && $arr['age'] <= $days['days_to']) {
                        $resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['pcs'] = (isset($resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['pcs']) ? $resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['pcs'] : 0) +  $arr['piece'];
                        $resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['wt'] = (isset($resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['wt']) ? $resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['wt'] : 0) + $arr['gross_wt'];
                        $resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['nwt'] = (isset($resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['nwt']) ? $resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['nwt'] : 0) + $arr['net_wt'];
                        $resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['dwt'] = (isset($resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['dwt']) ? $resultArr[$prod_des][$days['days_from']."_".$days['days_to']]['dwt'] : 0) + $arr['dia_wt'];
                    }
                }
            } elseif ($data['group_type'] == 2) {
                $resultArr[$tagCode]['product_name'] = $productName;
                $resultArr[$tagCode]['design_name'] = $designName;
                $resultArr[$tagCode]['sub_design_name'] = $subDesignName;
                $resultArr[$tagCode]['section_name'] = $sectionName;
                $resultArr[$tagCode]['karigar_name'] = $karigarName;
                $resultArr[$tagCode]['tag_code']     = $tagCode;
                $resultArr[$tagCode]['age']          = $arr['age'];
                $resultArr[$tagCode]['piece'] = (isset($resultArr[$tagCode]['piece']) ? $resultArr[$tagCode]['piece'] : 0) + $arr['piece'];
                $resultArr[$tagCode]['gross_wt'] = (isset($resultArr[$tagCode]['gross_wt']) ? $resultArr[$tagCode]['gross_wt'] : 0) + $arr['gross_wt'];
                foreach ($data['stock_days'] as $days) {
                    if($arr['age'] >= $days['days_from'] && $arr['age'] <= $days['days_to']) {
                        $resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['pcs'] = (isset($resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['pcs']) ? $resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['pcs'] : 0) +  $arr['piece'];
                        $resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['wt'] = (isset($resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['wt']) ? $resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['wt'] : 0) + $arr['gross_wt'];
                        $resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['nwt'] = (isset($resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['nwt']) ? $resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['nwt'] : 0) + $arr['net_wt'];
                        $resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['dwt'] = (isset($resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['dwt']) ? $resultArr[$tagCode][$days['days_from']."_".$days['days_to']]['dwt'] : 0) + $arr['dia_wt'];
                    }
                }
            } else {
                $resultArr['product_name'] = $productName;
                $resultArr['design_name'] = $designName;
                $resultArr['sub_design_name'] = $subDesignName;
                $resultArr['section_name'] = $sectionName;
                $resultArr['karigar_name'] = $karigarName;
                $resultArr['tag_code']     = $tagCode;
                $resultArr['age']          = $arr['age'];
                $resultArr['piece'] = (isset($resultArr['piece']) ? $resultArr['piece'] : 0) + $arr['piece'];
                $resultArr['gross_wt'] = (isset($resultArr['gross_wt']) ? $resultArr['gross_wt'] : 0) + $arr['gross_wt'];
                foreach ($data['stock_days'] as $days) {
                    if($arr['age'] >= $days['days_from'] && $arr['age'] <= $days['days_to']) {
                        $resultArr[$days['days_from']."_".$days['days_to']]['pcs'] = (isset($resultArr[$days['days_from']."_".$days['days_to']]['pcs']) ? $resultArr[$days['days_from']."_".$days['days_to']]['pcs'] : 0) +  $arr['piece'];
                        $resultArr[$days['days_from']."_".$days['days_to']]['wt'] = (isset($resultArr[$days['days_from']."_".$days['days_to']]['wt']) ? $resultArr[$days['days_from']."_".$days['days_to']]['wt'] : 0) + $arr['gross_wt'];
                        $resultArr[$days['days_from']."_".$days['days_to']]['nwt'] = (isset($resultArr[$days['days_from']."_".$days['days_to']]['nwt']) ? $resultArr[$days['days_from']."_".$days['days_to']]['nwt'] : 0) + $arr['net_wt'];
                        $resultArr[$days['days_from']."_".$days['days_to']]['dwt'] = (isset($resultArr[$days['days_from']."_".$days['days_to']]['dwt']) ? $resultArr[$days['days_from']."_".$days['days_to']]['dwt'] : 0) + $arr['dia_wt'];
                    }
                }
            }
            $i++;
        }
        /*echo "<pre>";
        print_r($resultArr);exit;*/
        return $resultArr;
	}
    function get_stock_ratio_availability($data) {
        /*echo "<pre>";
        print_r($data);
        exit;*/
        $branches = $this->get_branches();
        $result_array = array();
        $grouped_array = array();
        $no_dates = array();
        $id_product = (isset($_POST['id_product']) ? ($_POST['id_product'] !='' ? $_POST['id_product'] :'') :'');
        $multiple_id_product = implode(' , ', $id_product);
        if($multiple_id_product != '') {
            $id_product = $multiple_id_product;
        }
        $des_select = (isset($_POST['des_select']) ? ($_POST['des_select'] !='' ? $_POST['des_select'] :'') :'');
        $multiple_des_select = implode(' , ', $des_select);
        if($multiple_des_select != '') {
            $des_select = $multiple_des_select;
        }
        $sub_des_select = (isset($_POST['sub_des_select']) ? ($_POST['sub_des_select'] !='' ? $_POST['sub_des_select'] :'') :'');
        $multiple_sub_des_select = implode(' , ', $sub_des_select);
        if($multiple_sub_des_select != '') {
            $sub_des_select = $multiple_sub_des_select;
        }
        $size = (isset($_POST['size']) ? ($_POST['size'] !='' ? $_POST['size'] :'') :'');
        $multiple_size = implode(' , ', $section_select);
        if($multiple_size != '') {
            $size = $multiple_size;
        }
        $wt_range = (isset($_POST['wt_range']) ? ($_POST['wt_range'] !='' ? $_POST['wt_range'] :'') :'');
        $multiple_wt_range = implode(' , ', $wt_range);
        if($multiple_wt_range != '') {
            $wt_range = $multiple_wt_range;
        }
        if($_POST['dt_range'] != '') {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $sql =$this->db->query("SELECT
                        GROUP_CONCAT(CONCAT(DATE(l.date), ',', IFNULL(l.status,'-'), ',', IFNULL(l.from_branch,'-'), ',', IFNULL(l.to_branch,'-')) SEPARATOR '; ') AS combined_tags,
                        tag.tag_id,
                        tag.tag_code,
                        tag.product_id,
                        tag.design_id,
                        tag.id_sub_design,
                        tag.size,
                        wt.id_weight,
                        tag.current_branch,
                        p.product_name,
                        des.design_name,
                        subdes.sub_design_name,
                        IFNULL(CONCAT(sz.value,' ',sz.name), '') AS size_name,
                        IFNULL(wt.weight_description, '') AS weight_range
                        FROM ret_taging_status_log l
                        LEFT JOIN ret_taging tag ON tag.tag_id = l.tag_id
                        LEFT JOIN ret_product_master p ON p.pro_id = tag.product_id
                        LEFT JOIN ret_design_master des on des.design_no = tag.design_id
                        LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = tag.id_sub_design
                        LEFT JOIN ret_section sec ON sec.id_section = tag.id_section
                        LEFT JOIN ret_size sz ON sz.id_size = tag.size
                        LEFT JOIN ret_weight wt ON wt.id_product = tag.product_id AND wt.id_design = tag.design_id AND wt.id_sub_design =tag.id_sub_design AND (tag.gross_wt BETWEEN wt.from_weight AND wt.to_weight)
                        WHERE l.status NOT IN (3,5)
                        /*".($_POST['dt_range'] != '' ? 'AND DATE(l.date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."*/
                        ".($id_product !='' && $id_product != 0  ? " AND tag.product_id IN (".$id_product.")" :'')."
                        ".($des_select !='' && $des_select != 0  ? " AND tag.design_id  IN (".$des_select.")" :'')."
                        ".($sub_des_select !='' && $sub_des_select != 0  ? " AND tag.id_sub_design  IN (".$sub_des_select.")" :'')."
                        ".($size !='' && $size != 0  ? " AND tag.size IN (".$size.")" :'')."
                        ".($wt_range !='' && $wt_range != 0  ? " AND wt.id_weight IN (".$wt_range.")" :'')."
                        GROUP BY l.tag_id
                        ORDER BY l.date, l.tag_id
                        ");
                        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        /*echo "<pre>";
        print_r($result);exit;*/
        foreach($result as $tagdata) {
            $brwise_tag = array();
            $all_tag_data = explode(';', $tagdata['combined_tags']);
            foreach ($branches as $br_data) {
                $brId = $br_data['id_branch'];
                $brName = $br_data['name'];
                $start_date = "";
                $end_date = "";
                foreach($all_tag_data as $alltagdata) {
                    $tags = explode(',', $alltagdata);
                    $date = trim($tags[0]);
                    $status = trim($tags[1]);
                    $from_branch = trim($tags[2]);
                    $to_branch = trim($tags[3]);
                    if(($to_branch == $brId && ($status == 0 || $status == 6)) || ($from_branch == $brId && ($status == 1 || $status == 2 || $status == 4 || $status == 7 || $status == 9 || $status == 10 || $status == 12 || $status == 15))) {
                        if($status == 0 || $status == 6) {
                            $start_date = $date;
                        }
                        if($status == 1 || $status == 2 || $status == 4 || $status == 7 || $status == 9 || $status == 10 || $status == 12 || $status == 15) {
                            if($start_date != "") {
                                $end_date = $date;
                            }
                        }
                    }
                    if($start_date != "" && $end_date != "") {
                        $brwise_tag[] = array(
                            "branch_id" => $brId,
                            "branch_name" => $brName,
                            "start_date" => $start_date,
                            "end_date" => $end_date
                        );
                        $grouped_array[$tagdata['product_name']][$tagdata['design_name']][$tagdata['sub_design_name']][$tagdata['size_name']][$tagdata['weight_range']][$brName][] = array(
                            "tagdata" => $tagdata,
                            "branch_id" => $brId,
                            "branch_name" => $brName,
                            "start_date" => $start_date,
                            "end_date" => $end_date
                        );
                        $start_date = "";
                        $end_date = "";
                    }
                }
            }
        }
        /*echo "<pre>";
        print_r($grouped_array);exit;*/
        foreach ($grouped_array as $product => $value1) {
            foreach ($value1 as $design => $value2) {
                foreach ($value2 as $subdesign => $value3) {
                    foreach ($value3 as $size => $value4) {
                        foreach ($value4 as $wgt_range => $value5) {
                            $i = 1;
                            foreach ($value5 as $branch => $value6) {
                                $dates = array();
                                $currentDate = $FromDt;
                                $total_days = 0;
                                $stock_days = 0;
                                while ($currentDate <= $ToDt) {
                                    if($i == 1) {
                                        $no_dates[] = $currentDate;
                                    }
                                    $has_tag = 0;
                                    foreach ($value6 as $items) {
                                        if($currentDate >= $items['start_date'] && ($items['end_date'] != '-' && $items['end_date'] != '' ? $currentDate < $items['end_date'] : true)){
                                            $has_tag = 1;
                                            break;
                                        }
                                    }
                                    $dates[$currentDate] = $has_tag;
                                    $currentDate = date('Y-m-d', strtotime($currentDate . ' +1 day'));
                                    if($has_tag == 1) {
                                        $stock_days++;
                                    }
                                    $total_days++;
                                }
                                $stock_perc = round(($stock_days / $total_days) * 100, 2);
                                $branch_wise['dates'] = $dates;
                                $branch_wise['stock_perc'] = $stock_perc;
                                if($stock_perc > 0) {
                                    $result_array[$product][$idesign][$subdesign][$size][$wgt_range][$branch] = $branch_wise;
                                }
                                $i++;
                            }
                        }
                    }
                }
            }
        }
        /*echo "<pre>";
        print_r($result_array);exit;*/
        return array("stock_data" => $result_array, "branches" => $branches, "no_dates" => $no_dates);
    }
    function get_product_size($id_product) {
        $sql=$this->db->query("SELECT * FROM `ret_size` WHERE active=1 ".($id_product!='' ? " and id_product=".$id_product."" :'')."");
        return $sql->result_array();
    }
    function get_branches() {
        $sql = $this->db->query("SELECT b.id_branch,b.name FROM branch b WHERE b.active = 1");
        $items = $sql->result_array();
        return $items;
    }
    function get_influencer()
    {
        $sql= $this->db->query("SELECT credit_reference FROM `ret_billing` WHERE credit_reference is NOT null GROUP by credit_reference;");
        //print_r($this->db->last_query());exit;
        $result = $sql->result_array();
        return $result;
    }
    	function get_repair_gst_abstract_details($data)
	{
	    $multiple_id_branch = implode(' , ', $data['id_branch']);
		if($multiple_id_branch != '')
		{
			$branch = $multiple_id_branch;
		}else{
			$branch = $data['id_branch'];
		}
	    $sql = $this->db->query("SELECT date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.repair_del_ref_no,b.bill_id,b.bill_no,c.firstname as cus_name,c.mobile,m.name as repair_type,
        IFNULL(SUM(d.rate),0) as total_amount,IFNULL(SUM(d.total_sgst),0) as total_sgst,IFNULL(SUM(d.total_cgst),0) as total_cgst,
        IFNULL(SUM(d.repair_tot_tax),0) as total_tax_amount,(IFNULL(SUM(d.rate),0)-IFNULL(SUM(d.repair_tot_tax),0)) as total_taxable_amount
        FROM ret_billing b
        LEFT JOIN customerorderdetails d ON d.bill_id = b.bill_id
        LEFT JOIN customer c ON c.id_customer = b.bill_cus_id
        LEFT JOIN ret_repair_master m ON m.id_repair_master = d.id_repair_master
        WHERE b.bill_status = 1 AND b.bill_type = 11
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(b.bill_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ".($branch!='' && $branch !='0' ? " and b.id_branch in (".$branch.") " :'' )."
        GROUP by b.bill_id,d.id_repair_master");
        //echo $this->db->last_query();exit;
        return $sql->result_array();
	}
    function get_ActiveBankname()
    {
        $sql=$this->db->query("SELECT * from bank");
        return $sql->result_array();
    }
    function get_est_details_and_sales_returns($post){

        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        //$id_metal = $post['id_metal'];
        $id_branch = $post['id_branch'];
        //$id_ret_category = $post['id_ret_category'];
        $return_data=array();
                   if($_POST['dt_range'] != ''){
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
        }
        $multiple_id_metal = implode(' , ', $post['id_metal']);
        if($multiple_id_metal!='')
        {
            $id_metal = $multiple_id_metal;
        }else {
            $id_metal = $post['id_metal'];
        }
        $multiple_id_category = implode(' , ',$post['id_ret_category']);
        if($multiple_id_category)
        {
            $id_category = $multiple_id_category;
        }else {
            $id_category = $post['id_category'];
        }
        $multiple_id_product = implode(' , ', $post['id_product']);
        if($multiple_id_product != '')
        {
            $id_product = $multiple_id_product;
        }else{
            $id_product = $post['id_product'];
        }
            if($post['id_report_type']==2){
            $sql=$this->db->query("SELECT IFNULL(est.item_emp_id,d.item_emp_id) as item_emp_id,IFNULL(est_item_emp.id_employee,bill_item_emp.id_employee) as id_employee,IFNULL(est_item_emp.emp_code,bill_item_emp.emp_code) as emp_code,br.name as branch_name,IFNULL((CONCAT(est_item_emp.firstname,' ',est_item_emp.lastname)) , (CONCAT(bill_item_emp.firstname,' ',bill_item_emp.lastname))) as emp_name,IFNULL(sum(d.item_cost),0) as item_cost,IFNULL(return_det.item_cost,0) as return_item_cost,
            d.esti_item_id,p.product_name,
            (sum(d.piece) ) as piece,IFNULL(SUM(d.gross_wt),0) as tot_sales_gwt,IFNULL(SUM(d.net_wt),0) as tot_sales_nwt,
            IFNULL(sum(d.gross_wt) ,0) as gross_wt,IFNULL(return_det.return_gwt,0) as return_gwt,
            IFNULL(sum(d.net_wt),0) as net_wt,IFNULL(return_det.return_nwt,0) as return_nwt,
            IFNULL(des.design_name,'') as design_name,e.esti_no,
            IFNULL(SUM(d.less_wt),0) as less_wt,IFNULL(return_det.return_lwt,0) as return_lwt
            ,IFNULL(dwt.dia_wt,0) as dia_wt,IFNULL(return_det.dia_wt,0) as return_dwt,IFNULL((dwt.dia_wt),0) as saled_dwt
            FROM  ret_bill_details d
            LEFT JOIN ret_billing bill ON bill.bill_id = d.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
            LEFT JOIN ret_estimation_items est on est.est_item_id = d.esti_item_id
            LEFT JOIN ret_estimation e on e.estimation_id = est.esti_id
            
            LEFT JOIN employee est_item_emp on est_item_emp.id_employee = est.item_emp_id
            LEFT JOIN employee bill_item_emp on bill_item_emp.id_employee = d.item_emp_id
            LEFT JOIN ret_product_master p on p.pro_id=d.product_id
            LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
            LEFT JOIN metal m ON m.id_metal=c.id_metal
            LEFT JOIN branch br ON br.id_branch=bill.id_branch
            LEFT JOIN ret_design_master des on des.design_no=d.design_id
            LEFT join(SELECT b.bill_id,IFNULL(est_item_emp.id_employee,bill_item_emp.id_employee) as id_employee,IFNULL(est_item_emp.firstname,bill_item_emp.firstname) as firstname,SUM(wt) as dia_wt,IFNULL(est.item_emp_id,d.item_emp_id) as item_emp_id
                        from ret_billing_item_stones s
                        left join ret_bill_details d on d.bill_det_id = s.bill_det_id
                        left join ret_billing b on b.bill_id = d.bill_id
                        left join ret_estimation_items est on est.est_item_id = d.esti_item_id
                        left join employee est_item_emp on est_item_emp.id_employee = est.item_emp_id
                        left join employee bill_item_emp on bill_item_emp.id_employee = d.item_emp_id
                        left join ret_stone stn on stn.stone_id = s.stone_id
                        LEFT JOIN ret_product_master p on p.pro_id=d.product_id
                        LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
                        where b.bill_status=1 and stn.stone_type=1 and est.item_emp_id is not null  and s.old_metal_sale_id is null and est.item_emp_id!=0
                        ".($FromDt != '' && $ToDt!=''? 'and  date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
                        ".($id_metal!='' && $id_metal>0 ? " and c.id_metal in (".$id_metal.")" :'')."
                        ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id in (".$id_ret_category.")" :'')."
                        ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
                        group by est.item_emp_id)  as dwt ON dwt.item_emp_id = est.item_emp_id
                        LEFT JOIN (SELECT IFNULL(est_item_emp.firstname,bill_item_emp.firstname) as firstname,d.bill_id,SUM(d.gross_wt) as return_gwt,SUM(d.net_wt) as return_nwt,SUM(d.less_wt) as return_lwt,r.ret_bill_det_id,IFNULL(est.item_emp_id,d.item_emp_id) as item_emp_id,SUM(d.item_cost) as item_cost,SUM(d.piece) as piece,d.product_id,ret_dia.dwt as dia_wt
                        from ret_bill_return_details  r
                        left join ret_bill_details d on d.bill_det_id = r.ret_bill_det_id
                        left join ret_billing b on b.bill_id = d.bill_id
                        left join ret_billing brt on brt.bill_id = r.bill_id
                        left join ret_estimation_items est on est.est_item_id = d.esti_item_id
                        left join ret_estimation e ON  e.estimation_id = est.esti_id
                        left join employee est_item_emp on est_item_emp.id_employee = est.item_emp_id
                        left join employee bill_item_emp on bill_item_emp.id_employee = d.item_emp_id
                        LEFT JOIN ret_product_master p on p.pro_id=d.product_id
                        LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
                        LEFT JOIN (SELECT est.item_emp_id,s.stone_id,d.product_id,SUM(s.wt) as dwt from ret_bill_return_details r
                                LEFT JOIN ret_bill_details d on d.bill_det_id = r.ret_bill_det_id
                                LEFT JOIN ret_billing_item_stones s on s.bill_det_id = d.bill_det_id
                                LEFT JOIN ret_stone stn on stn.stone_id = s.stone_id
                                LEFT JOIN ret_billing b on b.bill_id = d.bill_id
                                LEFT JOIN ret_billing br on br.bill_id = r.bill_id
                                LEFT JOIN ret_estimation_items est on est.est_item_id = d.esti_item_id
                                LEFT JOIN ret_product_master p on p.pro_id=d.product_id
                                LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
                                where stn.stone_type=1 and s.old_metal_sale_id is null and est.item_emp_id is not null  and est.item_emp_id!=0
                            ".($id_emp!='' && $id_emp>0 ? " and est.item_emp_id=".$id_emp."":'')."
                            ".($FromDt != '' ? 'and date(br.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                            ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
                            ".($id_metal!='' && $id_metal>0 ? " and c.id_metal in (".$id_metal.")" :'')."
                            ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id in (".$id_ret_category.")" :'')."
                            ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
                            GROUP BY IFNULL(est.item_emp_id,d.item_emp_id)
                            ORDER BY `d`.`bill_id` DESC) as ret_dia ON ret_dia.item_emp_id = est.item_emp_id
                        where b.bill_status=1  and brt.bill_status=1 and est.item_emp_id is not null
                        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
                        ".($id_emp!='' && $id_emp>0 ? " and est.item_emp_id=".$id_emp."":'')."
                        ".($FromDt != '' && $ToDt!=''? 'and  date(brt.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                        ".($id_metal!='' && $id_metal>0 ? " and c.id_metal in (".$id_metal.")" :'')."
                        ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id in (".$id_ret_category.")" :'')."
                        ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
                        GROUP BY IFNULL(est.item_emp_id,d.item_emp_id)
                        ORDER BY `d`.`bill_id` DESC) as return_det ON return_det.item_emp_id = est.item_emp_id
            WHERE bill.bill_status = 1 
            ".($FromDt != '' && $ToDt!=''? 'and  date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
            ".($id_metal!='' && $id_metal>0 ? " and c.id_metal in (".$id_metal.")" :'')."
            ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id in (".$id_ret_category.")" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(b.bill_date),'') and b.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2 and date(day_close.entry_date) = date(b.bill_date)") )."         
           ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
           GROUP BY IFNULL(est_item_emp.id_employee,bill_item_emp.id_employee)");
        //    print_r($this->db->last_query());exit;
            $data =  $sql->result_array();
            foreach($data as $o)
    		{
    				$old_matel_detail[$o['emp_name']] = $o;
    		}
            return $old_matel_detail;
        }else if($post['id_report_type']==1){
            $sql=$this->db->query("SELECT IFNULL((CONCAT(est_item_emp.firstname,' ',est_item_emp.lastname)), (CONCAT(bill_item_emp.firstname,' ',bill_item_emp.lastname))) as emp_name,IFNULL(sum(d.item_cost),0) as item_cost,IFNULL(return_det.item_cost,0) as return_item_cost,d.product_id,
            d.esti_item_id,p.product_name,
            (sum(d.piece)) as piece,IFNULL(SUM(d.gross_wt),0) as tot_sales_gwt,IFNULL(SUM(d.net_wt),0) as tot_sales_nwt,
            IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(return_det.return_gwt,0) as return_gwt,IFNULL(return_det.return_nwt,0) as return_nwt,
            IFNULL(sum(d.net_wt) ,0) as net_wt,
            IFNULL(des.design_name,'') as design_name,e.esti_no,
            IFNULL(SUM(d.less_wt),0) as less_wt,IFNULL(return_det.return_lwt,0) as return_lwt,
            IFNULL((dwt.dia_wt),0) as dia_wt,IFNULL((dwt.dia_wt),0) as saled_dwt,IFNULL(return_det.dia_wt,0) as return_dwt
            FROM  ret_bill_details d
            LEFT JOIN ret_billing bill ON bill.bill_id = d.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
            LEFT JOIN ret_estimation_items est on est.est_item_id = d.esti_item_id
            LEFT JOIN employee est_item_emp on est_item_emp.id_employee = est.item_emp_id
            LEFT JOIN employee bill_item_emp on bill_item_emp.id_employee = d.item_emp_id
            LEFT JOIN ret_estimation e on e.estimation_id = est.esti_id
            LEFT JOIN ret_product_master p on p.pro_id=d.product_id
            LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
            LEFT JOIN metal m ON m.id_metal=c.id_metal
            LEFT JOIN ret_design_master des on des.design_no=d.design_id
            LEFT join(SELECT s.bill_det_id,SUM(s.wt) as dia_wt,s.bill_id,d.product_id,IFNULL(est.item_emp_id,d.item_emp_id) as item_emp_id
                        from ret_billing b
                        left join ret_bill_details d on d.bill_id = b.bill_id
                        LEFT JOIN ret_estimation_items est on est.est_item_id = d.esti_item_id
                        LEFT JOIN ret_billing_item_stones s on s.bill_det_id = d.bill_det_id
                        LEFT JOIN ret_stone stn on stn.stone_id = s.stone_id
                        LEFT JOIN ret_product_master p on p.pro_id=d.product_id
                        LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
                        WHERE b.bill_status=1 AND stn.stone_type=1  and s.old_metal_sale_id is null 
                    ".($FromDt != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                    ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
                    ".($id_metal!='' && $id_metal>0 ? " and c.id_metal in (".$id_metal.")" :'')."
                    ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id in (".$id_ret_category.")" :'')."
                   ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
                        GROUP by IFNULL(est.item_emp_id,d.item_emp_id),d.product_id)  as dwt ON dwt.product_id = d.product_id AND dwt.item_emp_id = est.item_emp_id
                        LEFT JOIN (SELECT IFNULL(est_item_emp.firstname,bill_item_emp.firstname) as firstname,d.bill_id,SUM(d.gross_wt) as return_gwt,SUM(d.net_wt) as return_nwt,SUM(d.less_wt) as return_lwt,r.ret_bill_det_id,d.bill_det_id,est.item_emp_id,SUM(d.item_cost) as item_cost,SUM(d.piece) as piece,d.product_id,ret_dia.dwt as dia_wt
                        from ret_bill_return_details  r
                        left join ret_bill_details d on d.bill_det_id = r.ret_bill_det_id
                        left join ret_billing b on b.bill_id = d.bill_id
                        left join ret_billing brt on brt.bill_id = r.bill_id
                        left join ret_estimation_items est on est.est_item_id = d.esti_item_id
                        left join ret_estimation e ON  e.estimation_id = est.esti_id
                        left join employee est_item_emp on est_item_emp.id_employee = est.item_emp_id
                        left join employee bill_item_emp on bill_item_emp.id_employee = d.item_emp_id
                        LEFT JOIN ret_product_master p on p.pro_id=d.product_id
                         LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
                        LEFT JOIN (SELECT IFNULL(est.item_emp_id,d.item_emp_id) as item_emp_id,s.stone_id,d.product_id,SUM(s.wt) as dwt,d.bill_det_id from ret_bill_return_details r
                                LEFT JOIN ret_bill_details d on d.bill_det_id = r.ret_bill_det_id
                                LEFT JOIN ret_billing_item_stones s on s.bill_det_id = d.bill_det_id
                                LEFT JOIN ret_stone stn on stn.stone_id = s.stone_id
                                LEFT JOIN ret_billing b on b.bill_id = d.bill_id
                                LEFT JOIN ret_billing br on br.bill_id = r.bill_id
                                LEFT JOIN ret_estimation_items est on est.est_item_id = d.esti_item_id
                                LEFT JOIN ret_product_master p on p.pro_id=d.product_id
                                 LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
                                where stn.stone_type=1 and s.old_metal_sale_id is null 
                            ".($FromDt != '' ? 'and date(br.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                            ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
                            ".($id_metal!='' && $id_metal>0 ? " and c.id_metal in (".$id_metal.")" :'')."
                            ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id in (".$id_ret_category.")" :'')."
                           ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
                            GROUP BY IFNULL(est.item_emp_id,d.item_emp_id),d.product_id
                            ORDER BY `d`.`bill_id` DESC) as ret_dia ON ret_dia.product_id = d.product_id and ret_dia.item_emp_id= est.item_emp_id
                        where b.bill_status=1  and brt.bill_status=1 and est.item_emp_id!=0
                        ".($id_branch!='' && $id_branch>0 ? " and b.id_branch=".$id_branch."" :'')."
                        ".($FromDt != '' && $ToDt!=''? 'and  date(brt.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                        ".($id_metal!='' && $id_metal>0 ? " and c.id_metal in (".$id_metal.")" :'')."
                        ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id in (".$id_ret_category.")" :'')."
                       ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
                        GROUP BY IFNULL(est.item_emp_id,d.item_emp_id),d.product_id
                        ORDER BY `d`.`bill_id` DESC) as return_det ON return_det.item_emp_id = est.item_emp_id AND return_det.product_id = d.product_id
            WHERE bill.bill_status = 1  
            ".($FromDt != '' && $ToDt!=''? 'and  date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
            ".($id_branch!='' && $id_branch>0 ? " and bill.id_branch=".$id_branch."" :'')."
            ".($id_metal!='' && $id_metal>0 ? " and c.id_metal in (".$id_metal.")" :'')."
            ".($id_ret_category!='' && $id_ret_category>0 ? " and p.cat_id in (".$id_ret_category.")" :'')."
           ".($id_product!='' && $id_product !='0' ? " and p.pro_id in (".$id_product.") " :'' )."
           GROUP BY IFNULL(est.item_emp_id,d.item_emp_id),d.product_id");
            //  print_r($this->db->last_query());exit;
            $data =  $sql->result_array();
            foreach($data as $o)
    		{
    				$return_data[$o['emp_name']][] = $o;
    		}
        }
        return $return_data;
    }
    function get_section_transfer_non_tag_Details($data){
        $sql = $this->db->query("SELECT 0 as dia_pcs,0 as dia_wt,IFNULL(fs.section_name,'-') as from_section,ts.section_name as to_section,IFNULL(DATE_format(n.date,'%h:%m:%s'),'-')  as trans_time,0 as sales_value,'-' as tag_code,IFNULL(n.no_of_piece,0) as piece,n.gross_wt,n.net_wt,des.design_name,p.product_name,n.status,IFNULL(DATE_format(n.created_on,'%d-%m-%Y'),'-')  as created_on,IFNULL(e.firstname,'-') as created_by,sub_des.sub_design_name, '' as purity,ifnull(n.less_wt,0) as less_wt
        FROM ret_section_nontag_item_log n
        LEFT JOIN ret_product_master p ON p.pro_id = n.product
        LEFT JOIN ret_section fs ON fs.id_section = n.from_section
        LEFT JOIN ret_section ts ON ts.id_section = n.to_section
        LEFT JOIN ret_design_master des ON des.design_no=n.design
        LEFT JOIN ret_sub_design_master sub_des ON sub_des.id_sub_design=n.id_sub_design
        LEFT JOIN employee e ON e.id_employee=n.created_by
        where n.status=0 and to_section is not null and ts.status=1
        ".($data['id_branch']!='' && $data['id_branch']!=0 ? "and n.to_branch=".$data['id_branch']."":'')."
        ".($data['from_section']!='' && $data['from_section']!=0 ? "and n.from_section=".$data['from_section']."":'')."
        ".($data['to_section']!='' && $data['to_section']!=0 ? "and n.to_section=".$data['to_section']."":'')."
        ".($data['id_product']!='' && $data['id_product']!=0 ? "and n.product=".$data['id_product']."":'')."
        ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(n.date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
        ");
                // echo $this->db->last_query();exit;
        return $sql->result_array();
    }
    function branch_vault_report($data)
    {
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
		$metal_type = implode(' , ', $data['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $data['id_metal'];
		}
        $op_blc_to_date= date('Y-m-d',(strtotime('-1 day',strtotime($FromDt))));
        $stock_detail = array();
        $return_data = array("tag_stock"=>array(),"nontag_stock"=>array(),"partlysale_stock"=>array(),"oldmetal_stock"=>array(),"sales_return_stock"=>array());
        if($data['stock_type']==0 || $data['stock_type']==1) // Tag Stock query
        {
            $sql=$this->db->query("SELECT if(c.cat_type=1,'Ornaments',if(c.cat_type=2,'Bullion','Stones')) as category_type,
            b.name as branch_name,c.cat_type,
            (IFNULL(blc.gross_wt,0)) as op_blc_gwt,(IFNULL(blc.net_wt,0)) as op_blc_nwt,
            (IFNULL(stn_blc.dia_wt,0) + IFNULL(looseDia_blc.gross_wt,0)) as op_blc_diawt,
            (IFNULL(grm_blc.gross_wt,0)) as op_grm_blc_wt,(IFNULL(ct_blc.gross_wt,0)) as op_ct_blc_wt,
            IFNULL(INW.gross_wt,0) as inw_gwt,IFNULL(INW.net_wt,0) as inw_nwt,
            (IFNULL(STONE_INW.diaWt,0) + ifnull(looseDia_INW.gross_wt,0)) as inw_diawt,
            IFNULL(GRM_INW.gross_wt,0) as grm_inw_wt,IFNULL(CT_INW.gross_wt,0) as ct_inw_wt,
            IFNULL(s.gross_wt,0) as sold_gwt,IFNULL(s.net_wt,0) as sold_nwt,
            (IFNULL(stn_s.sold_diawt,0) + IFNULL(looseDia_s.gross_wt,0)) as sold_diawt,
            IFNULL(grm_s.gross_wt,0) as sold_grm_wt,IFNULL(ct_s.gross_wt,0) as sold_ct_wt,
            IFNULL(in_blc.tag_gwt,0) as tag_gwt,IFNULL(in_blc.tag_nwt,0) as tag_nwt,
            IFNULL(in_blc.gross_wt,0) as blc_tag_gwt,IFNULL(in_blc.net_wt,0) as blc_tag_nwt,
            IFNULL(in_blc_grm_wt.tag_gwt,0) as tag_grm_wt,IFNULL(in_blc_grm_wt.gross_wt,0) as blc_grm_wt,
            IFNULL(in_blc_ct_wt.tag_gwt,0) as tag_ct_wt,IFNULL(in_blc_ct_wt.gross_wt,0) as blc_ct_wt,
            IFNULL(in_blc_looseDia.tag_gwt,0) as looseDia_tag_wt,IFNULL(in_blc_looseDia.gross_wt,0) as blc_looseDia_wt,
            (IFNULL(br_out.gross_wt,0) + IFNULL(sect_out.gross_wt,0)) as br_out_gwt,
            (IFNULL(br_out.net_wt,0) + IFNULL(sect_out.net_wt,0)) as br_out_nwt,
            (IFNULL(stn_br_out.dia_wt,0) + IFNULL(looseDia_br_out.gross_wt,0) + IFNULL(stn_sect_out.dia_wt,0) + IFNULL(looseDia_sect_out.gross_wt,0)) as br_out_diawt,
            (IFNULL(grm_br_out.gross_wt,0) + IFNULL(grm_sect_out.gross_wt,0)) as grm_br_out_wt,
            (IFNULL(ct_br_out.gross_wt,0) + IFNULL(ct_sect_out.gross_wt,0)) as ct_br_out_wt,
            IFNULL(pur_ret.gross_wt,0) as ret_gwt,IFNULL(pur_ret.net_wt,0) as ret_nwt,
            (IFNULL(stn_pur_ret.diaWt,0) + IFNULL(pur_ret_looseDia.gross_wt,0)) as ret_diawt,
            IFNULL(pur_ret_grm.gross_wt,0) as grm_ret_wt,IFNULL(pur_ret_ct.gross_wt,0) as ct_ret_wt,
            IFNULL(kar_iss.gross_wt,0) as iss_gwt,IFNULL(kar_iss.net_wt,0) as iss_nwt,
            IFNULL(kar_iss_looseDia.gross_wt,0) as iss_diawt,
            IFNULL(kar_iss_grm.gross_wt,0) as grm_iss_wt,IFNULL(kar_iss_ct.gross_wt,0) as ct_iss_wt,
            Date_Format(current_date(),'%d-%m-%Y') as date_add
            FROM ret_taging t
            LEFT JOIN ret_section sec on sec.id_section=t.id_section
            LEFT JOIN ret_product_master p on p.pro_id=t.product_id
            LEFT JOIN ret_design_master des on des.design_no = t.design_id
            LEFT JOIN ret_sub_design_master subdes on subdes.id_sub_design = t.id_sub_design
            LEFT JOIN branch b on b.id_branch=t.current_branch
            left join ret_category c on c.id_ret_category=p.cat_id
            left join metal m on m.id_metal=c.id_metal
            LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
            p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,c.cat_type,
            ifnull(SUM(tag.net_wt),0) as net_wt,
            ifnull(SUM(tag.piece),0) as piece,
            tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE m2.id_sec_tag_status_log IS NULL  and p.stone_type = 0 and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY c.cat_type ) as blc ON  blc.cat_type = c.cat_type
            LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
            p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,c.cat_type,
            ifnull(SUM(tag.net_wt),0) as net_wt,
            ifnull(SUM(tag.piece),0) as piece,
            tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE m2.id_sec_tag_status_log IS NULL  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY c.cat_type ) as grm_blc ON  grm_blc.cat_type = c.cat_type
            LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
            p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,c.cat_type,
            ifnull(SUM(tag.piece),0) as piece,
            tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE m2.id_sec_tag_status_log IS NULL  and p.stone_type = 1 and tag.uom_gross_wt = 6
            and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY c.cat_type ) as ct_blc ON  ct_blc.cat_type = c.cat_type
            LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
            p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,c.cat_type,
            ifnull(SUM(tag.piece),0) as piece,
            tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE m2.id_sec_tag_status_log IS NULL  and p.stone_type = 2
            and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY c.cat_type ) as looseDia_blc ON  looseDia_blc.cat_type = c.cat_type
            LEFT JOIN(SELECT ifnull(SUM(s.wt),0) as dia_wt,tag.tag_code,tag.tag_id,tag.old_tag_id,m1.to_section as id_section,
            p.product_name, ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,c.cat_type,
            ifnull(SUM(tag.piece),0) as piece,
            tag.product_id as id_product,p.cat_id,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date) <= '".$op_blc_to_date."')
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom u on u.uom_id=s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            WHERE m2.id_sec_tag_status_log IS NULL and st.stone_type = 1 and p.stone_type = 0
            and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0 OR m1.status = 6) AND date(m1.date) <= '".$op_blc_to_date."'
            GROUP BY c.cat_type  ) as stn_blc ON  stn_blc.cat_type = c.cat_type
            LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
            p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,c.cat_type,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
            and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE tag.tag_id IS NOT NULL  and p.stone_type = 0 and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP by c.cat_type) INW on  INW.cat_type = c.cat_type
            LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
            p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,c.cat_type,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
            and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE tag.tag_id IS NOT NULL  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY c.cat_type ) as GRM_INW ON  GRM_INW.cat_type = c.cat_type
            LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
            p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,c.cat_type,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
            and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE tag.tag_id IS NOT NULL  and p.stone_type = 1 and tag.uom_gross_wt = 6 and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY c.cat_type ) as CT_INW ON  CT_INW.cat_type = c.cat_type
            LEFT JOIN(SELECT COUNT(tag.tag_id) as tag_count,tag.tag_id,tag.product_id,m1.to_section,
            p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,c.cat_type,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
            and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE tag.tag_id IS NOT NULL  and p.stone_type = 2
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP BY c.cat_type ) as looseDia_INW ON  looseDia_INW.cat_type = c.cat_type
            LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as diaWt,tag.tag_id,tag.product_id,m1.to_section,
            p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,c.cat_type,
            ifnull(SUM(tag.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,
            tag.design_id,tag.id_sub_design
            FROM ret_section_tag_status_log m1
            LEFT JOIN ret_section_tag_status_log  m2 ON (m1.tag_id = m2.tag_id AND m1.id_sec_tag_status_log < m2.id_sec_tag_status_log AND date(m2.date)  BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!='' ? " and m2.to_branch=".$data['id_branch']."" :'')."
            and m2.status = 0)
            LEFT JOIN ret_taging as tag ON tag.tag_id = m1.tag_id
            LEFT JOIN ret_section sec on sec.id_section = m1.to_section and sec.status = 1 and sec.is_home_bill_counter = 0
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_taging_stone s ON s.tag_id = tag.tag_id
            LEFT JOIN ret_uom u on u.uom_id=s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            WHERE tag.tag_id IS NOT NULL and st.stone_type = 1 and p.stone_type = 0 and m1.to_section is not null
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND (m1.status = 0) AND date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            GROUP by c.cat_type) STONE_INW on  STONE_INW.cat_type = c.cat_type
            LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = tag.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE bill.bill_status = 1  and
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt') AND b.product_id = p.pro_id and p.stone_type = 0
            ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) s ON  s.cat_type = c.cat_type
            LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = tag.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE bill.bill_status = 1 and
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            AND b.product_id = p.pro_id  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type ) as grm_s ON  grm_s.cat_type = c.cat_type
            LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = tag.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE bill.bill_status = 1 and
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            AND b.product_id = p.pro_id  and p.stone_type = 1 and tag.uom_gross_wt = 6
            ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type ) as ct_s ON  ct_s.cat_type = c.cat_type
            LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = tag.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE bill.bill_status = 1 and
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            AND b.product_id = p.pro_id  and p.stone_type = 2
            ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type ) as looseDia_s ON  looseDia_s.cat_type = c.cat_type
            LEFT JOIN (SELECT IFNULL(sum(s.wt),0) as sold_diawt,sum(tag.gross_wt) as gross_wt,SUM(tag.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,tag.id_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_bill_details b on b.tag_id = tag.tag_id
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_taging_stone s on s.tag_id =tag.tag_id
            LEFT JOIN ret_uom u on u.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            LEFT JOIN ret_section sec on sec.id_section = tag.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE bill.bill_status = 1 and st.stone_type = 1 and b.item_type = 0 and
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            AND b.product_id = p.pro_id  and p.stone_type = 0
            ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) stn_s ON  stn_s.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,SUM(tag.gross_wt) as tag_gwt,SUM(tag.net_wt) as tag_nwt,
            ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as blc_gross_wt
                FROM ret_bill_details rbd
                LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
            GROUP BY rbd.tag_id))),0) as gross_wt,
            ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as blc_net_wt
                FROM ret_bill_details rbd
                LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
            GROUP BY rbd.tag_id))),0) as net_wt,
            ifnull(SUM(bd.piece),0) as piece,c.cat_type
            FROM ret_bill_details bd
            LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
            and p.stone_type = 0 and bd.is_partial_sale = 1
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc on in_blc.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,SUM(tag.gross_wt) as tag_gwt,SUM(tag.net_wt) as tag_nwt,
            ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as blc_gross_wt
                FROM ret_bill_details rbd
                LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
            GROUP BY rbd.tag_id))),0) as gross_wt,
            ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as blc_net_wt
                FROM ret_bill_details rbd
                LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
            GROUP BY rbd.tag_id))),0) as net_wt,
            ifnull(SUM(bd.piece),0) as piece,c.cat_type
            FROM ret_bill_details bd
            LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
            and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null) and bd.is_partial_sale = 1
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_grm_wt on in_blc_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,SUM(tag.gross_wt) as tag_gwt,SUM(tag.net_wt) as tag_nwt,
            ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as blc_gross_wt
                FROM ret_bill_details rbd
                LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
            GROUP BY rbd.tag_id))),0) as gross_wt,
            ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as blc_net_wt
                FROM ret_bill_details rbd
                LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
            GROUP BY rbd.tag_id))),0) as net_wt,
            ifnull(SUM(bd.piece),0) as piece,c.cat_type
            FROM ret_bill_details bd
            LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
            and p.stone_type = 1 and tag.uom_gross_wt = 6  and bd.is_partial_sale = 1
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_ct_wt on in_blc_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,SUM(tag.gross_wt) as tag_gwt,SUM(tag.net_wt) as tag_nwt,
            ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as blc_gross_wt
                FROM ret_bill_details rbd
                LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
            GROUP BY rbd.tag_id))),0) as gross_wt,
            ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as blc_net_wt
                FROM ret_bill_details rbd
                LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
            GROUP BY rbd.tag_id))),0) as net_wt,
            ifnull(SUM(bd.piece),0) as piece,c.cat_type
            FROM ret_bill_details bd
            LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
            and bd.is_partial_sale = 1  and p.stone_type = 2
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_looseDia on in_blc_looseDia.cat_type = c.cat_type
            LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
            and (l.status=0)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = l.from_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
            (l.status=0)  and p.stone_type = 0 and l.from_section is not null
            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) as br_out  on  br_out.cat_type  = c.cat_type
            LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                        and (l.status=0)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = l.from_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and l.from_section is not null and
            (l.status=0)  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type ) as grm_br_out ON  grm_br_out.cat_type  = c.cat_type
            LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                        and (l.status=0)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = l.from_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
            (l.status=0)  and p.stone_type = 1 and tag.uom_gross_wt = 6 and l.from_section is not null
            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type ) as ct_br_out ON  ct_br_out.cat_type  = c.cat_type
            LEFT JOIN (SELECT COUNT(tag.tag_id) as tag_count,tag.id_section,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
                                                        and (l.status=0)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = l.from_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and l.from_branch IS NOT NULL and
            (l.status=0)  and p.stone_type = 2 and l.from_section is not null
            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type ) as looseDia_br_out ON  looseDia_br_out.cat_type  = c.cat_type
            LEFT JOIN (SELECT tag.id_section,IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.from_branch = ".$data['id_branch']."
            and (l.status=0)
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
            LEFT JOIN ret_uom u on u.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            LEFT JOIN ret_section sec on sec.id_section = l.from_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1
            and (l.status=0) and l.from_branch IS NOT NULL and p.stone_type = 0 and l.from_section is not null
            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) as stn_br_out  on  stn_br_out.cat_type  = c.cat_type
            LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type = 0
            ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) as sect_out on sect_out.cat_type = c.cat_type
            LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type =1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type) as grm_sect_out ON  grm_sect_out.cat_type = c.cat_type
            LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type =1 and tag.uom_gross_wt = 6
            ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type) as ct_sect_out ON  ct_sect_out.cat_type = c.cat_type
            LEFT JOIN(SELECT count(tag.tag_id) as tag_count,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type = 2
            ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type) as looseDia_sect_out ON  looseDia_sect_out.cat_type = c.cat_type
            LEFT JOIN(SELECT IFNULL(sum(s.wt),0) as dia_wt,tag.product_id,p.cat_id,sum(tag.gross_wt) as gross_wt,
            SUM(tag.net_wt) as net_wt,SUM(tag.piece) as piece,l.from_section,tag.design_id,tag.id_sub_design,c.cat_type
            FROM ret_taging tag
            LEFT JOIN ret_section_tag_status_log l on l.tag_id = tag.tag_id and l.to_branch = ".$data['id_branch']."
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_taging_stone s on s.tag_id = tag.tag_id
            LEFT JOIN ret_uom u on u.uom_id = s.uom_id
            LEFT JOIN ret_stone st ON st.stone_id = s.stone_id
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and st.stone_type = 1 and
            l.from_section is not null and l.status=0 and l.from_branch IS NULL and p.stone_type = 0
            ".($data['id_branch']!='' ? " and l.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? "and c.id_ret_category in (".$id_category.")" : "")."
            GROUP by c.cat_type) as stn_sect_out on stn_sect_out.cat_type = c.cat_type
            LEFT JOIN (SELECT t.tag_id,t.product_id,sum(t.piece) as piece,SUM(t.gross_wt) as gross_wt,
            sum(t.net_wt) as net_wt,p.product_name,c.cat_type,
            p.cat_id,l.to_section
            FROM ret_section_tag_status_log l
            LEFT JOIN ret_taging t ON t.tag_id=l.tag_id
            LEFT JOIN ret_product_master p ON p.pro_id=t.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and t.tag_status=4
            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type ) in_trans on  in_trans.cat_type = c.cat_type
            LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_purchase_return_items pri
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
            and pro.stone_type = 0
                ".($data['id_branch']!='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type) as pur_ret on pur_ret.cat_type  = c.cat_type
            LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_purchase_return_items pri
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
            and pro.stone_type = 1 and (t.uom_gross_wt != 6 or t.uom_gross_wt is null)
            ".($data['id_branch']!='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type) as pur_ret_grm on pur_ret_grm.cat_type  = c.cat_type
            LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_purchase_return_items pri
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
            and pro.stone_type = 1 and t.uom_gross_wt = 6
            ".($data['id_branch']!='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type) as pur_ret_ct on pur_ret_ct.cat_type  = c.cat_type
            LEFT JOIN (SELECT count(t.tag_id) as tag_count,sum(pri.pur_ret_pcs) as pcs,sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_purchase_return_items pri
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            and pri.return_item_type = 2 and pr.tag_issue_from = 1 and pri.tag_id is not null
            and pro.stone_type = 2
            ".($data['id_branch']!='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type) as pur_ret_looseDia on pur_ret_looseDia.cat_type  = c.cat_type
            LEFT JOIN (SELECT sum(ret_stn.ret_stone_wt) as diaWt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_purchase_return_stone_items ret_stn
            LEFT JOIN ret_purchase_return_items pri on pri.pur_ret_itm_id = ret_stn.pur_ret_return_id
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            LEFT JOIN ret_taging t on t.tag_id = pri.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_stone st on st.stone_id = ret_stn.ret_stone_id
            LEFT JOIN ret_uom u on u.uom_id = ret_stn.ret_stone_uom
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE pr.bill_status = 1 and (date(bill_date) BETWEEN '$FromDt' AND '$ToDt')
            and pri.return_item_type = 2 and pr.tag_issue_from = 1 and st.stone_type = 1 and pro.stone_type = 0
            ".($data['id_branch']!='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP BY c.cat_type) as stn_pur_ret on stn_pur_ret.cat_type  = c.cat_type
            LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_karigar_metal_issue_details kmi
            LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
            LEFT join ret_taging t on t.tag_id = kmi.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
            and kmi.tag_id is not null and pro.stone_type = 0
            ".($data['id_branch']!='' ? " and km.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) as kar_iss on kar_iss.cat_type  = c.cat_type
            LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_karigar_metal_issue_details kmi
            LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
            LEFT join ret_taging t on t.tag_id = kmi.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
            and kmi.tag_id is not null and pro.stone_type = 1 and (t.uom_gross_wt != 6 or t.uom_gross_wt is null)
            ".($data['id_branch']!='' ? " and km.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) as kar_iss_grm on kar_iss_grm.cat_type  = c.cat_type
            LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_karigar_metal_issue_details kmi
            LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
            LEFT join ret_taging t on t.tag_id = kmi.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
            and kmi.tag_id is not null and pro.stone_type = 1 and t.uom_gross_wt = 6
            ".($data['id_branch']!='' ? " and km.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) as kar_iss_ct on kar_iss_ct.cat_type  = c.cat_type
            LEFT JOIN (Select count(t.tag_id) as tag_count,sum(kmi.issue_pcs) as pcs,sum(kmi.issue_metal_wt) as gross_wt,sum(kmi.issue_metal_wt) as net_wt,t.tag_id,t.product_id,t.id_section,t.design_id,t.id_sub_design,c.cat_type
            FROM ret_karigar_metal_issue_details kmi
            LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmi.issue_met_parent_id
            LEFT join ret_taging t on t.tag_id = kmi.tag_id
            LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_section sec on sec.id_section = t.id_section and sec.status = 1 and sec.is_home_bill_counter = 0
            WHERE km.bill_status = 1 and (date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
            and kmi.tag_id is not null and pro.stone_type = 2
            ".($data['id_branch']!='' ? " and km.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) as kar_iss_looseDia on kar_iss_looseDia.cat_type  = c.cat_type
            where t.tag_id is not null  and t.id_section is not null and sec.is_home_bill_counter = 0 and sec.status = 1
            GROUP by c.cat_type");
            $tag_details = $sql->result_array();
           //print_r($this->db->last_query());exit;
            $sno = 0;
            foreach($tag_details as $t)
            {
                $t['sr_no'] = $sno+1;
                $return_data['tag_stock'][] = $t;
            }
        }
        if($data['stock_type']==0 || $data['stock_type']==2) // Non tag Stock query
        {
            $nt_sql = $this->db->query("SELECT if(c.cat_type=1,'Ornaments',if(c.cat_type=2,'Bullion','Stones')) as category_type,
            c.cat_type,
            (IFNULL(blc_inw.gross_wt,0)-IFNULL(blc_sales.gross_wt,0)-IFNULL(blc_br_out.gross_wt,0)) as op_blc_gwt,
            (IFNULL(blc_inw.net_wt,0)-IFNULL(blc_sales.net_wt,0)-IFNULL(blc_br_out.net_wt,0)) as op_blc_nwt,
            IFNULL(inw.gross_wt,0) as inw_gwt,IFNULL(inw.net_wt,0) as inw_nwt,
            IFNULL(sales.gross_wt,0) as sales_gwt,IFNULL(sales.net_wt,0) as sales_nwt,
            IFNULL(br_out.gross_wt,0) as br_out_gwt,IFNULL(br_out.net_wt,0) as br_out_nwt,
            IFNULL(kar_iss.gross_wt,0) as kar_iss_gwt,IFNULL(kar_iss.net_wt,0) as kar_iss_nwt,
            IFNULL(pur_ret.gross_wt,0) as pur_ret_gwt,IFNULL(pur_ret.net_wt,0) as pur_ret_nwt
            FROM ret_nontag_item nt_itm
            LEFT JOIN  ret_product_master p ON p.pro_id = nt_itm.product
            LEFT JOIN ret_category c on c.id_ret_category=p.cat_id
            LEFT JOIN metal m on m.id_metal=c.id_metal
            LEFT JOIN ret_section sn on sn.id_section = nt_itm.id_section
            LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,m1.to_section,c.cat_type
            FROM ret_section_nontag_item_log  m1
            LEFT JOIN ret_product_master p on p.pro_id = m1.product
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE m1.product IS NOT NULL  AND m1.status = 0
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            AND date(m1.date) < '$FromDt'
            GROUP by c.cat_type ) as blc_inw ON blc_inw.cat_type = c.cat_type
            LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,b.id_section,c.cat_type
            FROM ret_bill_details b
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
            (date(bill.bill_date) < '$FromDt')
            ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type ) blc_sales ON  blc_sales.cat_type = c.cat_type
            LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
            SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,l.from_section,c.cat_type
            FROM  ret_section_nontag_item_log l
            LEFT JOIN ret_product_master as p ON p.pro_id = l.product
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE (date(l.date) < '$FromDt' ) and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10 or l.status=7)
            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type ) blc_br_out on blc_br_out.cat_type = c.cat_type
            LEFT JOIN(SELECT m1.product,p.cat_id,IFNULL(SUM(m1.gross_wt),0) as gross_wt,IFNULL(SUM(m1.net_wt),0) as net_wt,IFNULL(SUM(m1.no_of_piece),0) as no_of_piece,m1.to_section,c.cat_type
            FROM ret_section_nontag_item_log m1
            LEFT JOIN ret_product_master p on p.pro_id = m1.product
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE m1.product IS NOT NULL AND m1.status = 0 AND
            date(m1.date) BETWEEN '$FromDt' AND '$ToDt'
            ".($data['id_branch']!='' ? " and m1.to_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) as inw ON inw.cat_type = c.cat_type
            LEFT JOIN (SELECT sum(b.gross_wt) as gross_wt,SUM(b.net_wt) as net_wt,
            SUM(b.piece) as piece,b.product_id,p.cat_id,b.id_section,c.cat_type
            FROM ret_bill_details b
            LEFT JOIN ret_billing bill on bill.bill_id = b.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = b.product_id
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE bill.bill_status = 1 and b.is_non_tag = 1 AND
            (date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            ".($data['id_branch']!='' ? " and bill.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) sales ON  sales.cat_type = c.cat_type
            LEFT JOIN (SELECT l.product,p.cat_id,sum(l.gross_wt) as gross_wt,
            SUM(l.net_wt) as net_wt,IFNULL(SUM(l.no_of_piece),0) as no_of_piece,l.from_section,c.cat_type
            FROM  ret_section_nontag_item_log l
            LEFT JOIN ret_product_master as p ON p.pro_id = l.product
            left join ret_category c on c.id_ret_category=p.cat_id
            WHERE (date(l.date) BETWEEN '$FromDt' AND '$ToDt') and
            (l.status=2 or l.status=3 or l.status=5 or l.status=4 or l.status=9 or l.status=12 or l.status=10)
            ".($data['id_branch']!='' ? " and l.from_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            ".($id_category!='' && $id_category !='0' ? " and c.id_ret_category in (".$id_category.") " :'' )."
            GROUP by c.cat_type) br_out on br_out.cat_type = c.cat_type
            LEFT JOIN (SELECT sum(km.issue_metal_wt) as gross_wt,sum(km.issue_metal_wt) as net_wt,
            sum(km.issue_pcs) as pcs,km.issu_met_pro_id as product_id,km.issu_met_id_section as id_section,pro.cat_id,c.cat_type
            FROM ret_karigar_metal_issue_details km
            LEFT JOIN ret_product_master pro on pro.pro_id = km.issu_met_pro_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_karigar_metal_issue k on k.met_issue_id = km.issue_met_parent_id
            where k.bill_status = 1 and (date(k.met_issue_date) BETWEEN '$FromDt' AND '$ToDt')
            and k.issue_from = 2 and k.nontag_issue_from = 1
            ".($data['id_branch']!='' ? " and k.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by  c.cat_type) kar_iss on kar_iss.cat_type = c.cat_type
            LEFT JOIN (SELECT sum(pri.pur_ret_gwt) as gross_wt,sum(pri.pur_ret_nwt) as net_wt,
            sum(pri.pur_ret_pcs) as pcs,pri.id_product as product_id ,pri.id_section as id_section,c.cat_type
            FROM ret_purchase_return_items pri
            LEFT JOIN ret_product_master pro on pro.pro_id = pri.id_product
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
            where pr.bill_status = 1 and (date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt')
            ".($data['id_branch']!='' ? " and pr.id_branch=".$data['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            and pri.return_item_type = 3
            GROUP BY c.cat_type) pur_ret on pur_ret.cat_type = c.cat_type
            WHERE p.stock_type = 2 and nt_itm.id_section IS NOT NULL and sn.status = 1
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            ".($data['id_branch']!='' ? " and nt_itm.branch=".$data['id_branch']."" :'')."
            GROUP by c.cat_type
            ORDER BY c.cat_type ASC");
            $nt_details = $nt_sql->result_array();
            foreach($nt_details as $nt)
            {
                $return_data['nontag_stock'][] = $nt;
            }
        }
        if($data['stock_type']==0 || $data['stock_type']==3)  // Sales return Stock query
        {
            $salesret_sql = $this->db->query("SELECT if(c.cat_type=1,'Ornaments',if(c.cat_type=2,'Bullion','Stones')) as category_type,
            c.cat_type,
            (IFNULL(op_blc.gross_wt,0) - IFNULL(op_br_out.gross_wt,0)) as op_blc_gwt,
            (IFNULL(op_blc.net_wt,0) -  IFNULL(op_br_out.net_wt,0)) as op_blc_nwt,
            (IFNULL(op_blc_looseDia.gross_wt,0) + IFNULL(stn_blc.stn_wt,0) - IFNULL(op_br_out_looseDia.gross_wt,0) - IFNULL(op_br_out_stn.stn_wt,0)) as op_blc_diawt,
            (IFNULL(op_blc_grm_wt.gross_wt,0) - IFNULL(op_br_out_grm_wt.gross_wt,0)) as op_blc_grm_wt,
            (IFNULL(op_blc_ct_wt.gross_wt,0) - IFNULL(op_br_out_ct_wt.gross_wt,0)) as op_blc_ct_wt,
            (IFNULL(in_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0)) as inw_gwt,
            (IFNULL(in_blc.net_wt,0) + IFNULL(br_in.net_wt,0)) as inw_nwt,
            (IFNULL(in_blc_looseDia.gross_wt,0) + IFNULL(in_blc_stn.stn_wt,0) + IFNULL(br_in_looseDia.gross_wt,0) + IFNULL(br_in_stn.stn_wt,0)) as inw_diawt,
            (IFNULL(in_blc_grm_wt.gross_wt,0) + IFNULL(br_in_grm_wt.gross_wt,0)) as inw_grm_wt,
            (IFNULL(in_blc_ct_wt.gross_wt,0) + IFNULL(br_in_ct_wt.gross_wt,0)) as inw_ct_wt,
            IFNULL(br_out.gross_wt,0) as out_gwt,
            IFNULL(br_out.net_wt,0) as out_netwt,
            (IFNULL(br_out_looseDia.gross_wt,0) + IFNULL(br_out_stn.stn_wt,0)) as out_diawt,
            IFNULL(br_out_grm_wt.gross_wt,0) as out_grm_wt,
            IFNULL(br_out_ct_wt.gross_wt,0) as out_ct_wt
            FROM ret_category as c
            LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt,c.cat_type
            FROM ret_bill_return_details as sr
            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'  and p.stone_type = 0
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_blc on op_blc.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt,c.cat_type
            FROM ret_bill_return_details as sr
            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
            LEFT JOIN ret_taging tag on tag.tag_id = bd.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'  and p.stone_type = 1  and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_blc_grm_wt on op_blc_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt,c.cat_type
            FROM ret_bill_return_details as sr
            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
            LEFT JOIN ret_taging tag on tag.tag_id = bd.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'  and p.stone_type = 1  and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_blc_ct_wt on op_blc_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt,c.cat_type
            FROM ret_bill_return_details as sr
            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
            LEFT JOIN ret_taging tag on tag.tag_id = bd.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) < '$FromDt' AND date(bill.bill_date) >= '2022-04-01'  and p.stone_type = 2
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_blc_looseDia on op_blc_looseDia.cat_type = c.cat_type
            LEFT JOIN(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id,pro.cat_id,c.cat_type
            FROM ret_bill_return_details r
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id = r.ret_bill_det_id
            LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = dt.bill_det_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = dt.product_id
			LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE b.bill_status=1 AND s.stone_type=1 and pro.stone_type = 0
            and b.id_branch = ".$data['id_branch']."
            AND date(b.bill_date) < '$FromDt' AND date(b.bill_date) >= '2022-04-01'
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) stn_blc on stn_blc.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt,c.cat_type
            FROM ret_bill_return_details as sr
            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
            LEFT JOIN ret_taging tag on tag.tag_id = bd.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
             and p.stone_type = 0
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc on in_blc.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt,c.cat_type
            FROM ret_bill_return_details as sr
            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
            LEFT JOIN ret_taging tag on tag.tag_id = bd.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
             and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_grm_wt on in_blc_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt,c.cat_type
            FROM ret_bill_return_details as sr
            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
            LEFT JOIN ret_taging tag on tag.tag_id = bd.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
             and p.stone_type = 1 and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_ct_wt on in_blc_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,ifnull(sum(bd.gross_wt),0) as gross_wt, ifnull(SUM(bd.net_wt),0) as net_wt,c.cat_type
            FROM ret_bill_return_details as sr
            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = sr.ret_bill_det_id
            LEFT JOIN ret_billing as bill ON bill.bill_id = sr.bill_id
            LEFT JOIN ret_taging tag on tag.tag_id = bd.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
             and p.stone_type = 2
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_looseDia on in_blc_looseDia.cat_type = c.cat_type
            LEFT JOIN(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id,pro.cat_id,c.cat_type
            FROM ret_bill_return_details r
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id = r.ret_bill_det_id
            LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = dt.bill_det_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = dt.product_id
			LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE b.bill_status=1 AND s.stone_type=1 and pro.stone_type = 0
            and b.id_branch = ".$data['id_branch']."
            AND date(b.bill_date) BETWEEN '$FromDt' AND '$ToDt'
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_stn on in_blc_stn.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and p.stone_type = 0
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out ON op_br_out.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out_grm_wt ON op_br_out_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and p.stone_type = 1 and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out_ct_wt ON op_br_out_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and p.stone_type = 2
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out_looseDia ON op_br_out_looseDia.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,IFNULL(SUM(st.wt),0) as stn_wt,
            c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = bd.bill_det_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE s.stone_type=1 and p.stone_type = 0 and btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out_stn ON op_br_out_stn.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 0
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out ON br_out.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out_grm_wt ON br_out_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1 and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out_ct_wt ON br_out_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 2
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out_looseDia ON br_out_looseDia.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,IFNULL(SUM(st.wt),0) as stn_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = bd.bill_det_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE s.stone_type=1 and p.stone_type = 0 and btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out_stn ON br_out_stn.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 0
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in ON br_in.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1  and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in_grm_wt ON br_in_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1  and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in_ct_wt ON br_in_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(tag.gross_wt),0) as gross_wt,
            ifnull(SUM(tag.net_wt),0) as net_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 2
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in_looseDia ON br_in_looseDia.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,IFNULL(SUM(st.wt),0) as stn_wt,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_details bd on bd.bill_det_id = btrt.sold_bill_det_id
            LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = bd.bill_det_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE s.stone_type=1 and p.stone_type = 0 and btrt.item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in_stn ON br_in_stn.cat_type = c.cat_type
            WHERE c.status = 1
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type
            ORDER BY c.cat_type ASC");
            //print_r($this->db->last_query());exit;
            $saleret_det = $salesret_sql->result_array();
            foreach($saleret_det as $sr)
            {
                $return_data['sales_return_stock'][] = $sr;
            }
        }
        if($data['stock_type']==0 || $data['stock_type']==4) // Partly sales Stock query
        {
            $ps_sql = $this->db->query("SELECT if(c.cat_type=1,'Ornaments',if(c.cat_type=2,'Bullion','Stones')) as category_type,
            c.cat_type,
            (IFNULL(op_blc.gross_wt,0) - IFNULL(op_br_out.gross_wt,0)) as op_blc_gwt,
            (IFNULL(op_blc.net_wt,0) - IFNULL(op_br_out.net_wt,0)) as op_blc_nwt,
            (IFNULL(op_blc_looseDia.gross_wt,0) - IFNULL(op_br_out_looseDia.gross_wt,0)) as op_blc_diawt,
            (IFNULL(op_blc_grm_wt.gross_wt,0) - IFNULL(op_br_out_grm_wt.gross_wt,0)) as op_blc_grm_wt,
            (IFNULL(op_blc_ct_wt.gross_wt,0) - IFNULL(op_br_out_ct_wt.gross_wt,0)) as op_blc_ct_wt,
            (IFNULL(in_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0)) as inw_gwt,
            (IFNULL(in_blc.net_wt,0) + IFNULL(br_in.net_wt,0)) as inw_nwt,
            (IFNULL(in_blc_looseDia.gross_wt,0) + IFNULL(br_in_looseDia.gross_wt,0)) as inw_diawt,
            (IFNULL(in_blc_grm_wt.gross_wt,0) + IFNULL(br_in_grm_wt.gross_wt,0)) as inw_grm_wt,
            (IFNULL(in_blc_ct_wt.gross_wt,0) + IFNULL(br_in_ct_wt.gross_wt,0)) as inw_ct_wt,
            IFNULL(br_out.gross_wt,0) as out_gwt,
            IFNULL(br_out.net_wt,0) as out_netwt,
            IFNULL(br_out_looseDia.gross_wt,0) as out_diawt,
            IFNULL(br_out_grm_wt.gross_wt,0) as out_grm_wt,
            IFNULL(br_out_ct_wt.gross_wt,0) as out_ct_wt
            FROM ret_category as c
            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as sold_gross_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) <= '$op_blc_to_date' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as sold_net_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) <= '$op_blc_to_date' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece,c.cat_type
                FROM ret_bill_details bd
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1  AND date(bill.bill_date) <= '$op_blc_to_date'
                and bd.is_partial_sale = 1  and p.stone_type = 0
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_blc on op_blc.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as sold_gross_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) <= '$op_blc_to_date' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as sold_net_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) <= '$op_blc_to_date' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece,c.cat_type
                FROM ret_bill_details bd
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1  AND date(bill.bill_date) <= '$op_blc_to_date'
                 and bd.is_partial_sale = 1  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_blc_grm_wt on op_blc_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as sold_gross_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) <= '$op_blc_to_date' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as sold_net_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) <= '$op_blc_to_date' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece,c.cat_type
                FROM ret_bill_details bd
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1  AND date(bill.bill_date) <= '$op_blc_to_date'
                 and bd.is_partial_sale = 1  and p.stone_type = 1 and tag.uom_gross_wt = 6
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_blc_ct_wt on op_blc_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as sold_gross_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) <= '$op_blc_to_date' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as sold_net_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) <= '$op_blc_to_date' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece,c.cat_type
                FROM ret_bill_details bd
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1  AND date(bill.bill_date) <= '$op_blc_to_date'
                 and bd.is_partial_sale = 1  and p.stone_type = 2
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_blc_looseDia on op_blc_looseDia.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as sold_gross_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as sold_net_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece,c.cat_type
                FROM ret_bill_details bd
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                 and bd.is_partial_sale = 1  and p.stone_type = 0
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc on in_blc.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as sold_gross_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as sold_net_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece,c.cat_type
                FROM ret_bill_details bd
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                 and bd.is_partial_sale = 1  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_grm_wt on in_blc_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as sold_gross_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as sold_net_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece,c.cat_type
                FROM ret_bill_details bd
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                 and bd.is_partial_sale = 1  and p.stone_type = 1 and tag.uom_gross_wt = 6
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_ct_wt on in_blc_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT bd.product_id,p.cat_id,
                ifnull(sum((tag.gross_wt - (SELECT sum(rbd.gross_wt) as sold_gross_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as gross_wt,
                ifnull(sum((tag.net_wt - (SELECT sum(rbd.net_wt) as sold_net_wt
                    FROM ret_bill_details rbd
                    LEFT JOIN ret_billing as rb ON rb.bill_id = rbd.bill_id
                    WHERE date(rb.bill_date) BETWEEN '$FromDt' AND '$ToDt' AND rbd.tag_id = bd.tag_id AND rb.bill_status = 1
                GROUP BY rbd.tag_id))),0) as net_wt,
                ifnull(SUM(bd.piece),0) as piece,c.cat_type
                FROM ret_bill_details bd
                LEFT JOIN ret_taging as tag ON tag.tag_id = bd.tag_id
                LEFT JOIN ret_billing as bill ON bill.bill_id = bd.bill_id
                LEFT JOIN ret_product_master as p ON p.pro_id = bd.product_id
                LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
                WHERE bill.id_branch = ".$data['id_branch']." AND bill.bill_status = 1 AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'
                 and bd.is_partial_sale = 1  and p.stone_type = 2
                ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) in_blc_looseDia on in_blc_looseDia.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and p.stone_type = 0
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out ON op_br_out.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and p.stone_type = 1
            and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out_grm_wt ON op_br_out_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and p.stone_type = 1
            and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out_ct_wt ON op_br_out_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and p.stone_type = 2
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) op_br_out_looseDia ON op_br_out_looseDia.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 0
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out ON br_out.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1 and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out_grm_wt ON br_out_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1 and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out_ct_wt ON br_out_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 3 AND bt.status != 3 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 2
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_out_looseDia ON br_out_looseDia.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 0
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in ON br_in.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1  and (tag.uom_gross_wt != 6 or tag.uom_gross_wt is null)
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in_grm_wt ON br_in_grm_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1  and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in_ct_wt ON br_in_ct_wt.cat_type = c.cat_type
            LEFT JOIN (SELECT tag.product_id,p.cat_id,ifnull(sum(btrt.gross_wt),0) as gross_wt,
            ifnull(SUM(btrt.net_wt),0) as net_wt, ifnull(SUM(tag.piece),0) as piece,c.cat_type
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_taging as tag ON tag.tag_id = btrt.tag_id
            LEFT JOIN ret_product_master as p ON p.pro_id = tag.product_id
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            LEFT JOIN ret_category c on c.id_ret_category = p.cat_id
            WHERE item_type = 2 AND bt.status != 3 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'  and p.stone_type = 1  and tag.uom_gross_wt = 6
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type) br_in_looseDia ON br_in_looseDia.cat_type = c.cat_type
            WHERE c.status = 1
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.cat_type
            ORDER BY c.cat_type ASC");
            //print_r($this->db->last_query());exit;
            $ps_details = $ps_sql->result_array();
            foreach($ps_details as $ps)
            {
                $return_data['partlysale_stock'][] = $ps;
            }
        }
        if($data['stock_type']==0 || $data['stock_type']==5)   // Old Metal Stock query
        {
            $oldmt_sql = $this->db->query("SELECT c.id_metal_type as sort,c.metal_type as category_name,
            row_number() over(order by c.id_metal_type) as sr_no,
            (IFNULL(op_blc.gross_wt,0) - IFNULL(op_br_out.gross_wt,0)) as op_blc_gwt,
            (IFNULL(op_blc.net_wt,0) - IFNULL(op_br_out.net_wt,0)) as op_blc_nwt,
            (IFNULL(op_blc_diawt.wt,0) - IFNULL(op_br_out_stn.wt,0)) as op_blc_diawt,
            IFNULL(in_blc.gross_wt,0) + IFNULL(br_in.gross_wt,0) as inw_gwt,
            IFNULL(in_blc.net_wt,0) + IFNULL(br_in.net_wt,0) as inw_nwt,
            IFNULL(in_blc_diawt.wt,0) as inw_diawt,
            IFNULL(br_out.gross_wt,0) as out_gwt,
            IFNULL(br_out.net_wt,0) as out_netwt,
            IFNULL(br_out_stn.wt,0) as out_diawt
            FROM ret_old_metal_type as c
            LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt, ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
            FROM ret_bill_old_metal_sale_details as osl
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_billing as bill ON bill.bill_id = osl.bill_id
            WHERE bill.id_branch = ".$data['id_branch']." AND date(bill.bill_date) < '$FromDt' AND bill.bill_status = 1
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            GROUP by oldt.id_metal_type) op_blc on op_blc.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,
            IFNULL(SUM(st.wt),0) as wt,st.old_metal_sale_id,s.metal_type,s.bill_id
			FROM ret_billing_item_stones st
			LEFT JOIN ret_bill_old_metal_sale_details s ON s.old_metal_sale_id = st.old_metal_sale_id
           	LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  s.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_billing as bill ON bill.bill_id = s.bill_id
			LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
			LEFT JOIN ret_uom m ON m.uom_id = stnd.uom_id
			WHERE bill.id_branch = ".$data['id_branch']." AND date(bill.bill_date) < '$FromDt' AND bill.bill_status = 1
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            and stnd.stone_type=1 and s.old_metal_sale_id IS NOT NULL
			GROUP by oldt.id_metal_type) as op_blc_diawt ON op_blc_diawt.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt, ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
            FROM ret_bill_old_metal_sale_details as osl
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_billing as bill ON bill.bill_id = osl.bill_id
            WHERE bill.id_branch = ".$data['id_branch']." AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND bill.bill_status = 1
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            GROUP by oldt.id_metal_type) in_blc on in_blc.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,
            IFNULL(SUM(st.wt),0) as wt,st.old_metal_sale_id,s.metal_type,s.bill_id
			FROM ret_billing_item_stones st
			LEFT JOIN ret_bill_old_metal_sale_details s ON s.old_metal_sale_id = st.old_metal_sale_id
           	LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  s.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_billing as bill ON bill.bill_id = s.bill_id
			LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
			LEFT JOIN ret_uom m ON m.uom_id = stnd.uom_id
			WHERE bill.id_branch = ".$data['id_branch']." AND date(bill.bill_date) BETWEEN '$FromDt' AND '$ToDt'  AND bill.bill_status = 1
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            and stnd.stone_type=1 and s.old_metal_sale_id IS NOT NULL
			GROUP by oldt.id_metal_type) as in_blc_diawt ON in_blc_diawt.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt,
            ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = btrt.old_metal_sale_id
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            WHERE btrt.item_type = 1 AND bt.transfer_from_branch = ".$data['id_branch']."  AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            GROUP by oldt.id_metal_type) op_br_out ON op_br_out.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,IFNULL(SUM(st.wt),0) as wt
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = btrt.old_metal_sale_id
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_billing_item_stones st on st.old_metal_sale_id = osl.old_metal_sale_id
            LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            WHERE btrt.item_type = 1 AND bt.transfer_from_branch = ".$data['id_branch']."  AND date(bt.approved_datetime) BETWEEN '2022-04-01' AND '$op_blc_to_date'  and stnd.stone_type=1
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            GROUP by oldt.id_metal_type) op_br_out_stn ON op_br_out_stn.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt,
            ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = btrt.old_metal_sale_id
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            WHERE btrt.item_type = 1 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            GROUP by oldt.id_metal_type) br_out ON br_out.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,IFNULL(SUM(st.wt),0) as wt
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = btrt.old_metal_sale_id
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_billing_item_stones st on st.old_metal_sale_id = osl.old_metal_sale_id
            LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            WHERE btrt.item_type = 1 AND bt.transfer_from_branch = ".$data['id_branch']." AND date(bt.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'  and stnd.stone_type=1
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            GROUP by oldt.id_metal_type) br_out_stn ON br_out_stn.id_metal_type = c.id_metal_type
            LEFT JOIN (SELECT oldt.id_metal_type,ifnull(sum(osl.gross_wt),0) as gross_wt,
            ifnull(SUM(osl.net_wt),0) as net_wt, ifnull(SUM(osl.piece),0) as piece
            FROM ret_brch_transfer_old_metal btrt
            LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = btrt.old_metal_sale_id
            LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type
            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = btrt.transfer_id
            WHERE btrt.item_type = 1 AND bt.transfer_to_branch = ".$data['id_branch']." AND date(bt.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'
            ".($id_metal!='' && $id_metal !='0' ? " and oldt.id_metal in (".$id_metal.") " :'' )."
            GROUP by oldt.id_metal_type) br_in ON br_in.id_metal_type = c.id_metal_type
            WHERE c.id_metal_type is not null
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            GROUP by c.id_metal_type ");
            //print_r($this->db->last_query());exit;
            $oldmt_det = $oldmt_sql->result_array();
            foreach($oldmt_det as $ol)
            {
                $return_data['oldmetal_stock'][] = $ol;
            }
        }
        return $return_data;
    }
    function detailed_day_transaction_report($post)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $metal_type = implode(' , ', $post['id_metal']);
		if($metal_type!= '')
		{
			$id_metal = $metal_type;
		}else{
			$id_metal = $post['id_metal'];
		}
        $return_data = array("sales_details" => array(), "old_matel_details"=>array(), "return_details"=>array(),'order_advance_details'=>array(), "credit_details"=>array(),"advance_receipt_details"=>array(),"repair_order_details"=>array(),
        "payment_issue_details" => array(),"purchase_plan_details"=>array());
        if($post['bill_type']==0 || $post['bill_type']==1)
        {
            // --- Sales Query ---
            $items_query = $this->db->query("SELECT
            CASE
            WHEN bill.bill_id = bill.bill_id THEN ROW_NUMBER() OVER (PARTITION BY bill.bill_id ORDER BY bill.bill_id)
            ELSE ROW_NUMBER() OVER (PARTITION BY bill.bill_id ORDER BY bill.bill_id)
            END AS SerialNumber,
            br.name as branch,bill.bill_id,bill.sales_ref_no as bill_no,IF(bill.bill_type = 1, 'Sales',IF(bill.bill_type = 2, 'Sales&Purchase',IF(bill.bill_type = 3, 'Sales&Return',IF(bill.bill_type = 4, 'Purchase',IF(bill.bill_type = 5, 'Order Advance',  IF(bill.bill_type = 6, 'Advance',IF(bill.bill_type = 7, 'Sales Return',IF(bill.bill_type = 8, 'Credit Bill Payment',IF(bill.bill_type = 9, 'Order Delivery',IF(bill.bill_type = 10, 'Chit Proclose',IF(bill.bill_type = 11, 'Repair Order Delivery', ''))))))))))) AS bill_type,date_format(bill.bill_date,'%d-%m-%Y') as bill_date, emp.firstname as emp_name,IFNULL(pur.purity,'') as purity,IFNULL(f.counter_name,'') as counter,
            p.product_name,IFNULL(sum(d.piece),1) as tot_pcs,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.net_wt),0) as net_wt, IFNULL(sum(d.less_wt),0) as less_wt,ifnull(stn.stn_wt,0) as dia_wt,IFNULL(tag.tag_code,'') as tag_code,IFNULL(tag.old_tag_id,'-') as old_tag_id,
            IFNULL(s.section_name,'') as section_name,IFNULL(sect.section_name,'') as nt_section_name,CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number, IFNULL(sum(d.total_cgst),0) AS total_cgst, IFNULL(sum(d.total_sgst),0) AS total_sgst, IFNULL(sum(d.total_igst),0) AS total_igst, IFNULL(sum(d.item_total_tax),0) AS item_total_tax, round(IFNULL(sum(d.item_cost),0)-IFNULL(sum(d.item_total_tax),0),2) AS amt_without_tax,sum(d.item_cost) as total_cost,
            IFNULL(old_met.amount,0) as old_metal_amount,IFNULL(ret.ret_item_cost,0) as tot_ret_amt,IFNULL(g.gift_voucher_amt,0) as gift_voucher_amt,IFNULL(chit.utilized_amt,0) as utilized_amt,IFNULL((ord_adj.received_amount+ord_adj.weight_amt),0) as order_adj_amt,IFNULL(adv_adj.adj_amt,0) as adv_adj_amt,IFNULL(cus.pan,'') AS pan_number
            FROM ret_bill_details d
            LEFT JOIN ret_taging tag on tag.tag_id=d.tag_id
            LEFT JOIN ret_lot_inwards lt on lt.lot_no=tag.tag_lot_id
            LEFT JOIN ret_karigar k ON k.id_karigar=lt.gold_smith
            LEFT JOIN ret_billing bill ON bill.bill_id=d.bill_id
            LEFT JOIN ret_day_closing day_close ON day_close.id_branch=bill.id_branch
            LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design=tag.id_sub_design
            LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
            LEFT JOIN ret_design_master des ON des.design_no=d.design_id
            LEFT JOIN ret_category c ON c.id_ret_category=p.cat_id
            LEFT JOIN metal m ON m.id_metal=c.id_metal
            LEFT JOIN employee emp on emp.id_employee = bill.created_by
            LEFT JOIN customer cus ON cus.id_customer=bill.bill_cus_id
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT JOIN branch br on br.id_branch=bill.id_branch
            LEFT JOIN ret_section s ON s.id_section = tag.id_section
            LEFT JOIN ret_section sect on  sect.id_section = d.id_section
            LEFT JOIN ret_purity pur on pur.id_purity = d.purity
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=bill.counter_id
            LEFT JOIN (SELECT IFNULL(SUM(bill_stn.wt),0) as stn_wt,dt.bill_det_id,dt.purity,dt.bill_id,
            IFNULL(SUM(bill_stn.price),0) as stn_amt
            FROM ret_billing_item_stones bill_stn
            LEFT JOIN ret_bill_details dt on dt.bill_det_id = bill_stn.bill_det_id
            LEFT JOIN ret_billing b on b.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=bill_stn.stone_id
            LEFT JOIN ret_purity pur on pur.id_purity = dt.purity
            WHERE b.bill_status=1 AND s.stone_type = 1
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['report_type']==2 ? "group by dt.bill_det_id" : "group by dt.bill_id,dt.purity").") as stn on ".($post['report_type']==2 ? "stn.bill_det_id = d.bill_det_id" : "stn.bill_id = d.bill_id and stn.purity = d.purity" )."
            LEFT JOIN (SELECT IFNULL(sum(old.rate),0) as amount,b.bill_id
                FROM ret_bill_old_metal_sale_details old
                LEFT JOIN ret_billing b on b.bill_id = old.bill_id
                WHERE b.bill_status = 1
            group by b.bill_id) as old_met on old_met.bill_id = bill.bill_id
            LEFT JOIN (SELECT SUM(bill_items.item_cost) as ret_item_cost,bill.bill_id,bill_items.product_id
                FROM ret_billing bill
                LEFT JOIN ret_bill_return_details d on d.bill_id=bill.bill_id
                LEFT JOIN ret_bill_details as bill_items ON bill_items.bill_det_id = d.ret_bill_det_id
                group by bill.bill_id
            ) as ret ON ret.bill_id=bill.bill_id
            LEFT JOIN (SELECT SUM(d.gift_voucher_amt) as gift_voucher_amt,d.bill_id,b.bill_no
                    FROM ret_billing_gift_voucher_details d
                    LEFT JOIN ret_billing b on b.bill_id=d.bill_id
                    group by b.bill_id
            ) as g ON g.bill_id=bill.bill_id
            LEFT JOIN(SELECT chit.bill_chit_ut_id,chit.bill_id,chit.scheme_account_id,SUM(utilized_amt) as utilized_amt
                    FROM ret_billing_chit_utilization chit
                    LEFT JOIN ret_billing b on b.bill_id=chit.bill_id
                    group by b.bill_id
            ) as chit ON chit.bill_id=bill.bill_id
            LEFT JOIN(SELECT sum(a.received_amount) as received_amount,
            sum(a.received_weight*a.rate_per_gram) as weight_amt,b.bill_id
                FROM ret_billing b
                LEFT JOIN ret_billing_advance a ON a.adjusted_bill_id=b.bill_id
                WHERE a.is_adavnce_adjusted=1
            group by b.bill_id) as ord_adj on ord_adj.bill_id=bill.bill_id
            LEFT JOIN(SELECT IFNULL(sum(r.amount),0) as adj_amt,bill.bill_id
                    FROM ret_billing bill
                    LEFT JOIN ret_wallet_transcation r on r.bill_no=bill.bill_id
                    where r.bill_no is not null
            and bill.bill_status=1  and r.transaction_type=1 group by bill.bill_id) as adv_adj ON adv_adj.bill_id=bill.bill_id
            WHERE bill.bill_status=1 and bill.bill_type!=6
            ".($post['dt_range'] != '' ? 'and date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and bill.id_branch=".$post['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and c.id_metal in (".$id_metal.") " :'' )."
            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR  ( IF(bill.is_eda=2,date(day_close.entry_date) = date(bill.bill_date),'') and bill.is_eda=2 ) )" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2 and date(day_close.entry_date) = date(bill.bill_date)") )."         
            ".($post['id_category']!='' && $post['id_category'] !='0' ? "and c.id_ret_category = ".$post['id_category']."" : "")."
            ".($post['id_product']!='' && $post['id_product']!='0' ? "and p.pro_id=".$post['id_product']."" : "" )."
            ".($profile_settings['allow_bill_type']==3 ? " and (bill.is_eda=1 OR bill.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and bill.is_eda=1" :" and bill.is_eda=2") )."
            ".($post['report_type']==2 ? "group by d.bill_det_id": "group by d.bill_id,d.purity" )."
            order by bill.bill_id ASC");
            //print_r($this->db->last_query());exit;
            $item_details=$items_query->result_array();
            foreach($item_details as $r)
            {
                $r['sales_payment_details'] = $this->get_payment_details($r['bill_id']);
                $r['adv_adj_amt'] = $this->getAdvanceAdj_amount($r['bill_id']);
                $return_data['sales_details'][] = $r;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==2)
        {
            // --- Purchase Query ---
            $old_metal_query = $this->db->query("SELECT b.bill_id,b.pur_ref_no as bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,If(b.make_as_advance=1,'Purchase(Adv)','Purchase(Sal)') as bill_type,sum(s.gross_wt) as gross_wt,emp.firstname as emp_name,s.touch as purity,IFNULL(sum(s.piece),0) as pcs,IFNULL(sum(s.gross_wt),0) as grs_wt,
            IFNULL(sum(s.dust_wt),0) as dust_wt,IFNULL(sum(s.stone_wt),0) as stone_wt,IFNULL(stn.dia_wt,0) as dia_wt,sum(s.rate)as amount,m.metal,m.id_metal,sum(s.net_wt) as net_wt,sum(s.rate_per_grm) as rate_per_grm,IFNULL(f.counter_name,'') as counter,br.name as branch,CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number,IFNULL(cus.pan,'') AS pan_number
            FROM ret_bill_old_metal_sale_details s
            LEFT JOIN ret_billing b on b.bill_id=s.bill_id
            LEFT JOIN metal m on m.id_metal=s.metal_type
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            LEFT JOIN ret_estimation_old_metal_sale_details as old_est on old_est.old_metal_sale_id=s.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as old_type on old_type.id_metal_type=old_est.id_old_metal_type
            LEFT JOIN employee emp on emp.id_employee = b.created_by
            LEFT JOIN branch br on br.id_branch = b.id_branch
            LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT JOIN (SELECT IFNULL(SUM(st.wt),0) as dia_wt,st.est_old_metal_sale_id,est_old.id_old_metal_type,s.old_metal_sale_id
            FROM ret_esti_old_metal_stone_details st
            LEFT JOIN ret_estimation_old_metal_sale_details est_old on est_old.old_metal_sale_id = st.est_old_metal_sale_id
            LEFT JOIN ret_bill_old_metal_sale_details s on s.esti_old_metal_sale_id = est_old.old_metal_sale_id
            LEFT JOIN ret_billing b on b.bill_id = s.bill_id
            LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
            LEFT JOIN ret_stone_type t ON t.id_stone_type = stnd.stone_type
            WHERE t.stone_code = 'DIA' and b.bill_id is not null and b.bill_status=1
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            GROUP by  s.old_metal_sale_id) as stn ON stn.old_metal_sale_id = s.old_metal_sale_id
            where b.bill_id is not null and b.bill_status=1
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
            group by s.old_metal_sale_id order by b.bill_id ASC");
            //print_R($this->db->last_query());exit;
            $old_items = $old_metal_query->result_array();
            foreach($old_items as $old)
            {
                $return_data['old_matel_details'][] = $old;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==3)
        {
            // --- Sales Return Query ---
            $sale_ret = $this->db->query("SELECT b.bill_id,b.s_ret_refno as bill_no,b.bill_type,date_format(b.bill_date,'%d-%m-%Y') as bill_date,emp.firstname as emp_name,b.make_as_advance,if(b.bill_type=3,'Sales Return(SAL)','Sales Return') as bill_type,IFNULL(f.counter_name,'') as counter,p.product_name,IFNULL(pur.purity,'') as purity,sum(d.piece) as piece,sum(d.gross_wt) as gross_wt,sum(d.net_wt) as net_wt,IFNULL(SUM(d.less_wt),0) as less_wt,IFNULL(stn.stn_wt,0) as dia_wt,IFNULL(SUM(d.total_cgst),0) AS total_cgst, IFNULL(SUM(d.total_sgst),0) AS total_sgst, IFNULL(SUM(d.total_igst),0) AS total_igst, IFNULL(SUM(d.item_total_tax),0) AS item_total_tax, round(IFNULL(SUM(d.item_cost),0)-IFNULL(SUM(d.item_total_tax),0),2) AS amt_without_tax,SUM(d.item_cost) as total_cost,br.name as branch,CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number,IFNULL(cus.pan,'') AS pan_number
            FROM ret_billing b
            LEFT JOIN ret_bill_return_details r ON r.bill_id=b.bill_id
            LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
            LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
            LEFT JOIN metal mt on mt.id_metal=cat.id_metal
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            LEFT JOIN employee emp on emp.id_employee = b.created_by
            LEFT JOIN ret_purity pur on pur.id_purity = d.purity
            LEFT JOIN branch br on br.id_branch = b.id_branch
            LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id,pro.cat_id,c.id_metal,dt.bill_det_id,dt.bill_id,dt.purity
            FROM ret_bill_return_details r
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id = r.ret_bill_det_id
            LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = dt.bill_det_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = dt.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_billing b ON b.bill_id=r.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            LEFT JOIN ret_purity pur on pur.id_purity = dt.purity
            WHERE b.bill_status=1 AND s.stone_type=1
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['report_type']==2 ? "group by dt.bill_det_id" : "group by dt.bill_id,dt.purity")." ) as stn ON ".($post['report_type']==2 ? "stn.bill_det_id=d.bill_det_id" : "stn.bill_id=d.bill_id and stn.purity=d.purity" )."
            WHERE d.bill_det_id IS NOT null and b.bill_status=1
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
            ".($post['id_category']!='' && $post['id_category'] !='0' ? "and cat.id_ret_category = ".$post['id_category']."" : "")."
            ".($post['id_product']!='' && $post['id_product']!='0' ? "and p.pro_id=".$post['id_product']."" : "" )."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
            ".($post['report_type']==2 ? "group by d.bill_det_id": "group by d.bill_id,d.purity" )."
            ORDER BY b.bill_id ASC");
            $sales_ret_items = $sale_ret->result_array();
            foreach($sales_ret_items as $ret)
            {
                $return_data['return_details'][] = $ret;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==4)
        {
            // --- Order Advance Query ---
            $order_adv = $this->db->query("SELECT b.bill_id,b.order_adv_ref_no as bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,'Order Advance' as bill_type,emp.firstname as emp_name,IFNULL(f.counter_name,'') as counter,b.tot_amt_received,IFNULL(old_met.amount,0) as old_metal_amount,br.name as branch,CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number,IFNULL(cus.pan,'') AS pan_number
            FROM ret_billing b
            LEFT JOIN employee emp on emp.id_employee = b.created_by
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT JOIN branch br on br.id_branch = b.id_branch
            LEFT JOIN (SELECT IFNULL(sum(old.rate),0) as amount,b.bill_id
                        FROM ret_bill_old_metal_sale_details old
                        LEFT JOIN ret_billing b on b.bill_id = old.bill_id
                        WHERE b.bill_status = 1
            group by b.bill_id) as old_met on old_met.bill_id = b.bill_id
            WHERE b.bill_status =1 and b.bill_type = 5
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
            ORDER BY b.bill_id ASC");
            $order_adv_items = $order_adv->result_array();
            foreach($order_adv_items as $ord)
            {
                $ord['payment_details'] = $this->get_payment_details($ord['bill_id']);
                $return_data['order_advance_details'][] = $ord;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==6)
        {
            // --- Advance Receipt Query ---
            $adv_rec = $this->db->query("SELECT ir.id_issue_receipt as bill_id,cus.firstname as customer,ir.bill_no,ir.amount,if(ir.receipt_type=1,'Credit Collection',if(ir.receipt_type=2,'Advance Receipt',if(ir.receipt_type=3,'Advance Deposit',if(ir.receipt_type=5,'Advance(Order cancelled)','Advance Transfer')))) as receipt_type,ir.deposit_bill_id,IFNUll(emp.firstname,'') as emp_name,date_format(ir.bill_date,'%d-%m-%Y') as bill_date,br.name as branch,CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number,IFNULL(cus.pan,'') AS pan_number,IFNULL(ir.deposit_type,'') as deposit_type
            FROM ret_issue_receipt ir
            LEFT JOIN employee emp on emp.id_employee = ir.emp_id
            LEFT JOIN customer cus on cus.id_customer = ir.id_customer
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT JOIN branch br on br.id_branch = ir.id_branch
            Where ir.type = 2 and ir.bill_status = 1
            ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (ir.is_eda=1 OR ir.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and ir.is_eda=1" :" and ir.is_eda=2") )."
            ORDER BY ir.id_issue_receipt ASC");
            $adv_receipt_items = $adv_rec->result_array();
            foreach($adv_receipt_items as $adv)
            {
                $adv['payment_details'] = $this->get_receipt_payment_details($adv['bill_id']);
                $return_data['advance_receipt_details'][] = $adv;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==5)
        {
            // Credit Collection Query
            $cred_col = $this->db->query("SELECT b.bill_id,b.credit_coll_refno as bill_no,'Credit Collection' as bill_type,
            date_format(b.bill_date,'%d-%m-%Y') as bill_date,b.tot_amt_received,b.tot_bill_amount,
            IFNULL(emp.firstname,'') as emp_name,'1' as type,br.name as branch,CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number
            FROM ret_billing b
            LEFT JOIN customer cus on cus.id_customer = b.bill_cus_id
            LEFT JOIN employee emp on emp.id_employee = b.created_by
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT JOIN branch br on br.id_branch = b.id_branch
            WHERE b.bill_status =1 and b.bill_type = 8
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
            ORDER BY b.bill_id ASC");
            $credit1 = $cred_col->result_array();
            $cred_col1 = $this->db->query("SELECT r.id_issue_receipt as bill_id,r.bill_no,'Credit Receipt' as bill_type,
            date_format(r.bill_date,'%d-%m-%Y') as bill_date,
            d.received_amount as amount,'2' as type,br.name as branch,CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,IFNULL(emp.firstname,'') as emp_name,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number,IFNULL(cus.pan,'') AS pan_number
            FROM ret_issue_credit_collection_details d
            LEFT JOIN ret_issue_receipt r on r.id_issue_receipt= d.id_issue_receipt
            LEFT JOIN employee emp on emp.id_employee = r.emp_id
            LEFT JOIN customer cus ON cus.id_customer=r.id_customer
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT JOIN branch br on br.id_branch = r.id_branch
            WHERE r.type=2 AND r.receipt_type=1 and r.bill_status = 1
            ".($post['dt_range'] != '' ? 'and date(r.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']!=0 ? " and r.id_branch=".$post['id_branch']."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR r.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2") )."
            ORDER BY r.id_issue_receipt ASC");
            $credit2 = $cred_col1->result_array();
            $credit_coll_items = array_merge($credit1,$credit2);
            foreach($credit_coll_items as $cr)
            {
                if($cr['type']==1)
                {
                    $cr['payment_details'] = $this->get_payment_details($cr['bill_id']);
                    $cr['old_metal'] = $this->getOldMetalPurchaseAmount($cr['bill_id']);
                    $cr['amount'] = ($cr['tot_amt_received'] > 0 ? $cr['tot_amt_received'] : $cr['tot_bill_amount'] + $old_metal['purchase_amount']);
                }
                else
                {
                    $cr['payment_details'] = $this->get_receipt_payment_details($cr['bill_id']);
                    $cr['old_metal'] = [];
                    $cr['amount'] = ($cr['amount']);
                }
                $return_data['credit_details'][] = $cr;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==8)
        {
            //Repair Order Delivery Query
            $rep_ord = $this->db->query("SELECT b.bill_id,b.repair_del_ref_no as bill_no,'Repair Order Delivery' as bill_type,
            date_format(b.bill_date,'%d-%m-%Y') as bill_date,
            IFNULL(SUM(c.totalitems),0) as pcs,IFNULL(SUM(c.weight),0) as weight,IFNULL(SUM(c.rate),0) as amount,
            br.name as branch,CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number,IFNULL(cus.pan,'') AS pan_number
            FROM ret_billing b
            LEFT JOIN customerorderdetails c ON c.bill_id=b.bill_id
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            LEFT JOIN customer cus on cus.id_customer = b.bill_cus_id
            LEFT JOIN employee emp on emp.id_employee = b.created_by
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            LEFT JOIN branch br on br.id_branch = b.id_branch
            WHERE b.bill_type=11 and b.bill_status=1 AND c.ortertype=3 and c.orderstatus=5 and b.bill_id is not null
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']!=0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
            HAVING amount > 0
            ORDER BY b.bill_id ASC");
            //print_r($this->db->last_query());exit;
            $repair_items = $rep_ord->result_array();
            foreach($repair_items as $r)
            {
                $r['payment_details'] = $this->get_payment_details($r['bill_id']);
                $return_data['repair_order_details'][] = $r;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==7)
        {
            // -- Payment Issue Query ---
            $issue = $this->db->query("SELECT ir.id_issue_receipt as bill_id,cus.firstname as customer,ir.bill_no,ir.amount,IFNUll(emp.firstname,'') as emp_name,date_format(ir.bill_date,'%d-%m-%Y') as bill_date,'Payment Issue' as bill_type,br.name as branch,
            CONCAT(IFNULL(cus.firstname,''),' ',IFNULL(cus.lastname,'')) AS cus_name, cus.mobile,CONCAT(IFNULL(a.address1,''), IF(IFNULL(a.address2,'') != '', ',', '') ,IFNULL(a.address2,''), IF(IFNULL(a.address3,'') != '', ',', '') ,IFNULL(a.address3,''), IF(IFNULL(a.pincode,'') != '', '-', ''), IFNULL(a.pincode,'')) AS cus_address,
            ste.name AS state_name, IFNULL(cus.gst_number, '') AS gst_number,IFNULL(cus.pan,'') AS pan_number
            FROM ret_issue_receipt ir
            LEFT JOIN customer cus on cus.id_customer = ir.id_customer
            LEFT JOIN employee emp on emp.id_employee = ir.id_employee
            LEFT JOIN branch br on br.id_branch = ir.id_branch
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            Where ir.type = 1 and ir.bill_status = 1
            ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']!=0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (ir.is_eda=1 OR ir.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and ir.is_eda=1" :" and ir.is_eda=2") )."
            ORDER BY ir.id_issue_receipt ASC");
            $issue_items = $issue->result_array();
            foreach($issue_items as $ir)
            {
                $ir['payment_details'] = $this->get_receipt_payment_details($ir['bill_id']);
                $return_data['payment_issue_details'][] = $ir;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==9)
        {
            // Purchase Plan Query
            $pur_plan = $this->db->query("SELECT br.name as branch, p.id_payment as bill_no,IFNULL((d.payment_amount),0) as payment_amount,d.payment_mode,d.NB_type,
            cus.firstname as cus_name,cus.mobile,'Purchase Plan' as bill_type,
            DATE_FORMAT(p.custom_entry_date,'%d-%m-%Y') as bill_date,IFNULL(cus.gst_number, '') AS gst_number,IFNULL(cus.pan,'') AS pan_number
            FROM payment_mode_details d
            LEFT JOIN payment p ON p.id_payment = d.id_payment
            LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = p.id_scheme_account
            LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme
            LEFT JOIN customer as cus ON cus.id_customer = scacc.id_customer
            left join branch as br on br.id_branch = p.id_branch
            WHERE d.payment_status = 1 and p.payment_status =1
            ".($post['dt_range'] != '' ? 'and date(p.custom_entry_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']!=0 ? " and p.id_branch=".$post['id_branch']."" :'')."
            ORDER BY p.id_payment ASC");
            $pur_plan_items = $pur_plan->result_array();
            foreach($pur_plan_items as $p)
            {
                $return_data['purchase_plan_details'][] = $p;
            }
        }
        if($post['id_branch']!='' && $post['id_branch']!=0)
        {
            $dayClose = $this->db->query("SELECT id_branch,is_day_closed,entry_date from ret_day_closing where id_branch=".$post['id_branch']);
            $cur_entry_date = $dayClose->row()->entry_date;
            if($profile_settings['allow_bill_type']==2)
            {
                if($FromDt != $cur_entry_date)
                {
                 $return_data =[];
                }
            }
        }
        return $return_data;
    }
    function getAdvanceAdj_amount($bill_id)
    {
        $sql = $this->db->query("SELECT ifnull(sum(au.utilized_amt),0) as adj_amt
        FROM ret_advance_utilized au
        LEFT JOIN ret_billing b on b.bill_id = au.bill_id
        WHERE b.bill_status = 1 and au.bill_id=".$bill_id."
        Group by au.bill_id");
        $advance_adjusted1 = $sql->row_array();
        $sql1 = $this->db->query("SELECT ifnull(sum(ad.advance_amount),0) as adj_amt
        FROM ret_billing_advance ad
        LEFT JOIN ret_billing b on b.bill_id = ad.adjusted_bill_id
        WHERE b.bill_status = 1 and ad.is_adavnce_adjusted = 1 and b.bill_id = ".$bill_id."
        GROUP by ad.adjusted_bill_id");
        $advance_adjusted2 = $sql1->row_array();
        $advance_adjusted = array("adj_amt"=>$advance_adjusted1['adj_amt'] + $advance_adjusted2['adj_amt']);
        return $advance_adjusted;
    }
    function getReceiptsAllLedger($data)
    {
        $return_data = array();
	    $branch = empty($data['id_branch']) ? "" : $data['id_branch'];
	    $fledger_type = empty($data['ledger_type']) ? 0 : $data['ledger_type'];
		if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $from_date  = date('Y-m-d',strtotime(date_format($d1,"Y-m-d")));
           $to_date    = date('Y-m-d',strtotime(date_format($d2,"Y-m-d")));
        }
        $receipt_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as paymentdate, b.s_ret_refno as INVOICENO, b.sales_ref_no, `id_billing_payment`,
	                            `payment_mode`,
	                            `payment_amount`,
                        	    'Payment' as VOUCHERTYPE, b.bill_type, b.pur_ref_no,
                                concat(cus.firstname, ' - ', cus.mobile)  as PARTYNAME,
                                IFNULL(b.remark,'') as REMARKS,
                                b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as CostCentre, br.sort, b.tot_bill_amount, b.round_off_amt as roundoff,
								b.bill_no, b.order_adv_ref_no,
								(@row_number:=CASE WHEN @prev_bill_id = pay.bill_id THEN @row_number + 1 ELSE 1 END) AS currownumber,
								br.brledgername, @prev_bill_id := pay.bill_id AS bill_id
                                FROM ret_billing_payment as pay
								LEFT JOIN ret_billing b ON b.bill_id = pay.bill_id
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                CROSS JOIN (SELECT @row_number := 0, @prev_bill_id := NULL) AS vars
                                WHERE b.bill_status = 1 AND pay.type = 1 AND DATE(b.bill_date) >= '2022-04-01' AND b.is_eda !=2
                                 ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')."
                                ".($data['id_branch'] !='' ? " AND b.id_branch = '".$data['id_branch']."'" :'')."
                                ");
           //echo $this->db->last_query();exit;
        foreach($receipt_query->result() as $row){
                    $ledgername = "";
                    if($row->payment_mode != "Cash" && $row->payment_mode != "Csh"){
                        $ledgername = $row->brledgername;
                    }else{
                        $ledgername = "Cash";
                    }
                    if($row->bill_type <= 3){ //Sales
                        $pay_invoice_string ='IR-'.$row->brcode.'-SA-'.$row->bill_no.'-'.$row->currownumber;
                        $VoucherType = "Receipt Sales";
                        $ledger_type = 1;
                    }else if($row->bill_type == 5){ // Order Advance
                        $pay_invoice_string ='IR-'.$row->brcode.'-OD-'.$row->bill_no.'-'.$row->currownumber;
                        $VoucherType = "Receipt Order";
                        $ledger_type = 2;
                    }else if($row->bill_type == 8){ // Credit collection
                        $pay_invoice_string ='IR-'.$row->brcode.'-CC-'.$row->bill_no.'-'.$row->currownumber;
                        $VoucherType = "Receipt Sales";
                        $ledger_type = 1;
                    }else if($row->bill_type == 11){ // repair
                        $pay_invoice_string ='IR-'.$row->brcode.'-RD'.'-'.$row->bill_no.'-'.$row->currownumber;
                        $VoucherType = "Receipt Sales";
                        $ledger_type = 1;
                    }else if($row->bill_type == 9){ // Order Delivery
                        $pay_invoice_string ='IR-'.$row->brcode."-OR-".$row->bill_no.'-'.$row->currownumber;
                        $VoucherType = "Receipt Order";
                        $ledger_type = 2;
                    }
                    if($row->payment_mode == "Cash" || $row->payment_mode == "Csh"){
                        $return_data[] = array(
                                                "Autoid"                => $row->id_billing_payment,
                                                "CompanyNumber"         => $row->id_branch,
                                                "VoucherNumber"         => $pay_invoice_string,
                                                "VoucherDate"           => $row->paymentdate,
                                                "VoucherType"           => $VoucherType,
                                                "Particulars"           => $row->PARTYNAME,
                                                "LedgerParent"          => $row->LedgerParent,
                                                "BillType"              => 1,
                                                "BillNo"                => $row->bill_id,
                                                "GrossTotal"            => $row->payment_amount,
                                                "CashTotal"             => $row->payment_amount,
                                                "OthersTotal"           => 0,
                                                "LedgerType"            => $ledger_type
                                            );
                    }else{
                        $return_data[] = array(
                                                "Autoid"                => $row->id_billing_payment,
                                                "CompanyNumber"         => $row->id_branch,
                                                "VoucherNumber"         => $pay_invoice_string,
                                                "VoucherDate"           => $row->paymentdate,
                                                "VoucherType"           => $VoucherType,
                                                "Particulars"           => $row->PARTYNAME,
                                                "LedgerParent"          => $row->LedgerParent,
                                                "BillType"              => 1,
                                                "BillNo"                => $row->bill_id,
                                                "GrossTotal"            => $row->payment_amount,
                                                "CashTotal"             => 0,
                                                "OthersTotal"           => $row->payment_amount,
                                                "LedgerType"            => $ledger_type
                                            );
                    }
        }
        //Chit Payment Receipts Details
         $get_day_entries = $this->db->query("SELECT tal_imp_id, date_format(tal_imp_date, '%d-%m-%Y') as paymentdate, tal_imp_date, tal_imp_branch, tal_bran_row_id,
                                    	    br.id_branch, br.short_name as brcode, br.name as CostCentre,
                                    	    br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort,
                                    	    IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry , br.brledgername
	                                        FROM ret_tally_import_chitpayments as pay
	                                        LEFT JOIN branch br ON br.id_branch = pay.tal_imp_branch
	                                        LEFT JOIN state as bst ON bst.id_state = br.id_state
                                            LEFT JOIN country as bcn ON bcn.id_country = br.id_country
                                            WHERE
                                             ".($from_date !='' && $to_date !='' ? " DATE(tal_imp_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')."
                                            ".($data['id_branch'] !='' ? " AND pay.tal_imp_branch = '".$data['id_branch']."'" :'')."
                                            ");
	   //echo $this->db->last_query();exit;
	   foreach($get_day_entries->result() as $key=>$row){
    	    $payments	= $this->get_purchase_plan_payments($row->tal_imp_date, $row->tal_imp_branch);
            /*echo "<pre>";
            print_r($payments);
            echo "</pre>";exit;*/
            $total_amount = 0;
            $total_online_amount = 0;
            foreach($payments as $dkey => $dateval){
                $total_payment = 0;
                $other_payment = 0;
                $cash_payment = 0;
                $scheme_name = "";
                $payid = "";
                foreach($dateval as $pkey => $pval){
                    $scheme_name = $pval['scheme_name'];
                    $total_payment += $pval['totamt'];
                    if($pval['payment_mode'] == 'CSH'){
                        $cash_payment += $pval['totamt'];
                        $payid = $pval['id_payment'];
                    }else{
                        $other_payment += $pval['totamt'];
                        $payid = $pval['id_payment'];
                    }
                }
                $invoice_string = "EMI-".$row->brcode."-".$row->tal_bran_row_id."-".$payid;
                $ledgetparent   = "Sundry Debtors";
                if($total_payment > 0){
                    if($cash_payment > 0){
                         $vouchertype    = "Chit Receipt";
                         $return_data[] = array(
                                                "Autoid"                => $row->tal_imp_id,
                                                "CompanyNumber"         => $row->id_branch,
                                                "VoucherNumber"         => $invoice_string,
                                                "VoucherDate"           => $row->paymentdate,
                                                "VoucherType"           => $vouchertype,
                                                "Particulars"           => $scheme_name,
                                                "LedgerParent"          => $ledgetparent,
                                                "BillType"              => 2,
                                                "BillNo"                => "",
                                                "GrossTotal"            => number_format($cash_payment, 2, '.', ''),
                                                "CashTotal"             => number_format($cash_payment, 2, '.', ''),
                                                "OthersTotal"           => 0,
                                                "LedgerType"            => 3
                                            );
                    }
                    if($other_payment > 0){
                         $vouchertype    = "Chit Receipt";
                         $return_data[] = array(
                                                "Autoid"                => $row->tal_imp_id,
                                                "CompanyNumber"         => $row->id_branch,
                                                "VoucherNumber"         => $invoice_string,
                                                "VoucherDate"           => $row->paymentdate,
                                                "VoucherType"           => $vouchertype,
                                                "Particulars"           => $scheme_name,
                                                "LedgerParent"          => $ledgetparent,
                                                "BillType"              => 2,
                                                "BillNo"                => "",
                                                "GrossTotal"            => number_format($other_payment, 2, '.', ''),
                                                "CashTotal"             => 0,
                                                "OthersTotal"           => number_format($other_payment, 2, '.', ''),
                                                "LedgerType"            => 3
                                            );
                    }
                }
            }
	   }
        $rec_query = $this->db->query("SELECT b.id_issue_receipt, date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.bill_no as INVOICENO, `id_issue_rcpt_pay`,
                                    `id_issue_rcpt`, pay.`type`, ifnull(`NB_type`, 0 ) as NB_type, `payment_mode`, `payment_amount` ,
                                        cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,
                                        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,
                                        cus.mobile as CONTACTNO, b.receipt_type,
                                        'Trade Debtors' as LedgerParent, b.id_branch ,  br.short_name as brcode,
                                        br.name as CostCentre, b.amount,
                                        b.bill_no,  br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort,
                                        IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,
                                        (@row_number:=CASE WHEN @prev_bill_id = b.id_issue_receipt THEN @row_number + 1 ELSE 1 END) AS currownumber,
								        br.brledgername, @prev_bill_id := b.id_issue_receipt AS bill_id
                                        FROM `ret_issue_rcpt_payment`  as pay
										LEFT JOIN ret_issue_receipt b  ON b.id_issue_receipt = pay.id_issue_rcpt
                                        LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                        LEFT JOIN country as cn ON cn.id_country = adr.id_country
                                        LEFT JOIN state as st ON st.id_state = adr.id_state
                                        LEFT JOIN branch br ON br.id_branch = b.id_branch
                                        LEFT JOIN state as bst ON bst.id_state = br.id_state
                                        LEFT JOIN country as bcn ON bcn.id_country = br.id_country
                                        CROSS JOIN (SELECT @row_number := 0, @prev_bill_id := NULL) AS vars
                                        WHERE pay.type = 1
                                        AND b.bill_status = 1 AND amount > 0 AND DATE(b.bill_date) >= '2022-04-01'
                                         ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')."
                                        ".($data['id_branch'] !='' ? " AND b.id_branch = '".$data['id_branch']."'" :'')."
                                         HAVING payment_amount > 0");
        foreach($rec_query->result() as $row){
            $disp_voucher_name = "GR-".$row->brcode."-".$row->bill_no."-".$row->currownumber;
            if($row->payment_mode == "Cash" || $row->payment_mode == "Csh"){
                 $return_data[] = array(
                                                    "Autoid"                => $row->id_issue_rcpt_pay,
                                                    "CompanyNumber"         => $row->id_branch,
                                                    "VoucherNumber"         => $disp_voucher_name,
                                                    "VoucherDate"           => $row->INVOICEDATE,
                                                    "VoucherType"           => "General Receipts",
                                                    "Particulars"           => $row->PARTYNAME,
                                                    "LedgerParent"          => $row->LedgerParent,
                                                    "BillType"              => 1,
                                                    "BillNo"                => $row->bill_no,
                                                    "GrossTotal"            => $row->payment_amount,
                                                    "CashTotal"             => $row->payment_amount,
                                                    "OthersTotal"           => 0,
                                                    "LedgerType"            => 4
                                                );
            }else{
                $return_data[] = array(
                                                    "Autoid"                => $row->id_issue_rcpt_pay,
                                                    "CompanyNumber"         => $row->id_branch,
                                                    "VoucherNumber"         => $disp_voucher_name,
                                                    "VoucherDate"           => $row->INVOICEDATE,
                                                    "VoucherType"           => "General Receipts",
                                                    "Particulars"           => $row->PARTYNAME,
                                                    "LedgerParent"          => $row->LedgerParent,
                                                    "BillType"              => 1,
                                                    "BillNo"                => $row->bill_no,
                                                    "GrossTotal"            => $row->payment_amount,
                                                    "CashTotal"             => 0,
                                                    "OthersTotal"           => $row->payment_amount,
                                                    "LedgerType"            => 4
                                                );
            }
        }
        //echo $fledger_type;exit;
        if($fledger_type != 0){
            $filter_data = $return_data;
            $return_data = array();
            foreach($filter_data as $rkey => $rval){
                if($rval['LedgerType'] == $fledger_type){
                    //unset($return_data[$rkey]);
                    $return_data[] = $rval;
                }
            }
        }
        return $return_data;
    }
    function getAllPaymentLedger($data)
    {
        $return_data = array();
	    $branch = empty($data['id_branch']) ? "" : $data['id_branch'];
	    $fledger_type = empty($data['ledger_type']) ? 0 : $data['ledger_type'];
		if($_POST['dt_range'] != ''){
           $dateRange = explode('-',$_POST['dt_range']);
           $from = str_replace('/','-',$dateRange[0]);
           $to = str_replace('/','-',$dateRange[1]);
           $d1 = date_create($from);
           $d2 = date_create($to);
           $from_date  = date('Y-m-d',strtotime(date_format($d1,"Y-m-d")));
           $to_date    = date('Y-m-d',strtotime(date_format($d2,"Y-m-d")));
        }
        $payment_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as paymentdate, b.s_ret_refno as INVOICENO, b.sales_ref_no, `id_billing_payment`,
	                            `payment_mode`,
	                            ABS(`payment_amount`) as payment_amount,
	                             ifnull(`NB_type`, 0 ) as NB_type,
                        	    'Payment' as VOUCHERTYPE, b.bill_type, b.pur_ref_no,
                                concat(cus.firstname, ' - ', cus.mobile)  as PARTYNAME,
                                IFNULL(b.remark,'') as REMARKS,
                                b.id_branch , b.bill_id, br.short_name as brcode,
                                br.name as CostCentre, br.sort, b.tot_bill_amount, b.round_off_amt as roundoff,
								b.bill_no, b.order_adv_ref_no,
                                (@row_number:=CASE WHEN @prev_bill_id = pay.bill_id THEN @row_number + 1 ELSE 1 END)  AS currownumber,
                                br.brledgername, @prev_bill_id := pay.bill_id AS bill_id
								FROM ret_billing_payment as pay
								LEFT JOIN ret_billing b ON b.bill_id = pay.bill_id
                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
                                LEFT JOIN branch br ON br.id_branch = b.id_branch
                                CROSS JOIN (SELECT @row_number := 0, @prev_bill_id := NULL) AS vars
                                WHERE b.bill_status = 1 AND pay.type = 2 AND DATE(b.bill_date) >= '2022-04-01' AND b.is_eda != 2
                                ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')."
                                ".($data['id_branch'] !='' ? " AND b.id_branch = '".$data['id_branch']."'" :'')."
                                GROUP BY id_billing_payment");
            foreach($payment_query->result() as $row){
                    if($row->bill_type == 2 || $row->bill_type == 4){ //Purchase
                        $invoice_string ='IP-P-'.$row->bill_no.'-'.$row->currownumber;
                        $VoucherType = "Purchase Payment";
                    }else if($row->bill_type == 3){ // Sales return
                        $invoice_string ='IP-R-'.$row->bill_no.'-'.$row->currownumber;
                         $VoucherType = "Sales Return Payment";
                    }else {
                        $invoice_string = "IP-".$row->bill_no."-".$row->currownumber;
                        $VoucherType = "Billing Payment";
                    }
                    $ledgername = "";
                    if($row->payment_mode != "Cash" && $row->payment_mode != "Csh"){
                        $ledgername = $row->brledgername;
                    }else{
                        $ledgername = "Cash";
                    }
                    if($row->payment_mode != "Cash" && $row->payment_mode != "Csh"){//id_pay_device
                        $vouchertype = "GR-Journal";
                         $return_data[] = array(
                                                "Autoid"                => $row->id_billing_payment,
                                                "CompanyNumber"         => $row->id_branch,
                                                "VoucherNumber"         => $invoice_string,
                                                "VoucherDate"           => $row->paymentdate,
                                                "VoucherType"           => $VoucherType,
                                                "Particulars"           => $row->PARTYNAME,
                                                "LedgerParent"          => $row->LedgerParent,
                                                "BillType"              => 1,
                                                "BillNo"                => $row->bill_id,
                                                "GrossTotal"            => $row->payment_amount,
                                                "CashTotal"             => 0,
                                                "OthersTotal"           => $row->payment_amount,
                                                "LedgerType"            => 1
                                            );
                    }else{
                        $return_data[] = array(
                                                "Autoid"                => $row->id_billing_payment,
                                                "CompanyNumber"         => $row->id_branch,
                                                "VoucherNumber"         => $invoice_string,
                                                "VoucherDate"           => $row->paymentdate,
                                                "VoucherType"           => $VoucherType,
                                                "Particulars"           => $row->PARTYNAME,
                                                "LedgerParent"          => $row->LedgerParent,
                                                "BillType"              => 1,
                                                "BillNo"                => $row->bill_id,
                                                "GrossTotal"            => $row->payment_amount,
                                                "CashTotal"             => $row->payment_amount,
                                                "OthersTotal"           => 0,
                                                "LedgerType"            => 1
                                            );
                    }
            }
         $rec_query = $this->db->query("SELECT b.id_issue_receipt, date_format(b.bill_date, '%Y%m%d') as INVOICEDATE,b.bill_no as INVOICENO, `id_issue_rcpt_pay`,
                                    `id_issue_rcpt`, pay.`type`, ifnull(`NB_type`, 0 ) as NB_type, `payment_mode`, ABS(`payment_amount`) as payment_amount ,
                                        cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,
                                        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress,
                                        cus.mobile as CONTACTNO, b.receipt_type,
                                        'Trade Debtors' as LedgerParent, b.id_branch ,  br.short_name as brcode,
                                        br.name as CostCentre, b.amount,
                                        b.bill_no,  br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort,
                                        (@row_number:=CASE WHEN @prev_bill_id = pay.id_issue_rcpt THEN @row_number + 1 ELSE 1 END) AS currownumber,
                                        RIGHT(b.fin_year_code, 2) as fin_year_code, br.brledgername, @prev_bill_id := pay.id_issue_rcpt AS bill_id
                                        FROM `ret_issue_rcpt_payment`  as pay
										LEFT JOIN ret_issue_receipt b  ON b.id_issue_receipt = pay.id_issue_rcpt
                                        LEFT JOIN customer cus ON cus.id_customer=b.id_customer
                                        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer
                                        LEFT JOIN branch br ON br.id_branch = b.id_branch
                                        CROSS JOIN (SELECT @row_number := 0, @prev_bill_id := NULL) AS vars
                                        WHERE pay.type = 2 AND b.issue_type != 1 AND b.is_eda != 2
                                        AND b.bill_status = 1 AND b.amount > 0 AND DATE(b.bill_date) >= '2022-04-01'
                                        ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')."
                                        ".($data['id_branch'] !='' ? " AND b.id_branch = '".$data['id_branch']."'" :'')."
                                        GROUP BY pay.id_issue_rcpt_pay HAVING ABS(payment_amount) > 0");
        //echo $this->db->last_query();exit;
        foreach($rec_query->result() as $row){
            //$disp_voucher_name = "GR-".$row->brcode."-".$row->bill_no."-".$row->currownumber;
            $disp_voucher_name = "GR-".$row->fin_year_code."-".$row->bill_no."-".$row->currownumber;
            //$disp_voucher_name = "GR-".$row->bill_no."-".$row->currownumber;
            $ledgername = "";
            if($row->payment_mode != "Cash" && $row->payment_mode != "Csh"){
                $ledgername = $row->brledgername;
            }else{
                $ledgername = "Cash";
            }
            if($row->payment_mode != "Cash" && $row->payment_mode  != "Csh"){
                $vouchertype = $row->brcode."-Journal";
                $return_data[] = array(
                                                "Autoid"                => $row->id_issue_receipt,
                                                "CompanyNumber"         => $row->id_branch,
                                                "VoucherNumber"         => $disp_voucher_name,
                                                "VoucherDate"           => $row->paymentdate,
                                                "VoucherType"           => "General Payment",
                                                "Particulars"           => $row->PARTYNAME,
                                                "LedgerParent"          => $row->LedgerParent,
                                                "BillType"              => 1,
                                                "BillNo"                => $row->bill_id,
                                                "GrossTotal"            => $row->payment_amount,
                                                "CashTotal"             => 0,
                                                "OthersTotal"           => $row->payment_amount,
                                                "LedgerType"            => 2
                                            );
            }else{
                        $return_data[] = array(
                                                "Autoid"                => $row->id_issue_receipt,
                                                "CompanyNumber"         => $row->id_branch,
                                                "VoucherNumber"         => $disp_voucher_name,
                                                "VoucherDate"           => $row->paymentdate,
                                                "VoucherType"           => "General Payment",
                                                "Particulars"           => $row->PARTYNAME,
                                                "LedgerParent"          => $row->LedgerParent,
                                                "BillType"              => 1,
                                                "BillNo"                => $row->bill_id,
                                                "GrossTotal"            => $row->payment_amount,
                                                "CashTotal"             => $row->payment_amount,
                                                "OthersTotal"            => 0,
                                                "LedgerType"            => 2
                                            );
                    }
            }
        if($fledger_type != 0){
            $filter_data = $return_data;
            $return_data = array();
            foreach($filter_data as $rkey => $rval){
                if($rval['LedgerType'] == $fledger_type){
                    //unset($return_data[$rkey]);
                    $return_data[] = $rval;
                }
            }
        }
        return $return_data;
    }
    function get_cash_book_details($data)
    {
        $return =[];
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        $id_company = $this->session->userdata('id_company');
        $FromDt=$data['from_date'];
        $ToDt=$data['to_date'];
        $multiple_id_branch = implode(' , ', $data['id_branch']);
        if($multiple_id_branch != '')
        {
            $id_branch = $multiple_id_branch;
        }else{
            $id_branch = $data['id_branch'];
        }
         //PAYMENT DETAILS
         $payment_details = $this->db->query("SELECT date(b.bill_date) as bill_date,SUM(p.payment_amount) as payment_amount,p.payment_mode
         FROM ret_billing_payment p
         LEFT JOIN ret_billing b on b.bill_id=p.bill_id
         LEFT JOIN branch br on br.id_branch=b.id_branch
         LEFT JOIN company cmp on cmp.id_company=br.id_company
         LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
         where b.bill_id is not null and b.bill_status=1 and  b.bill_type != 5 and  b.bill_type != 8
         and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
         ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
        and b.bill_type!= 5  and p.payment_mode = 'CASH'".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')." GROUP by p.payment_mode,date(b.bill_date)");
  // echo $this->db->last_query();exit;
       $sales_payment_details=$payment_details->result_array();
       foreach($sales_payment_details as $ray){
         $return_data[]=array(
           'date'=> date('d-m-Y',strtotime($ray['bill_date'])),
           'ref_id'=>'',
           'dates'=>'',
           'type' =>'SALES GOLD ORNAMENT A/C',
           'Credit' =>'',
           'Debit' =>$ray['payment_amount'],
           'Remarks' => 'Billing Payments'
         );
       }
        $sql1=$this->db->query(" SELECT b.bill_date,p.id_billing_payment,p.type,p.bill_id,p.payment_for,SUM(p.payment_amount) as advance_amount,p.card_no,p.cvv,p.payment_mode
         FROM ret_billing_payment p
         LEFT JOIN ret_billing b on b.bill_id=p.bill_id
         where  b.bill_status=1 and b.bill_type = 5
         ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
         and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
         ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
         and p.payment_mode = 'CASH' GROUP by p.payment_mode,date(b.bill_date)
        ");
        $Customer_advance=$sql1->result_array();
         $general_pay_adv=$this->db->query("SELECT r.bill_date as bill_date,SUM(p.payment_amount) as advance_amount,p.payment_mode,r.type,p.type as transcation_type,
         r.id_issue_receipt,IF(r.narration=' ','GENTRAL PAY',r.narration) as narration,r.receipt_type
         FROM ret_issue_receipt r
         LEFT JOIN branch br on br.id_branch=r.id_branch
         LEFT JOIN company cmp on cmp.id_company=br.id_company
         LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
         LEFT JOIN ret_branch_floor_counter f on f.counter_id=r.counter_id
         WHERE p.payment_status=1 and r.bill_status=1 and  p.payment_mode ='Cash' and r.type = 2 and p.payment_amount != 0 and  r.receipt_type!=1 and  r.receipt_type != 8
          ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR r.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2") )."
          and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
          Group by p.payment_mode,date(r.bill_date)");
        //  echo $this->db->last_query();exit;
          $general_pay_adv=$general_pay_adv->result_array();
         $adv_array=array_merge($general_pay_adv,$Customer_advance);
          foreach($general_pay_adv as $ray){
             $return_data[]=array(
               'date'=> date('d-m-Y',strtotime($ray['bill_date'])),
               'ref_id'=>'',
               'dates'=>'',
               'type' =>'GENERAL ADVANCE FROM CUSTOMER A/C',
               'Credit' =>'',
               'Debit' =>$ray['advance_amount'],
               'Remarks' => 'Customer Advance',
             );
           }
           foreach($Customer_advance as $ray){
             $return_data[]=array(
               'date'=> date('d-m-Y',strtotime($ray['bill_date'])),
               'ref_id'=>'',
               'dates'=>'',
               'type' =>'ORDER ADVANCE FROM CUSTOMER A/C',
               'Credit' =>'',
               'Debit' =>$ray['advance_amount'],
               'Remarks' => 'Customer Advance',
             );
           }
   //CREDIT RECEIVED
        $credit_collection=$this->db->query("SELECT date(b.bill_date) as bill_date ,p.id_billing_payment,p.type,p.bill_id,p.payment_for,SUM(p.payment_amount) as amount,p.payment_mode
            FROM ret_billing_payment p
            LEFT JOIN ret_billing b on b.bill_id=p.bill_id
            where b.bill_status=1 and b.bill_type = 8
            ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
            and (date(b.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')."
            and p.payment_mode = 'CASH' GROUP by p.payment_mode,date(b.bill_date)
            ");
        $GenCreditColl=$this->db->query("SELECT SUM(p.payment_amount) as amount,r.bill_no,r.id_issue_receipt as bill_id,date(r.bill_date) as bill_date,
            cus.firstname as cus_name,cus.mobile
            FROM ret_issue_credit_collection_details d
            LEFT JOIN ret_issue_receipt r on r.id_issue_receipt= d.id_issue_receipt
            LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
            LEFT JOIN customer cus ON cus.id_customer=r.id_customer
            LEFT JOIN branch br ON br.id_branch=r.id_branch
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=r.counter_id
            WHERE r.type=2 AND r.receipt_type=1 and r.bill_status = 1 and p.payment_amount != 0
            and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
            ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR r.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2") )."
            and p.payment_mode = 'CASH' GROUP by p.payment_mode,date(r.bill_date) ");
            $credit_collection=$credit_collection->result_array();
            $GenCreditColl=$GenCreditColl->result_array();
            $credit_array=array_merge($GenCreditColl,$credit_collection);
            $array=[];
            foreach($credit_array as $ray){
                $credit_array_datewise[$ray['bill_date']][] =$ray;
            }
            foreach($credit_array_datewise as $id =>$date){
                $credit_amount =0;
                foreach($date as $r){
                    $credit_amount+=$r['amount'];
                }
                $return_data[]=array(
                    'date'=> date('d-m-Y',strtotime($id)),
                    'ref_id'=>'',
                    'dates'=>'',
                    'type' =>'CREDIT COLLECTION FROM CUSTOMER A/C',
                    'Credit' =>'',
                    'Debit' =>$credit_amount,
                    'Remarks' => 'CREDIT COLLECTION',
                );
            }
            // print_r($array);exit;
         $chit_credit_collection = $this->db->query("SELECT
          sum(IF(p.payment_mode='FP','0',pmd.payment_amount)) as payment_amount,pm.mode_name as payment_mode,pmd.payment_mode,p.custom_entry_date as payment_date,'CHIT COLLECTION' as payment_type
         FROM payment_mode_details pmd
         LEFT JOIN payment p ON (p.id_payment = pmd.id_payment)
         LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
         LEFT JOIN customer c ON (c.id_customer = sa.id_customer)
         LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
         LEFT JOIN branch b ON (b.id_branch = p.id_branch)
         Left Join payment_mode pm on (pm.short_code = pmd.payment_mode)
         left join ret_bill_pay_device dev on(dev.id_device = pmd.id_pay_device)
         JOIN chit_settings chit
         Where pmd.payment_status = 1 and p.payment_status = 1 and pmd.is_active = 1 and pmd.payment_mode  = 'CSH'
          and (date(p.custom_entry_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
         ".($id_branch!='' && $id_branch>0 ? " and p.id_branch=".$id_branch."" :'')."
         Group by pmd.payment_mode,date(p.custom_entry_date); ");
         $chit_credit_collection=$chit_credit_collection->result_array();
         foreach($chit_credit_collection as $ray){
             $return_data[]=array(
               'date'=>date('d-m-Y',strtotime($ray['payment_date'])),
               'ref_id'=>'',
               'dates'=>'',
               'type' =>'CHIT COLLECTION',
               'Credit' =>'',
               'Debit' =>$ray['payment_amount'],
               'Remarks' => 'Chit Collection'
             );
           }
         $bank_deposit = $this->db->query("SELECT d.dep_type,IF(d.dep_type=1,'Credit','Debit') as type,d.dep_type,d.dep_amount,d.dep_narration,ba.bank_name,d.dep_date
         FROM `ret_bank_deposit` d
         LEFT JOIN bank ba on ba.id_bank = d.dep_bank
         where  (date(d.dep_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
         ".($id_branch!='' && $id_branch>0 ? " and d.dep_branch=".$id_branch."" :'')."
         ");
       //  echo $this->db->last_query();exit;
         $bank_deposit=$bank_deposit->result_array();
         foreach($bank_deposit as $ray){
             $return_data[]=array(
               'date'=>date('d-m-Y',strtotime($ray['dep_date'])) ,
               'ref_id'=>'',
               'dates'=>'',
               'type' =>'Bank Deposit '.$ray['bank_name'].' AC',
               'Credit' =>$ray['dep_type'] == 0 ? '' : $ray['dep_amount'] ,
               'Debit' =>$ray['dep_type'] == 1 ? '' : $ray['dep_amount'] ,
               'Remarks' => 'Bank Deposit'
             );
           }
            $general_pay=$this->db->query("SELECT r.bill_date,p.payment_amount,p.payment_mode,r.type,p.type as transcation_type,
            r.id_issue_receipt,concat(if(r.issue_type=1,IFNULL(acc.name,'Petty Cash'),if(r.issue_type=2,'Credit Issue',if(r.issue_type=3,'Advance Refund',if(r.issue_type=4,'Existing Out Standing','')))),IF(r.narration !=' ',concat(' Remark :',r.narration),'' )) as narration,r.bill_no
            FROM ret_issue_receipt r
            LEFT JOIN branch br on br.id_branch=r.id_branch
            LEFT JOIN company cmp on cmp.id_company=br.id_company
            LEFT JOIN ret_account_head acc on acc.id_acc_head=r.id_acc_head
            LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=r.counter_id
            WHERE p.payment_status=1 and r.bill_status=1 and  p.payment_mode ='Cash' and r.type = 1
            ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
              ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR r.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2") )."
            and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            ");
            $general_pay=$general_pay->result_array();
            foreach($general_pay as $ray){
                $return_data[]=array(
                'date'=>date('d-m-Y',strtotime($ray['bill_date'])) ,
                'dates'=>date('d-m-Y',strtotime($ray['bill_date'])) ,
                'ref_id'=>$ray['bill_no'],
                'type' =>$ray['narration'],
                'Credit' => $ray['payment_amount'] ,
                'Debit' =>'',
                'Remarks' => 'GENTRAL PAY'
                );
            }
            $general_petty_cash=$this->db->query("SELECT r.bill_date as bill_date,(p.payment_amount) as payment_amount,p.payment_mode,r.type,p.type as transcation_type,
            r.id_issue_receipt,IFNULL(CONCAT(IF(r.narration=' ','PETTY CASH RECEIPT',r.narration),' AGANIST ', emp_issue.bills, ' TO ',IF(r.receipt_to = 1,'Employee','Karigar') ,' MR/MRS ',IF(r.receipt_to = 1,e.firstname,kar.firstname) ),'PETTY CASH RECEIPT') as narration,r.receipt_type,r.bill_no
            FROM ret_issue_receipt r
            LEFT JOIN branch br on br.id_branch=r.id_branch
            LEFT JOIN company cmp on cmp.id_company=br.id_company
            LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=r.counter_id
            LEFT JOIN employee e on e.id_employee=IFNULL(r.id_customer,r.id_employee)
            LEFT JOIN ret_karigar kar ON  kar.id_karigar = r.id_karigar
            left join (select GROUP_CONCAT(ir.bill_no) as bills,crd.id_issue_receipt
                    FROM ret_issue_credit_collection_details crd
                    LEFT JOIN ret_issue_receipt ir ON ir.id_issue_receipt=crd.receipt_for
                    LEFT JOIN ret_issue_receipt ire ON ire.id_issue_receipt=crd.id_issue_receipt
                    where ir.bill_status=1
                    GROUP by crd.id_issue_receipt) as emp_issue on emp_issue.id_issue_receipt=r.id_issue_receipt
            WHERE p.payment_status=1 and r.bill_status=1 and  p.payment_mode ='Cash' and r.type = 2 and p.payment_amount != 0 and   r.receipt_type = 8
            ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR r.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2") )."
            ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
            and (date(r.bill_date) BETWEEN '".date('Y-m-d',strtotime($FromDt))."' AND '".date('Y-m-d',strtotime($ToDt))."')
            ");
            $general_petty_cash=$general_petty_cash->result_array();
            foreach($general_petty_cash as $ray){
                $return_data[]=array(
                'date'=>date('d-m-Y',strtotime($ray['bill_date'])) ,
                'dates'=>date('d-m-Y',strtotime($ray['bill_date'])) ,
                'ref_id'=>$ray['bill_no'],
                'type' =>$ray['narration'],
                'Credit' =>'',
                'Debit' =>$ray['payment_amount'],
                'Remarks' => 'PETTY CASH ISSUE'
                );
            }
        //echo $this->db->last_query();exit
        usort($return_data, function($a, $b) {
         return strtotime($a['date']) - strtotime($b['date']);
         });
         foreach($return_data as  $key => $val ){
             $grouped_data[$val['date']][]=$val;
         }
          // print_r($grouped_data);
         foreach($grouped_data as  $key => &$val ){
            $val['opening'] =$this->get_cash_book_opening($key,$id_branch);
            if($id_branch == 1){
                $val['opening'] = 0;
            }elseif($id_branch == 2){
                $val['opening'] +=$this->get_cash_book_opening($key,1);
            }
         }
         if(empty($grouped_data)){
            if($id_branch == 1){
                $grouped_data[date('d-m-Y',strtotime($ToDt))] = ['opening' => 0 ];
            }else{
                $grouped_data[date('d-m-Y',strtotime($ToDt))] = ['opening' => $this->get_cash_book_opening(date('d-m-Y',strtotime($ToDt)),$id_branch)];
            }
         }
        return $grouped_data;
    }
    function get_cash_book_opening($date,$id_branch)
    {
    $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
    $branch_opening = $this->db->query("SELECT SUM(b.opening_bal) as opening_bal  FROM `branch` b where b.id_branch is not null  ".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')." ")->row()->opening_bal;
       //   echo $branch_opening,$this->db->last_query();exit;
      //   $branch_opening = 0;
     $payment_details = $this->db->query("SELECT date(b.bill_date) as bill_date,SUM(p.payment_amount) as payment_amount,p.payment_mode
     FROM ret_billing_payment p
     LEFT JOIN ret_billing b on b.bill_id=p.bill_id
     LEFT JOIN branch br on br.id_branch=b.id_branch
     LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
     where b.bill_id is not null and b.bill_status=1 and b.bill_type!=13
     and (date(b.bill_date) > '2023-12-13')
     and (date(b.bill_date) < '".date('Y-m-d',strtotime($date))."')
    ".($profile_settings['allow_bill_type']==3 ? " and (b.is_eda=1 OR b.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and b.is_eda=1" :" and b.is_eda=2") )."
     and p.payment_mode = 'CASH'".($id_branch!='' && $id_branch!=0 ? " and b.id_branch=".$id_branch."" :'')." ")->row()->payment_amount;
   //   echo $id_branch,$this->db->last_query();exit;
      $general_pay_adv=$this->db->query("SELECT r.bill_date as bill_date,
      SUM(CASE
      WHEN r.type = 2 THEN p.payment_amount
      WHEN r.type = 1 THEN -p.payment_amount
      ELSE 0 END) as advance_amount,p.payment_mode,r.type,p.type as transcation_type,
      r.id_issue_receipt,IF(r.narration=' ','GENTRAL PAY',r.narration) as narration
      FROM ret_issue_receipt r
      LEFT JOIN branch br on br.id_branch=r.id_branch
      LEFT JOIN ret_issue_rcpt_payment p ON p.id_issue_rcpt=r.id_issue_receipt
      LEFT JOIN ret_branch_floor_counter f on f.counter_id=r.counter_id
      WHERE p.payment_status=1 and r.bill_status=1 and  p.payment_mode ='Cash'
        ".($profile_settings['allow_bill_type']==3 ? " and (r.is_eda=1 OR r.is_eda=2)" : ($profile_settings['allow_bill_type']==1 ? " and r.is_eda=1" :" and r.is_eda=2") )."
       ".($id_branch!='' && $id_branch!=0 ? " and r.id_branch=".$id_branch."" :'')."
       and (date(r.bill_date) > '2023-12-13')
       and (date(r.bill_date) < '".date('Y-m-d',strtotime($date))."')")->row()->advance_amount;
        //echo $this->db->last_query();exit;
       $bank_deposit = $this->db->query("SELECT d.dep_type,IF(d.dep_type=1,'Credit','Debit') as type,d.dep_type,d.dep_amount,d.dep_narration,ba.bank_name,d.dep_date,
         SUM(CASE
      WHEN d.dep_type = 1 THEN -d.dep_amount
      WHEN d.dep_type = 0 THEN d.dep_amount
      ELSE 0 END) as bank_amount
       FROM `ret_bank_deposit` d
       LEFT JOIN bank ba on ba.id_bank = d.dep_bank
       where  (date(d.dep_date) < '".date('Y-m-d',strtotime($date))."' )
       ".($id_branch!='' && $id_branch>0 ? " and d.dep_branch=".$id_branch."" :'')."
       ")->row()->bank_amount;
       $chit_credit_collection = $this->db->query("SELECT
       sum(IF(p.payment_mode='FP','0',pmd.payment_amount)) as payment_amount,pm.mode_name as payment_mode,pmd.payment_mode,pmd.payment_date,'CHIT COLLECTION' as payment_type
      FROM payment_mode_details pmd
      LEFT JOIN payment p ON (p.id_payment = pmd.id_payment)
      LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
      LEFT JOIN customer c ON (c.id_customer = sa.id_customer)
      LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
      LEFT JOIN branch b ON (b.id_branch = p.id_branch)
      Left Join payment_mode pm on (pm.short_code = pmd.payment_mode)
      left join ret_bill_pay_device dev on(dev.id_device = pmd.id_pay_device)
      JOIN chit_settings chit
      Where pmd.payment_status = 1 and p.payment_status = 1 and pmd.is_active=1 and pmd.payment_mode  = 'CSH'
      and (date(p.custom_entry_date) > '2023-12-13')
       and (date(p.custom_entry_date) < '".date('Y-m-d',strtotime($date))."' )
      ".($id_branch!='' && $id_branch>0 ? " and p.id_branch=".$id_branch."" :'')."
      ")->row()->payment_amount;
        // echo $this->db->last_query();exit;
      $opening = $branch_opening + $payment_details + $bank_deposit + $chit_credit_collection + $general_pay_adv;
        return $opening;
    }
    function get_categorywise_day_transaction($post)
    {
        $profile_settings=$this->get_profile_settings($this->session->userdata('profile'));
        if($_POST['dt_range'] != '')
        {
            $dateRange = explode('-',$_POST['dt_range']);
            $from = str_replace('/','-',$dateRange[0]);
            $to = str_replace('/','-',$dateRange[1]);
            $d1 = date_create($from);
            $d2 = date_create($to);
            $FromDt = date_format($d1,"Y-m-d");
            $ToDt = date_format($d2,"Y-m-d");
        }
        $return_data = array("sales_details"=>array(),"purchase_details"=>array(),"return_details"=>array(),"order_advance_details"=>array(),"gen_advance_details"=>array(),"payment_issue_details"=>array(),"purchase_plan_details"=>array());
        if($post['bill_type']==0 || $post['bill_type']==1) // Sales Query
        {
            $items_query = $this->db->query("SELECT br.name as branch,c.id_ret_category,c.name as category_name,IFNULL(sum(d.piece),0) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(sum(d.less_wt),0) as less_wt,IFNULL(sum(d.net_wt),0) as net_wt,IFNULL(stn.stn_wt,0) as dia_wt,
            IFNULL(sum(d.total_cgst),0) AS total_cgst, IFNULL(sum(d.total_sgst),0) AS total_sgst, IFNULL(sum(d.total_igst),0) AS total_igst, IFNULL(sum(d.item_total_tax),0) AS item_total_tax, round(IFNULL(sum(d.item_cost),0)-IFNULL(sum(d.item_total_tax),0),2) AS taxable_amount,sum(d.item_cost) as total_cost,date_format(b.bill_date,'%d-%m-%Y') as bill_date
            
            From ret_billing b
            Left JOIN ret_bill_details d on d.bill_id=b.bill_id
            LEFT JOIN ret_estimation_items est_itms on est_itms.est_item_id=d.esti_item_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = d.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN metal mt on mt.id_metal=c.id_metal
            LEFT JOIN branch br on br.id_branch=b.id_branch
            LEFT JOIN ret_design_master as des ON des.design_no = d.design_id
            LEFT JOIN ret_purity as pur ON pur.id_purity = est_itms.purity
            LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id
            LEFT JOIN ret_taxgroupmaster as txgrp ON txgrp.tgrp_id = mt.tgrp_id
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            
            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id,pro.cat_id,c.id_metal,
            date(b.bill_date) as bill_date
            FROM ret_billing_item_stones st
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=st.bill_det_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = dt.product_id
            LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE b.bill_status=1 AND uom.uom_short_code='CT'
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['id_metal']!='' && $post['id_metal'] !='0' ? " and c.id_metal = ".$post['id_metal']."" :'' )."
            ".($post['id_category']!='' && $post['id_category'] !='0' ? "and c.id_ret_category = ".$post['id_category']."" : "")."
            group by date(b.bill_date),c.id_ret_category)  as stn ON date(stn.bill_date) = date(b.bill_date) and stn.cat_id=pro.cat_id
            
            WHERE  b.bill_id is not null and b.bill_status=1 
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['id_metal']!='' && $post['id_metal'] !='0' ? " and cat.id_metal = ".$post['id_metal']."" :'' )."
            ".($post['id_category']!='' && $post['id_category'] !='0' ? "and cat.id_ret_category = ".$post['id_category']."" : "")."
            and  d.bill_det_id !=''
            group by date(b.bill_date),cat.id_ret_category");
            //print_r($this->db->last_query());exit;
            $item_details=$items_query->result_array();
            foreach($item_details as $r)
            {
                //$payment_details = $this->getPaymentDetails($r['bill_date'],$post['id_branch']);
                $return_data['sales_details'][$r['bill_date']]['sales'][] = $r;
            }
            $payment = $this->db->query("SELECT b.bill_id,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
            ifnull(csh.amount,0) as cash,ifnull(rtgs.amount,0) as rtgs,ifnull(imps.amount,0) as imps,
            ifnull(upi.amount,0) as upi,ifnull(neft.amount,0) as neft,ifnull(chq.amount,0) as chq,
            ifnull(card.amount,0) as card,ifnull(old_met.amount,0) as old_met_amount,ifnull(ret.amount,0) as return_amount,
            ifnull(chit.amount,0) as chit_utilize,IFNULL((ord_adj.received_amount+ord_adj.weight_amt),0)  as adv_adj_amt
            FROM ret_billing b
            LEFT JOIN (SELECT IFNULL(sum(old.rate),0) as amount,b.bill_id,
                date(b.bill_date) as bill_date
                FROM ret_bill_old_metal_sale_details old
                LEFT JOIN ret_billing b on b.bill_id = old.bill_id
                WHERE b.bill_status = 1 
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')." 
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(b.bill_date)) as old_met on date(old_met.bill_date) = date(b.bill_date)
            LEFT JOIN (SELECT SUM(bill_items.item_cost) as amount,bill.bill_id,date(bill.bill_date) as bill_date
                FROM ret_billing bill
                LEFT JOIN ret_bill_return_details d on d.bill_id=bill.bill_id
                LEFT JOIN ret_bill_details as bill_items ON bill_items.bill_det_id = d.ret_bill_det_id
                WHERE bill.bill_status = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and bill.id_branch=".$post['id_branch']."" :'')." 
                ".($post['dt_range'] != '' ? 'and date(bill.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(bill.bill_date)) as ret ON date(ret.bill_date)=date(b.bill_date)
            LEFT JOIN(SELECT chit.bill_id,SUM(utilized_amt) as amount,date(b.bill_date) as bill_date
                FROM ret_billing_chit_utilization chit
                LEFT JOIN ret_billing b on b.bill_id=chit.bill_id
                where b.bill_status = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')." 
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(b.bill_date)) as chit ON date(chit.bill_date)=date(b.bill_date)
            LEFT JOIN(SELECT sum(a.received_amount) as received_amount,sum(a.received_weight*a.rate_per_gram) as weight_amt,b.bill_id,
                date(b.bill_date) as bill_date
                FROM ret_billing b
                LEFT JOIN ret_billing_advance a ON a.adjusted_bill_id=b.bill_id
                WHERE a.is_adavnce_adjusted=1 and b.bill_status = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')." 
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(b.bill_date)) as ord_adj on date(ord_adj.bill_date)=date(b.bill_date)
            
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date,b.bill_id
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_id is not null and b.bill_status=1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11) and bp.type = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')." 
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
                and bp.payment_mode = 'Cash'
            group by date(b.bill_date)) as csh on date(csh.bill_date) = date(b.bill_date)
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_id is not null and b.bill_status=1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11) and bp.type = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'NB' and bp.NB_type = 1
            group by date(b.bill_date)) as rtgs on date(rtgs.bill_date) = date(b.bill_date)
        
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_id is not null and b.bill_status=1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11) and bp.type = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'NB' and bp.NB_type = 2
            group by date(b.bill_date)) as imps on date(imps.bill_date) = date(b.bill_date)
        
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id 
                WHERE b.bill_id is not null and b.bill_status=1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11) and bp.type = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'NB' and bp.NB_type = 3
            group by date(b.bill_date)) as upi on date(upi.bill_date) = date(b.bill_date)
            
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_id is not null and b.bill_status=1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11) and bp.type = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'NB' and bp.NB_type = 4
            group by date(b.bill_date)) as neft on date(neft.bill_date) = date(b.bill_date)
        
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_id is not null and b.bill_status=1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11) and bp.type = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'CHQ' 
            group by date(b.bill_date)) as chq on date(chq.bill_date) = date(b.bill_date)
        
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_id is not null and b.bill_status=1 and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11) and bp.type = 1
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and (bp.payment_mode = 'CC' or bp.payment_mode = 'DC')
            group by date(b.bill_date)) as card on date(card.bill_date) = date(b.bill_date)
                
            WHERE  b.bill_id is not null and b.bill_status=1  and (b.bill_type <=3 OR bill_type = 9 OR bill_type = 11)
            and b.id_branch = ".$post['id_branch']."
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(b.bill_date)");
            //print_r($this->db->last_query());exit;
            $payment_details = $payment->result_array();
            foreach($payment_details as $r)
            {
                $return_data['sales_details'][$r['bill_date']]['payment'][] = $r;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==2) // Purchase Query
        {
            $old_metal_query = $this->db->query("SELECT br.name as branch ,IFNULL(old_type.metal_type,'') as category,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
            IFNULL(sum(s.piece),0) as pcs,IFNULL(sum(s.gross_wt),0) as gross_wt,IFNULL(sum(s.dust_wt),0) as dust_wt,
            IFNULL(sum(s.stone_wt),0) as stone_wt,IFNULL(sum(s.net_wt),0) as net_wt,IFNULL(stn.dia_wt,0) as dia_wt,
            IFNULL(sum(s.rate),0) as amount
                                    
            FROM ret_bill_old_metal_sale_details s
            LEFT JOIN ret_billing b on b.bill_id=s.bill_id
            LEFT JOIN metal m on m.id_metal=s.metal_type
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            LEFT JOIN ret_estimation_old_metal_sale_details as old_est on old_est.old_metal_sale_id=s.esti_old_metal_sale_id
            LEFT JOIN ret_old_metal_type as old_type on old_type.id_metal_type=old_est.id_old_metal_type
            LEFT JOIN ret_old_metal_category old_cat on old_cat.id_old_metal_cat = old_est.id_old_metal_category
            LEFT JOIN employee emp on emp.id_employee = b.created_by
            LEFT JOIN branch br on br.id_branch = b.id_branch
            LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id
            LEFT JOIN address a on a.id_customer=cus.id_customer
            LEFT JOIN state ste on ste.id_state=a.id_state
            
            
            LEFT JOIN (SELECT IFNULL(st.wt,0) as dia_wt,st.est_old_metal_sale_id,est_old.id_old_metal_type,s.old_metal_sale_id,old_cat.id_old_metal_cat,date(b.bill_date) as bill_date,old_type.id_metal_type
            FROM ret_esti_old_metal_stone_details st 
            LEFT JOIN ret_estimation_old_metal_sale_details est_old on est_old.old_metal_sale_id = st.est_old_metal_sale_id
            LEFT JOIN ret_bill_old_metal_sale_details s on s.esti_old_metal_sale_id = est_old.old_metal_sale_id
            LEFT JOIN ret_old_metal_type as old_type on old_type.id_metal_type=est_old.id_old_metal_type
            LEFT JOIN ret_old_metal_category old_cat on old_cat.id_old_metal_cat = est_old.id_old_metal_category
            LEFT JOIN ret_billing b on b.bill_id = s.bill_id
            LEFT JOIN ret_stone stnd ON stnd.stone_id = st.stone_id
            LEFT JOIN ret_stone_type t ON t.id_stone_type = stnd.stone_type
            WHERE stnd.stone_type = 1 and b.bill_id is not null and b.bill_status=1 
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['id_metal']!='' && $post['id_metal'] !='0' ? " and old_type.id_metal = ".$post['id_metal']."" :'' )."
            ".($post['id_old_metal_type']!='' && $post['id_old_metal_type'] !='0' ? " and old_type.id_metal_type = ".$post['id_old_metal_type']."" :'' )."
            GROUP by  date(b.bill_date),old_type.id_metal_type) as stn ON stn.id_metal_type = old_type.id_metal_type and stn.bill_date=date(b.bill_date)
            
            where b.bill_id is not null and b.bill_status=1 
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['id_metal']!='' && $post['id_metal'] !='0' ? " and old_type.id_metal = ".$post['id_metal']."" :'' )."
            ".($post['id_old_metal_type']!='' && $post['id_old_metal_type'] !='0' ? " and old_type.id_metal_type = ".$post['id_old_metal_type']."" :'' )."
            GROUP by  date(b.bill_date),old_type.id_metal_type");
            //print_r($this->db->last_query());exit;
            $old_items = $old_metal_query->result_array();
            foreach($old_items as $old)
            {
                $return_data['purchase_details'][$old['bill_date']][] = $old; 
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==3) //  Sales Return Query
        {
            $sale_ret = $this->db->query("SELECT br.name as branch,cat.id_ret_category,cat.name as category_name,IFNULL(sum(d.piece),0) as piece,IFNULL(sum(d.gross_wt),0) as gross_wt,IFNULL(SUM(d.less_wt),0) as less_wt,IFNULL(sum(d.net_wt),0) as net_wt,IFNULL(stn.stn_wt,0) as dia_wt,IFNULL(sum(d.total_cgst),0) AS total_cgst, IFNULL(sum(d.total_sgst),0) AS total_sgst, IFNULL(sum(d.total_igst),0) AS total_igst, IFNULL(sum(d.item_total_tax),0) AS item_total_tax, round(IFNULL(sum(d.item_cost),0)-IFNULL(sum(d.item_total_tax),0),2) AS taxable_amount,sum(d.item_cost) as total_cost,date_format(b.bill_date,'%d-%m-%Y') as bill_date
    		
            
            FROM ret_billing b
            LEFT JOIN ret_bill_return_details r ON r.bill_id=b.bill_id
            LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id
            LEFT JOIN ret_product_master p ON p.pro_id=d.product_id
            LEFT JOIN ret_category cat on cat.id_ret_category=p.cat_id
            LEFT JOIN metal mt on mt.id_metal=cat.id_metal
            LEFT JOIN ret_branch_floor_counter f on f.counter_id=b.counter_id
            LEFT JOIN branch br on br.id_branch = b.id_branch
            
            LEFT join(SELECT IFNULL(SUM(st.wt),0) as stn_wt,dt.product_id,pro.cat_id,c.id_metal,date(b.bill_date) as bill_date
            FROM ret_bill_return_details r
            LEFT JOIN ret_bill_details dt ON dt.bill_det_id=r.ret_bill_det_id
            LEFT JOIN ret_billing_item_stones st ON st.bill_det_id = dt.bill_det_id
            LEFT JOIN ret_product_master as pro ON pro.pro_id = dt.product_id
			LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
            LEFT JOIN ret_billing b ON b.bill_id=dt.bill_id
            LEFT JOIN ret_stone s ON s.stone_id=st.stone_id
            LEFT JOIN ret_uom uom ON uom.uom_id=s.uom_id
            WHERE b.bill_status=1 AND s.stone_type = 1
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['id_metal']!='' && $post['id_metal'] !='0' ? " and c.id_metal = ".$post['id_metal']."" :'' )."
            ".($post['id_category']!='' && $post['id_category'] !='0' ? "and c.id_ret_category = ".$post['id_category']."" : "")."
            group by date(b.bill_date),c.id_ret_category)  as stn ON stn.cat_id=p.cat_id and stn.bill_date=date(b.bill_date)
            
            WHERE d.bill_det_id IS NOT null and b.bill_status=1
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['id_metal']!='' && $post['id_metal'] !='0' ? " and cat.id_metal = ".$post['id_metal']."" :'' )."
            ".($post['id_category']!='' && $post['id_category'] !='0' ? "and cat.id_ret_category = ".$post['id_category']."" : "")."
            group by date(b.bill_date),cat.id_ret_category");
            //print_r($this->db->last_query());exit;
            $sales_ret_items = $sale_ret->result_array();
            foreach($sales_ret_items as $ret)
            {
                $return_data['return_details'][$ret['bill_date']][] = $ret; 
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==4) // Order Advance Query
        {
            $order_adv = $this->db->query("SELECT b.bill_id,b.order_adv_ref_no as bill_no,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
            sum(adv.advance_amount) as amount_received,IFNULL(old_met.amount,0) as old_metal_amount,
            IFNULL(csh.amount,0) as cash,IFNULL(rtgs.amount,0) as rtgs,IFNULL(imps.amount,0) as imps,
            IFNULL(upi.amount,0) as upi,IFNULL(neft.amount,0) as neft,IFNULL(chq.amount,0) as chq,IFNULL(card.amount,0) as card
            
            FROM ret_billing b 
            LEFT JOIN ret_billing_advance adv on adv.bill_id = b.bill_id
            LEFT JOIN ret_billing_payment bp on bp.bill_id = b.bill_id
            
            LEFT JOIN (SELECT IFNULL(sum(old_bill.rate),0) as amount,b.bill_id,
                date(b.bill_date) as bill_date 
                FROM ret_bill_old_metal_sale_details old_bill
                LEFT JOIN ret_billing b on b.bill_id = old_bill.bill_id
                WHERE b.bill_status = 1 and b.bill_type = 5
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GRoup by date(b.bill_date)) as old_met on date(old_met.bill_date) = date(b.bill_date)
                      
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1 and b.bill_type=5
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'Cash'
            group by date(b.bill_date)) as csh on date(csh.bill_date) = date(b.bill_date)
                                
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1  and b.bill_type=5
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'NB' and bp.NB_type = 1
            group by date(b.bill_date)) as rtgs on date(rtgs.bill_date) = date(b.bill_date)
            
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1  and b.bill_type=5
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'NB' and bp.NB_type = 2
            group by date(b.bill_date)) as imps on date(imps.bill_date) = date(b.bill_date)
            
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1  and b.bill_type=5
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'NB' and bp.NB_type = 3
            group by date(b.bill_date)) as upi on date(upi.bill_date) = date(b.bill_date)
            
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1  and b.bill_type=5
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'NB' and bp.NB_type = 4
            group by date(b.bill_date)) as neft on date(neft.bill_date) = date(b.bill_date)
            
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1  and b.bill_type=5
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and bp.payment_mode = 'CHQ' 
            group by date(b.bill_date)) as chq on date(chq.bill_date) = date(b.bill_date)
            
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,
                date(b.bill_date) as bill_date
                FROM ret_billing_payment bp 
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1  and b.bill_type=5
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')." 
                and (bp.payment_mode = 'CC' or bp.payment_mode = 'DC')
            group by date(b.bill_date)) as card on date(card.bill_date) = date(b.bill_date)
            where b.bill_type = 5 and b.bill_status = 1 
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(b.bill_date)
            ORDER BY date(b.bill_date) ASC");
            //print_r($this->db->last_query());exit;
            $order_adv_details=$order_adv->result_array();
            foreach($order_adv_details as $r)
            {
                $return_data['order_advance_details'][$r['bill_date']][] = $r;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==5) // GENERAL ADVANCE QUERY
        {
            $gen_adv = $this->db->query("SELECT ir.id_issue_receipt,date_format(ir.bill_date,'%d-%m-%Y') as bill_date,
            IFNULL(SUM(ir.amount),0) as amount_received,IFNULL(csh.amount,0) as cash,IFNULL(rtgs.amount,0) as rtgs,
            IFNULL(imps.amount,0) as imps,IFNULL(upi.amount,0) as upi,IFNULL(neft.amount,0) as neft,
            IFNULL(chq.amount,0) as chq,IFNULL(card.amount,0) as card
            
            FROM ret_issue_receipt ir
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 2 and ir.receipt_type=2 and ir.bill_status = 1 and rp.payment_mode = 'Cash'
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as csh on date(csh.bill_date) = date(ir.bill_date)
                     
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 2 and ir.receipt_type=2 and ir.bill_status = 1 
                and rp.payment_mode = 'NB' and rp.NB_type = 1          
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as rtgs on date(rtgs.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 2 and ir.receipt_type=2 and ir.bill_status = 1 
                and rp.payment_mode = 'NB' and rp.NB_type = 2          
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as imps on date(imps.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 2 and ir.receipt_type=2 and ir.bill_status = 1 
                and rp.payment_mode = 'NB' and rp.NB_type = 3          
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as upi on date(upi.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 2 and ir.receipt_type=2 and ir.bill_status = 1 
                and rp.payment_mode = 'NB' and rp.NB_type = 4          
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as neft on date(neft.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 2 and ir.receipt_type=2 and ir.bill_status = 1 
                and rp.payment_mode = 'CHQ'           
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as chq on date(chq.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 2 and ir.receipt_type=2 and ir.bill_status = 1 
                and (rp.payment_mode = 'CC' or rp.payment_mode = 'DC')           
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as card on date(card.bill_date) = date(ir.bill_date)
            
            WHERE ir.type = 2 and ir.receipt_type=2 and ir.bill_status = 1
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
            ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)
            ORDER BY date(ir.bill_date) ASC");
            $general_adv_details = $gen_adv->result_array();
            foreach($general_adv_details as $r)
            {
                $return_data['gen_advance_details'][$r['bill_date']][] = $r;
            }
        }
        if($post['bill_type']==0 || $post['bill_type']==7) // PAYMENT ISSUE QUERY
        {
            $payment1 = $this->db->query("SELECT ir.id_issue_receipt as bill_id,date_format(ir.bill_date,'%d-%m-%Y') as bill_date,
            IFNULL(SUM(ir.amount),0) as amount_received,IFNULL(csh.amount,0) as cash,IFNULL(rtgs.amount,0) as rtgs,
            IFNULL(imps.amount,0) as imps,IFNULL(upi.amount,0) as upi,IFNULL(neft.amount,0) as neft,
            IFNULL(chq.amount,0) as chq,IFNULL(card.amount,0) as card
            
            FROM ret_issue_receipt ir
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 1 and ir.bill_status = 1 and rp.payment_mode = 'Cash'
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as csh on date(csh.bill_date) = date(ir.bill_date)
                     
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 1 and ir.bill_status = 1 
                and rp.payment_mode = 'NB' and rp.NB_type = 1          
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as rtgs on date(rtgs.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 1 and ir.bill_status = 1 
                and rp.payment_mode = 'NB' and rp.NB_type = 2          
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as imps on date(imps.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 1 and ir.bill_status = 1 
                and rp.payment_mode = 'NB' and rp.NB_type = 3          
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as upi on date(upi.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 1 and ir.bill_status = 1 
                and rp.payment_mode = 'NB' and rp.NB_type = 4          
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as neft on date(neft.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 1 and ir.bill_status = 1 
                and rp.payment_mode = 'CHQ'           
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as chq on date(chq.bill_date) = date(ir.bill_date)
            
            LEFT JOIN(SELECT ifnull(sum(rp.payment_amount),0) as amount,
                date(ir.bill_date) as bill_date
                FROM ret_issue_rcpt_payment rp
                LEFT JOIN ret_issue_receipt ir on ir.id_issue_receipt = rp.id_issue_rcpt
                WHERE ir.type = 1 and ir.bill_status = 1 
                and (rp.payment_mode = 'CC' or rp.payment_mode = 'DC')           
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)) as card on date(card.bill_date) = date(ir.bill_date)
            
            WHERE ir.type = 1 and ir.bill_status = 1
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and ir.id_branch=".$post['id_branch']."" :'')."
            ".($post['dt_range'] != '' ? 'and date(ir.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(ir.bill_date)");
            //print_r($this->db->last_query());exit;
            $result1 = $payment1->result_array();
            $payment2 = $this->db->query("SELECT b.bill_id,date_format(b.bill_date,'%d-%m-%Y') as bill_date,
            (IFNULL(ABS(csh.amount),0) + IFNULL(ABS(chq.amount),0)) as amount_received,
            IFNULL(ABS(csh.amount),0) as cash,'0' as rtgs,
            '0' as imps,'0' as upi,'0' as neft,
            IFNULL(ABS(chq.amount),0) as chq,'0' as card
            
            FROM ret_billing b
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,date(b.bill_date) as bill_date
                FROM ret_billing_payment bp
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1 and bp.type = 2
                and bp.payment_mode = 'Cash'
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(b.bill_date)) as csh on date(csh.bill_date) = date(b.bill_date)
            LEFT JOIN (SELECT IFNULL(sum(bp.payment_amount),0) as amount,date(b.bill_date) as bill_date
                FROM ret_billing_payment bp
                LEFT JOIN ret_billing b on b.bill_id = bp.bill_id
                WHERE b.bill_status = 1 and bp.type = 2
                and bp.payment_mode = 'CHQ'
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(b.bill_date)) as chq on date(chq.bill_date) = date(b.bill_date)
            where b.bill_status = 1 
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and b.id_branch=".$post['id_branch']."" :'')."
            ".($post['dt_range'] != '' ? 'and date(b.bill_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            group by date(b.bill_date)");
            $result2 = $payment2->result_array();
            
            $payment_iss_details = array_merge($result1,$result2);
            foreach($payment_iss_details as $r)
            {
                $return_data['payment_issue_details'][$r['bill_date']][] = $r;
            }
        } 
        if($post['bill_type']==0 || $post['bill_type']==6)  // PURCHASE PLAN QUERY
        {
            $purchase_plan = $this->db->query("SELECT date_format(pay.payment_date,'%d-%m-%Y') as pay_date,SUM(pay.payment_amount) as payment,IFNULL(csh.amount,0) as cash,IFNULL(chq.amount,0) as chq,IFNULL(card.amount,0) as card,
            IFNULL(rtgs.amount,0) as rtgs,IFNULL(imps.amount,0) as imps,(IFNULL(upi.amount,0)+IFNULL(gpay.amount,0)) as upi,
            IFNULL(neft.amount,0) as neft,IFNULL(mobpay.amount,0) as online_pay
            
            FROM payment_mode_details pay
            LEFT JOIN payment p on p.id_payment = pay.id_payment
            LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
            LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
            
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and pd.payment_mode = 'CSH' and p.added_by != 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as csh on date(csh.payment_date) = date(pay.payment_date)
            
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and pd.payment_mode = 'CHQ' and p.added_by != 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as chq on date(chq.payment_date) = date(pay.payment_date)
            
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and (pd.payment_mode = 'CC' or pd.payment_mode = 'DC') and p.added_by != 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as card on date(card.payment_date) = date(pay.payment_date)
            
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and (pd.payment_mode = 'NB' and pd.NB_type = 1) and p.added_by != 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as rtgs on date(rtgs.payment_date) = date(pay.payment_date)
            
            
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and (pd.payment_mode = 'NB' and pd.NB_type = 2) and p.added_by != 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as imps on date(imps.payment_date) = date(pay.payment_date)
            
            
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and (pd.payment_mode = 'NB' and pd.NB_type = 3) and p.added_by != 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as upi on date(upi.payment_date) = date(pay.payment_date)
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and (pd.payment_mode = 'NB' and pd.NB_type = 4) and p.added_by != 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as neft on date(neft.payment_date) = date(pay.payment_date)
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and pd.payment_mode = 'GPAY' and p.added_by != 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as gpay on date(gpay.payment_date) = date(pay.payment_date)
            
            LEFT JOIN(SELECT sum(pd.payment_amount) as amount,date(pd.payment_date) as payment_date
                FROM payment_mode_details pd
                LEFT JOIN payment p on p.id_payment = pd.id_payment
                LEFT JOIN scheme_account sa ON (sa.id_scheme_account = p.id_scheme_account)
                LEFT JOIN scheme s ON (s.id_scheme = sa.id_scheme)
                WHERE pd.payment_status = 1 and p.payment_status = 1 and s.active = 1 
                and p.added_by = 2
                ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
                ".($post['dt_range'] != '' ? 'and date(pd.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pd.payment_date)) as mobpay on date(mobpay.payment_date) = date(pay.payment_date)
            
            WHERE pay.payment_status = 1 and p.payment_status = 1 and s.active = 1 
            ".($post['id_branch']!='' && $post['id_branch']>0 ? " and p.id_branch=".$post['id_branch']."" :'')."
            ".($post['dt_range'] != '' ? 'and date(pay.payment_date) BETWEEN "'.$FromDt.'" AND "'.$ToDt.'"' : '')."
            GROUP BY date(pay.payment_date)
            ORDER BY date(pay.payment_date) ASC");
            $purchase_plan_det = $purchase_plan->result_array();
            foreach($purchase_plan_det as $r)
            {
                $return_data['purchase_plan_details'][$r['pay_date']][] = $r;
            }
        }
        return $return_data;
    }
    function get_repair_order_details($data)
    {
        if($data['cus_order_type']==2){
            $sql2 = $this->db->query("SELECT det.id_orderdetails,kar.firstname as karigar,kar_iss.met_issue_ref_id as ref_no,DATE_FORMAT(kar_iss.met_issue_date,'%d-%m-%Y') as issue_date,p.product_name,des.design_name,sub.sub_design_name,(kar_det.issue_metal_wt) as issue_wt,(IFNULL(received.weight,0)) as recived_wt,
            IF(cus.work_at=1,'INHOUSE',IF(cus.work_at=2,'OUTSOURCE','')) as work_at,cus.order_no,kar_iss.met_issue_id,p.pro_id,des.design_no,sub.id_sub_design,emp.firstname as employee_name,br.name as branch_name,IFNULL(DATE_FORMAT(received.receipt_date,'%d-%m-%Y'),'') as receipt_date,IFNULL(received.employee_name,'') as receipt_by
            FROM ret_karigar_metal_issue_details kar_det
            LEFT JOIN ret_karigar_metal_issue kar_iss ON kar_iss.met_issue_id =kar_det.issue_met_parent_id
            LEFT JOIN ret_karigar kar ON kar.id_karigar = kar_iss.met_issue_karid
            LEFT JOIN customerorder po ON po.id_customerorder = kar_iss.id_order
            LEFT JOIN customerorder cus ON cus.id_customerorder = po.cus_ord_ref
            LEFT JOIN customerorderdetails det ON  det.id_customerorder = cus.id_customerorder and det.tag_id = kar_det.tag_id
            LEFT JOIN ret_product_master p ON p.pro_id= kar_det.issu_met_pro_id
            LEFT JOIN ret_design_master as des ON des.design_no = kar_det.issu_met_id_design
            LEFT JOIN ret_sub_design_master sub ON sub.id_sub_design= kar_det.issu_met_id_sub_design
            LEFT JOIN employee emp on emp.id_employee = cus.order_taken_by
            LEFT JOIN branch br on br.id_branch = cus.order_from
            LEFT JOIN (SELECT rep_det.issue_met_id,issue.met_issue_karid,issue.met_issue_id,rep.id_issue_receipt,rep.id_metal_issue,rep_det.product_id,
                        rep_det.design_id,rep_det.sub_design_id,SUM(rep_det.weight)  as weight,rep.receipt_date as receipt_date,emp.firstname as employee_name 
                        FROM  ret_metai_issue_receipt rep
                        LEFT JOIN ret_metai_issue_receipt_details rep_det ON rep_det.id_issue_receipt = rep.id_issue_receipt
                        LEFT JOIN ret_karigar_metal_issue issue ON issue.met_issue_id = rep.id_metal_issue
                        LEFT JOIN employee emp on emp.id_employee = rep.created_by
                        GROUP BY rep_det.issue_met_id) as received ON  received.issue_met_id = kar_det.issue_met_id 
            where po.order_type = 1  and po.order_for = 3 and kar_iss.bill_status =1
            ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(kar_iss.met_issue_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
            ".($data['id_karigar']!='' && $data['id_karigar']>0 ? " and kar.id_karigar=".$data['id_karigar']."" :'')."
            ".($data['order_type']!=''    && $data['order_type']>0 ? " and cus.work_at=".$data['order_type']."" :'')."
            ".($data['id_branch']!=''    && $data['id_branch']>0 ? " and cus.order_from=".$data['id_branch']."" :'')."
            ".($data['id_employee']!=''    && $data['id_employee']>0 ? " and cus.order_taken_by=".$data['id_employee']."" :'')."
            GROUP BY  ".($data['report_type'] == 1 ? " kar_iss.met_issue_id" :'kar.id_karigar')."
            ORDER BY kar_iss.met_issue_date DESC");
            $data =  $sql2->result_array();
            foreach($data as $key => &$value){
            $value['order_details'] = $this->getRepairOrderDet($value['id_orderdetails'],$value['pro_id'],$value['design_no'],$value['id_sub_design']);
            }
            return  $data;
        }else{
            $sql1 = $this->db->query("SELECT DATE_FORMAT(cus.order_date,'%d-%m-%Y') as issue_date,cus.order_no as ref_no,b.name as branch,IF(cus.work_at=1,'INHOUSE',IF(cus.work_at=2,'OUTSOURCE','')) as work_at,
            kar.firstname as karigar,DATE_FORMAT(cus.order_date,'%d-%m-%Y') as order_date,emp.firstname as employee_name, b.name as branch_name,
            SUM(ord_det.weight) as issue_wt,IF(cus.work_at=2,SUM( ord_det.weight + IFNULL(tag.gross_wt,0)),SUM( ord_det.completed_weight) ) as recived_wt,p.product_name,IFNULL(des.design_name,'') as design_name,IFNULL(sub_des.sub_design_name,0) as sub_design_name
            FROM customerorder cus
            LEFT JOIN customerorderdetails ord_det ON ord_det.id_customerorder = cus.id_customerorder
            LEFT JOIN ret_taging tag ON tag.id_orderdetails = ord_det.id_orderdetails
            LEFT JOIN ret_karigar kar ON kar.id_karigar = ord_det.id_karigar
            LEFT JOIN employee emp ON emp.id_employee = cus.order_taken_by
            LEFT JOIN branch b ON b.id_branch = cus.order_from
            LEFT JOIN ret_product_master p ON p.pro_id = ord_det.id_product
            LEFT JOIN ret_design_master des on des.design_no=ord_det.design_no
            LEFT JOIN ret_sub_design_master as sub_des ON sub_des.id_sub_design = ord_det.id_sub_design
            where cus.order_type = 3
            ".($data['from_date'] != '' && $data['to_date']!='' ? ' and date(cus.order_date) BETWEEN "'.date('Y-m-d',strtotime($data['from_date'])).'" AND "'.date('Y-m-d',strtotime($data['to_date'])).'"' : '')."
             ".($data['id_karigar']!='' && $data['id_karigar']>0 ? " and kar.id_karigar=".$data['id_karigar']."" :'')."
             ".($data['order_type']!=''    && $data['order_type']>0 ? " and cus.work_at=".$data['order_type']."" :'')."
             ".($data['id_branch']!=''    && $data['id_branch']>0 ? " and cus.order_from=".$data['id_branch']."" :'')."
             ".($data['id_employee']!=''    && $data['id_employee']>0 ? " and cus.order_taken_by=".$data['id_employee']."" :'')."
            GROUP BY ".($data['report_type'] == 1 ? " cus.id_customerorder,kar.id_karigar,ord_det.id_product,ord_det.design_no,ord_det.id_sub_design" :'kar.id_karigar')."
            ORDER BY cus.order_date DESC");
         // print_r($this->db->last_query());exit;
            return  $sql1->result_array();
        }
    }
    function calculate_inclusiveGST($item_cost,$tgrp_id)
{
    $totaltax = 0;
    $taxitems = $this->db->query("SELECT tgi_tgrpcode, tgrp_name, tgi_calculation, tgi_type, tax_percentage
                FROM ret_taxgroupitems as tx_grp_itm
                LEFT JOIN ret_taxgroupmaster as grp ON grp.tgrp_id = tx_grp_itm.tgi_tgrpcode
                LEFT JOIN ret_taxmaster as tx ON tx.tax_id = tx_grp_itm.tgi_taxcode");
    $taxdet = $taxitems->result_array();
    foreach($taxdet as $tax)
    {
        if($tax['tgi_tgrpcode']==$tgrp_id)
        {
            $amt_without_gst = (($item_cost)*100)/(100+($tax['tax_percentage']));
            $totaltax += ($item_cost)	- ($amt_without_gst);
        }
    }
    return number_format($totaltax,2,'.','');
}
function calculate_ExclusiveGST($item_cost,$tgrp_id)
{
    $totaltax = 0;
    $taxitems = $this->db->query("SELECT tgi_tgrpcode, tgrp_name, tgi_calculation, tgi_type, tax_percentage
                FROM ret_taxgroupitems as tx_grp_itm
                LEFT JOIN ret_taxgroupmaster as grp ON grp.tgrp_id = tx_grp_itm.tgi_tgrpcode
                LEFT JOIN ret_taxmaster as tx ON tx.tax_id = tx_grp_itm.tgi_taxcode");
    $taxdet = $taxitems->result_array();
    foreach($taxdet as $tax)
    {
        if($tax['tgi_tgrpcode']==$tgrp_id)
        {
            $totaltax += $item_cost * ($tax['tax_percentage']/100);
        }
    }
    return number_format($totaltax,2,'.','');
}
function get_SectionTag_InwardOutward_Details($data,$type)
{
    $multiple_id_metal = implode(' , ', $data['id_metal']);
    if($multiple_id_metal != '')
    {
        $id_metal = $multiple_id_metal;
    }else{
        $id_metal = $data['id_metal'];
    }
    if($_POST['dt_range'] != '')
    {
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
    }
    $sql=$this->db->query("SELECT IFNULL(SUM(t.gross_wt),0) as gross_wt,IFNULL(SUM(t.net_wt),0) as net_wt,IFNULL(tagst.dia_wt,0) as diawt,pro.stone_type,IFNULL(t.uom_gross_wt,'') as uom
    FROM ret_branch_transfer brch
    LEFT JOIN ret_brch_transfer_tag_items btag on btag.transfer_id = brch.branch_transfer_id
    LEFT JOIN ret_taging t on t.tag_id = btag.tag_id
    LEFT JOIN(SELECT tag_id, sum(IFNULL(wt,0)) as dia_wt
            FROM `ret_taging_stone` as retst
            LEFT JOIN ret_uom as stuom ON stuom.uom_id = retst.uom_id
            LEFT JOIN ret_stone AS st ON st.stone_id = retst.stone_id
            WHERE st.stone_type = 1
            GROUP BY tag_id	) as tagst on tagst.tag_id = t.tag_id
    LEFT JOIN ret_product_master pro on pro.pro_id = t.product_id
    LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
    WHERE brch.transfer_item_type = 1 and brch.status != 3
    ".($type==1 ? "AND date(brch.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'" : "AND date(brch.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'")."
    ".($type==1 ? "and brch.transfer_to_branch = ".$data['id_branch']." and brch.is_other_issue = 0" : "and brch.transfer_from_branch = ".$data['id_branch']."" )."
    ".($id_metal!='' && $id_metal !='0' ? " and cat.id_metal in (".$id_metal.") " :'' )."
    GROUP BY t.tag_id");
    //print_r($this->db->last_query());exit;
    return $sql->result_array();
}
function get_SectionNonTag_InwardOutward_Details($data,$type)
{
    $multiple_id_metal = implode(' , ', $data['id_metal']);
    if($multiple_id_metal != '')
    {
        $id_metal = $multiple_id_metal;
    }else{
        $id_metal = $data['id_metal'];
    }
    if($_POST['dt_range'] != '')
    {
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
    }
    $sql=$this->db->query("SELECT IFNULL(SUM(btn.grs_wt),0) as grswt,IFNULL(SUM(btn.net_wt),0) as net_wt
    FROM ret_branch_transfer b
    LEFT JOIN ret_brch_transfer_non_tag_items btn on btn.transfer_id = b.branch_transfer_id
    LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = btn.id_nontag_item
    LEFT JOIN ret_product_master as pro ON pro.pro_id = nt.product
    LEFT JOIN ret_category c on c.id_ret_category = pro.cat_id
    WHERE b.transfer_item_type = 2 and btn.id_nontag_item is not null and b.status != 3
    ".($type==1 ? "AND date(b.dwnload_datetime) BETWEEN '$FromDt' AND '$ToDt'" : "AND date(b.approved_datetime) BETWEEN '$FromDt' AND '$ToDt'")."
    ".($type==1 ? "and b.transfer_to_branch=".$data['id_branch']." and b.is_other_issue = 0" : "and b.transfer_from_branch=".$data['id_branch']."")."
    ".($id_metal!='' && $id_metal!='0' ? "and c.id_metal in (".$id_metal.")" : '')."");
    //print_r($this->db->last_query());exit;
    return $sql->row_array();
}
function get_PurchaseReturnItems($data)
{
    $multiple_id_metal = implode(' , ', $data['id_metal']);
    if($multiple_id_metal != '')
    {
        $id_metal = $multiple_id_metal;
    }else{
        $id_metal = $data['id_metal'];
    }
    if($_POST['dt_range'] != '')
    {
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
    }
    $sql = $this->db->query("SELECT IFNULL(SUM(pri.pur_ret_gwt),0) as ret_gwt,IFNULL(SUM(pri.pur_ret_nwt),0) as ret_nwt,
    IFNULL(purret_dia.stn_wt,0) as ret_diawt,pro.stone_type
    FROM ret_purchase_return_items pri
    LEFT JOIN ret_purchase_return pr on pr.pur_return_id = pri.pur_ret_id
    LEFT JOIN (SELECT IFNULL(SUM(s.ret_stone_wt),0) as stn_wt,c.pur_ret_itm_id
              FROM ret_purchase_return_stone_items s
              LEFT JOIN ret_stone as stn ON stn.stone_id = s.ret_stone_id
              LEFT JOIN ret_purchase_return_items as c ON c.pur_ret_itm_id= s.pur_ret_return_id
    WHERE stn.stone_type = 1
    GROUP BY c.pur_ret_itm_id) as purret_dia on purret_dia.pur_ret_itm_id = pri.pur_ret_itm_id
    LEFT JOIN ret_product_master pro on pro.pro_id = pri.id_product
    LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
    WHERE pr.bill_status = 1 and date(pr.bill_date) BETWEEN '$FromDt' AND '$ToDt'
    ".($id_metal!='' && $id_metal!='0' ? "and cat.id_metal in (".$id_metal.")" : '')."
    GROUP BY pri.pur_ret_itm_id");
    return $sql->result_array();
}
function get_MetalIssueItems($data)
{
    $multiple_id_metal = implode(' , ', $data['id_metal']);
    if($multiple_id_metal != '')
    {
        $id_metal = $multiple_id_metal;
    }else{
        $id_metal = $data['id_metal'];
    }
    if($_POST['dt_range'] != '')
    {
        $dateRange = explode('-',$_POST['dt_range']);
        $from = str_replace('/','-',$dateRange[0]);
        $to = str_replace('/','-',$dateRange[1]);
        $d1 = date_create($from);
        $d2 = date_create($to);
        $FromDt = date_format($d1,"Y-m-d");
        $ToDt = date_format($d2,"Y-m-d");
    }
    $sql = $this->db->query("SELECT IFNULL(SUM(kmd.issue_metal_wt),0) as issue_wt,pro.stone_type,IFNULL(kmd.issue_uom_id,1) as issue_uom
    FROM ret_karigar_metal_issue_details kmd
    LEFT JOIN ret_karigar_metal_issue km on km.met_issue_id = kmd.issue_met_parent_id
    LEFT JOIN ret_product_master pro on pro.pro_id = kmd.issu_met_pro_id
    LEFT JOIN ret_category cat on cat.id_ret_category = pro.cat_id
    WHERE km.bill_status = 1 and date(km.met_issue_date) BETWEEN '$FromDt' AND '$ToDt'
    and (kmd.tag_id is not null or km.nontag_issue_from = 1)
    ".($id_metal!='' && $id_metal!='0' ? "and cat.id_metal in (".$id_metal.")" : '')."
    GROUP BY kmd.issue_met_id");
    return $sql->result_array();
}
function getRepairOrderDet($id_orderdetails,$id_product,$id_design,$id_sub_design)
{
    $returnData = array();
    $sql_1 = $this->db->query("SELECT
                od.id_orderdetails,
                od.orderno,
                od.ortertype,
                od.id_product,
                od.design_no,
                od.id_sub_design,
                p.cat_id AS id_ret_category,
                IFNULL(p.product_name,'') AS product_name,
                IFNULL(de.design_name,'') AS design_name,
                IFNULL(sub.sub_design_name,'') AS sub_design_name,
                od.size,
                od.totalitems,
                od.mc,
                od.id_purity,
                od.wast_percent,
                IF(od.id_mc_type=1,'Per Gram','Piece') AS mc_type,
                od.weight,
                od.totalitems,
                cat.name AS category,
                DATE_FORMAT(od.cus_due_date,'%d-%m-%Y') AS cus_due_date_date,
                DATE_FORMAT(od.smith_remainder_date,'%d-%m-%Y') AS smith_remainder_date,
                DATE_FORMAT(od.smith_due_date,'%d-%m-%Y') AS smith_due_date,
                od.id_purity,
                od.itemname,
                od.rate,
                od.image,
                od.orderstatus,
                DATEDIFF(od.cus_due_date, o.order_date) AS cus_due_date,
                IFNULL(r.name,'') AS repair_type,
                IFNULL(od.description,'') AS description,
                od.less_wt,
                od.net_wt,
                od.reject_reason,
                IFNULL(t.tag_code,'') AS tag_code,m.order_status as status,
                t.tag_code,
                t.tag_mc_value as mc,
                t.retail_max_wastage_percent as va
            FROM
                customerorderdetails od 
            LEFT JOIN
                customerorder o ON o.id_customerorder = od.id_customerorder
            LEFT JOIN
                ret_product_master p ON p.pro_id = od.id_product
            LEFT JOIN
                ret_design_master de ON de.design_no = od.design_no
            LEFT JOIN
                ret_sub_design_master sub ON sub.id_sub_design = od.id_sub_design
            LEFT JOIN
                ret_taging t ON t.tag_id = od.tag_id
            LEFT JOIN
                ret_category cat ON cat.id_ret_category = p.cat_id
            LEFT JOIN
                ret_repair_master r ON r.id_repair_master = od.id_repair_master
            LEFT JOIN
                order_status_message m on m.id_order_msg=od.orderstatus
            WHERE 1
            ".($id_orderdetails!='' && $id_orderdetails!='0' ? "and od.id_orderdetails in (".$id_orderdetails.")" : '')."
            GROUP BY od.id_orderdetails
    ");
    // print_r($this->db->last_query());exit;
    $result =  $sql_1->result_array();
    foreach($result as $items)
    {
       // $items['image_details']=$this->get_order_images($items['id_orderdetails']);
        $returnData[]=$items;
    }
    return $returnData;
}
}
?>