<?php



if( ! defined('BASEPATH')) exit('No direct script access allowed');



class ret_tally_api_model extends CI_Model



{ 



    const EMP_IMG_PATH = 'assets/img/employee';



    const CUS_IMG_PATH = 'assets/img/customer';



    const RETCAT_IMG_PATH = 'assets/img/ret_category';



    const RETPRO_IMG_PATH = 'assets/img/ret_product';



    const RETDES_IMG_PATH = 'assets/img/designs';



	function __construct()



    {      

        parent::__construct(); 

	} 

	

	function getbranchtransferInitiatedList(){

		$return_data = array();

		$trans_query = $this->db->query("SELECT date(created_time) as VoucherDate, branch_trans_code as VoucherNumber, 

										fbr.name as FromBranchName, tbr.name as ToBranchName, branch_transfer_id 

										FROM `ret_branch_transfer` as bt 

										LEFT JOIN branch as fbr ON fbr.id_branch = bt.transfer_from_branch 

										LEFT JOIN branch as tbr ON tbr.id_branch = bt.transfer_to_branch 

										WHERE transfer_item_type = 1 AND transfer_from_branch = 1 AND status = 1");

		$return_data = $trans_query->result_array();

		foreach($return_data as $rkey => $rval){

			$return_data[$rkey]['TransferDetails'] = $this->getbranchtrasferDetails($rval['branch_transfer_id']);

		}

		return $return_data;

	}

	

	function getbranchtrasferDetails($tranid){

		$return_data = array();								

		$detail_query = $this->db->query("SELECT pr.product_name as ItemName, 

										sum(tag.gross_wt) as GrossWeight, cat.id_ret_category, 

										ifnull(sum(tag.net_wt),0) as NetWeight, ifnull(sum(tag.piece), 0) as Quantity, 

										ifnull(sum(tag.less_wt),0) as LesWeight, 

										ifnull(sum(sales_value),0) as total_salevalue, 

										cat.hsn_code as HSNCode, cat.name as CategoryName, pr.sales_mode, cat.tally_qty_type, 

										sum(ifnull((SELECT sum(pieces) as pieces  

                                                    FROM ret_taging_stone bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 

                                                    AND bs.tag_id = tag.tag_id HAVING pieces > 0), 0 )) as totaldiapcs,

                                        sum(ifnull((SELECT sum((bs.wt)) as totwt FROM ret_taging_stone bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 

                                                    AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )) as totaldiawt

										FROM `ret_brch_transfer_tag_items` trtag 

										LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id 

										LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id 

										LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id 

										LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id 

										WHERE transfer_id = '".$tranid."' 

										GROUP BY trtag.tag_id");

		$stock_detail = array();

		

		foreach($detail_query->result_array() as $rkey => $rval){

		    	$stock_detail[$rval['id_ret_category']][] = $rval; 

		}

		$response_data = array();

		foreach($stock_detail as $key => $val){

		    $GrossWeight    = 0;

		    $NetWeight      = 0;

		    $Quantity       = 0;

		    $LesWeight      = 0;

		    $total_salevalue    = 0;

		    $totaldiapcs    = 0;

		    $totaldiawt     = 0;

		    $catName        = "";

		    $ItemName       = "";

		    $HSNCode        = "";

		    $tally_qty_type = 0;

		    

		    

		    $Quantity_pcs       = 0;

		    $total_salevalue_pcs= 0;

		    

		     foreach($val as $catdet){

		         if($catdet['GrossWeight'] == 0){

		             $Quantity_pcs += $catdet['Quantity'];

		             $total_salevalue_pcs += $catdet['total_salevalue'];

		         }else{

		             $GrossWeight += $catdet['GrossWeight'];

		             $NetWeight += (double)$catdet['NetWeight'];

		             $Quantity += (int)$catdet['Quantity'];

		             $LesWeight += $catdet['LesWeight'];

		             $total_salevalue += $catdet['total_salevalue'];

		             $totaldiapcs   += $catdet['totaldiapcs'];

		             $totaldiawt   += $catdet['totaldiawt'];

		         }

		         $catName = $catdet['CategoryName'];

		         $ItemName = $catdet['ItemName'];

		         $HSNCode = $catdet['HSNCode'];

		         $tally_qty_type = $catdet['tally_qty_type'];

		     }

		     if($Quantity_pcs > 0){

		        $response_data[] = array(

		                    "ItemName" => $ItemName, 

		                    "GrossWeight" => 0,

		                    "NetWeight" => 0,

		                    "Quantity"  => (int)$Quantity_pcs,

		                    "LesWeight" => 0,

		                    "total_salevalue"   => $total_salevalue_pcs, 

		                    "HSNCode"   => $HSNCode,

		                    "CategoryName"  => $catName,

		                    "tally_qty_type"    => $tally_qty_type,

		                    "totaldiapcs"   => 0,

		                    "totaldiawt"    => 0

		            );

		     }

		     if($GrossWeight > 0){

		         $response_data[] = array(

		                    "ItemName" => $ItemName, 

		                    "GrossWeight" => number_format($GrossWeight, 3,'.',''),

		                    "NetWeight" => number_format($NetWeight, 3,'.',''), 

		                    "Quantity"  => (int)$Quantity,

		                    "LesWeight" => number_format($LesWeight, 3,'.',''),

		                    "total_salevalue"   => $total_salevalue, 

		                    "HSNCode"   => $HSNCode,

		                    "CategoryName"  => $catName,

		                    "tally_qty_type"    => $tally_qty_type,

		                    "totaldiapcs"   => $totaldiapcs,

		                    "totaldiawt"    => number_format($totaldiawt, 3,'.','')

		            );

		     }

		    

		}

		return $response_data;

	}

	

	function getBTOldMetalDetails($tranid){

	    $return_data = array();

		$rt_query1 = $this->db->query("SELECT pr.product_name as ItemName, 

										sum(trtag.gross_wt) as GrossWeight, 

										ifnull(sum(trtag.net_wt),0) as NetWeight, ifnull(sum(tag.piece), 0) as Quantity, 

										sum(tag.less_wt) as LesWeight, 

										ifnull(sum(sales_value),0) as total_salevalue, 

										cat.hsn_code as HSNCode, cat.name as CategoryName,

                                        ifnull(estst.pieces ,0) as totaldiapcs, 

										ifnull(estst.totwt ,0) as totaldiawt, 

                                        'DIAMOND' as diastockname,  

										cat.tally_qty_type 

										FROM `ret_brch_transfer_old_metal` trtag 

										LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id 

										LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id 

										LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id 

										LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id 

                                        LEFT JOIN (SELECT bt.branch_transfer_id, sum(bs.wt) as totwt, 

                                                    sum(bs.pieces) as pieces  

                                                   FROM ret_billing_item_stones as bs 

                        							            LEFT JOIN `ret_brch_transfer_old_metal` as trtag ON trtag.sold_bill_det_id = bs.bill_det_id 

                        							            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id  

                        							            
                        							            LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                        							            LEFT JOIN ret_uom as um ON um.uom_id = st.uom_id 

                        							            WHERE st.stone_type = 1 AND bs.bill_item_stone_id IS NOT NULL AND bt.status != 3 AND bs.item_type = 1 

                        							            GROUP by bs.stone_id, bt.branch_transfer_id) as estst on estst.branch_transfer_id = bt.branch_transfer_id  AND 

                        							            trtag.item_type = 2 

										WHERE transfer_id = '".$tranid."' AND trtag.item_type != 1 

										GROUP BY cat.id_ret_category, tag.calculation_based_on");





		$rt_array1 = $rt_query1->result_array();

		

		$rt_query2 = $this->db->query("SELECT oldt.metal_type as ItemName, 

										sum(osl.gross_wt) as GrossWeight, 

										ifnull(sum(osl.net_wt),0) as NetWeight, ifnull(sum(osl.piece), 0) as Quantity, 

										sum(osl.stone_wt) as LesWeight, 

										ifnull(sum(osl.rate),0) as total_salevalue, 

										'' as HSNCode, oldt.metal_type as CategoryName, 

										ifnull(estst.pieces ,0) as totaldiapcs, 

										ifnull(estst.totwt ,0) as totaldiawt, '0' as tally_qty_type, 'OLD DIAMOND' as diastockname   

										FROM `ret_brch_transfer_old_metal` trtag 

										LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id 

										LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id 

										LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id 

										LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type 

                                        LEFT JOIN (SELECT oldt.id_metal_type, bt.branch_transfer_id, sum(bs.wt) as totwt, 

                                                    sum(bs.pieces) as pieces  

                                                   FROM ret_billing_item_stones as bs 

                        							            LEFT JOIN `ret_brch_transfer_old_metal` as trtag ON trtag.old_metal_sale_id = bs.old_metal_sale_id 

                        							            LEFT JOIN ret_branch_transfer as bt ON bt.branch_transfer_id = trtag.transfer_id  

                        							            LEFT JOIN ret_bill_old_metal_sale_details as osl ON osl.old_metal_sale_id = trtag.old_metal_sale_id 

                                                                LEFT JOIN ret_estimation_old_metal_sale_details as estold ON estold.old_metal_sale_id =  osl.esti_old_metal_sale_id 

                                                                LEFT JOIN ret_old_metal_type as oldt ON oldt.id_metal_type = estold.id_old_metal_type 

                        							            LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                        							            LEFT JOIN ret_uom as um ON um.uom_id = st.uom_id 

                        							            WHERE st.stone_type = 1 AND bs.bill_item_stone_id IS NOT NULL AND bt.status != 3 AND bs.item_type = 2 

                        							            GROUP by oldt.id_metal_type, bs.stone_id, bt.branch_transfer_id) as estst on estst.branch_transfer_id = bt.branch_transfer_id  AND 

                        							            estst.id_metal_type = oldt.id_metal_type 

                        							            

										WHERE transfer_id = '".$tranid."' AND trtag.item_type = 1 

										GROUP BY oldt.id_metal_type");





		$rt_array2 = $rt_query2->result_array();

		$return_data = array_merge($rt_array1, $rt_array2);

		return $return_data;

	}

	function getBTNonTagDetails($tranid){

	    $return_data = array();

		$rt_query1 = $this->db->query("SELECT pr.product_name as ItemName, 

										cat.hsn_code as HSNCode, cat.name as CategoryName,

										if(cat.id_metal = 1, round(mr.goldrate_22ct * trs.net_wt), round(mr.silverrate_1gm * trs.net_wt)) as total_salevalue 

										FROM `ret_branch_transfer` trs 

										LEFT JOIN ret_nontag_item as nt ON nt.id_nontag_item = trs.id_nontag_item 

										LEFT JOIN ret_product_master as pr ON pr.pro_id = nt.product 

										LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id 

										LEFT JOIN metal_rates as mr ON date(mr.updatetime) = date(trs.approved_datetime) 

										WHERE trs.branch_transfer_id = '".$tranid."' AND trs.id_nontag_item IS NOT NULL 

										GROUP BY cat.id_ret_category");

        return $rt_query1->result_array();

	}

	function getkarigarmetalissueDetails($issueId){

	    $return_data = array();

	    $detail_query = $this->db->query("SELECT issue_met_id, 

										sum(issdet.issue_metal_pur_wt) as GrossWeight, 

										1 as Quantity, issue_metal_purrate, sum(issdet.issue_metal_pur_wt * issue_metal_purrate) as totalcost, 

										cat.hsn_code as HSNCode, cat.name as CategoryName 

										FROM `ret_karigar_metal_issue_details` issdet 

										LEFT JOIN ret_category as cat ON cat.id_ret_category = issdet.issue_cat_id  

										WHERE issue_met_parent_id = '".$issueId."'

										GROUP BY cat.id_ret_category");

	

	    return $detail_query->result_array();

	}

	

	

	function getSalesNewVoucherList($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    $roundoffrecords = array();

	    $sql = $this->db->query("SELECT b.bill_id, date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.sales_ref_no as INVOICENO, 

                    	    if(b.billing_for = 1, 'GST Sales', 'GST Sales') as VOUCHERTYPE, 'Sales Accounts' as VOUCHERTYPEPARENT,

                            '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,

							IFNULL(cus.gst_number,'') as GSTNO, IFNULL(cus.pan,'') as pan_no, 

                            concat(IFNULL(del.address1,''),' ', IFNULL(del.address2,''), ' ', IFNULL(del.address3,'')) as cusdeladdress, 

                            concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                            IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                            IFNULL(dst.name,'') as cusdelstate, IFNULL(dcn.name,'') as cusdelcountry, ifnull(del.pincode,'') as cusdelpincode,

                            cus.mobile as CONTACTNO,round((SELECT sum(d.item_cost) as totalamt FROM ret_bill_details as d WHERE d.bill_id = b.bill_id)) as TOTAL,

                            (SELECT sum(ifnull(d.total_igst,0)) as total_igst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) as total_igst,

                            (SELECT sum(ifnull(d.total_cgst,0)) as total_cgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) as total_cgst,

                            (SELECT sum(ifnull(d.total_sgst,0)) as total_sgst FROM ret_bill_details as d WHERE d.bill_id = b.bill_id) as total_sgst,

                            IFNULL(b.remark,'') as REMARKS, 'Sundry Debtors' as LedgerParent, b.id_branch ,  br.short_name as brcode, 

                            br.name as CostCentre, br.sort,  met.metal_code, 

                            b.round_off_amt as roundoff, b.billing_for, b.handling_charges  

                            FROM ret_billing b 

                            LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                            LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                            LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                            LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                            LEFT JOIN state as st ON st.id_state = adr.id_state 

                            LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id 

                            LEFT JOIN country as dcn ON dcn.id_country = del.id_country 

                            LEFT JOIN state as dst ON dst.id_state = del.id_state 

                            LEFT JOIN branch br ON br.id_branch = b.id_branch   

                            WHERE b.bill_status = 1 and b.sales_ref_no IS NOT NULL 

                            ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                            ".($requestdata['id_branch'] !='' ? " AND b.id_branch = '".$requestdata['id_branch']."'" :'')." 

                            

                            AND b.istransfered = 0 GROUP BY b.bill_id LIMIT 50"); //LIMIT 50 AND b.id_branch > 1  AND b.id_branch > 1 
        
                            //echo $this->db->last_query();exit;

        foreach($sql->result() as $row){

            $invoice_string     = $row->brcode."-"."SA"."-".$row->metal_code."-".$row->INVOICENO;

            $tax_percentage     = "";

            $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => $row->LedgerParent,

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          => $row->billing_for == 1 ? 'Consumer' : 'Regular',

														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO,

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "", 

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        /*"Amount"                => number_format(($row->TOTAL), 2, '.',''),*/

                                                        "Amount"                => number_format(($row->TOTAL + $row->handling_charges), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusdelstate,

                                                        "ConsigneeCountry"      => $row->cusdelcountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

            $salesitemquery = $this->db->query("SELECT sum(d.piece) as QTY,avg(d.rate_per_grm) as RATE,sum(d.item_cost) as VALUE, 

                                                sum(IFNULL(d.item_total_tax,0)) as SALESTAXAMT, 

                                                sum((d.item_cost - d.item_total_tax)) as TOTAL, sum(IFNULL(d.gross_wt,0)) as GROSSWT, sum(IFNULL(d.net_wt,0)) as netweight,

                                                sum(IFNULL(d.bill_discount,0)) as bill_discount, sum(ifnull(d.total_igst,0)) as total_igst, sum(ifnull(d.total_sgst,0)) as total_sgst, 

                                                sum(IFNULL(d.total_cgst,0)) as total_cgst, 

                                                taxm.tax_name as tax_name, taxm.tax_percentage as tax_percentage, 

                                                cat.tally_qty_type, cat.name as PRODUCTNAME, 

                                                sum(ifnull(ometal.omgrswt, 0)) as omgrswt, sum(ifnull(ometal.omrate, 0)) as omrate, sum(ifnull(ometal.omamount, 0)) as omamount, 

                                                ifnull(ometal.ommetal, '') as ommetal, sum(ifnull(ometal.ompcs, 0)) as ompcs, 

                                                sum(ifnull(stn.totwt, 0)) as totstwt, sum(ifnull(stn.stprice, 0)) as totstprice, sum(ifnull(stn.pieces, 0)) as totstpieces 

                                                FROM ret_bill_details d 

                                                LEFT JOIN (SELECT tag_other_itm_tag_id as omtag_id, sum(tag_other_itm_grs_weight) as omgrswt, avg(tag_other_itm_rate) as omrate, 

                                                    sum(tag_other_itm_amount) as omamount, met.name as ommetal, tag_other_itm_pcs as ompcs   

                                                    FROM ret_tag_other_metals as om 

                                                    LEFT JOIN ret_category as met on met.id_ret_category = om.tag_other_itm_metal_id 

                                                    GROUP BY tag_other_itm_tag_id) as ometal ON ometal.omtag_id = d.tag_id 

                                                LEFT JOIN (SELECT bill_det_id, stone_type, stone_name, st.uom_id , AVG(bs.rate_per_gram) as avgrate, sum(bs.wt) as totwt, 

                                                    sum(bs.price) as stprice, sum(pieces) as pieces  

                                                    FROM ret_billing_item_stones bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 GROUP BY bill_det_id) as stn ON stn.bill_det_id = d.bill_det_id 

                                                LEFT JOIN ret_product_master pro ON pro.pro_id = d.product_id 

                                                LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id  

                                                LEFT JOIN ret_taxmaster as taxm ON taxm.tax_id = d.tax_group_id 

                                                WHERE d.bill_id = $row->bill_id AND d.net_wt > 0

                                                GROUP BY d.product_id, cat.id_ret_category, d.calculation_based_on");

            $salesitemquery1 = $this->db->query("SELECT sum(d.piece) as QTY,avg(d.rate_per_grm) as RATE,sum(d.item_cost) as VALUE, 

            sum(IFNULL(d.item_total_tax,0)) as SALESTAXAMT, 

            sum((d.item_cost - d.item_total_tax)) as TOTAL, sum(IFNULL(d.gross_wt,0)) as GROSSWT, sum(IFNULL(d.net_wt,0)) as netweight,

            sum(IFNULL(d.bill_discount,0)) as bill_discount, sum(ifnull(d.total_igst,0)) as total_igst, sum(ifnull(d.total_sgst,0)) as total_sgst, 

            sum(IFNULL(d.total_cgst,0)) as total_cgst, 

            taxm.tax_name as tax_name, taxm.tax_percentage as tax_percentage, 

            cat.tally_qty_type, cat.name as PRODUCTNAME, 

            sum(ifnull(ometal.omgrswt, 0)) as omgrswt, sum(ifnull(ometal.omrate, 0)) as omrate, sum(ifnull(ometal.omamount, 0)) as omamount, 

            ifnull(ometal.ommetal, '') as ommetal, sum(ifnull(ometal.ompcs, 0)) as ompcs, 

            sum(ifnull(stn.totwt, 0)) as totstwt, sum(ifnull(stn.stprice, 0)) as totstprice, sum(ifnull(stn.pieces, 0)) as totstpieces 

            FROM ret_bill_details d 

            LEFT JOIN (SELECT tag_other_itm_tag_id as omtag_id, sum(tag_other_itm_grs_weight) as omgrswt, avg(tag_other_itm_rate) as omrate, 

                sum(tag_other_itm_amount) as omamount, met.name as ommetal, tag_other_itm_pcs as ompcs   

                FROM ret_tag_other_metals as om 

                LEFT JOIN ret_category as met on met.id_ret_category = om.tag_other_itm_metal_id 

                GROUP BY tag_other_itm_tag_id) as ometal ON ometal.omtag_id = d.tag_id 

            LEFT JOIN (SELECT bill_det_id, stone_type, stone_name, st.uom_id , AVG(bs.rate_per_gram) as avgrate, sum(bs.wt) as totwt, 

                sum(bs.price) as stprice, sum(pieces) as pieces  

                FROM ret_billing_item_stones bs 

                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                WHERE st.stone_type = 1 GROUP BY bill_det_id) as stn ON stn.bill_det_id = d.bill_det_id 

            LEFT JOIN ret_product_master pro ON pro.pro_id = d.product_id 

            LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id  

            LEFT JOIN ret_taxmaster as taxm ON taxm.tax_id = d.tax_group_id 

            WHERE d.bill_id = $row->bill_id AND d.net_wt = 0

            GROUP BY d.product_id, cat.id_ret_category, d.calculation_based_on");


            $salesitemcombinequery = array();

            $salesitemqueryresult = array_merge($salesitemquery->result_array(), $salesitemquery1->result_array());

            foreach($salesitemqueryresult as $itemrow){

                $tax_percentage = $itemrow['tax_percentage'];

                $rowavail = false;

                foreach($salesitemcombinequery as $skey => $sval){

                    if($sval['PRODUCTNAME'] == $itemrow['PRODUCTNAME'] && $sval['tally_qty_type'] == $itemrow['tally_qty_type'] && $itemrow['netweight'] != 0 && $sval['netweight'] != 0){

                        $rowavail = true;

                        $salesitemcombinequery[$skey]['QTY'] += $itemrow['QTY'];

                        $salesitemcombinequery[$skey]['TOTAL'] += $itemrow['TOTAL'];

                        $salesitemcombinequery[$skey]['netweight'] += $itemrow['netweight'];

                        $salesitemcombinequery[$skey]['totstprice'] += $itemrow['totstprice'];

                        $salesitemcombinequery[$skey]['omamount'] += $itemrow['omamount'];

                        $salesitemcombinequery[$skey]['totstwt'] += $itemrow['totstwt'];

                        $salesitemcombinequery[$skey]['omgrswt'] += $itemrow['omgrswt'];

                    }else if($sval['PRODUCTNAME'] == $itemrow['PRODUCTNAME'] && $sval['tally_qty_type'] == $itemrow['tally_qty_type'] && $itemrow['netweight'] == 0 && $sval['netweight'] == 0){

                        $rowavail = true;

                        $salesitemcombinequery[$skey]['QTY'] += $itemrow['QTY'];

                        $salesitemcombinequery[$skey]['TOTAL'] += $itemrow['TOTAL'];

                        $salesitemcombinequery[$skey]['netweight'] += $itemrow['netweight'];

                        $salesitemcombinequery[$skey]['totstprice'] += $itemrow['totstprice'];

                        $salesitemcombinequery[$skey]['omamount'] += $itemrow['omamount'];

                        $salesitemcombinequery[$skey]['totstwt'] += $itemrow['totstwt'];

                        $salesitemcombinequery[$skey]['omgrswt'] += $itemrow['omgrswt'];

                    }

                }

                if(!$rowavail){

                    $salesitemcombinequery[] = $itemrow;

                }

            }

            if($row->total_cgst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Output Cgst @ " .($tax_percentage / 2)."%",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => $row->total_cgst,

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusdelstate,

                                                        "ConsigneeCountry"      => $row->cusdelcountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

            }

            if($row->total_sgst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Output Sgst @ " .($tax_percentage / 2)."%",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => $row->total_sgst,

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusdelstate,

                                                        "ConsigneeCountry"      => $row->cusdelcountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

            }

            if($row->total_igst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Output Igst @ " .($tax_percentage)."%",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => $row->total_igst,

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusdelstate,

                                                        "ConsigneeCountry"      => $row->cusdelcountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

                }
            
                    

                if($row->handling_charges != 0 ){

                    $return_data['VOUCHER'][] = array(
       
                                                               "Autoid"                => $row->bill_id,
       
                                                               "CompanyNumber"         => $row->sort,
       
                                                               "TallyMasterid"         => 1,
       
                                                               "Voucherid"             => "",
       
                                                               "VoucherNumber"         => $invoice_string,
       
                                                               "VoucherDate"           => $row->INVOICEDATE,
       
                                                               "VoucherType"           => $row->VOUCHERTYPE,
       
                                                               "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,
       
                                                               "LedgerName"            => "Handling Charges",
       
                                                               "LedgerParent"          => "Indirect Incomes",
       
                                                               "LedgerAddress"         =>   "",
       
                                                               "LedgerState"           =>   "",
       
                                                               "LedgerCountry"         =>   "",
       
                                                               "LedgerPincode"         =>   "",
       
                                                               "LedgerMobile"          =>   "",
       
                                                               "LedgerGstReg"          =>   "",
       
                                                               "LedgerGstin"           =>   "",
       
                                                               "BillName"              => "",
       
                                                               "BillDate"              => "",
       
                                                               "CrDr"                  => $row->handling_charges > 0 ? "Cr" : "Dr",
       
                                                               "CostCategory"          => "",
       
                                                               "CostCentre"            => $row->CostCentre,
       
                                                               "Stockitem"             => "",
       
                                                               "Godown"                => $row->CostCentre, 
       
                                                               "BatchNo"               => $row->INVOICENO,
       
                                                               "Quantity"              => "",
       
                                                               "Rate"                  => "",
       
                                                               "Discount"              => "",
       
                                                               "Amount"                => number_format(abs($row->handling_charges), 2, '.',''),
       
                                                               "OrderNo"               => "",
       
                                                               "OrderDate"             => "",
       
                                                               "TrackingNo"            => "",
       
                                                               "TrackingDate"          => "",
       
                                                               "TermsOfPayment"        => "",
       
                                                               "OtherRef"              => "",
       
                                                               "TermsOfDelivery1"      => "",
       
                                                               "TermsOfDelivery2"      => "",
       
                                                               "DispatchDocNo"         => "",
       
                                                               "ReceiptDocNo"          => "",
       
                                                               "DispatchedThrough"     => "",
       
                                                               "Destination"           => "",
       
                                                               "CarrierName"           => "",
       
                                                               "BillOfLanding"         => "",
       
                                                               "BillOfLandingDate"     => "",
       
                                                               "VehicleNo"             => "",
       
                                                               "BuyerName"             => $row->PARTYNAME,
       
                                                               "BuyerMailingName"      => $row->PARTYNAME,
       
                                                               "BuyerAddress1"         => $row->cuaddress,
       
                                                               "BuyerAddress2"         => "",
       
                                                               "BuyerState"            => $row->cusstate,
       
                                                               "BuyerCountry"          => $row->cuscountry,
       
                                                               "BuyerGSTIN"            => "",
       
                                                               "BuyerPincode"          => $row->cuspincode,
       
                                                               "ConsigneeName"         => $row->PARTYNAME,
       
                                                               "ConsigneeMailingName"  => $row->PARTYNAME,
       
                                                               "ConsigneeAddress1"     => $row->cusdeladdress,
       
                                                               "ConsigneeAddress2"     => "",
       
                                                               "ConsigneeState"        => $row->cusdelstate,
       
                                                               "ConsigneeCountry"      => $row->cusdelcountry,
       
                                                               "ConsigneeGSTIN"        => "",
       
                                                               "ConsigneePincode"      => $row->cusdelpincode,
       
                                                               "PlaceOfSupply"         => $row->cusstate,
       
                                                               "Narration"             => ""
       
                                                       );    
       
                   }

              

            foreach($salesitemcombinequery as $itemrow){

                if($row->total_cgst > 0){

                    //$dispLedgerName = 'GST Sales '. $tax_percentage.'%';

                    $dispLedgerName = $itemrow['PRODUCTNAME'];

                }else{

                    //$dispLedgerName = 'IGST Sales '. $tax_percentage.'%';
                    $dispLedgerName = $itemrow['PRODUCTNAME'];

                }

                if($itemrow['tally_qty_type'] == 1){

                    

                    $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => $dispLedgerName, //"Sales A/c"

                                                        "LedgerParent"          => "Sales Accounts",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => $itemrow['PRODUCTNAME']."-PCS",

                                                        "Godown"                => $row->CostCentre, 

                                                        "BatchNo"               => $row->INVOICENO,

                                                        "Quantity"              => $itemrow['QTY'],

                                                        "Rate"                  => $itemrow['TOTAL'],

                                                        "Discount"              => "",

                                                        "Amount"                => $itemrow['TOTAL'],

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusdelstate,

                                                        "ConsigneeCountry"      => $row->cusdelcountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

                          

                } else{

                    

                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->bill_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => $row->VOUCHERTYPE,

                                                            "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                            "LedgerName"            => $dispLedgerName,

                                                            "LedgerParent"          => "Sales Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => $row->CostCentre,

                                                            "Stockitem"             => ($itemrow['netweight'] == 0 ||  $itemrow['netweight'] == NULL) ? $itemrow['PRODUCTNAME']."-PCS" : $itemrow['PRODUCTNAME'],

                                                            "Godown"                => $row->CostCentre, 

                                                            "BatchNo"               => $row->INVOICENO,

                                                            "Quantity"              => ($itemrow['netweight'] == 0 ||  $itemrow['netweight'] == NULL) ? $itemrow['QTY'] : number_format(($itemrow['netweight']), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow['TOTAL'] -  $itemrow['totstprice'] - $itemrow['omamount']) / ($itemrow['netweight'] == 0 ? $itemrow['QTY'] : $itemrow['netweight'])), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow['TOTAL'] -  $itemrow['totstprice']  - $itemrow['omamount']), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "BuyerPincode"          => $row->cuspincode,

                                                            "ConsigneeName"         => $row->PARTYNAME,

                                                            "ConsigneeMailingName"  => $row->PARTYNAME,

                                                            "ConsigneeAddress1"     => $row->cusdeladdress,

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => $row->cusdelstate,

                                                            "ConsigneeCountry"      => $row->cusdelcountry,

                                                            "ConsigneeGSTIN"        => "",

                                                            "ConsigneePincode"      => $row->cusdelpincode,

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    

                    if($itemrow['totstwt'] > 0 && $itemrow['totstprice'] > 0){

                        $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->bill_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => $row->VOUCHERTYPE,

                                                            "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                            "LedgerName"            => $dispLedgerName,

                                                            "LedgerParent"          => "Sales Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => $row->CostCentre,

                                                            "Stockitem"             => "Diamond",

                                                            "Godown"                => $row->CostCentre, 

                                                            "BatchNo"               => $row->INVOICENO,

                                                            "Quantity"              => number_format($itemrow['totstwt'], 3,'.',''),

                                                            "Rate"                  => number_format(($itemrow['totstprice'] / $itemrow['totstwt']),2,'.',''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($itemrow['totstprice'], 2,'.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "BuyerPincode"          => $row->cuspincode,

                                                            "ConsigneeName"         => $row->PARTYNAME,

                                                            "ConsigneeMailingName"  => $row->PARTYNAME,

                                                            "ConsigneeAddress1"     => $row->cusdeladdress,

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => $row->cusdelstate,

                                                            "ConsigneeCountry"      => $row->cusdelcountry,

                                                            "ConsigneeGSTIN"        => "",

                                                            "ConsigneePincode"      => $row->cusdelpincode,

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                        

                    }

                    if($itemrow['omgrswt'] > 0){                        

                                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->bill_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => $row->VOUCHERTYPE,

                                                            "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                            "LedgerName"            => $dispLedgerName,

                                                            "LedgerParent"          => "Sales Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => $row->CostCentre,

                                                            "Stockitem"             => $itemrow['ommetal'],

                                                            "Godown"                => $row->CostCentre, 

                                                            "BatchNo"               => $row->INVOICENO,

                                                            "Quantity"              => number_format($itemrow['omgrswt'], 3,'.',''),

                                                            "Rate"                  => number_format(($itemrow['omamount'] / $itemrow['omgrswt']),2,'.',''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($itemrow['omamount'],2,'.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "BuyerPincode"          => $row->cuspincode,

                                                            "ConsigneeName"         => $row->PARTYNAME,

                                                            "ConsigneeMailingName"  => $row->PARTYNAME,

                                                            "ConsigneeAddress1"     => $row->cusdeladdress,

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => $row->cusdelstate,

                                                            "ConsigneeCountry"      => $row->cusdelcountry,

                                                            "ConsigneeGSTIN"        => "",

                                                            "ConsigneePincode"      => $row->cusdelpincode,

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                        }

                               

                }

            }

            

            if($row->roundoff != 0 ){

             $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $row->roundoff > 0 ? "Cr" : "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => $row->CostCentre, 

                                                        "BatchNo"               => $row->INVOICENO,

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($row->roundoff), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusdelstate,

                                                        "ConsigneeCountry"      => $row->cusdelcountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );    

            }



        }

        

        

         $repair_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,

                                	    if(b.billing_for = 1, 'GST Sales', 'D-Sales') as VOUCHERTYPE, 'GST Sales' as voucherparent,

                                        '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,

										IFNULL(cus.gst_number,'') as GSTNO, IFNULL(cus.pan,'') as pan_no,

                                        IFNULL(del.address1,'') as ADRESS1,IFNULL(del.address2,'') as ADRESS2,IFNULL(del.address3,'') as ADRESS3, 

                                        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                        cus.mobile as CONTACTNO,cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME,

                                        cor.totalitems as QTY,sum(cor.rate) as RATE,sum(cor.rate) as VALUE,'' as SALESTAX,

                                        IFNULL(sum(cor.repair_tot_tax),0) as SALESTAXAMT,sum(cor.completed_weight ) as WEIGHT,

                                        sum(cor.rate - cor.repair_tot_tax) as TOTAL,IFNULL(b.remark,'') as REMARKS,

                                        IFNULL(sum(cor.completed_weight),0) as GROSSWT,IFNULL(sum(cor.completed_weight),0) as netweight,

                                        '' as SERVICEAMT,'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, 

                                        br.name as CostCentre, 0 as bill_discount, br.sort, 

                                        sum(ifnull(cor.total_igst,0)) as total_igst,  sum(ifnull(cor.total_sgst,0)) as total_sgst, 

                                        sum(ifnull(cor.total_cgst,0)) as total_cgst, 

                                        cor.repair_percent as tax_percentage, met.metal_code, 

                                        b.round_off_amt as roundoff, b.bill_no, b.bill_id, billing_for, 

                                        ifnull((round(sum(CAST(((cor.rate - cor.repair_tot_tax) + ifnull(cor.total_sgst,0) + ifnull(cor.total_cgst,0) + ifnull(cor.total_igst,0)) AS DECIMAL(10,2)))) 

                                        - sum(CAST(((cor.rate - cor.repair_tot_tax) + ifnull(cor.total_sgst,0) + ifnull(cor.total_cgst,0) + ifnull(cor.total_igst,0)) AS DECIMAL(10,2)))),0) as roundval 

                                        FROM ret_billing b 

                                		LEFT JOIN customerorderdetails as cor ON cor.bill_id = b.bill_id

                                        LEFT JOIN ret_product_master pro ON pro.pro_id=cor.id_product 

                                        LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id  

                                        LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                                        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                                        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                        LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                        LEFT JOIN state as st ON st.id_state = adr.id_state 

                                        LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id 

                                        LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                        WHERE b.bill_status=1 and b.bill_type = 11 

                                        ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                        ".($requestdata['id_branch'] !='' ? " AND b.id_branch = '".$requestdata['id_branch']."'" :'')." 

                                        AND b.id_branch > 1 AND cor.orderstatus = 5 AND cor.ortertype = 3 

                                        AND b.istransfered = 0 AND cor.rate > 10 

                                		GROUP BY b.bill_id");

		foreach($repair_query->result() as $row){

            $invoice_string     = $row->brcode."-"."RO"."-".$row->bill_no;

            

             $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                    "LedgerParent"          =>   $row->LedgerParent,

                    "LedgerAddress"         =>   $row->cuaddress,

                    "LedgerState"           =>   $row->cusstate,

                    "LedgerCountry"         =>   $row->cuscountry,

                    "LedgerPincode"         =>   $row->cuspincode,

                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                    "LedgerGstReg"          =>   $row->billing_for == 1 ? 'Consumer' : 'Regular',

                    "LedgerGstin"           =>   $row->GSTNO,

					"LedgerPan"         	=> 	 $row->pan_no,

                    "BillName"              =>   $row->bill_id,

                    

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Dr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   $row->CostCentre, 

                    "Amount"                =>   $row->RATE,

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => $row->PARTYNAME,

                    "BuyerMailingName"      => $row->PARTYNAME,

                    "BuyerAddress1"         => $row->cuaddress,

                    "BuyerAddress2"         => "",

                    "BuyerState"            => $row->cusstate,

                    "BuyerCountry"          => $row->cuscountry,

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => $row->PARTYNAME,

                    "ConsigneeMailingName"  => $row->PARTYNAME,

                    "ConsigneeAddress1"     =>  $row->cuaddress,

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => $row->cusstate,

                    "ConsigneeCountry"      => $row->cuscountry,

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => $row->cusstate,

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );

                

                $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   "GST Sales 18%",

                    "LedgerParent"          =>   "Sales Accounts",

                    "LedgerAddress"         =>   "",

                    "LedgerState"           =>   "",

                    "LedgerCountry"         =>   "",

                    "LedgerPincode"         =>   "",

                    "LedgerMobile"          =>   "",

                    "LedgerGstReg"          =>   "",

                    "LedgerGstin"           =>   "",

                    "BillName"              =>   "",

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   "", 

                    "Amount"                =>   $row->TOTAL,

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );



                

                if($row->total_sgst > 0){

                    $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   "OUTPUT SGST @ 9%",

                    "LedgerParent"          =>   "Duties & Taxes",

                    "LedgerAddress"         =>   "",

                    "LedgerState"           =>   "",

                    "LedgerCountry"         =>   "",

                    "LedgerPincode"         =>   "",

                    "LedgerMobile"          =>   "",

                    "LedgerGstReg"          =>   "",

                    "LedgerGstin"           =>   "",

                    "BillName"              =>   "",

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   "", 

                    "Amount"                =>   $row->total_sgst,

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );

            }

                

                if($row->total_cgst > 0){

                    $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   "OUTPUT CGST @ 9%",

                    "LedgerParent"          =>   "Duties & Taxes",

                    "LedgerAddress"         =>   "",

                    "LedgerState"           =>   "",

                    "LedgerCountry"         =>   "",

                    "LedgerPincode"         =>   "",

                    "LedgerMobile"          =>   "",

                    "LedgerGstReg"          =>   "",

                    "LedgerGstin"           =>   "",

                    "BillName"              =>   "",

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   "", 

                    "Amount"                =>   $row->total_cgst,

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );

            }

            

            if($row->roundval != 0){

                

                    $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   "Round Off",

                    "LedgerParent"          =>   "Indirect Expenses",

                    "LedgerAddress"         =>   "",

                    "LedgerState"           =>   "",

                    "LedgerCountry"         =>   "",

                    "LedgerPincode"         =>   "",

                    "LedgerMobile"          =>   "",

                    "LedgerGstReg"          =>   "",

                    "LedgerGstin"           =>   "",

                    "BillName"              =>   "",

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>    $row->roundval > 0 ? "Cr" : "Dr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   "", 

                    "Amount"                =>   number_format(abs($row->roundval), 2, '.',''),

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );

            

            }

                

		}

        

        

        return $return_data;

                            

	}

	

	

	

	function getPurchasaeNewVoucherList($requestdata){



	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    if(empty($requestdata['id_branch'])){

	        $requestdata['id_branch'] = "";

	    }

	    

	    

	    $sql = $this->db->query("SELECT b.bill_id, date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.pur_ref_no as INVOICENO, 

                    	    'Purchase' as VOUCHERTYPE, 'Purchase Accounts' as VOUCHERTYPEPARENT,

                            '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,

							IFNULL(cus.gst_number,'') as GSTNO, IFNULL(cus.pan,'') as pan_no,

                            concat(IFNULL(del.address1,''),' ', IFNULL(del.address2,''), ' ', IFNULL(del.address3,'')) as cusdeladdress, 

                            concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                            IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                            IFNULL(dst.name,'') as cusdelstate, IFNULL(dcn.name,'') as cusdelcountry, del.pincode as cusdelpincode,

                            cus.mobile as CONTACTNO,(SELECT sum(d.rate) as totalamt FROM ret_bill_old_metal_sale_details as d WHERE d.bill_id = b.bill_id) as TOTAL,

                            IFNULL(b.remark,'') as REMARKS, 'Sundry Debtors' as LedgerParent, b.id_branch ,  br.short_name as brcode, 

                            br.name as CostCentre, br.sort,  met.metal_code, 

                            b.round_off_amt as roundoff, b.billing_for 

                            FROM ret_billing b 

                            LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                            LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                            LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                            LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                            LEFT JOIN state as st ON st.id_state = adr.id_state 

                            LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id 

                            LEFT JOIN country as dcn ON dcn.id_country = del.id_country 

                            LEFT JOIN state as dst ON dst.id_state = del.id_state 

                            LEFT JOIN branch br ON br.id_branch = b.id_branch 

                            WHERE b.bill_status = 1 and b.pur_ref_no IS NOT NULL 

                            ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                            ".($requestdata['id_branch'] !='' ? " AND b.id_branch = '".$requestdata['id_branch']."'" :'')." 

                            AND b.id_branch > 1 

                            AND b.ispurtransfered = 0 GROUP BY b.bill_id"); //LIMIT 50

                            

            //echo $this->db->query();exit;                

            foreach($sql->result() as $row){

                $invoice_string     = $row->brcode."-"."PU"."-".$row->metal_code."-".$row->INVOICENO;

                

                $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => $row->LedgerParent,

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          => $row->billing_for == 1 ? 'Consumer' : 'Regular',

                                                        "LedgerGstin"           => $row->GSTNO,

														"LedgerPan"         	=> $row->pan_no,

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->TOTAL), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

            

	            

        	    $purchasesql = $this->db->query("SELECT sum(s.piece) as QTY, avg(IFNULL(s.rate_per_grm,0)) as RATE,

                sum(IFNULL(s.net_wt,0)) as WEIGHT, sum(IFNULL(s.rate,0)) as TOTAL, sum(IFNULL(s.gross_wt,0)) as GRSWT, sum(IFNULL(s.net_wt,0)) as NETWT, 

                IFNULL(cat.metal_type,'') as PRODUCTNAME,'' as PRODUCTGROUP,'' as PRODUCTCODE, 'Sundry Debtors' as LedgerParent, 

                sum(ifnull(estst.stprice,0)) as stprice, sum(ifnull(estst.pieces,0)) as stpieces, sum(ifnull(estst.totwt,0)) as sttotwt  

                FROM ret_bill_old_metal_sale_details s 

                LEFT JOIN ret_estimation_old_metal_sale_details est ON est.old_metal_sale_id=s.esti_old_metal_sale_id 

                LEFT JOIN (SELECT est_old_metal_sale_id, stone_type, stone_name, st.uom_id , 

                            AVG(ests.rate_per_gram) as avgrate, sum(ests.wt) as totwt, 

                            sum(ests.wt) as stonwt, sum(ests.price) as stprice, sum(pieces) as pieces  

                            FROM ret_esti_old_metal_stone_details ests 

                            LEFT JOIN ret_stone as st ON st.stone_id = ests.stone_id 

                            WHERE st.stone_type = 1 GROUP BY est_old_metal_sale_id) as estst ON estst.est_old_metal_sale_id = est.old_metal_sale_id 

                LEFT JOIN ret_old_metal_type cat ON cat.id_metal_type=est.id_old_metal_type 

                WHERE s.bill_id = '".$row->bill_id."' GROUP BY cat.id_metal_type");

                

                //echo $this->db->last_query();exit;

                foreach($purchasesql->result() as $itemrow){

                    

                        $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->bill_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => $row->VOUCHERTYPE,

                                                            "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                            "LedgerName"            => $itemrow->PRODUCTNAME, //"GST Purchase",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => $row->CostCentre,

                                                            "Stockitem"             => ($itemrow->NETWT == 0 ||  $itemrow->NETWT == NULL) ? $itemrow->PRODUCTNAME."-PCS" : $itemrow->PRODUCTNAME,

                                                            "Godown"                => $row->CostCentre, 

                                                            "BatchNo"               => $row->INVOICENO,

                                                            "Quantity"              => ($itemrow->NETWT == 0 ||  $itemrow->NETWT == NULL) ? $itemrow->QTY : number_format(($itemrow->NETWT), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL -  $itemrow->stprice) / ($itemrow->NETWT == 0 ? $itemrow->QTY : $itemrow->NETWT)), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL -  $itemrow->stprice), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                        if($itemrow->stprice > 0 || $itemrow->stpieces > 0 || $itemrow->sttotwt > 0){

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->bill_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => $row->VOUCHERTYPE,

                                                            "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                            "LedgerName"            => $itemrow->PRODUCTNAME, // "GST Purchase",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => $row->CostCentre,

                                                            "Stockitem"             => "OLD DIAMOND",

                                                            "Godown"                => $row->CostCentre, 

                                                            "BatchNo"               => $row->INVOICENO,

                                                            "Quantity"              => number_format(($itemrow->sttotwt), 3,'.',''),

                                                            "Rate"                  => number_format(($itemrow->stprice / $itemrow->sttotwt),2,'.',''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->stprice), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    }

                }

            }

            

            //Supplier Purchase

            /*$sql = $this->db->query("SELECT po_id, date_format(po.po_date, '%d-%m-%Y') as INVOICEDATE, po.po_ref_no,

    	                        kar.firstname as PARTYNAME,  kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

                                (SELECT sum(puritm.item_cost) as item_cost FROM ret_purchase_order_items as puritm  

                                		WHERE puritm.po_item_po_id = po.po_id 

                                ) as TOTAL, 

    	                        concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

    	                        ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,

    	                        ifnull(kar.gst_number,'') as GSTNO, '1' as sort , br.id_state as branchstate, kar.id_state as karstate, 

    	                        po.purchase_type 

    	                        FROM `ret_purchase_order` as po 

    	                        LEFT JOIN ret_karigar as kar ON kar.id_karigar = po.po_karigar_id 

    	                        LEFT JOIN country as cn ON cn.id_country = kar.id_country 

    	                        LEFT JOIN state as st ON st.id_state = kar.id_state 

    	                        LEFT JOIN branch as br ON br.id_branch = 1 

    	                        WHERE po.`istransfered` = 0 AND po.is_suspense_stock = 0 AND po.bill_status = 1 

    	                        ".($from_date !='' && $to_date !='' ? " AND DATE(po.po_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

    	                        GROUP BY po.po_id LIMIT 100");

	     foreach($sql->result() as $row){

            $invoice_string     = "SP"."-".$row->po_ref_no;

            $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => "Purchase",

                                                        "VoucherTypeParent"     => "Purchase",

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => "Sundry Creditors",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          => "Consumer",

                                                        "LedgerGstin"           => $row->GSTNO,

                                                        "BillName"              => $row->po_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => "",

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->TOTAL), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => "",

                                                        "ConsigneeMailingName"  => "",

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => "",

                                                        "Narration"             => ""

                                                );

                                                

                if($row->purchase_type == 2){

                    $gsttype = 1; // IGST

                    $gstvalue = number_format(($row->TOTAL - ($row->TOTAL * (100/103) )), 2, '.','');

                    if($row->branchstate == $row->karstate || empty($row->karstate)){ // CGST & IGST

                        $gsttype = 0;

                    }

                    if($gsttype == 1){

                        

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Output Igst @ 3%",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => $gstvalue,

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Narration"             => ""

                                                    );

                    

                    }else{

                        

                        

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Output Cgst @ 1.5%",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($gstvalue / 2), 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Narration"             => ""

                                                    );

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Output Sgst @ 1.5%",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($gstvalue / 2), 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Narration"             => ""

                                                    );

                    

                    }

                }

                $itemquery = $this->db->query("SELECT  `po_purchase_mode`, sum(ifnull(`gross_wt`, 0)) as gross_wt, 

                            sum(ifnull(net_wt,0)) as net_wt, `purchase_touch`, 

                            sum(ifnull(`no_of_pcs`, 0)) as no_of_pcs, sum(ifnull(`item_cost`,0)) as TOTAL, 

	                        cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME 

	                        FROM `ret_purchase_order_items` as poi 

	                        LEFT JOIN ret_category cat on cat.id_ret_category=poi.po_item_cat_id  

	                        WHERE poi.po_item_po_id = '".$row->po_id."' GROUP BY po_item_cat_id");

	            

	            foreach($itemquery->result() as $itemrow){

	                if($row->purchase_type == 2){

	                    $item_cost = number_format(($itemrow->TOTAL * (100/103)), 2, '.','');

	                }else{

	                    $item_cost = number_format(($itemrow->TOTAL), 2, '.','');

	                }

	                $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "GST Purchase 3%",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->po_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($item_cost) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($item_cost), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Narration"             => ""

                                                    );

	            }

	       

        

	     }

            

        */    

        

        

        /*GRN Purchase Start Here*/

        

	    $sql = $this->db->query("SELECT grn.grn_id, date_format(grn.grn_date, '%d-%m-%Y') as INVOICEDATE, 

	                            date_format(grn.grn_ref_date, '%d-%m-%Y') as grn_ref_date, 

	                            grn.grn_supplier_ref_no as refno,

	                            grn.grn_ref_no, grn.grn_type, kar.firstname as PARTYNAME,  

	                            kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, (grn_purchase_amt ) as TOTAL, 

	                            grn_pay_tds_percent, grn_pay_tds_value, grn_other_charges_tds_percent, grn_other_charges_tds_value, 

	                            grn_tcs_percent, grn_tcs_value, 

	                            concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

	                            ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

	                            ifnull(kar.gst_number,'') as GSTNO, ifnull(kar.pan_no,'') as pan_no,

								'1' as sort, grn.grn_round_off as roundoff  

	                            FROM `ret_grn_entry` as grn 

	                            LEFT JOIN ret_karigar as kar ON kar.id_karigar = grn.grn_karigar_id 

	                            LEFT JOIN country as cn ON cn.id_country = kar.id_country 

	                            LEFT JOIN state as st ON st.id_state = kar.id_state 

	                            WHERE grn.`istransfered` = 0 AND grn.grn_bill_status = 1 AND grn.grn_type != 2 

	                            ".($from_date !='' && $to_date !='' ? " AND DATE(grn.grn_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

	                            GROUP BY grn.grn_id LIMIT 100");

	     foreach($sql->result() as $row){

            $invoice_string     = "GRN"."-".$row->grn_ref_no;

            $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->grn_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => "Dealer Purchase",

                                                        "VoucherTypeParent"     => "Purchase",

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => "Sundry Creditors",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          => !empty($row->GSTNO) ? 'Consumer' : 'Regular',

                                                        "LedgerGstin"           => $row->GSTNO,

														"LedgerPan"         	=> $row->pan_no,

                                                        "BillName"              => $row->refno,

                                                        "BillDate"              => $row->grn_ref_date,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => "",

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->TOTAL), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cuaddress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cuspincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Reference"             =>  $row->refno,

                                                		"ReferenceDate"         =>  $row->grn_ref_date,

                                                		"VoucherSourceGodown"   => "",

                                                        "Narration"             => ""

                                                );

                $itemtaxquery   = $this->db->query("SELECT grn_item_gst_value as taxrate, sum(grn_item_gst_rate) as gstvalue, 

                                                sum(grn_item_cgst) as cgst, sum(grn_item_sgst) as sgst, sum(grn_item_igst) as igst 

                                                FROM `ret_grn_items` WHERE grn_item_grn_id = '".$row->grn_id."' GROUP BY grn_item_gst_value");

                                                

                $otherchargetaxquery   = $this->db->query("SELECT char_tax as taxrate, sum(total_tax) as gstvalue, sum(cgst_cost) as cgst, sum(sgst_cost) as sgst, 

                                                    sum(igst_cost) as igst_cost FROM `ret_grn_other_charges` WHERE grn_id = '".$row->grn_id."' GROUP BY char_tax");

                $taxcombinevalus = array();                                    

                $taxcombinevalus = $itemtaxquery->result_array();

                $finaltaxarray   = array();

                foreach($taxcombinevalus as $tkey => $tvalue){

                    $itemexist = false;

                    foreach($finaltaxarray as $fkey => $fval){

                        if($fval['taxrate'] == $tvalue['taxrate']){

                            $itemexist = true;

                            $finaltaxarray[$fkey]['gstvalue']   = $finaltaxarray[$fkey]['gstvalue'] + $tvalue['gstvalue'];

                            $finaltaxarray[$fkey]['cgst']       = $finaltaxarray[$fkey]['cgst'] + $tvalue['cgst'];

                            $finaltaxarray[$fkey]['sgst']       = $finaltaxarray[$fkey]['sgst'] + $tvalue['sgst'];

                            $finaltaxarray[$fkey]['igst']       = $finaltaxarray[$fkey]['igst'] + $tvalue['igst'];

                        }

                    }

                    

                    if(!$itemexist){

                        $finaltaxarray[] = $tvalue;

                    }

                }

                

                foreach($finaltaxarray as $tkey => $tvalue){

                    if($tvalue['cgst'] > 0 ){

                            $gstrate = number_format(($tvalue['taxrate'] / 2), 2,'.','')."%";

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Input Cgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['cgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Input Sgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['sgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    }else if($tvalue['igst'] > 0){

                        $gstrate = number_format(($tvalue['taxrate']), 2,'.','')."%";

                        $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Input Igst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['igst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    }

                }

                

                

                

                if($row->grn_pay_tds_value > 0){

                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "TDS on Purchase",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($row->grn_pay_tds_value, 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                }

                

                if($row->grn_tcs_value > 0){

                    

                    

                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "TCS on Purchase",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($row->grn_tcs_value, 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                

                

                }

                

                

                

                $chargequery = $this->db->query("SELECT sum(grn_charge_value) as chargeamt, chr.name_charge 

	                                            FROM `ret_grn_other_charges` as grnch 

	                                            LEFT JOIN ret_charges as chr ON chr.id_charge = grnch.grn_charge_id 

	                                            WHERE grn_id = '".$row->grn_id."' GROUP BY grn_charge_id");

	     

	           foreach($chargequery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => $itemrow->name_charge,

                                                            "LedgerParent"          => "DIRECT EXPENSES",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->grn_ref_no,

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->chargeamt), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    

	            }   

                

                

                 $otherchargetaxquery   = $this->db->query("SELECT char_tax as taxrate, sum(total_tax) as gstvalue, sum(cgst_cost) as cgst, sum(sgst_cost) as sgst, 

                                                    sum(igst_cost) as igst_cost FROM `ret_grn_other_charges` WHERE grn_id = '".$row->grn_id."' GROUP BY char_tax");

                                                    

                $taxcombinevalus = array();

                $taxcombinevalus = $otherchargetaxquery->result_array();

                $finaltaxarray   = array();

                foreach($taxcombinevalus as $tkey => $tvalue){

                    $itemexist = false;

                    foreach($finaltaxarray as $fkey => $fval){

                        if($fval['taxrate'] == $tvalue['taxrate']){

                            $itemexist = true;

                            $finaltaxarray[$fkey]['gstvalue']   = $finaltaxarray[$fkey]['gstvalue'] + $tvalue['gstvalue'];

                            $finaltaxarray[$fkey]['cgst']       = $finaltaxarray[$fkey]['cgst'] + $tvalue['cgst'];

                            $finaltaxarray[$fkey]['sgst']       = $finaltaxarray[$fkey]['sgst'] + $tvalue['sgst'];

                            $finaltaxarray[$fkey]['igst']       = $finaltaxarray[$fkey]['igst'] + $tvalue['igst'];

                        }

                    }

                    

                    if(!$itemexist){

                        $finaltaxarray[] = $tvalue;

                    }

                }

                

                foreach($finaltaxarray as $tkey => $tvalue){

                    if($tvalue['cgst'] > 0 ){

                            $gstrate = number_format(($tvalue['taxrate'] / 2), 2,'.','')."%";

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Input Cgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['cgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Input Sgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['sgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    }else if($tvalue['igst'] > 0){

                        $gstrate = number_format(($tvalue['taxrate']), 2,'.','')."%";

                        $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Input Igst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['igst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    }

                }

                

                if($row->grn_other_charges_tds_value > 0){

                    

                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "TDS on Charges",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($row->grn_other_charges_tds_value, 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                

                }

                

                

                $itemquery = $this->db->query("SELECT grn_item_grn_id, sum(ifnull(`grn_gross_wt`, 0)) as gross_wt, 

                                            sum(ifnull(grn_net_wt,0)) as net_wt,  

                                            sum(ifnull(`grn_no_of_pcs`, 0)) as no_of_pcs, sum(ifnull(`grn_item_cost`,0) - ifnull(om.omamount, 0) - ifnull(stn.stamount,0) - ifnull(grn_item_gst_rate, 0)) as TOTAL, 

                                            cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME 

                                            FROM `ret_grn_items` as grn 

                                            LEFT JOIN ret_category cat on cat.id_ret_category=grn.grn_item_cat_id  

                                            LEFT JOIN (SELECT grn_item_id, sum(amount) as stamount

                                                    FROM ret_grn_item_stone bs 

                                                    GROUP BY grn_item_id) as stn ON stn.grn_item_id = grn.grn_item_grn_id 

                                            LEFT JOIN (SELECT grn_itms_id, sum(grn_other_itm_amount) as omamount

                                                    FROM ret_grn_other_metals gom 

                                                    GROUP BY grn_itms_id) as om ON om.grn_itms_id = grn.grn_item_grn_id 

                                            WHERE grn.grn_item_grn_id = '".$row->grn_id."' GROUP BY grn_item_cat_id");

	            

	            foreach($itemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "GST Purchase 3%",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->grn_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Reference"             =>  $row->refno,

                                                    		"ReferenceDate"         =>  $row->grn_ref_date,

                                                    		"VoucherSourceGodown"   => "",

                                                            "Narration"             => ""

                                                    );

	            }

	       

        

	           $otheritemquery = $this->db->query("SELECT sum(grn_other_itm_grs_weight) as net_wt, avg(grn_other_itm_rate) as omrate, 

                                                sum(grn_other_itm_amount) as TOTAL, met.name as PRODUCTNAME, 

                                                sum(grn_other_itm_pcs) as ompcs   

                                                FROM ret_grn_other_metals as om 

                                                LEFT JOIN ret_grn_items as grn ON grn.grn_item_grn_id = om.grn_itms_id 

                                                LEFT JOIN ret_category as met on met.id_ret_category = om.grn_other_itm_metal_id 

                                                WHERE grn.grn_item_grn_id = '".$row->grn_id."' AND om.grn_itms_id IS NOT NULL 

                                                GROUP BY grn_other_itm_metal_id");

                                                

                foreach($otheritemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "GST Purchase 3%",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->grn_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    

	            }

	         

	            $stoneitemquery = $this->db->query("SELECT sum(wt) as net_wt, avg(rate_per_gram) as avgrate, 

                                                sum(amount) as TOTAL, stone_name as PRODUCTNAME, 

                                                sum(pieces) as ompcs   

                                                FROM ret_grn_item_stone as bs  

                                                LEFT JOIN ret_grn_items as grn ON grn.grn_item_grn_id = bs.grn_item_id 

                                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                WHERE grn.grn_item_grn_id = '".$row->grn_id."' AND bs.grn_item_id IS NOT NULL AND st.stone_type = 1 

                                                GROUP BY bs.stone_id");

                                                

                foreach($stoneitemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Dealer Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "GST PURCHASE 3%",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => $row->refno,

                                                            "BillDate"              => $row->grn_ref_date,

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->grn_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    

	            }

	            

	            

	            

	         if($row->roundoff != 0 ){

                 $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->grn_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => "Dealer Purchase",

                                                        "VoucherTypeParent"     => "Purchase",

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => $row->refno,

                                                        "BillDate"              => $row->grn_ref_date,

                                                        "CrDr"                  => $row->roundoff > 0 ? "Dr" : "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => $row->CostCentre, 

                                                        "BatchNo"               => $row->INVOICENO,

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($row->roundoff), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => "",

                                                        "ConsigneeMailingName"  => "",

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );    

            }

	         

	     }

	     

	     

	    

	

        

         /*GRN Purchase End Here*/

        

        

	    return $return_data;

	}

	

	function getSalesReturnNewVoucherListold($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    $sql = $this->db->query("SELECT b.bill_id, date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.s_ret_refno as INVOICENO, 

							'Debit Note' as VOUCHERTYPE, 'Debit Note' as VOUCHERTYPEPARENT, '' as PARTYCODE,cus.firstname as PARTYNAME, '' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

							concat(IFNULL(del.address1,''),' ', IFNULL(del.address2,''), ' ', IFNULL(del.address3,'')) as cusdeladdress,

							concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

							IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

							IFNULL(dst.name,'') as cusdelstate, IFNULL(dcn.name,'') as cusdelcountry, del.pincode as cusdelpincode,

							cus.mobile as CONTACTNO, 

							round((SELECT sum(d.item_cost) as totalamt FROM ret_bill_return_details as sr 

							        LEFT JOIN ret_bill_details as d ON d.bill_det_id = sr.ret_bill_det_id 

							        WHERE sr.bill_id = b.bill_id)) as TOTAL,

							(SELECT sum(d.total_igst) as totalamt FROM ret_bill_return_details as sr 

							        LEFT JOIN ret_bill_details as d ON d.bill_det_id = sr.ret_bill_det_id 

							        WHERE sr.bill_id = b.bill_id) as total_igst,

							(SELECT sum(d.total_cgst) as totalamt FROM ret_bill_return_details as sr 

							        LEFT JOIN ret_bill_details as d ON d.bill_det_id = sr.ret_bill_det_id 

							        WHERE sr.bill_id = b.bill_id) as total_cgst,

							(SELECT sum(d.total_sgst) as totalamt FROM ret_bill_return_details as sr 

							        LEFT JOIN ret_bill_details as d ON d.bill_det_id = sr.ret_bill_det_id 

							        WHERE sr.bill_id = b.bill_id) as total_sgst,

						    IFNULL(b.remark,'') as REMARKS,

						    'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, br.sort, 

							br.name as CostCentre, b.return_round_off_amt as roundoff, 

							br.address1 as frmaddress1, br.address2 as frmaddress2,

							IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry, met.metal_code, b.billing_for, IFNULL(cus.gst_number,'') as GSTNO, IFNULL(cus.pan,'') as pan_no    

							FROM ret_billing b  

							LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

							LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

							LEFT JOIN country as cn ON cn.id_country = adr.id_country 

							LEFT JOIN state as st ON st.id_state = adr.id_state 

							LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id 

							LEFT JOIN country as dcn ON dcn.id_country = del.id_country 

                            LEFT JOIN state as dst ON dst.id_state = del.id_state 

							LEFT JOIN branch br ON br.id_branch = b.id_branch 

							LEFT JOIN state as bst ON bst.id_state = br.id_state 

							LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

							LEFT JOIN metal as met ON met.id_metal = b.metal_type 

							WHERE b.bill_status=1 and b.s_ret_refno IS NOT NULL 

							".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

							 ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

							AND b.issrtransfered = 0 GROUP BY b.bill_id");

		foreach($sql->result() as $row){

           $invoice_string     =    $row->brcode. "-" . "SR" . "-" .$row->metal_code. "-" .$row->INVOICENO;

           $tax_percentage     = "";

           $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => $row->LedgerParent,

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          => $row->billing_for == 1 ? 'Consumer' : 'Regular',

                                                        "LedgerGstin"           => $row->GSTNO, 

														"LedgerPan"         	=> $row->pan_no,

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->TOTAL), 2, '.',''), //+ $row->roundoff

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

            

           

           

           $srquery = $this->db->query("SELECT cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME,

            							sum(ifnull(d.piece,0)) as QTY, sum(ifnull(d.item_cost,0)) as VALUE, 

            							sum(IFNULL(d.item_total_tax,0)) as SALESTAXAMT, sum(ifnull(d.gross_wt,0)) as WEIGHT,

            							sum(ifnull((d.item_cost-d.item_total_tax),0)) as TOTAL, 

            							sum(IFNULL(d.gross_wt,0)) as GROSSWT, sum(IFNULL(d.net_wt,0)) as netweight,

            							'' as SERVICEAMT, 'Sundry Debtors' as LedgerParent, sum(ifnull(d.total_igst, 0)) as total_igst, 

            							sum(ifnull(d.total_sgst, 0)) as total_sgst, sum(ifnull(d.total_cgst, 0)) as total_cgst,

            							taxm.tax_name as tax_name, taxm.tax_percentage as tax_percentage, 

            							sum(ifnull(stn.totwt, 0)) as totstwt, sum(ifnull(stn.stprice, 0)) as totstprice, sum(ifnull(stn.pieces, 0)) as totstpieces, 

                                        sum(ifnull(ometal.omgrswt, 0)) as omgrswt, sum(ifnull(ometal.omrate, 0)) as omrate, sum(ifnull(ometal.omamount, 0)) as omamount, 

                                                ifnull(ometal.ommetal, '') as ommetal, sum(ifnull(ometal.ompcs, 0)) as ompcs,

            							cat.tally_qty_type 

            							FROM ret_bill_return_details r 

            							LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id 

            							LEFT JOIN (SELECT bill_det_id, stone_type, stone_name, st.uom_id , AVG(bs.rate_per_gram) as avgrate, sum(bs.wt) as totwt, 

                                                    sum(bs.price) as stprice, sum(pieces) as pieces  

                                                    FROM ret_billing_item_stones bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 GROUP BY bill_det_id) as stn ON stn.bill_det_id = d.bill_det_id 
                                        
                                        LEFT JOIN (SELECT tag_other_itm_tag_id as omtag_id, sum(tag_other_itm_grs_weight) as omgrswt, avg(tag_other_itm_rate) as omrate, 

                                                        sum(tag_other_itm_amount) as omamount, met.name as ommetal, tag_other_itm_pcs as ompcs   

                                                        FROM ret_tag_other_metals as om 

                                                        LEFT JOIN ret_category as met on met.id_ret_category = om.tag_other_itm_metal_id 

                                                        GROUP BY tag_other_itm_tag_id) as ometal ON ometal.omtag_id = d.tag_id 

            							LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id 

            							LEFT JOIN ret_product_master pro ON pro.pro_id=d.product_id 

            							LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id  

            							LEFT JOIN ret_taxmaster as taxm ON taxm.tax_id = d.tax_group_id 

            							WHERE r.bill_id = '".$row->bill_id."' GROUP BY d.product_id, cat.id_ret_category, d.calculation_based_on");

            							

            $salesitemcombinequery = array();

            foreach($srquery->result_array() as $itemrow){

                $tax_percentage = $itemrow['tax_percentage'];

                $rowavail = false;

                foreach($salesitemcombinequery as $skey => $sval){

                    if($sval['PRODUCTNAME'] == $itemrow['PRODUCTNAME'] && $sval['tally_qty_type'] == $itemrow['tally_qty_type'] && $itemrow['netweight'] != 0 && $sval['netweight'] != 0){

                        $rowavail = true;

                        $salesitemcombinequery[$skey]['QTY'] += $itemrow['QTY'];

                        $salesitemcombinequery[$skey]['TOTAL'] += $itemrow['TOTAL'];

                        $salesitemcombinequery[$skey]['netweight'] += $itemrow['netweight'];

                        $salesitemcombinequery[$skey]['totstprice'] += $itemrow['totstprice'];

                        $salesitemcombinequery[$skey]['omgrswt'] += $itemrow['omgrswt'];

                    }else if($sval['PRODUCTNAME'] == $itemrow['PRODUCTNAME'] && $sval['tally_qty_type'] == $itemrow['tally_qty_type'] && $itemrow['netweight'] == 0 && $sval['netweight'] == 0){

                        $rowavail = true;

                        $salesitemcombinequery[$skey]['QTY'] += $itemrow['QTY'];

                        $salesitemcombinequery[$skey]['TOTAL'] += $itemrow['TOTAL'];

                        $salesitemcombinequery[$skey]['netweight'] += $itemrow['netweight'];

                        $salesitemcombinequery[$skey]['totstprice'] += $itemrow['totstprice'];

                        $salesitemcombinequery[$skey]['omgrswt'] += $itemrow['omgrswt'];

                    }

                    

                }

                if(!$rowavail){

                    $salesitemcombinequery[] = $itemrow;

                }

            }							

            

            /*foreach($srquery->result() as $itemrow){

                $tax_percentage = $itemrow->tax_percentage;

            }*/

             if($row->total_cgst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Output Cgst @ " .($tax_percentage / 2)."%",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => $row->total_cgst,

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

            }

            if($row->total_sgst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Output Sgst @ " .($tax_percentage / 2)."%",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => $row->total_sgst,

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

            }

            if($row->total_igst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Output Igst @ " .($tax_percentage)."%",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => $row->total_igst,

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

                }

            

            foreach($salesitemcombinequery as $itemrow){

                $return_data['VOUCHER'][] = array(

                                                "Autoid"                => $row->bill_id,

                                                "CompanyNumber"         => $row->sort,

                                                "TallyMasterid"         => 1,

                                                "Voucherid"             => "",

                                                "VoucherNumber"         => $invoice_string,

                                                "VoucherDate"           => $row->INVOICEDATE,

                                                "VoucherType"           => $row->VOUCHERTYPE,

                                                "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                "LedgerName"            => "GST Sales ".$tax_percentage."%",

                                                "LedgerParent"          => "Sales Accounts",

                                                "LedgerAddress"         =>   "",

                                                "LedgerState"           =>   "",

                                                "LedgerCountry"         =>   "",

                                                "LedgerPincode"         =>   "",

                                                "LedgerMobile"          =>   "",

                                                "LedgerGstReg"          =>   "",

                                                "LedgerGstin"           =>   "",

                                                "BillName"              => "",

                                                "BillDate"              => "",

                                                "CrDr"                  => "Dr",

                                                "CostCategory"          => "",

                                                "CostCentre"            => $row->CostCentre,

                                                "Stockitem"             => ($itemrow['netweight'] == 0 ||  $itemrow['netweight'] == NULL || $itemrow['tally_qty_type'] == 1) ? $itemrow['PRODUCTNAME']."-PCS" : $itemrow['PRODUCTNAME'],

                                                "Godown"                => $row->CostCentre, 

                                                "BatchNo"               => $row->INVOICENO,

                                                "Quantity"              => ($itemrow['netweight'] == 0 ||  $itemrow['netweight'] == NULL  || $itemrow['tally_qty_type'] == 1) ? $itemrow['QTY'] : number_format(($itemrow['netweight']), 3,'.',''),

                                                "Rate"                  => number_format((($itemrow['TOTAL'] -  $itemrow['totstprice'] - $itemrow['omamount'] ) / (($itemrow['netweight'] == 0 || $itemrow['tally_qty_type'] == 1) ? $itemrow['QTY'] : $itemrow['netweight'])), 3, '.', ''),

                                                "Discount"              => "",

                                                "Amount"                => number_format(($itemrow['TOTAL'] -  $itemrow['totstprice'] - $itemrow['omamount']), 2, '.', ''),

                                                "OrderNo"               => "",

                                                "OrderDate"             => "",

                                                "TrackingNo"            => "",

                                                "TrackingDate"          => "",

                                                "TermsOfPayment"        => "",

                                                "OtherRef"              => "",

                                                "TermsOfDelivery1"      => "",

                                                "TermsOfDelivery2"      => "",

                                                "DispatchDocNo"         => "",

                                                "ReceiptDocNo"          => "",

                                                "DispatchedThrough"     => "",

                                                "Destination"           => "",

                                                "CarrierName"           => "",

                                                "BillOfLanding"         => "",

                                                "BillOfLandingDate"     => "",

                                                "VehicleNo"             => "",

                                                "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                "BuyerAddress1"         => $row->cuaddress,

                                                "BuyerAddress2"         => "",

                                                "BuyerState"            => $row->cusstate,

                                                "BuyerCountry"          => $row->cuscountry,

                                                "BuyerGSTIN"            => "",

                                                "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                "ConsigneeAddress1"     => "",

                                                "ConsigneeAddress2"     => "",

                                                "ConsigneeState"        => "",

                                                "ConsigneeCountry"      => "",

                                                "ConsigneeGSTIN"        => "",

                                                "PlaceOfSupply"         => $row->cusstate,

                                                "Narration"             => ""

                                        );

                    

                    if($itemrow['totstwt'] > 0 && $itemrow['totstprice'] > 0){

                        $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->bill_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => $row->VOUCHERTYPE,

                                                            "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                            "LedgerName"            => "GST Sales ".$tax_percentage."%",

                                                            "LedgerParent"          => "Sales Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => $row->CostCentre,

                                                            "Stockitem"             => "Diamond",

                                                            "Godown"                => $row->CostCentre, 

                                                            "BatchNo"               => $row->INVOICENO,

                                                            "Quantity"              => $itemrow['totstwt'],

                                                            "Rate"                  => number_format(($itemrow['totstprice'] / $itemrow['totstwt']),2,'.',''),

                                                            "Discount"              => "",

                                                            "Amount"                => $itemrow['totstprice'],

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                            "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                            "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    

                }

                if($itemrow['omgrswt'] > 0){                        

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_id,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $row->VOUCHERTYPE,

                                            "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                            "LedgerName"            => "GST Sales ".$tax_percentage."%",

                                            "LedgerParent"          => "Sales Accounts",

                                            "LedgerAddress"         =>   "",

                                            "LedgerState"           =>   "",

                                            "LedgerCountry"         =>   "",

                                            "LedgerPincode"         =>   "",

                                            "LedgerMobile"          =>   "",

                                            "LedgerGstReg"          =>   "",

                                            "LedgerGstin"           =>   "",

                                            "BillName"              => "",

                                            "BillDate"              => "",

                                            "CrDr"                  => "Dr",

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "Stockitem"             => $itemrow['ommetal'],

                                            "Godown"                => $row->CostCentre, 

                                            "BatchNo"               => $row->INVOICENO,

                                            "Quantity"              => number_format($itemrow['omgrswt'], 3,'.',''),

                                            "Rate"                  => number_format(($itemrow['omamount'] / $itemrow['omgrswt']),2,'.',''),

                                            "Discount"              => "",

                                            "Amount"                => number_format($itemrow['omamount'],2,'.',''),

                                            "OrderNo"               => "",

                                            "OrderDate"             => "",

                                            "TrackingNo"            => "",

                                            "TrackingDate"          => "",

                                            "TermsOfPayment"        => "",

                                            "OtherRef"              => "",

                                            "TermsOfDelivery1"      => "",

                                            "TermsOfDelivery2"      => "",

                                            "DispatchDocNo"         => "",

                                            "ReceiptDocNo"          => "",

                                            "DispatchedThrough"     => "",

                                            "Destination"           => "",

                                            "CarrierName"           => "",

                                            "BillOfLanding"         => "",

                                            "BillOfLandingDate"     => "",

                                            "VehicleNo"             => "",

                                            "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "BuyerAddress1"         => $row->cuaddress,

                                            "BuyerAddress2"         => "",

                                            "BuyerState"            => $row->cusstate,

                                            "BuyerCountry"          => $row->cuscountry,

                                            "BuyerGSTIN"            => "",

                                            "BuyerPincode"          => $row->cuspincode,

                                            "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "ConsigneeAddress1"     => $row->cusdeladdress,

                                            "ConsigneeAddress2"     => "",

                                            "ConsigneeState"        => $row->cusdelstate,

                                            "ConsigneeCountry"      => $row->cusdelcountry,

                                            "ConsigneeGSTIN"        => "",

                                            "ConsigneePincode"      => $row->cusdelpincode,

                                            "PlaceOfSupply"         => $row->cusstate,

                                            "Narration"             => ""

                                    );

                    }

               


		    

		    }

		

		    if($row->roundoff != 0){

		         $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $row->roundoff > 0 ? "Dr" : "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($row->roundoff), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );  

		    }

		}

		return $return_data;

	}

    function getSalesReturnNewVoucherList($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    $sql = $this->db->query("SELECT b.bill_id, date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.s_ret_refno as INVOICENO, 

							'Debit Note' as VOUCHERTYPE, 'Debit Note' as VOUCHERTYPEPARENT, '' as PARTYCODE,cus.firstname as PARTYNAME, '' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

							concat(IFNULL(del.address1,''),' ', IFNULL(del.address2,''), ' ', IFNULL(del.address3,'')) as cusdeladdress,

							concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

							IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

							IFNULL(dst.name,'') as cusdelstate, IFNULL(dcn.name,'') as cusdelcountry, del.pincode as cusdelpincode,

							cus.mobile as CONTACTNO, ifnull(br.gst_number. '') as brgst,

							round((SELECT sum(d.item_cost) as totalamt FROM ret_bill_return_details as sr 

							        LEFT JOIN ret_bill_details as d ON d.bill_det_id = sr.ret_bill_det_id 

							        WHERE sr.bill_id = b.bill_id)) as TOTAL,

							(SELECT sum(d.total_igst) as totalamt FROM ret_bill_return_details as sr 

							        LEFT JOIN ret_bill_details as d ON d.bill_det_id = sr.ret_bill_det_id 

							        WHERE sr.bill_id = b.bill_id) as total_igst,

							(SELECT sum(d.total_cgst) as totalamt FROM ret_bill_return_details as sr 

							        LEFT JOIN ret_bill_details as d ON d.bill_det_id = sr.ret_bill_det_id 

							        WHERE sr.bill_id = b.bill_id) as total_cgst,

							(SELECT sum(d.total_sgst) as totalamt FROM ret_bill_return_details as sr 

							        LEFT JOIN ret_bill_details as d ON d.bill_det_id = sr.ret_bill_det_id 

							        WHERE sr.bill_id = b.bill_id) as total_sgst,

						    IFNULL(b.remark,'') as REMARKS,

						    'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, br.sort, 

							br.name as CostCentre, b.return_round_off_amt as roundoff, 

							br.address1 as frmaddress1, br.address2 as frmaddress2,

							IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry, met.metal_code, b.billing_for, IFNULL(cus.gst_number,'') as GSTNO, IFNULL(cus.pan,'') as pan_no    

							FROM ret_billing b  

							LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

							LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

							LEFT JOIN country as cn ON cn.id_country = adr.id_country 

							LEFT JOIN state as st ON st.id_state = adr.id_state 

							LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id 

							LEFT JOIN country as dcn ON dcn.id_country = del.id_country 

                            LEFT JOIN state as dst ON dst.id_state = del.id_state 

							LEFT JOIN branch br ON br.id_branch = b.id_branch 

							LEFT JOIN state as bst ON bst.id_state = br.id_state 

							LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

							LEFT JOIN metal as met ON met.id_metal = b.metal_type 

							WHERE b.bill_status=1 and b.s_ret_refno IS NOT NULL 

							".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

							 ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

							AND b.issrtransfered = 0 GROUP BY b.bill_id");

		foreach($sql->result() as $row){

           $invoice_string     =    $row->brcode. "-" . "SR" . "-" .$row->metal_code. "-" .$row->INVOICENO;

           $tax_percentage     = "";

           $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => $row->LedgerParent,

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->TOTAL), 2, '.',''), //+ $row->roundoff

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => "",

                                                        "ReferenceDate"         => "",

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

            

           

           

           $srquery = $this->db->query("SELECT cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME,

            							sum(ifnull(d.piece,0)) as QTY, sum(ifnull(d.item_cost,0)) as VALUE, 

            							sum(IFNULL(d.item_total_tax,0)) as SALESTAXAMT, sum(ifnull(d.gross_wt,0)) as WEIGHT,

            							sum(ifnull((d.item_cost-d.item_total_tax),0)) as TOTAL, 

            							sum(IFNULL(d.gross_wt,0)) as GROSSWT, sum(IFNULL(d.net_wt,0)) as netweight,

            							'' as SERVICEAMT, 'Sundry Debtors' as LedgerParent, sum(ifnull(d.total_igst, 0)) as total_igst, 

            							sum(ifnull(d.total_sgst, 0)) as total_sgst, sum(ifnull(d.total_cgst, 0)) as total_cgst,

            							taxm.tax_name as tax_name, taxm.tax_percentage as tax_percentage,

										cat.hsn_code as hsn_code, 

            							sum(ifnull(stn.totwt, 0)) as totstwt, sum(ifnull(stn.stprice, 0)) as totstprice, sum(ifnull(stn.pieces, 0)) as totstpieces, 

                                        sum(ifnull(ometal.omgrswt, 0)) as omgrswt, sum(ifnull(ometal.omrate, 0)) as omrate, sum(ifnull(ometal.omamount, 0)) as omamount, 

                                                ifnull(ometal.ommetal, '') as ommetal, sum(ifnull(ometal.ompcs, 0)) as ompcs,

            							cat.tally_qty_type 

            							FROM ret_bill_return_details r 

            							LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id 

            							LEFT JOIN (SELECT bill_det_id, stone_type, stone_name, st.uom_id , AVG(bs.rate_per_gram) as avgrate, sum(bs.wt) as totwt, 

                                                    sum(bs.price) as stprice, sum(pieces) as pieces  

                                                    FROM ret_billing_item_stones bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 GROUP BY bill_det_id) as stn ON stn.bill_det_id = d.bill_det_id 
                                        
                                        LEFT JOIN (SELECT tag_other_itm_tag_id as omtag_id, sum(tag_other_itm_grs_weight) as omgrswt, avg(tag_other_itm_rate) as omrate, 

                                                        sum(tag_other_itm_amount) as omamount, met.name as ommetal, tag_other_itm_pcs as ompcs   

                                                        FROM ret_tag_other_metals as om 

                                                        LEFT JOIN ret_category as met on met.id_ret_category = om.tag_other_itm_metal_id 

                                                        GROUP BY tag_other_itm_tag_id) as ometal ON ometal.omtag_id = d.tag_id 

            							LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id 

            							LEFT JOIN ret_product_master pro ON pro.pro_id=d.product_id 

            							LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id  

            							LEFT JOIN ret_taxmaster as taxm ON taxm.tax_id = d.tax_group_id 

            							WHERE r.bill_id = '".$row->bill_id."' GROUP BY d.product_id, cat.id_ret_category, d.calculation_based_on");

            							

            $salesitemcombinequery = array();

            foreach($srquery->result_array() as $itemrow){

                $tax_percentage = $itemrow['tax_percentage'];

                $rowavail = false;

                foreach($salesitemcombinequery as $skey => $sval){

                    if($sval['PRODUCTNAME'] == $itemrow['PRODUCTNAME'] && $sval['tally_qty_type'] == $itemrow['tally_qty_type'] && $itemrow['netweight'] != 0 && $sval['netweight'] != 0){

                        $rowavail = true;

                        $salesitemcombinequery[$skey]['QTY'] += $itemrow['QTY'];

                        $salesitemcombinequery[$skey]['TOTAL'] += $itemrow['TOTAL'];

                        $salesitemcombinequery[$skey]['netweight'] += $itemrow['netweight'];

                        $salesitemcombinequery[$skey]['totstprice'] += $itemrow['totstprice'];

                        $salesitemcombinequery[$skey]['omgrswt'] += $itemrow['omgrswt'];

                    }else if($sval['PRODUCTNAME'] == $itemrow['PRODUCTNAME'] && $sval['tally_qty_type'] == $itemrow['tally_qty_type'] && $itemrow['netweight'] == 0 && $sval['netweight'] == 0){

                        $rowavail = true;

                        $salesitemcombinequery[$skey]['QTY'] += $itemrow['QTY'];

                        $salesitemcombinequery[$skey]['TOTAL'] += $itemrow['TOTAL'];

                        $salesitemcombinequery[$skey]['netweight'] += $itemrow['netweight'];

                        $salesitemcombinequery[$skey]['totstprice'] += $itemrow['totstprice'];

                        $salesitemcombinequery[$skey]['omgrswt'] += $itemrow['omgrswt'];

                    }

                    

                }

                if(!$rowavail){

                    $salesitemcombinequery[] = $itemrow;

                }

            }							

            

            /*foreach($srquery->result() as $itemrow){

                $tax_percentage = $itemrow->tax_percentage;

            }*/

             if($row->total_cgst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Output Cgst @ " .($tax_percentage / 2)."%",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => $row->total_cgst,

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );

            }

            if($row->total_sgst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => "Output Sgst @ " .($tax_percentage / 2)."%",
														
                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->total_sgst), 2, '.',''), 

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => "",

                                                        "ReferenceDate"         => "",

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );


            }

            if($row->total_igst > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => "Output Igst @ " .($tax_percentage / 2)."%",
														
                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->total_igst), 2, '.',''), 

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => "",

                                                        "ReferenceDate"         => "",

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );


                }

            

            foreach($salesitemcombinequery as $itemrow){

                $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => $itemrow['PRODUCTNAME']."PURCHASE",
														
                                                        "LedgerParent"          => "Purchase Accounts",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                         "Stockitem"             => ($itemrow['netweight'] == 0 ||  $itemrow['netweight'] == NULL || $itemrow['tally_qty_type'] == 1) ? $itemrow['PRODUCTNAME']."-PCS" : $itemrow['PRODUCTNAME'],

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        
														"Quantity"              => ($itemrow['netweight'] == 0 ||  $itemrow['netweight'] == NULL  || $itemrow['tally_qty_type'] == 1) ? $itemrow['QTY'] : number_format(($itemrow['netweight']), 3,'.',''),

														"Rate"                  => number_format((($itemrow['TOTAL'] -  $itemrow['totstprice'] - $itemrow['omamount'] ) / (($itemrow['netweight'] == 0 || $itemrow['tally_qty_type'] == 1) ? $itemrow['QTY'] : $itemrow['netweight'])), 3, '.', ''),

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($itemrow['TOTAL'] -  $itemrow['totstprice'] - $itemrow['omamount']), 2, '.', ''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "Taxable",

                                                        "GstOvrdnTypeofsupply"   => "Goods",

                                                        "GstHsnName"             => $itemrow['hsn_code'],

                                                        "GstHsnDescription"      => "JEWELLERY OF GOLD UNSET Products Include: Gold Ornaments, On Gold, Pendant",

                                                        "CgstGstRateDutyhead"    => "CGST",

                                                        "CgstGstRateValuationtype"  => "Based on Value",

                                                        "CgstGstRate"             => "1.50",

                                                        "SgstGstRateDutyhead"       => "SGST/UTGST",

                                                        "SgstGstRateValuationtype"   => "Based on Value",

                                                        "SgstGstRate"            => "1.50",

                                                        "IgstGstRateDutyhead"    => "IGST",

                                                        "IgstGstRateValuationtype"  => "Based on Value",

                                                        "IgstGstRate"            => "3",

                                                        "Reference"             => "",

                                                        "ReferenceDate"         => "",

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );


                    

                    if($itemrow['totstwt'] > 0 && $itemrow['totstprice'] > 0){

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => $itemrow['PRODUCTNAME']."PURCHASE",
														
                                                        "LedgerParent"          => "Purchase Accounts",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                         "Stockitem"             => ($itemrow['netweight'] == 0 ||  $itemrow['netweight'] == NULL || $itemrow['tally_qty_type'] == 1) ? $itemrow['PRODUCTNAME']."-PCS" : $itemrow['PRODUCTNAME'],

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        
														"Quantity"              => $itemrow['totstwt'],

                                                        "Rate"                  => number_format(($itemrow['totstprice'] / $itemrow['totstwt']),2,'.',''),

                                                        "Discount"              => "",

                                                        "Amount"                => $itemrow['totstprice'],

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "Taxable",

                                                        "GstOvrdnTypeofsupply"   => "Goods",

                                                        "GstHsnName"             => $itemrow['hsn_code'],

                                                        "GstHsnDescription"      => "JEWELLERY OF GOLD UNSET Products Include: Gold Ornaments, On Gold, Pendant",

                                                        "CgstGstRateDutyhead"    => "CGST",

                                                        "CgstGstRateValuationtype"  => "Based on Value",

                                                        "CgstGstRate"             => "1.50",

                                                        "SgstGstRateDutyhead"       => "SGST/UTGST",

                                                        "SgstGstRateValuationtype"   => "Based on Value",

                                                        "SgstGstRate"            => "1.50",

                                                        "IgstGstRateDutyhead"    => "IGST",

                                                        "IgstGstRateValuationtype"  => "Based on Value",

                                                        "IgstGstRate"            => "3",

                                                        "Reference"             => "",

                                                        "ReferenceDate"         => "",

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );


                    

                }

                if($itemrow['omgrswt'] > 0){                        

                    $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => $itemrow['PRODUCTNAME']."PURCHASE",
														
                                                        "LedgerParent"          => "Purchase Accounts",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                         "Stockitem"             => ($itemrow['netweight'] == 0 ||  $itemrow['netweight'] == NULL || $itemrow['tally_qty_type'] == 1) ? $itemrow['PRODUCTNAME']."-PCS" : $itemrow['PRODUCTNAME'],

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        
														"Quantity"              => number_format($itemrow['omgrswt'], 3,'.',''),

														"Rate"                  => number_format(($itemrow['omamount'] / $itemrow['omgrswt']),2,'.',''),
														
                                                        "Discount"              => "",

                                                        "Amount"                => number_format($itemrow['omamount'],2,'.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "Taxable",

                                                        "GstOvrdnTypeofsupply"   => "Goods",

                                                        "GstHsnName"             => $itemrow['hsn_code'],

                                                        "GstHsnDescription"      => "JEWELLERY OF GOLD UNSET Products Include: Gold Ornaments, On Gold, Pendant",

                                                        "CgstGstRateDutyhead"    => "CGST",

                                                        "CgstGstRateValuationtype"  => "Based on Value",

                                                        "CgstGstRate"             => "1.50",

                                                        "SgstGstRateDutyhead"       => "SGST/UTGST",

                                                        "SgstGstRateValuationtype"   => "Based on Value",

                                                        "SgstGstRate"            => "1.50",

                                                        "IgstGstRateDutyhead"    => "IGST",

                                                        "IgstGstRateValuationtype"  => "Based on Value",

                                                        "IgstGstRate"            => "3",

                                                        "Reference"             => "",

                                                        "ReferenceDate"         => "",

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );


                    }

               


		    

		    }

		

		    if($row->roundoff != 0){

		         $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->bill_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            =>  "Round Off",
														
                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => $row->roundoff > 0 ? "Dr" : "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        
														"Quantity"              => "",

														"Rate"                  => "",
														
                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($row->roundoff), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => "",

                                                        "ReferenceDate"         => "",

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                );


		    }

		}

		return $return_data;

	}

	//Karigar metal receipt from GRN

	function getMaterialReceiptVoucherList($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    $receipt_qeury = $this->db->query("SELECT m.grn_id, m.grn_ref_no, date_format(m.grn_date,'%d-%m-%Y') as receipton,  

                                            date_format(grn_ref_date,'%d-%m-%Y') as grn_ref_date, ifnull(grn_supplier_ref_no, '') as grn_supplier_ref_no,

                                            kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, ifnull(kar.pan_no, '') as pan_no, 

                                            concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                            ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                            IFNULL(m.grn_purchase_amt,0) as total, IFNULL(grn_round_off, 0 ) as grn_round_off , ifnull(kar.gst_number, '') as GSTNO 

                                            FROM ret_grn_entry m  

                                            LEFT JOIN branch as br ON br.id_branch = '1' 

                                            LEFT JOIN ret_karigar as kar ON kar.id_karigar = m.grn_karigar_id 

                                            LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                            LEFT JOIN state as st ON st.id_state = kar.id_state 

		                                    WHERE br.is_ho = 1 AND m.grn_bill_status = 1 AND m.grn_type = 2 AND m.istransfered = 0 

		                                    ".($from_date !='' && $to_date !='' ? " AND DATE(m.grn_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                    GROUP BY m.grn_id");

		foreach($receipt_qeury->result_array() as $btkey => $btval){

		    
		    $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['grn_id'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "MR-".$btval['grn_ref_no'],

                                                    "VoucherDate"       => $btval['receipton'],

                                                    "VoucherType"       => "Smith Manufacture Receipt",

                                                    "VoucherTypeParent" => "Material In",

                                                    "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                                                    "LedgerParent"      => 'Sundry Debtors',

                                                    "LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"          => !empty($btval['GSTNO']) ? 'Consumer' : 'Regular',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Dr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => "",

                                                    "Godown"            => "Main Location",

                                                    "BatchNo"           => "Primary Batch",

                                                    "IsScrap"           => "",

                                                    "Quantity"          => "",

                                                    "Rate"              => "",

                                                    "Discount"          => "",

                                                    "Amount"            => 0, //$btval["total"]

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                   
                                                    "BuyerName"             => $btval['firstname'],

                                                    "BuyerMailingName"      => $btval['firstname'],

                                                    "BuyerAddress1"         => $btval['cuaddress'],

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => $btval['cusstate'],

                                                    "BuyerCountry"      => $btval['cuscountry'],

                                                    "BuyerPincode"      => $btval['cuspincode'],

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"         => $btval['firstname'],

                                                    "ConsigneeMailingName"  => $btval['firstname'],

                                                    "ConsigneeAddress1"     => $btval['cuaddress'],

                                                    "ConsigneeAddress2"     => "",

                                                    "ConsigneeState"        => $btval['cusstate'],

                                                    "ConsigneeCountry"      => $btval['cuscountry'],

                                                    "ConsigneeGSTIN"        => "",

                                                    "ConsigneePincode"      => $btval['cuspincode'],

                                                    "PlaceOfSupply"     => $btval['cusstate'],

                                            		"Reference"         => $btval['grn_supplier_ref_no'],

                                            		"ReferenceDate"     => $btval['grn_ref_date'],

                                            		"VoucherDestinationGodown" => "",

                                                    "VoucherSourceGodown"   => "",

                                                    "Narration"         => ""

    		                                    );

	    

    		$karigarreceipt_query = $this->db->query("SELECT m.grn_id, m.grn_ref_no, date_format(m.grn_date,'%d-%m-%Y') as receipton, cat.name as CategoryName, 

                                                IFNULL(SUM(d.grn_no_of_pcs),0) as piece, IFNULL(SUM(d.grn_gross_wt),0) as gross_wt, 

                                                IFNULL(SUM(d.grn_net_wt),0) as net_wt, date_format(grn_ref_date,'%d-%m-%Y') as grn_ref_date, 

                                                kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, ifnull(kar.pan_no, '') as pan_no, 

                                                concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                                ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                                ifnull(sum(d.grn_wastage), 0) as wastagewt, IFNULL(SUM(d.grn_item_cost),0) as grn_item_cost, 

                                                ifnull(grn_rate_per_grm, 0) as grn_rate_per_grm  

                                                FROM ret_grn_items d 

                                                LEFT JOIN ret_grn_entry m ON m.grn_id = d.grn_item_grn_id 

                                                LEFT JOIN ret_category cat ON cat.id_ret_category = d.grn_item_cat_id 

                                                LEFT JOIN branch as br ON br.id_branch = '1' 

                                                LEFT JOIN ret_karigar as kar ON kar.id_karigar = m.grn_karigar_id 

                                                LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                                LEFT JOIN state as st ON st.id_state = kar.id_state 

    		                                    WHERE d.grn_item_grn_id ='". $btval['grn_id'] ."'

    		                                    GROUP by cat.id_ret_category, d.grn_item_grn_id");

    		

    		foreach($karigarreceipt_query->result_array() as $rbtkey => $rbtval){

    		        $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['grn_id'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "MR-".$btval['grn_ref_no'],

                                                    "VoucherDate"       => $btval['receipton'],

                                                    "VoucherType"       => "Smith Manufacture Receipt",

                                                    "VoucherTypeParent" => "Material In",

                                                    "LedgerName"        => "Smith Receipt",

                                                    "LedgerParent"      => 'Sales Accounts',

                                                    /*"LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"      => 'Consumer',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',*/

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Cr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => $rbtval["CategoryName"],

                                                    "Godown"            => "Main Location",

                                                    "BatchNo"           => "Primary Batch",

                                                    "IsScrap"           => "",

                                                    "Quantity"          => $rbtval["net_wt"],

                                                    "Rate"              => 0, //$rbtval["grn_rate_per_grm"]

                                                    "Discount"          => "",

                                                    "Amount"            => 0, //number_format(($rbtval["grn_item_cost"] - ($rbtval["grn_rate_per_grm"] * $rbtval['wastagewt'])), 2,'.','')

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                    "BuyerName"         => "",

                                                    "BuyerMailingName"  => "",

                                                    "BuyerAddress1"     => "",

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => "",

                                                    "BuyerCountry"      => "",

                                                    "BuyerPincode"      => "",

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"     => "",

                                                    "ConsigneeMailingName" => "",

                                                    "ConsigneeAddress1" => "",

                                                    "ConsigneeAddress2" => "",

                                                    "ConsigneeState"    => "",

                                                    "ConsigneeCountry"  => "",

                                            		"ConsigneePincode"  => "",

                                                    "ConsigneeGSTIN"    => "",

                                                    "PlaceOfSupply"     => "",

                                            		"Reference"         => $btval['grn_supplier_ref_no'],

                                            		"ReferenceDate"     => $btval['grn_ref_date'],

                                            		"VoucherDestinationGodown" => "",

                                                     "VoucherSourceGodown"   => "",

                                                    "Narration"         => ""

    		                                    );

    		    if($rbtval['wastagewt'] > 0){

    		         $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['grn_id'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "MR-".$btval['grn_ref_no'],

                                                    "VoucherDate"       => $btval['receipton'],

                                                    "VoucherType"       => "Material In",

                                                    "VoucherTypeParent" => "Material In",

                                                    "LedgerName"        => "Smith Receipt",

                                                    "LedgerParent"      => 'Sales Accounts',

                                                    /*"LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"      => 'Consumer',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',*/

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Cr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => "Wastage",

                                                    "Godown"            => "Main Location",

                                                    "BatchNo"           => "Primary Batch",

                                                    "IsScrap"           => "",

                                                    "Quantity"          => $rbtval['wastagewt'],

                                                    "Rate"              => 0, //$rbtval["grn_rate_per_grm"]

                                                    "Discount"          => "",

                                                    "Amount"            => 0, // number_format(($rbtval["grn_rate_per_grm"] * $rbtval['wastagewt']), 2, '.','')

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                    "BuyerName"         => "",

                                                    "BuyerMailingName"  => "",

                                                    "BuyerAddress1"     => "",

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => "",

                                                    "BuyerCountry"      => "",

                                                    "BuyerPincode"      => "",

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"     => "",

                                                    "ConsigneeMailingName" => "",

                                                    "ConsigneeAddress1" => "",

                                                    "ConsigneeAddress2" => "",

                                                    "ConsigneeState"    => "",

                                                    "ConsigneeCountry"  => "",

                                            		"ConsigneePincode"  => "",

                                                    "ConsigneeGSTIN"    => "",

                                                    "PlaceOfSupply"     => "",

                                            		"Reference"         => $btval['grn_supplier_ref_no'],

                                            		"ReferenceDate"     => $btval['grn_ref_date'],

                                            		"VoucherDestinationGodown" => "",

                                                    "VoucherSourceGodown"   => "",

                                                    "Narration"         => ""

    		                                    );

    		    }

    		}

            

    		

    		/*if($btval['grn_round_off'] != 0){

    		    

             $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $btval['grn_id'],

                                                        "CompanyNumber"         => 1,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => "MR-".$btval['grn_ref_no'],

                                                        "VoucherDate"           => $btval['receipton'],

                                                        "VoucherType"           => "Material In",

                                                        "VoucherTypeParent"     => "Material In",

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        
                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $btval['grn_round_off'] > 0 ? "Cr" : "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => 1,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "Main Location",

                                                        "BatchNo"               => "Primary Batch",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($btval['grn_round_off']), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

														"DeliveryNoteNo1"   => "",

														"DeliveryNoteDate1" => "",

														"DeliveryNoteNo2"   => "",

														"DeliveryNoteDate2" => "",		

														"DeliveryNoteNo3"   => "",

														"DeliveryNoteDate3" => "",

														"DeliveryNoteNo4"   => "",

														"DeliveryNoteDate4" => "",

														"DeliveryNoteNo5"   => "",

														"DeliveryNoteDate5" => "",		

														"DeliveryNoteNo6"   => "",

														"DeliveryNoteDate6" => "",

														"DeliveryNoteNo7"   => "",

														"DeliveryNoteDate7" => "",

														"DeliveryNoteNo8"   => "",

														"DeliveryNoteDate8" => "",

														"DeliveryNoteNo9"   => "",

														"DeliveryNoteDate9" => "",

														"DeliveryNoteNo10"  => "",

														"DeliveryNoteDate10"=> "",	



                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => "",

                                                        "BuyerMailingName"  => "",

                                                        "BuyerAddress1"     => "",

                                                        "BuyerAddress2"     => "",

                                                        "BuyerState"        => "",

                                                        "BuyerCountry"      => "",

                                                        "BuyerPincode"      => "",

                                                        "BuyerGSTIN"        => "",

                                                        "ConsigneeName"     => "",

                                                        "ConsigneeMailingName" => "",

                                                        "ConsigneeAddress1" => "",

                                                        "ConsigneeAddress2" => "",

                                                        "ConsigneeState"    => "",

                                                        "ConsigneeCountry"  => "",

                                                		"ConsigneePincode"  => "",

                                                        "ConsigneeGSTIN"    => "",

														"Reference"         => $btval['grn_supplier_ref_no'],

														"ReferenceDate"     => $btval['grn_ref_date'],

                                                        "PlaceOfSupply"     => "",

                                                        "VoucherDestinationGodown" => "",

                                                        "VoucherSourceGodown"   => "",

                                                        "Narration"             => "",

														

                                                );    

            

    		}*/

		}
        
         //After polishing receipt details

         $polishigreceipt_query = $this->db->query("SELECT pr.process_no, pr.id_old_metal_process, date_format(pr.`date_add`,'%d-%m-%Y') as issueon, cat.name as CategoryName, 

         IFNULL(SUM(d.no_of_piece),0) as piece, IFNULL(SUM(d.gross_wt),0) as gross_wt, 

         IFNULL(SUM(d.net_wt),0) as net_wt,

         kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

         concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

         ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 
         
         ifnull(kar.gst_number, '') as GSTNO 

         FROM ret_old_metal_polishing_recd_details d 

         LEFT JOIN ret_old_metal_polishing m ON m.id_polishing = d.id_polishing 

         LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = m.id_old_metal_process_receipt 

         LEFT JOIN ret_category cat ON cat.id_ret_category = d.id_category 

         LEFT JOIN branch as br ON br.id_branch = '1' 

         LEFT JOIN ret_karigar as kar ON kar.id_karigar = pr.id_karigar 

         LEFT JOIN country as cn ON cn.id_country = kar.id_country 

         LEFT JOIN state as st ON st.id_state = kar.id_state 

         WHERE br.is_ho = 1 AND pr.process_for = 2 AND pr.inistransfered = 0 

         ".($from_date !='' && $to_date !='' ? " AND DATE(pr.date_add) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

         GROUP by pr.id_old_metal_process");

        //echo $this->db->last_query();exit;

        foreach($polishigreceipt_query->result_array() as $btkey => $btval){

            $return_data['VOUCHER'][] = array(

                   "Autoid"            => $btval['id_old_metal_process'],

                   "CompanyNumber"     => 1,

                   "TallyMasterid"     => 1,

                   "Voucherid"         => "",

                   "VoucherNumber"     => "OMPR-".$btval['process_no'],

                   "VoucherDate"       => $btval['issueon'],

                   "VoucherType"       => "Smith Polishing Receipt",

                   "VoucherTypeParent" => "Material In",

                   "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                   "LedgerParent"      => 'Sundry Debtors',

                   "LedgerAddress"     => $btval['cuaddress'],

                   "LedgerState"       => $btval['cusstate'],

                   "LedgerCountry"     => $btval['cuscountry'],

                   "LedgerPincode"     => $btval['cuspincode'],

                   "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                   "LedgerGstReg"          => !empty($btval['GSTNO']) ? 'Consumer' : 'Regular',

                   "LedgerGstin"       => '',

                   "BillName"          => "",

                   "BillDate"          => "",

                   "CrDr"              => "Dr",

                   "CostCategory"      => "",

                   "CostCentre"        => 1,

                   "Stockitem"         => "",

                   "Godown"            => "Main Location",

                   "BatchNo"           => "Primary Batch",

                   "IsScrap"           => "",

                   "Quantity"          => "",

                   "Rate"              => "",

                   "Discount"          => "",

                   "Amount"            => "",

                   "OrderNo"           => "",

                   "OrderDate"         => "",

                   "TrackingNo"        => "",

                   "TrackingDate"      => "",

                   "TermsOfPayment"    => "",

                   "OtherRef"          => "",

                   "TermsOfDelivery1"  => "",

                   "TermsOfDelivery2"  => "",

                   "DeliveryNoteNo1"   => "",

                   "DeliveryNoteDate1" => "",

                   "DeliveryNoteNo2"   => "",

                   "DeliveryNoteDate2" => "",		

                   "DeliveryNoteNo3"   => "",

                   "DeliveryNoteDate3" => "",

                   "DeliveryNoteNo4"   => "",

                   "DeliveryNoteDate4" => "",

                   "DeliveryNoteNo5"   => "",

                   "DeliveryNoteDate5" => "",		

                   "DeliveryNoteNo6"   => "",

                   "DeliveryNoteDate6" => "",

                   "DeliveryNoteNo7"   => "",

                   "DeliveryNoteDate7" => "",

                   "DeliveryNoteNo8"   => "",

                   "DeliveryNoteDate8" => "",

                   "DeliveryNoteNo9"   => "",

                   "DeliveryNoteDate9" => "",

                   "DeliveryNoteNo10"  => "",

                   "DeliveryNoteDate10"=> "",		

                   "DispatchDocNo"     => "",

                   "ReceiptDocNo"      => "",

                   "DispatchedThrough" => "",

                   "Destination"       => "",

                   "CarrierName"       => "",

                   "BillOfLanding"     => "",

                   "BillOfLandingDate" => "",

                   "VehicleNo"         => "",

                   "BuyerName"         => $btval['firstname'],

                   "BuyerMailingName"  => $btval['firstname'],

                   "BuyerAddress1"     => $btval['cuaddress'],

                   "BuyerAddress2"     => "",

                   "BuyerState"        => $btval['cusstate'],

                   "BuyerCountry"      => $btval['cuscountry'],

                   "BuyerPincode"      => $btval['cuspincode'],

                   "BuyerGSTIN"        => "",

                   "ConsigneeName"         => $btval['firstname'],

                    "ConsigneeMailingName"  => $btval['firstname'],

                    "ConsigneeAddress1"     => $btval['cuaddress'],

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => $btval['cusstate'],

                    "ConsigneeCountry"      => $btval['cuscountry'],

                    "ConsigneeGSTIN"        => "",

                    "ConsigneePincode"      => $btval['cuspincode'],

                   "ConsigneeGSTIN"    => "",

                   "PlaceOfSupply"     => $btval['cusstate'],

                   "Reference"         => "",

                   "ReferenceDate"     => "",

                   "VoucherDestinationGodown" => "",

                   "VoucherSourceGodown"   => "",

                   "Narration"         => "",
                   
                   "Void"              => "in" 

               );

                    $polishigreceipt_det_query = $this->db->query("SELECT  cat.name as CategoryName, 

                    IFNULL(SUM(d.no_of_piece),0) as piece, IFNULL(SUM(d.gross_wt),0) as gross_wt, 
            
                    IFNULL(SUM(d.net_wt),0) as net_wt 
            
                    FROM ret_old_metal_polishing_recd_details d 
            
                    LEFT JOIN ret_old_metal_polishing m ON m.id_polishing = d.id_polishing 
            
                    LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = m.id_old_metal_process_receipt 
            
                    LEFT JOIN ret_category cat ON cat.id_ret_category = d.id_category 
            
                    WHERE pr.id_old_metal_process = '".$btval['id_old_metal_process']."'
            
                    GROUP by cat.id_ret_category");

                    foreach($polishigreceipt_det_query->result_array() as $bdtkey => $bdtval){

                        $return_data['VOUCHER'][] = array(
            
                               "Autoid"            => $btval['id_old_metal_process'],
            
                               "CompanyNumber"     => 1,
            
                               "TallyMasterid"     => 1,
            
                               "Voucherid"         => "",
            
                               "VoucherNumber"     => "OMPR-".$btval['process_no'],
            
                               "VoucherDate"       => $btval['issueon'],
            
                               "VoucherType"       => "Smith Polishing Receipt",
            
                               "VoucherTypeParent" => "Material In",
            
                               "LedgerName"        => "Polishing Receipt",
            
                               "LedgerParent"      => 'Sales Accounts',
            
                               "LedgerAddress"     => $btval['cuaddress'],
            
                               "LedgerState"       => $btval['cusstate'],
            
                               "LedgerCountry"     => $btval['cuscountry'],
            
                               "LedgerPincode"     => $btval['cuspincode'],
            
                               "LedgerMobile"      => "+91".$btval['CONTACTNO'],
            
                               "LedgerGstReg"      => 'Consumer',
            
                               "LedgerGstin"       => '',
            
                               "BillName"          => "",
            
                               "BillDate"          => "",
            
                               "CrDr"              => "Cr",
            
                               "CostCategory"      => "",
            
                               "CostCentre"        => 1,
            
                               "Stockitem"         => $bdtval["CategoryName"],
            
                               "Godown"            => "Main Location",
            
                               "BatchNo"           => "Primary Batch",
            
                               "IsScrap"           => "",
            
                               "Quantity"          => $bdtval["net_wt"],
            
                               "Rate"              => "",
            
                               "Discount"          => "",
            
                               "Amount"            => "",
            
                               "OrderNo"           => "",
            
                               "OrderDate"         => "",
            
                               "TrackingNo"        => "",
            
                               "TrackingDate"      => "",
            
                               "TermsOfPayment"    => "",
            
                               "OtherRef"          => "",
            
                               "TermsOfDelivery1"  => "",
            
                               "TermsOfDelivery2"  => "",
            
                               "DeliveryNoteNo1"   => "",
            
                               "DeliveryNoteDate1" => "",
            
                               "DeliveryNoteNo2"   => "",
            
                               "DeliveryNoteDate2" => "",		
            
                               "DeliveryNoteNo3"   => "",
            
                               "DeliveryNoteDate3" => "",
            
                               "DeliveryNoteNo4"   => "",
            
                               "DeliveryNoteDate4" => "",
            
                               "DeliveryNoteNo5"   => "",
            
                               "DeliveryNoteDate5" => "",		
            
                               "DeliveryNoteNo6"   => "",
            
                               "DeliveryNoteDate6" => "",
            
                               "DeliveryNoteNo7"   => "",
            
                               "DeliveryNoteDate7" => "",
            
                               "DeliveryNoteNo8"   => "",
            
                               "DeliveryNoteDate8" => "",
            
                               "DeliveryNoteNo9"   => "",
            
                               "DeliveryNoteDate9" => "",
            
                               "DeliveryNoteNo10"  => "",
            
                               "DeliveryNoteDate10"=> "",		
            
                               "DispatchDocNo"     => "",
            
                               "ReceiptDocNo"      => "",
            
                               "DispatchedThrough" => "",
            
                               "Destination"       => "",
            
                               "CarrierName"       => "",
            
                               "BillOfLanding"     => "",
            
                               "BillOfLandingDate" => "",
            
                               "VehicleNo"         => "",
            
                               "BuyerName"         => "",
            
                               "BuyerMailingName"  => "",
            
                               "BuyerAddress1"     => "",
            
                               "BuyerAddress2"     => "",
            
                               "BuyerState"        => "",
            
                               "BuyerCountry"      => "",
            
                               "BuyerPincode"      => "",
            
                               "BuyerGSTIN"        => "",
            
                               "ConsigneeName"     => "",
            
                               "ConsigneeMailingName" => "",
            
                               "ConsigneeAddress1" => "",
            
                               "ConsigneeAddress2" => "",
            
                               "ConsigneeState"    => "",
            
                               "ConsigneeCountry"  => "",
            
                               "ConsigneePincode"  => "",
            
                               "ConsigneeGSTIN"    => "",
            
                               "PlaceOfSupply"     => "",
            
                               "Reference"         => "",
            
                               "ReferenceDate"     => "",
            
                               "VoucherDestinationGodown" => "",
            
                               "VoucherSourceGodown"   => "",
            
                               "Narration"         => "",
                               
                               "Void"              => "in" 
            
                           );
                        }
      


       }
		
		return $return_data;

	}
	
    

	

	function getMaterialIssueVoucherList($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }



	    $trans_query = $this->db->query("SELECT metiss.`met_issue_id`, metiss.`met_issue_karid`, metiss.`met_issue_ref_id`, 

                                        date_format(metiss.`met_issue_date`,'%d-%m-%Y') as issueon, `issue_aganist`, metiss.`id_order`, metiss.`bill_status`,

                                        kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, ifnull(kar.pan_no, '') as pan_no, 

                                        ifnull(kar.gst_number, '') as GSTNO, 

                                            concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                            ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

										ifnull(round((SELECT sum((issdet.issue_metal_pur_wt * issue_metal_purrate)) as totalamt 

										            FROM `ret_karigar_metal_issue_details` issdet WHERE issdet.issue_met_parent_id = metiss.met_issue_id)),0) as TOTAL,

										(SELECT (round(sum(CAST(((issdet.issue_metal_pur_wt * issue_metal_purrate)) AS DECIMAL(10,2)))) - sum(CAST(((issdet.issue_metal_pur_wt * issue_metal_purrate)) AS DECIMAL(10,2)))) as rval 

										        FROM `ret_karigar_metal_issue_details` issdet WHERE issdet.issue_met_parent_id = metiss.met_issue_id) as roundval 

                                        FROM `ret_karigar_metal_issue` metiss

                                        LEFT JOIN ret_karigar as kar ON kar.id_karigar = metiss.met_issue_karid 

                                        LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                        LEFT JOIN state as st ON st.id_state = kar.id_state 

                                        WHERE metiss.`bill_status` = 1 AND metiss.istransfered = 0 

                                        ".($from_date !='' && $to_date !='' ? " AND DATE(metiss.`met_issue_date`) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                        GROUP BY met_issue_id");

        

	    foreach($trans_query->result_array() as $btkey => $btval){

	        $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['met_issue_id'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "MI-".$btval['met_issue_ref_id'],

                                                    "VoucherDate"       => $btval['issueon'],

                                                    "VoucherType"       => "Smith Manufacture Issue",

                                                    "VoucherTypeParent" => "Material Out",

                                                    "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                                                    "LedgerParent"      => 'Sundry Debtors',

                                                    "LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"      => !empty($btval['GSTNO']) ? 'Consumer' : 'Regular',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Dr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => "",

                                                    "Godown"            => "Main Location",

                                                    "BatchNo"           => "Primary Batch",

                                                    "IsScrap"           => "",

                                                    "Quantity"          => "",

                                                    "Rate"              => "",

                                                    "Discount"          => "",

                                                    "Amount"            => $btval["TOTAL"],

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                    "BuyerName"             => $btval['firstname'],

                                                    "BuyerMailingName"      => $btval['firstname'],

                                                    "BuyerAddress1"         => $btval['cuaddress'],

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => $btval['cusstate'],

                                                    "BuyerCountry"      => $btval['cuscountry'],

                                                    "BuyerPincode"      => $btval['cuspincode'],

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"         => $btval['firstname'],

                                                    "ConsigneeMailingName"  => $btval['firstname'],

                                                    "ConsigneeAddress1"     => $btval['cuaddress'],

                                                    "ConsigneeAddress2"     => "",

                                                    "ConsigneeState"        => $btval['cusstate'],

                                                    "ConsigneeCountry"      => $btval['cuscountry'],

                                                    "ConsigneeGSTIN"        => "",

                                                    "ConsigneePincode"      => $btval['cuspincode'],

                                                    "ConsigneeGSTIN"    => "",

                                                    "PlaceOfSupply"     => $btval['cusstate'],

                                            		"Reference"         => "",

                                            		"ReferenceDate"     => "",

                                            		"VoucherDestinationGodown" => "",

                                                    "VoucherSourceGodown"   => "",

                                                    "Narration"         => ""

    		                                    );

    		$detail_query = $this->db->query("SELECT issue_met_id, 

										sum(issdet.issue_metal_pur_wt) as GrossWeight, 

										sum(1) as Quantity, issue_metal_purrate, sum(issdet.issue_metal_pur_wt * issue_metal_purrate) as totalcost,

										issue_metal_purrate, 

										cat.hsn_code as HSNCode, cat.name as CategoryName 

										FROM `ret_karigar_metal_issue_details` issdet 

										LEFT JOIN ret_category as cat ON cat.id_ret_category = issdet.issue_cat_id  

										WHERE issue_met_parent_id = '".$btval['met_issue_id']."'

										GROUP BY cat.id_ret_category");    

			foreach($detail_query->result_array() as $rbtkey => $rbtval){

			    $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['met_issue_id'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "MI-".$btval['met_issue_ref_id'],

                                                    "VoucherDate"       => $btval['issueon'],

                                                    "VoucherType"       => "Smith Manufacture Issue",

                                                    "VoucherTypeParent" => "Material Out",

                                                    "LedgerName"        => "Smith Issue",

                                                    "LedgerParent"      => 'Sales Accounts',

                                                    /*"LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"      => 'Consumer',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',*/

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Cr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => $rbtval["CategoryName"],

                                                    "Godown"            => "Main Location",

                                                    "BatchNo"           => "Primary Batch",

                                                    "IsScrap"           => "",

                                                    "Quantity"          => $rbtval["GrossWeight"],

                                                    "Rate"              => $rbtval["issue_metal_purrate"],

                                                    "Discount"          => "",

                                                    "Amount"            => number_format($rbtval["totalcost"], 2,'.',''),

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                    "BuyerName"         => "",

                                                    "BuyerMailingName"  => "",

                                                    "BuyerAddress1"     => "",

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => "",

                                                    "BuyerCountry"      => "",

                                                    "BuyerPincode"      => "",

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"     => "",

                                                    "ConsigneeMailingName" => "",

                                                    "ConsigneeAddress1" => "",

                                                    "ConsigneeAddress2" => "",

                                                    "ConsigneeState"    => "",

                                                    "ConsigneeCountry"  => "",

                                            		"ConsigneePincode"  => "",

                                                    "ConsigneeGSTIN"    => "",

                                                    "PlaceOfSupply"     => "",

                                            		"Reference"         => "",

                                            		"ReferenceDate"     => "",

                                            		"VoucherDestinationGodown" => "",

                                                    "VoucherSourceGodown"   => "",

                                                    "Narration"         => ""

    		                                    );

    		

			    

			}

			

			if($btval['roundval'] != 0){

    		    

             $return_data['VOUCHER'][] = array(

                                                        "Autoid"            => $btval['met_issue_id'],

                                                        "CompanyNumber"     => 1,

                                                        "TallyMasterid"     => 1,

                                                        "Voucherid"         => "",

                                                        "VoucherNumber"     => "MI-".$btval['met_issue_ref_id'],

                                                        "VoucherDate"       => $btval['issueon'],

                                                        "VoucherType"           => "Material Out",

                                                        "VoucherTypeParent"     => "Material Out",

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        /*"LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",*/

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $btval['roundval'] > 0 ? "Cr" : "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => 1,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "Main Location",

                                                        "BatchNo"               => "Primary Batch",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($btval['roundval']), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => "",

                                                        "BuyerMailingName"  => "",

                                                        "BuyerAddress1"     => "",

                                                        "BuyerAddress2"     => "",

                                                        "BuyerState"        => "",

                                                        "BuyerCountry"      => "",

                                                        "BuyerPincode"      => "",

                                                        "BuyerGSTIN"        => "",

                                                        "ConsigneeName"     => "",

                                                        "ConsigneeMailingName" => "",

                                                        "ConsigneeAddress1" => "",

                                                        "ConsigneeAddress2" => "",

                                                        "ConsigneeState"    => "",

                                                        "ConsigneeCountry"  => "",

                                                		"ConsigneePincode"  => "",

                                                        "ConsigneeGSTIN"    => "",

                                                        "PlaceOfSupply"     => "",

                                                        "VoucherDestinationGodown" => "",

                                                        "VoucherSourceGodown"   => "",

                                                        "Narration"             => ""

                                                );    

            

    		}

    		

	    }

        //Polishing Issue details

		$metalissue_query = $this->db->query("SELECT pr.process_no, pr.id_old_metal_process, date_format(pr.`date_add`,'%d-%m-%Y') as issueon, oldt.id_metal_type, 

        oldt.metal_type as CategoryName, IFNULL(SUM(d.issue_pcs),0) as piece, IFNULL(SUM(d.issue_gwt),0) as gross_wt, 

        IFNULL(SUM(d.issue_nwt),0) as net_wt, 

        kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

        concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

        ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

        ifnull(kar.gst_number, '') as GSTNO  

        FROM ret_old_metal_polishing_details d 

        LEFT JOIN ret_old_metal_polishing p ON p.id_polishing = d.id_polishing 

        LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = p.id_old_metal_process 

        LEFT JOIN ret_old_metal_type oldt ON oldt.id_metal_type = d.id_old_metal_type 

        LEFT JOIN branch as br ON br.id_branch = '1' 

        LEFT JOIN ret_karigar as kar ON kar.id_karigar = pr.id_karigar 

        LEFT JOIN country as cn ON cn.id_country = kar.id_country 

        LEFT JOIN state as st ON st.id_state = kar.id_state 

        WHERE br.is_ho = 1 AND pr.process_for = 1 AND pr.outistransfered = 0 

        ".($from_date !='' && $to_date !='' ? " AND DATE(pr.date_add) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

        GROUP by pr.id_old_metal_process");

        foreach($metalissue_query->result_array() as $btkey => $btval){

            $return_data['VOUCHER'][] = array(

                    "Autoid"            => $btval['id_old_metal_process'],

                    "CompanyNumber"     => 1,

                    "TallyMasterid"     => 1,

                    "Voucherid"         => "",

                    "VoucherNumber"     => "OMPI-".$btval['process_no'],

                    "VoucherDate"       => $btval['issueon'],

                    "VoucherType"       => "Smith Polishing Issue",

                    "VoucherTypeParent" => "Material Out",

                    "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                    "LedgerParent"      => 'Sundry Debtors', 

                    "LedgerGstReg"          => !empty($btval['GSTNO']) ? 'Consumer' : 'Regular',

                    "BillName"          => "",

                    "BillDate"          => "",

                    "CrDr"              => "Dr",

                    "CostCategory"      => "",

                    "CostCentre"        => 1,

                    "Stockitem"         => "",

                    "Godown"            => "Main Location",

                    "BatchNo"           => "Primary Batch",

                    "Quantity"          => "",

                    "Rate"              => "",

                    "Discount"          => "",

                    "Amount"            => "",

                    "OrderNo"           => "",

                    "OrderDate"         => "",

                    "TrackingNo"        => "",

                    "TrackingDate"      => "",

                    "TermsOfPayment"    => "",

                    "OtherRef"          => "",

                    "TermsOfDelivery1"  => "",

                    "TermsOfDelivery2"  => "",

                    "DeliveryNoteNo1"   => "",

                    "DeliveryNoteDate1" => "",

                    "DeliveryNoteNo2"   => "",

                    "DeliveryNoteDate2" => "",		

                    "DeliveryNoteNo3"   => "",

                    "DeliveryNoteDate3" => "",

                    "DeliveryNoteNo4"   => "",

                    "DeliveryNoteDate4" => "",

                    "DeliveryNoteNo5"   => "",

                    "DeliveryNoteDate5" => "",		

                    "DeliveryNoteNo6"   => "",

                    "DeliveryNoteDate6" => "",

                    "DeliveryNoteNo7"   => "",

                    "DeliveryNoteDate7" => "",

                    "DeliveryNoteNo8"   => "",

                    "DeliveryNoteDate8" => "",

                    "DeliveryNoteNo9"   => "",

                    "DeliveryNoteDate9" => "",

                    "DeliveryNoteNo10"  => "",

                    "DeliveryNoteDate10"=> "",		

                    "DispatchDocNo"     => "",

                    "ReceiptDocNo"      => "",

                    "DispatchedThrough" => "",

                    "Destination"       => "",

                    "CarrierName"       => "",

                    "BillOfLanding"     => "",

                    "BillOfLandingDate" => "",

                    "VehicleNo"         => "",

                    "BuyerName"             => $btval['firstname'],

                    "BuyerMailingName"      => $btval['firstname'],

                    "BuyerAddress1"         => $btval['cuaddress'],

                    "BuyerAddress2"     => "",

                    "BuyerState"        => $btval['cusstate'],

                    "BuyerCountry"      => $btval['cuscountry'],

                    "BuyerPincode"      => $btval['cuspincode'],

                    "BuyerGSTIN"        => "",

                    
                    "ConsigneeName"         => $btval['firstname'],

                    "ConsigneeMailingName"  => $btval['firstname'],

                    "ConsigneeAddress1"     => $btval['cuaddress'],

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => $btval['cusstate'],

                    "ConsigneeCountry"      => $btval['cuscountry'],

                    "ConsigneeGSTIN"        => "",

                    "ConsigneePincode"      => $btval['cuspincode'],

                    "ConsigneeGSTIN"    => "",

                    "PlaceOfSupply"     => $btval['cusstate'],

                    "Reference"         => "",

                    "ReferenceDate"     => "",

                    "VoucherDestinationGodown" => "",

                    "VoucherSourceGodown"   => "",

                    "Narration"         => "",

                    "Void"              => "out" 

            );
            
            $metalissue_det_query = $this->db->query("SELECT oldt.id_metal_type, 

                                                    oldt.metal_type as CategoryName, IFNULL(SUM(d.issue_pcs),0) as piece, 

                                                    IFNULL(SUM(d.issue_gwt),0) as gross_wt, 

                                                    IFNULL(SUM(d.issue_nwt),0) as net_wt
                                                    FROM ret_old_metal_polishing_details d 

                                                    LEFT JOIN ret_old_metal_polishing p ON p.id_polishing = d.id_polishing 

                                                    LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = p.id_old_metal_process 

                                                    LEFT JOIN ret_old_metal_type oldt ON oldt.id_metal_type = d.id_old_metal_type 

                                                    
                                                    WHERE pr.id_old_metal_process = '".$btval['id_old_metal_process']."'

                                                    GROUP by oldt.id_metal_type");


        foreach($metalissue_det_query->result_array() as $bdtkey => $bdtval){

            $return_data['VOUCHER'][] = array(

                    "Autoid"            => $btval['id_old_metal_process'],

                    "CompanyNumber"     => 1,

                    "TallyMasterid"     => 1,

                    "Voucherid"         => "",

                    "VoucherNumber"     => "OMPI-".$btval['process_no'],

                    "VoucherDate"       => $btval['issueon'],

                    "VoucherType"       => "Smith Polishing Issue",

                    "VoucherTypeParent" => "Material Out",

                    "LedgerName"        => "Polishing Issue",

                    "LedgerParent"      => 'Sales Accounts',

                    "BillName"          => "",

                    "BillDate"          => "",

                    "CrDr"              => "Cr",

                    "CostCategory"      => "",

                    "CostCentre"        => 1,

                    "Stockitem"         => $bdtval["CategoryName"],

                    "Godown"            => "Main Location",

                    "BatchNo"           => "Primary Batch",

                    "Quantity"          => $bdtval["net_wt"],

                    "Rate"              => "",

                    "Discount"          => "",

                    "Amount"            => "",

                    "OrderNo"           => "",

                    "OrderDate"         => "",

                    "TrackingNo"        => "",

                    "TrackingDate"      => "",

                    "TermsOfPayment"    => "",

                    "OtherRef"          => "",

                    "TermsOfDelivery1"  => "",

                    "TermsOfDelivery2"  => "",

                    "DeliveryNoteNo1"   => "",

                    "DeliveryNoteDate1" => "",

                    "DeliveryNoteNo2"   => "",

                    "DeliveryNoteDate2" => "",		

                    "DeliveryNoteNo3"   => "",

                    "DeliveryNoteDate3" => "",

                    "DeliveryNoteNo4"   => "",

                    "DeliveryNoteDate4" => "",

                    "DeliveryNoteNo5"   => "",

                    "DeliveryNoteDate5" => "",		

                    "DeliveryNoteNo6"   => "",

                    "DeliveryNoteDate6" => "",

                    "DeliveryNoteNo7"   => "",

                    "DeliveryNoteDate7" => "",

                    "DeliveryNoteNo8"   => "",

                    "DeliveryNoteDate8" => "",

                    "DeliveryNoteNo9"   => "",

                    "DeliveryNoteDate9" => "",

                    "DeliveryNoteNo10"  => "",

                    "DeliveryNoteDate10"=> "",		

                    "DispatchDocNo"     => "",

                    "ReceiptDocNo"      => "",

                    "DispatchedThrough" => "",

                    "Destination"       => "",

                    "CarrierName"       => "",

                    "BillOfLanding"     => "",

                    "BillOfLandingDate" => "",

                    "VehicleNo"         => "",

                    "BuyerName"         => "",

                    "BuyerMailingName"  => "",

                    "BuyerAddress1"     => "",

                    "BuyerAddress2"     => "",

                    "BuyerState"        => "",

                    "BuyerCountry"      => "",

                    "BuyerPincode"      => "",

                    "BuyerGSTIN"        => "",

                    "ConsigneeName"     => "",

                    "ConsigneeMailingName" => "",

                    "ConsigneeAddress1" => "",

                    "ConsigneeAddress2" => "",

                    "ConsigneeState"    => "",

                    "ConsigneeCountry"  => "",

                    "ConsigneePincode"  => "",

                    "ConsigneeGSTIN"    => "",

                    "PlaceOfSupply"     => "",

                    "Reference"         => "",

                    "ReferenceDate"     => "",

                    "VoucherDestinationGodown" => "",

                    "VoucherSourceGodown"   => "",

                    "Narration"         => "",

                    "Void"              => "out" 

            );
        }
       
    
    }

		return $return_data;

	}

	

	function getDeliveryNoteIssueVoucherList($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }


	    $issue_qeury = $this->db->query("SELECT m.id_stock_issue, m.issue_no, date_format(m.issue_date,'%d-%m-%Y') as issueon,  

        kar.firstname, kar.lastname, kar.mobile as CONTACTNO, '' as pan_no, 

        '' as cuaddress, 

        '' as cuspincode, '' as cusstate,  '' as cuscountry, 

        0 as total, 0 as round_off,  '' as GSTNO , sum(tag.gross_wt) as gross_wt, sum(tag.sales_value) as sales_value, 
        
        br.id_branch as idbranch  

        FROM ret_stock_issue m  

        LEFT JOIN ret_stock_issue_detail as sti ON sti.id_stock_issue  = m.id_stock_issue 

        LEFT JOIN ret_taging as tag ON tag.tag_id = sti.tag_id 

        LEFT JOIN branch as br ON br.is_ho = 1 

        LEFT JOIN employee as kar ON kar.id_employee = m.issued_to 

        LEFT JOIN country as cn ON cn.id_country = 101  

        LEFT JOIN state as st ON st.id_state = 35  

        WHERE br.is_ho = 1 AND m.status = 1 AND m.outistransfered = 0 

        ".($from_date !='' && $to_date !='' ? " AND DATE(m.issue_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

        GROUP BY m.id_stock_issue HAVING sales_value > 0");

		foreach($issue_qeury->result_array() as $btkey => $btval){

		    

		    $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['id_stock_issue'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "SI-".$btval['issue_no'],

                                                    "VoucherDate"       => $btval['issueon'],

                                                    "VoucherType"       => "Delivery Note",

                                                    "VoucherTypeParent" => "Delivery Note",

                                                    "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                                                    "LedgerParent"      => 'Sundry Debtors',

                                                    "LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"          => !empty($btval['GSTNO']) ? 'Consumer' : 'Regular',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Dr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => "",

                                                    "Godown"            => 1,

                                                    "BatchNo"           => $btval['idbranch'],

                                                    "IsScrap"           => "",

                                                    "Quantity"          => number_format($btval['gross_wt'], 2, '.', ''),

                                                    "Rate"              => number_format(($btval["sales_value"] / $btval['gross_wt']), 2, '.', ''),

                                                    "Discount"          => "",

                                                    "Amount"            => $btval["sales_value"],

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                    "BuyerName"         => "",

                                                    "BuyerMailingName"  => "",

                                                    "BuyerAddress1"     => "",

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => "",

                                                    "BuyerCountry"      => "",

                                                    "BuyerPincode"      => "",

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"     => "",

                                                    "ConsigneeMailingName" => "",

                                                    "ConsigneeAddress1" => "",

                                                    "ConsigneeAddress2" => "",

                                                    "ConsigneeState"    => "",

                                                    "ConsigneeCountry"  => "",

                                            		"ConsigneePincode"  => "",

                                                    "ConsigneeGSTIN"    => "",

                                                    "PlaceOfSupply"     => "",

                                            		"Reference"         => "",

                                            		"ReferenceDate"     => "",

                                            		"VoucherSourceGodown" => "",

                                                    "Narration"         => ""

    		                                    );

	    

    		$karigarreceipt_query = $this->db->query("SELECT pr.product_name as ItemName, 

										sum(tag.gross_wt) as GrossWeight, cat.id_ret_category, 

										ifnull(sum(tag.net_wt),0) as NetWeight, ifnull(sum(tag.piece), 0) as Quantity, 

										ifnull(sum(tag.less_wt),0) as LesWeight, 

										ifnull(sum(sales_value),0) as total_salevalue, 

										cat.hsn_code as HSNCode, cat.name as CategoryName, pr.sales_mode, cat.tally_qty_type, 

										sum(ifnull((SELECT sum(pieces) as pieces  

                                                    FROM ret_taging_stone bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 

                                                    AND bs.tag_id = tag.tag_id HAVING pieces > 0), 0 )) as totaldiapcs,

                                        sum(ifnull((SELECT sum((bs.wt)) as totwt FROM ret_taging_stone bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 

                                                    AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )) as totaldiawt

										FROM `ret_stock_issue_detail` trtag 

										LEFT JOIN ret_stock_issue as bt ON bt.id_stock_issue = trtag.id_stock_issue 

										LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id 

										LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id 

										LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id 

										WHERE trtag.id_stock_issue = '".$btval['id_stock_issue']."' 

										GROUP BY cat.id_ret_category");

    		

    		foreach($karigarreceipt_query->result_array() as $rbtkey => $rbtval){

    		        $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['id_stock_issue'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "SI-".$btval['issue_no'],

                                                    "VoucherDate"       => $btval['issueon'],

                                                    "VoucherType"       => "Delivery Note",

                                                    "VoucherTypeParent" => "Delivery Note",

                                                    "LedgerName"        => "GST Sales",

                                                    "LedgerParent"      => 'Sales Accounts',

                                                    "LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"      => 'Consumer',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Cr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => $rbtval["CategoryName"],

                                                    "Godown"            => 1,

                                                    "BatchNo"           => $btval['idbranch'],

                                                    "IsScrap"           => "",

                                                    "Quantity"          => $rbtval["GrossWeight"],

                                                    "Rate"              => number_format(($rbtval["total_salevalue"] / $rbtval["GrossWeight"]), 2,'.',''),

                                                    "Discount"          => "",

                                                    "Amount"            => $rbtval["total_salevalue"],

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                    "BuyerName"         => "",

                                                    "BuyerMailingName"  => "",

                                                    "BuyerAddress1"     => "",

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => "",

                                                    "BuyerCountry"      => "",

                                                    "BuyerPincode"      => "",

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"     => "",

                                                    "ConsigneeMailingName" => "",

                                                    "ConsigneeAddress1" => "",

                                                    "ConsigneeAddress2" => "",

                                                    "ConsigneeState"    => "",

                                                    "ConsigneeCountry"  => "",

                                            		"ConsigneePincode"  => "",

                                                    "ConsigneeGSTIN"    => "",

                                                    "PlaceOfSupply"     => "",

                                            		"Reference"         => "",

                                            		"ReferenceDate"     => "",

                                            		"VoucherSourceGodown" => "",

                                                    "Narration"         => ""

    		                                    );

    		

    		}

    		

    		if($btval['round_off'] != 0){

    		    

             $return_data['VOUCHER'][] = array(

                                                        "Autoid"            => $btval['id_stock_issue'],

                                                        "CompanyNumber"     => 1,

                                                        "TallyMasterid"     => 1,

                                                        "Voucherid"         => "",

                                                        "VoucherNumber"     => "SI-".$btval['issue_no'],

                                                        "VoucherDate"       => $btval['issueon'],

                                                        "VoucherType"       => "Delivery Note",

                                                        "VoucherTypeParent" => "Delivery Note",

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $btval['round_off'] > 0 ? "Cr" : "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => 1,

                                                        "Stockitem"             => "",

                                                        "Godown"                => 1, 

                                                        "BatchNo"               => $btval['receipton'],

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($btval['round_off']), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => "",

                                                        "BuyerMailingName"  => "",

                                                        "BuyerAddress1"     => "",

                                                        "BuyerAddress2"     => "",

                                                        "BuyerState"        => "",

                                                        "BuyerCountry"      => "",

                                                        "BuyerPincode"      => "",

                                                        "BuyerGSTIN"        => "",

                                                        "ConsigneeName"     => "",

                                                        "ConsigneeMailingName" => "",

                                                        "ConsigneeAddress1" => "",

                                                        "ConsigneeAddress2" => "",

                                                        "ConsigneeState"    => "",

                                                        "ConsigneeCountry"  => "",

                                                		"ConsigneePincode"  => "",

                                                        "ConsigneeGSTIN"    => "",

                                                        "PlaceOfSupply"     => "",

                                                        "Narration"             => ""

                                                );    

            

    		}

		}

		

		return $return_data;

		

	    

	}

	

	function getReceiptNoteReceiptVoucherList($requestdata){

	    

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    $issue_qeury = $this->db->query("SELECT m.id_stock_issue, m.issue_no, date_format(m.issue_date,'%d-%m-%Y') as issueon,  

        kar.firstname, kar.lastname, kar.mobile as CONTACTNO, '' as pan_no, 

        '' as cuaddress, '' as cuspincode, '' as cusstate, '' as cuscountry, 

        0 as total, 0 as round_off, '' as GSTNO  

        FROM ret_stock_issue m  

        LEFT JOIN branch as br ON br.id_branch = '1' 

        LEFT JOIN employee as kar ON kar.id_employee = m.issued_to 

        LEFT JOIN country as cn ON cn.id_country = 101  

        LEFT JOIN state as st ON st.id_state = 35  

        WHERE br.is_ho = 1 AND m.status = 1 AND m.inistransfered = 0 

        ".($from_date !='' && $to_date !='' ? " AND DATE(m.issue_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

        GROUP BY m.id_stock_issue");

		foreach($issue_qeury->result_array() as $btkey => $btval){

		    

		    $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['id_stock_issue'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "SI-".$btval['issue_no'],

                                                    "VoucherDate"       => $btval['issueon'],

                                                    "VoucherType"       => "Receipt Note",

                                                    "VoucherTypeParent" => "Receipt Note",

                                                    "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                                                    "LedgerParent"      => 'Sundry Debtors',

                                                    "LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"          => !empty($btval['GSTNO']) ? 'Consumer' : 'Regular',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Dr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => "",

                                                    "Godown"            => 1,

                                                    "BatchNo"           => "",

                                                    "IsScrap"           => "",

                                                    "Quantity"          => "",

                                                    "Rate"              => "",

                                                    "Discount"          => "",

                                                    "Amount"            => $btval["total"],

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                    "BuyerName"         => "",

                                                    "BuyerMailingName"  => "",

                                                    "BuyerAddress1"     => "",

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => "",

                                                    "BuyerCountry"      => "",

                                                    "BuyerPincode"      => "",

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"     => "",

                                                    "ConsigneeMailingName" => "",

                                                    "ConsigneeAddress1" => "",

                                                    "ConsigneeAddress2" => "",

                                                    "ConsigneeState"    => "",

                                                    "ConsigneeCountry"  => "",

                                            		"ConsigneePincode"  => "",

                                                    "ConsigneeGSTIN"    => "",

                                                    "PlaceOfSupply"     => "",

                                            		"Reference"         => "",

                                            		"ReferenceDate"     => "",

                                            		"VoucherSourceGodown" => "",

                                                    "Narration"         => ""

    		                                    );

	    

    		$karigarreceipt_query = $this->db->query("SELECT pr.product_name as ItemName, 

										sum(tag.gross_wt) as GrossWeight, cat.id_ret_category, 

										ifnull(sum(tag.net_wt),0) as NetWeight, ifnull(sum(tag.piece), 0) as Quantity, 

										ifnull(sum(tag.less_wt),0) as LesWeight, 

										ifnull(sum(sales_value),0) as total_salevalue, 

										cat.hsn_code as HSNCode, cat.name as CategoryName, pr.sales_mode, cat.tally_qty_type, 

										sum(ifnull((SELECT sum(pieces) as pieces  

                                                    FROM ret_taging_stone bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 

                                                    AND bs.tag_id = tag.tag_id HAVING pieces > 0), 0 )) as totaldiapcs,

                                        sum(ifnull((SELECT sum((bs.wt)) as totwt FROM ret_taging_stone bs 

                                                    LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                    WHERE st.stone_type = 1 

                                                    AND bs.tag_id = tag.tag_id HAVING totwt > 0), 0 )) as totaldiawt

										FROM `ret_stock_issue_detail` trtag 

										LEFT JOIN ret_stock_issue as bt ON bt.id_stock_issue = trtag.id_stock_issue 

										LEFT JOIN ret_taging as tag ON tag.tag_id = trtag.tag_id 

										LEFT JOIN ret_product_master as pr ON pr.pro_id = tag.product_id 

										LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id 

										WHERE trtag.id_stock_issue = '".$btval['id_stock_issue']."' 

										GROUP BY cat.id_ret_category");

    		

    		foreach($karigarreceipt_query->result_array() as $rbtkey => $rbtval){

    		        $return_data['VOUCHER'][] = array(

    		                                        "Autoid"            => $btval['id_stock_issue'],

                                                    "CompanyNumber"     => 1,

                                                    "TallyMasterid"     => 1,

                                                    "Voucherid"         => "",

                                                    "VoucherNumber"     => "SI-".$btval['issue_no'],

                                                    "VoucherDate"       => $btval['issueon'],

                                                    "VoucherType"       => "Receipt Note",

                                                    "VoucherTypeParent" => "Receipt Note",

                                                    "LedgerName"        => "GST Sales",

                                                    "LedgerParent"      => 'Sales Accounts',

                                                    "LedgerAddress"     => $btval['cuaddress'],

                                                    "LedgerState"       => $btval['cusstate'],

                                                    "LedgerCountry"     => $btval['cuscountry'],

                                                    "LedgerPincode"     => $btval['cuspincode'],

                                                    "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                    "LedgerGstReg"      => 'Consumer',

                                                    "LedgerPan"         => $btval['pan_no'],

                                                    "LedgerGstin"       => '',

                                                    "BillName"          => "",

                                                    "BillDate"          => "",

                                                    "CrDr"              => "Cr",

                                                    "CostCategory"      => "",

                                                    "CostCentre"        => 1,

                                                    "Stockitem"         => $rbtval["CategoryName"],

                                                    "Godown"            => 1,

                                                    "BatchNo"           => "",

                                                    "IsScrap"           => "",

                                                    "Quantity"          => $rbtval["NetWeight"],

                                                    "Rate"              => "",

                                                    "Discount"          => "",

                                                    "Amount"            => "",

                                                    "OrderNo"           => "",

                                                    "OrderDate"         => "",

                                                    "TrackingNo"        => "",

                                                    "TrackingDate"      => "",

                                                    "TermsOfPayment"    => "",

                                                    "OtherRef"          => "",

                                                    "TermsOfDelivery1"  => "",

                                                    "TermsOfDelivery2"  => "",

                                            		"DeliveryNoteNo1"   => "",

                                            		"DeliveryNoteDate1" => "",

                                            		"DeliveryNoteNo2"   => "",

                                            		"DeliveryNoteDate2" => "",		

                                            		"DeliveryNoteNo3"   => "",

                                            		"DeliveryNoteDate3" => "",

                                            		"DeliveryNoteNo4"   => "",

                                            		"DeliveryNoteDate4" => "",

                                            		"DeliveryNoteNo5"   => "",

                                            		"DeliveryNoteDate5" => "",		

                                            		"DeliveryNoteNo6"   => "",

                                            		"DeliveryNoteDate6" => "",

                                            		"DeliveryNoteNo7"   => "",

                                            		"DeliveryNoteDate7" => "",

                                            		"DeliveryNoteNo8"   => "",

                                            		"DeliveryNoteDate8" => "",

                                            		"DeliveryNoteNo9"   => "",

                                            		"DeliveryNoteDate9" => "",

                                            		"DeliveryNoteNo10"  => "",

                                            		"DeliveryNoteDate10"=> "",		

                                                    "DispatchDocNo"     => "",

                                                    "ReceiptDocNo"      => "",

                                                    "DispatchedThrough" => "",

                                                    "Destination"       => "",

                                                    "CarrierName"       => "",

                                                    "BillOfLanding"     => "",

                                                    "BillOfLandingDate" => "",

                                                    "VehicleNo"         => "",

                                                    "BuyerName"         => "",

                                                    "BuyerMailingName"  => "",

                                                    "BuyerAddress1"     => "",

                                                    "BuyerAddress2"     => "",

                                                    "BuyerState"        => "",

                                                    "BuyerCountry"      => "",

                                                    "BuyerPincode"      => "",

                                                    "BuyerGSTIN"        => "",

                                                    "ConsigneeName"     => "",

                                                    "ConsigneeMailingName" => "",

                                                    "ConsigneeAddress1" => "",

                                                    "ConsigneeAddress2" => "",

                                                    "ConsigneeState"    => "",

                                                    "ConsigneeCountry"  => "",

                                            		"ConsigneePincode"  => "",

                                                    "ConsigneeGSTIN"    => "",

                                                    "PlaceOfSupply"     => "",

                                            		"Reference"         => "",

                                            		"ReferenceDate"     => "",

                                            		"VoucherSourceGodown" => "",

                                                    "Narration"         => ""

    		                                    );

    		

    		}

    		

    		if($btval['round_off'] != 0){

    		    

             $return_data['VOUCHER'][] = array(

                                                        "Autoid"            => $btval['id_stock_issue'],

                                                        "CompanyNumber"     => 1,

                                                        "TallyMasterid"     => 1,

                                                        "Voucherid"         => "",

                                                        "VoucherNumber"     => "SI-".$btval['issue_no'],

                                                        "VoucherDate"       => $btval['issueon'],

                                                        "VoucherType"       => "Receipt Note",

                                                        "VoucherTypeParent" => "Receipt Note",

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $btval['round_off'] > 0 ? "Cr" : "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => 1,

                                                        "Stockitem"             => "",

                                                        "Godown"                => 1, 

                                                        "BatchNo"               => $btval['receipton'],

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($btval['round_off']), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => "",

                                                        "BuyerMailingName"  => "",

                                                        "BuyerAddress1"     => "",

                                                        "BuyerAddress2"     => "",

                                                        "BuyerState"        => "",

                                                        "BuyerCountry"      => "",

                                                        "BuyerPincode"      => "",

                                                        "BuyerGSTIN"        => "",

                                                        "ConsigneeName"     => "",

                                                        "ConsigneeMailingName" => "",

                                                        "ConsigneeAddress1" => "",

                                                        "ConsigneeAddress2" => "",

                                                        "ConsigneeState"    => "",

                                                        "ConsigneeCountry"  => "",

                                                		"ConsigneePincode"  => "",

                                                        "ConsigneeGSTIN"    => "",

                                                        "PlaceOfSupply"     => "",

                                                        "Narration"             => ""

                                                );    

            

    		}

		}

		

		return $return_data;

	}

	

	function getSupplierPurchaseVoucherList($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    

	    $sql = $this->db->query("SELECT grn.grn_id, date_format(grn.grn_date, '%d-%m-%Y') as INVOICEDATE, grn.grn_ref_no, grn.grn_type, kar.firstname as PARTYNAME,  

	                            kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, grn_purchase_amt as TOTAL, 

	                            concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

	                            ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

	                            ifnull(kar.gst_number,'') as GSTNO, '1' as sort, grn.grn_round_off as roundoff, 

	                             date_format(grn_ref_date,'%d-%m-%Y') as grn_ref_date, ifnull(grn_supplier_ref_no, '') as grn_supplier_ref_no,

	                            FROM `ret_grn_entry` as grn 

	                            LEFT JOIN ret_karigar as kar ON kar.id_karigar = grn.grn_karigar_id 

	                            LEFT JOIN country as cn ON cn.id_country = kar.id_country 

	                            LEFT JOIN state as st ON st.id_state = kar.id_state 

	                            WHERE grn.`istransfered` = 0 AND grn.grn_bill_status = 1 

	                            ".($from_date !='' && $to_date !='' ? " AND DATE(grn.grn_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

	                            GROUP BY grn.grn_id LIMIT 100");

	     foreach($sql->result() as $row){

            $invoice_string     = "GRN"."-".$row->grn_ref_no;

            $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->grn_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => "Purchase",

                                                        "VoucherTypeParent"     => "Purchase",

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => "Sundry Creditors",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          => "Consumer",

                                                        "LedgerGstin"           => $row->GSTNO,

                                                        "BillName"              => $row->po_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => "",

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->TOTAL), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerPincode"          =>"",

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cuaddress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneePincode"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Reference"             =>  $row->grn_supplier_ref_no,

                                                		"ReferenceDate"         =>  $row->grn_ref_date,

                                                		"VoucherSourceGodown"   => "",

                                                        "Narration"             => ""

                                                );

                $itemtaxquery   = $this->db->query("SELECT grn_item_gst_value as taxrate, sum(grn_item_gst_rate) as gstvalue, 

                                                sum(grn_item_cgst) as cgst, sum(grn_item_sgst) as sgst, sum(grn_item_igst) as igst 

                                                FROM `ret_grn_items` WHERE grn_item_grn_id = '".$row->grn_id."' GROUP BY grn_item_gst_value");

                                                

                $otherchargetaxquery   = $this->db->query("SELECT char_tax as taxrate, sum(total_tax) as gstvalue, sum(cgst_cost) as cgst, sum(sgst_cost) as sgst, 

                                                    sum(igst_cost) as igst_cost FROM `ret_grn_other_charges` WHERE grn_id = '".$row->grn_id."' GROUP BY char_tax");

                                                    

                $taxcombinevalus = array_merge($itemtaxquery->result_array(), $otherchargetaxquery->result_array());

                $finaltaxarray   = array();

                foreach($taxcombinevalus as $tkey => $tvalue){

                    $itemexist = false;

                    foreach($finaltaxarray as $fkey => $fval){

                        if($fval['taxrate'] == $tvalue['taxrate']){

                            $itemexist = true;

                            $finaltaxarray[$fkey]['gstvalue']   = $finaltaxarray[$fkey]['gstvalue'] + $tvalue['gstvalue'];

                            $finaltaxarray[$fkey]['cgst']       = $finaltaxarray[$fkey]['cgst'] + $tvalue['cgst'];

                            $finaltaxarray[$fkey]['sgst']       = $finaltaxarray[$fkey]['sgst'] + $tvalue['sgst'];

                            $finaltaxarray[$fkey]['igst']       = $finaltaxarray[$fkey]['igst'] + $tvalue['igst'];

                        }

                    }

                    

                    if(!$itemexist){

                        $finaltaxarray[] = $tvalue;

                    }

                }

                

                foreach($finaltaxarray as $tkey => $tvalue){

                    if($tvalue['cgst'] > 0 ){

                            $gstrate = number_format(($tvalue['taxrate'] / 2), 2,'.','')."%";

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Output Cgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['cgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => $row->PARTYNAME,

                                                            "ConsigneeMailingName"  => $row->PARTYNAME,

                                                            "ConsigneeAddress1"     => $row->cuaddress,

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => $row->cusstate,

                                                            "ConsigneeCountry"      => $row->cuscountry,

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Reference"             =>  $row->grn_supplier_ref_no,

                                                    		"ReferenceDate"         =>  $row->grn_ref_date,

                                                    		"VoucherSourceGodown"   => "",

                                                            "Narration"             => ""

                                                    );

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Output Sgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['sgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => $row->PARTYNAME,

                                                            "ConsigneeMailingName"  => $row->PARTYNAME,

                                                            "ConsigneeAddress1"     => $row->cuaddress,

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => $row->cusstate,

                                                            "ConsigneeCountry"      => $row->cuscountry,

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Reference"             =>  $row->grn_supplier_ref_no,

                                                    		"ReferenceDate"         =>  $row->grn_ref_date,

                                                    		"VoucherSourceGodown"   => "",

                                                            "Narration"             => ""

                                                    );

                    }else if($tvalue['igst'] > 0){

                        $gstrate = number_format(($tvalue['taxrate']), 2,'.','')."%";

                        $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Output Igst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['igst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => $row->PARTYNAME,

                                                            "ConsigneeMailingName"  => $row->PARTYNAME,

                                                            "ConsigneeAddress1"     => $row->cuaddress,

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => $row->cusstate,

                                                            "ConsigneeCountry"      => $row->cuscountry,

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Reference"             =>  $row->grn_supplier_ref_no,

                                                		"ReferenceDate"         =>  $row->grn_ref_date,

                                                		"VoucherSourceGodown"   => "",

                                                        "Narration"             => ""

                                                    );

                    }

                }

                

                

                

                $itemquery = $this->db->query("SELECT sum(ifnull(`grn_gross_wt`, 0)) as gross_wt, 

                                            sum(ifnull(grn_net_wt,0)) as net_wt,  

                                            sum(ifnull(`grn_no_of_pcs`, 0)) as no_of_pcs, sum(ifnull(`grn_item_cost`,0) - ifnull(grn_item_gst_rate, 0)) as TOTAL, 

                                            cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME 

                                            FROM `ret_grn_items` as grn 

                                            LEFT JOIN ret_category cat on cat.id_ret_category=grn.grn_item_cat_id  

                                            WHERE grn.grn_item_grn_id = '".$row->grn_id."' GROUP BY grn_item_cat_id");

	            

	            foreach($itemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Purchase A/c",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->grn_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => $row->PARTYNAME,

                                                            "ConsigneeMailingName"  => $row->PARTYNAME,

                                                            "ConsigneeAddress1"     => $row->cuaddress,

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => $row->cusstate,

                                                            "ConsigneeCountry"      => $row->cuscountry,

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Reference"             =>  $row->grn_supplier_ref_no,

                                                		"ReferenceDate"         =>  $row->grn_ref_date,

                                                		"VoucherSourceGodown"   => "",

                                                        "Narration"             => ""

                                                    );

                    

	            }

	       

        

	           $otheritemquery = $this->db->query("SELECT sum(grn_other_itm_grs_weight) as net_wt, avg(grn_other_itm_rate) as omrate, 

                                                sum(grn_other_itm_amount) as TOTAL, met.name as PRODUCTNAME, 

                                                sum(grn_other_itm_pcs) as ompcs   

                                                FROM ret_grn_other_metals as om 

                                                LEFT JOIN ret_grn_items as grn ON grn.grn_item_grn_id = om.grn_itms_id 

                                                LEFT JOIN ret_category as met on met.id_ret_category = om.grn_other_itm_metal_id 

                                                WHERE grn.grn_item_grn_id = '".$row->grn_id."' AND om.grn_itms_id IS NOT NULL 

                                                GROUP BY grn_other_itm_metal_id");

                                                

                foreach($otheritemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Purchase A/c",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->grn_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Reference"             =>  $row->grn_supplier_ref_no,

                                                		"ReferenceDate"         =>  $row->grn_ref_date,

                                                		"VoucherSourceGodown"   => "",

                                                        "Narration"             => ""

                                                    );

                    

	            }

	         

	            $stoneitemquery = $this->db->query("SELECT sum(wt) as net_wt, avg(rate_per_gram) as avgrate, 

                                                sum(amount) as TOTAL, stone_name as PRODUCTNAME, 

                                                sum(pieces) as ompcs   

                                                FROM ret_grn_item_stone as bs  

                                                LEFT JOIN ret_grn_items as grn ON grn.grn_item_grn_id = bs.grn_item_id 

                                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                WHERE grn.grn_item_grn_id = '".$row->grn_id."' AND bs.grn_item_id IS NOT NULL AND st.stone_type = 1 

                                                GROUP BY bs.stone_id");

                                                

                foreach($otheritemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->grn_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Purchase',

                                                            "VoucherTypeParent"     => 'Purchase',

                                                            "LedgerName"            => "Purchase A/c",

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->grn_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Reference"             =>  $row->grn_supplier_ref_no,

                                                		"ReferenceDate"         =>  $row->grn_ref_date,

                                                		"VoucherSourceGodown"   => "",

                                                        "Narration"             => ""

                                                    );

                    

	            }

	     

	         

	         if($row->roundoff != 0 ){

                 $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->grn_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => "Purchase",

                                                        "VoucherTypeParent"     => "Purchase",

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $row->roundoff > 0 ? "Dr" : "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => $row->CostCentre, 

                                                        "BatchNo"               => $row->INVOICENO,

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($row->roundoff), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => "",

                                                        "ConsigneeMailingName"  => "",

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => "",

                                                        "Narration"             => ""

                                                );    

            }

	         

	     }

	     

	     return $return_data;

	    

	}



	function getSupplierPurchaseReturnVoucherListold($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    $sql=$this->db->query("SELECT ret.pur_return_id as po_id, pur_ret_ref_no, pur_ret_reason, pur_ret_supplier_id, 

	                            date_format(ret.`pur_ret_created_on`,'%d-%m-%Y') as INVOICEDATE, return_total_cost, 

	                            sum(ifnull(reti.pur_ret_debit_note_amt,0)) as TOTAL, 
                                
                                sum(ifnull(reti.pur_ret_pur_wt,0)) as TOTALWT, 

                                kar.firstname as PARTYNAME, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

                                concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,

                                ifnull(kar.gst_number,'') as GSTNO, '1' as sort, pur_ret_other_charges, pur_ret_discount, pur_ret_tds_value,

                                pur_ret_tds_percent, pur_ret_other_charges_tds_percent, pur_ret_other_charges_tds_value, pur_ret_tcs_percent, pur_ret_tcs_value, 

                                pur_ret_round_off as roundoff, ifnull(pur_ret_remark, '') as narration  

                                FROM `ret_purchase_return` as ret  

                                LEFT JOIN ret_purchase_return_items as reti ON reti.pur_ret_id = ret.pur_return_id 

                                LEFT JOIN ret_karigar as kar ON kar.id_karigar = ret.pur_ret_supplier_id  

                                LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                LEFT JOIN state as st ON st.id_state = kar.id_state 

                                WHERE ret.bill_status = 1 AND ret.istransfered = 0 

                                ".($from_date !='' && $to_date !='' ? " AND DATE(ret.pur_ret_created_on) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                GROUP BY ret.pur_return_id HAVING TOTALWT > 0 AND TOTAL > 0 LIMIT 100");

        foreach($sql->result() as $row){ //pur_ret_charge_tax_value

            $invoice_string     = "PR"."-".$row->pur_ret_ref_no;

            $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => "Debit Note",

                                                        "VoucherTypeParent"     => "Debit Note",

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => "Sundry Creditors",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          => "Consumer",

                                                        "LedgerGstin"           => $row->GSTNO,

                                                        "BillName"              => $row->po_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => "",

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => $row->TOTALWT, //  $row->QTY,

                                                        "Rate"                  => number_format(($row->return_total_cost / $row->TOTALWT), 2, '.',''), //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->return_total_cost), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME,

                                                        "ConsigneeAddress1"     => $row->cuaddress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => "",

                                                        "ConsigneePincode"      => $row->cuspincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => $row->narration

                                                );

            

            $itemtaxquery   = $this->db->query("SELECT 

                                                    ifnull(pur_ret_tax_value,0) as taxrate, ifnull(sum(pur_ret_tax_rate),0) as gstvalue, 

                                                sum(pur_ret_cgst) as cgst, sum(pur_ret_sgst) as sgst, sum(pur_ret_igst) as igst 

                                                FROM `ret_purchase_return_cat_items` as retitm 

                                                WHERE retitm.pur_ret_id = '".$row->po_id."'  

                                                GROUP BY pur_ret_tax_value");

                                                

                $otherchargetaxquery   = $this->db->query("SELECT pur_ret_charge_tax as taxrate, sum(pur_ret_charge_tax_value) as gstvalue, 

                                                    sum(cgst_cost) as cgst, sum(sgst_cost) as sgst, 

                                                    sum(igst_cost) as igst_cost 

                                                    FROM `ret_purchase_return_other_charges` WHERE 	pur_ret_itm_id = '".$row->po_id."' GROUP BY pur_ret_charge_tax");

                                                    

                $taxcombinevalus = array_merge($itemtaxquery->result_array(), $otherchargetaxquery->result_array());

                $finaltaxarray   = array();

                foreach($taxcombinevalus as $tkey => $tvalue){

                    $itemexist = false;

                    foreach($finaltaxarray as $fkey => $fval){

                        if($fval['taxrate'] == $tvalue['taxrate']){

                            $itemexist = true;

                            $finaltaxarray[$fkey]['gstvalue']   = $finaltaxarray[$fkey]['gstvalue'] + $tvalue['gstvalue'];

                            $finaltaxarray[$fkey]['cgst']       = $finaltaxarray[$fkey]['cgst'] + $tvalue['cgst'];

                            $finaltaxarray[$fkey]['sgst']       = $finaltaxarray[$fkey]['sgst'] + $tvalue['sgst'];

                            $finaltaxarray[$fkey]['igst']       = $finaltaxarray[$fkey]['igst'] + $tvalue['igst'];

                        }

                    }

                    

                    if(!$itemexist){

                        $finaltaxarray[] = $tvalue;

                    }

                }

                

                foreach($finaltaxarray as $tkey => $tvalue){

                    if($tvalue['cgst'] > 0 ){

                            $gstrate = number_format(($tvalue['taxrate'] / 2), 2,'.','')."%";

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "Input Cgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['cgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "Input Sgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['sgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    }else if($tvalue['igst'] > 0){

                        $gstrate = number_format(($tvalue['taxrate']), 2,'.','')."%";

                        $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "Input Igst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($tvalue['igst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    }

                }

                

                

            if($row->pur_ret_tds_value > 0){

                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "TDS",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($row->pur_ret_tds_value, 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                }

                if($row->pur_ret_other_charges_tds_value > 0){

                    

                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "TDS on Charges",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($row->pur_ret_other_charges_tds_value, 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                

                }

                if($row->pur_ret_tcs_value > 0){

                    

                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "TCS",

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($row->pur_ret_tcs_value, 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                

                

                }

                

            if($row->pur_ret_discount > 0){

                

                    $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "Discount Allowed",

                                                            "LedgerParent"          => "Indirect Expenses",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Dr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($row->pur_ret_discount, 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                

            }

            

             //Other charges

         

           $chargequery = $this->db->query("SELECT sum(pur_ret_charge_value) as chargeamt, chr.name_charge 

	                                            FROM `ret_purchase_return_other_charges` as grnch 

	                                            LEFT JOIN ret_charges as chr ON chr.id_charge = grnch.pur_ret_charge_id 

	                                            WHERE pur_ret_itm_id = '".$row->po_id."' GROUP BY pur_ret_charge_id");

	     

	           foreach($chargequery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => $itemrow->name_charge,

                                                            "LedgerParent"          => "DIRECT EXPENSES",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->pur_ret_ref_no,

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->chargeamt), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => $row->narration

                                                    );

                    

	            }    

	        

            

            $retitmsql = $this->db->query("SELECT pur_ret_cat_itm_id, ifnull(sum(pur_ret_cat_pcs),0) as pur_ret_pcs, 

                                        ifnull(sum(round(pur_ret_item_cost - pur_ret_tax_rate - ifnull(omd.TOTAL, 0) - ifnull(ost.TOTAL, 0))),0) as TOTAL,

                                        ifnull(sum(pur_ret_cat_netwt),0) as pur_ret_gwt, 

                                        cat.hsn_code as HSNCode, ifnull(cat.name, 'Gold Ornaments') as PRODUCTNAME,

                                        ifnull(pur_ret_tax_value,0) as pur_ret_tax_rate, ifnull(sum(pur_ret_tax_rate),0) as pur_ret_tax_value, 

                                        ifnull(sum(pur_ret_cgst), 0) as returncgst, 

                                        ifnull(sum(pur_ret_sgst), 0) as returnsgst, ifnull(sum(pur_ret_igst), 0) as returnigst

                                        FROM `ret_purchase_return_cat_items` as retitm 

                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = retitm.	pur_ret_cat_id 

                                        LEFT JOIN (SELECT pur_ret_return_id, 

                                                sum(ret_other_itm_amount) as TOTAL 

                                                FROM ret_purchase_return_other_metal as om 

                                                GROUP BY pur_ret_return_id) omd ON omd.pur_ret_return_id = retitm.pur_ret_cat_itm_id 

                                         LEFT JOIN (SELECT pur_ret_return_id, 

                                                sum(ret_stone_amount) as TOTAL 

                                                FROM ret_purchase_return_stone_items as bs 

                                                GROUP BY pur_ret_return_id) ost ON ost.pur_ret_return_id = retitm.pur_ret_cat_itm_id 

                                                

                                        WHERE retitm.pur_ret_id = '".$row->po_id."' 

                                        AND retitm.pur_ret_item_cost > 0 GROUP BY cat.id_ret_category");

            /*foreach($retitmsql->result_array() as $itemrow){

                    if($itemrow['returncgst'] > 0 ){

                            $gstrate = number_format(($itemrow['pur_ret_tax_rate'] / 2), 2,'.','')."%";

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "Input Cgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($itemrow['returncgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Narration"             => ""

                                                    );

                            $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "Input Sgst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($itemrow['returnsgst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Narration"             => ""

                                                    );

                    }else if($itemrow['returnigst'] > 0){

                        $gstrate = number_format(($itemrow['pur_ret_tax_rate']), 2,'.','')."%";

                        $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "Input Igst @ ".$gstrate,

                                                            "LedgerParent"          => "Duties & Taxes",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => "",

                                                            "Godown"                => "",

                                                            "BatchNo"               => "",

                                                            "Quantity"              => "",

                                                            "Rate"                  => "",

                                                            "Discount"              => "",

                                                            "Amount"                => number_format($itemrow['returnigst'], 2, '.',''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => "",

                                                            "Narration"             => ""

                                                    );

                    }

            }*/

            $gstrate = "";

            foreach($retitmsql->result() as $itemrow){

                    $gstrate = number_format(($itemrow->pur_ret_tax_rate), 2,'.','')."%";

	                $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "GST Purchase ".$gstrate,

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->pur_ret_ref_no,

                                                            "Quantity"              => number_format(($itemrow->pur_ret_gwt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->pur_ret_gwt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => $row->narration

                                                    );

	             //For other metal details

	             $otheritemquery = $this->db->query("SELECT sum(ret_other_itm_grs_weight) as net_wt, avg(	ret_other_itm_rate) as omrate, 

                                                sum(ret_other_itm_amount) as TOTAL, met.name as PRODUCTNAME, 

                                                sum(ret_other_itm_pcs) as ompcs   

                                                FROM ret_purchase_return_other_metal as om 

                                                LEFT JOIN ret_category as met on met.id_ret_category = om.ret_other_itm_metal_id 

                                                WHERE om.pur_ret_return_id = '".$itemrow->pur_ret_cat_itm_id."' GROUP BY ret_other_itm_metal_id");

                                                

                foreach($otheritemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "GST Purchase ".$gstrate,

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->pur_ret_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => $row->narration

                                                    );

                    

	            }

	            //For stone item returns

	            $stoneitemquery = $this->db->query("SELECT sum(ret_stone_wt) as net_wt, avg(ret_stone_rate) as avgrate, 

                                                sum(ret_stone_amount) as TOTAL, stone_name as PRODUCTNAME, 

                                                sum(ret_stone_pcs) as ompcs   

                                                FROM ret_purchase_return_stone_items as bs  

                                                LEFT JOIN ret_stone as st ON st.stone_id = bs.ret_stone_id 

                                                WHERE bs.pur_ret_return_id = '".$itemrow->pur_ret_cat_itm_id."'

                                                GROUP BY bs.ret_stone_id");

                                                

                foreach($stoneitemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                            "Autoid"                => $row->po_id,

                                                            "CompanyNumber"         => $row->sort,

                                                            "TallyMasterid"         => 1,

                                                            "Voucherid"             => "",

                                                            "VoucherNumber"         => $invoice_string,

                                                            "VoucherDate"           => $row->INVOICEDATE,

                                                            "VoucherType"           => 'Debit Note',

                                                            "VoucherTypeParent"     => 'Debit Note',

                                                            "LedgerName"            => "GST Purchase ".$gstrate,

                                                            "LedgerParent"          => "Purchase Accounts",

                                                            "LedgerAddress"         =>   "",

                                                            "LedgerState"           =>   "",

                                                            "LedgerCountry"         =>   "",

                                                            "LedgerPincode"         =>   "",

                                                            "LedgerMobile"          =>   "",

                                                            "LedgerGstReg"          =>   "",

                                                            "LedgerGstin"           =>   "",

                                                            "BillName"              => "",

                                                            "BillDate"              => "",

                                                            "CrDr"                  => "Cr",

                                                            "CostCategory"          => "",

                                                            "CostCentre"            => "Head Office",

                                                            "Stockitem"             => $itemrow->PRODUCTNAME,

                                                            "Godown"                => "Head Office", 

                                                            "BatchNo"               => $row->pur_ret_ref_no,

                                                            "Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                            "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                            "Discount"              => "",

                                                            "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                            "OrderNo"               => "",

                                                            "OrderDate"             => "",

                                                            "TrackingNo"            => "",

                                                            "TrackingDate"          => "",

                                                            "TermsOfPayment"        => "",

                                                            "OtherRef"              => "",

                                                            "TermsOfDelivery1"      => "",

                                                            "TermsOfDelivery2"      => "",

                                                            "DispatchDocNo"         => "",

                                                            "ReceiptDocNo"          => "",

                                                            "DispatchedThrough"     => "",

                                                            "Destination"           => "",

                                                            "CarrierName"           => "",

                                                            "BillOfLanding"         => "",

                                                            "BillOfLandingDate"     => "",

                                                            "VehicleNo"             => "",

                                                            "BuyerName"             => $row->PARTYNAME,

                                                            "BuyerMailingName"      => $row->PARTYNAME,

                                                            "BuyerAddress1"         => $row->cuaddress,

                                                            "BuyerAddress2"         => "",

                                                            "BuyerState"            => $row->cusstate,

                                                            "BuyerCountry"          => $row->cuscountry,

                                                            "BuyerGSTIN"            => "",

                                                            "ConsigneeName"         => "",

                                                            "ConsigneeMailingName"  => "",

                                                            "ConsigneeAddress1"     => "",

                                                            "ConsigneeAddress2"     => "",

                                                            "ConsigneeState"        => "",

                                                            "ConsigneeCountry"      => "",

                                                            "ConsigneeGSTIN"        => "",

                                                            "PlaceOfSupply"         => $row->cusstate,

                                                            "Narration"             => ""

                                                    );

                    

	            }

            }

            

         

         if($row->roundoff != 0 ){

                 $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => "Debit Note",

                                                        "VoucherTypeParent"     => "Debit Note",

                                                        "LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $row->roundoff > 0 ? "Cr" : "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => $row->CostCentre, 

                                                        "BatchNo"               => $row->INVOICENO,

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($row->roundoff), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME,

                                                        "BuyerMailingName"      => $row->PARTYNAME,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,

                                                        "BuyerGSTIN"            => "",

                                                        "ConsigneeName"         => "",

                                                        "ConsigneeMailingName"  => "",

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => "",

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "Narration"             => ""

                                                );    

            }

	         

            

        }

        return $return_data;

	}

    
    function getSupplierPurchaseReturnVoucherList($requestdata){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    $sql=$this->db->query("SELECT ret.pur_return_id as po_id, ret.pur_return_id as bill_id, pur_ret_ref_no, pur_ret_reason, pur_ret_supplier_id, 

                                'Debit Note' as VOUCHERTYPE, 'Debit Note' as VOUCHERTYPEPARENT, 'Sundry Debtors' as LedgerParent,

	                            date_format(ret.`pur_ret_created_on`,'%d-%m-%Y') as INVOICEDATE, return_total_cost, 

	                            (SELECT ifnull(sum(pur_ret_item_cost),0) as returnamount FROM `ret_purchase_return_cat_items` 

	                            WHERE pur_ret_id = ret.pur_return_id) as TOTAL,

                                kar.firstname as PARTYNAME, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

                                concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cusdeladdress, 

                                ifnull(kar.pincode, '') as cuspincode, ifnull(kar.pincode, '') as cusdelpincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,

                                ifnull(kar.gst_number,'') as GSTNO, '1' as sort, pur_ret_other_charges, pur_ret_discount, pur_ret_tds_value,

                                pur_ret_tds_percent, pur_ret_other_charges_tds_percent, pur_ret_other_charges_tds_value, pur_ret_tcs_percent, pur_ret_tcs_value, 

                                pur_ret_round_off as roundoff, ifnull(pur_ret_remark, '') as narration, 

								IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,
								
								ifnull(br.gst_number, '') as brgst, ifnull(kar.pan_no, '') as  pan_no, br.name as CostCentre

                                FROM `ret_purchase_return` as ret  

                                LEFT JOIN ret_karigar as kar ON kar.id_karigar = ret.pur_ret_supplier_id  

                                LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                LEFT JOIN state as st ON st.id_state = kar.id_state 
								
								LEFT JOIN branch br ON br.is_ho = 1 
								
								LEFT JOIN state as bst ON bst.id_state = br.id_state 

								LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                WHERE ret.bill_status = 1 AND ret.istransfered = 0 

                                ".($from_date !='' && $to_date !='' ? " AND DATE(ret.pur_ret_created_on) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                GROUP BY ret.pur_return_id LIMIT 100");

            //echo $this->db->last_query();exit;

        foreach($sql->result() as $row){

            $invoice_string     = "PR"."-".$row->pur_ret_ref_no;

            $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "LedgerParent"          => $row->LedgerParent,

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "", //  $row->QTY,

                                                        "Rate"                  => "", //  $row->VALUE,

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($row->return_total_cost), 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );
            

            $itemtaxquery   = $this->db->query("SELECT 

                                                    ifnull(pur_ret_tax_percent,0) as taxrate, ifnull(sum(total_total_tax),0) as gstvalue, 

                                                sum(total_cgst_cost) as cgst, sum(total_sgst_cost) as sgst, sum(total_igst_cost) as igst 

                                                FROM `ret_purchase_return_items` as retitm 

                                                WHERE retitm.pur_ret_id = '".$row->po_id."'  

                                                GROUP BY pur_ret_tax_percent");

                                                

                $otherchargetaxquery   = $this->db->query("SELECT pur_ret_charge_tax as taxrate, sum(pur_ret_charge_tax_value) as gstvalue, 

                                                    sum(cgst_cost) as cgst, sum(sgst_cost) as sgst, 

                                                    sum(igst_cost) as igst_cost 

                                                    FROM `ret_purchase_return_other_charges` WHERE pur_ret_itm_id = '".$row->po_id."' GROUP BY pur_ret_charge_tax");

                                                    

                $taxcombinevalus = array_merge($itemtaxquery->result_array(), $otherchargetaxquery->result_array());

                $finaltaxarray   = array();

                foreach($taxcombinevalus as $tkey => $tvalue){

                    $itemexist = false;

                    foreach($finaltaxarray as $fkey => $fval){

                        if($fval['taxrate'] == $tvalue['taxrate']){

                            $itemexist = true;

                            $finaltaxarray[$fkey]['gstvalue']   = $finaltaxarray[$fkey]['gstvalue'] + $tvalue['gstvalue'];

                            $finaltaxarray[$fkey]['cgst']       = $finaltaxarray[$fkey]['cgst'] + $tvalue['cgst'];

                            $finaltaxarray[$fkey]['sgst']       = $finaltaxarray[$fkey]['sgst'] + $tvalue['sgst'];

                            $finaltaxarray[$fkey]['igst']       = $finaltaxarray[$fkey]['igst'] + $tvalue['igst'];

                        }

                    }

                    

                    if(!$itemexist){

                        $finaltaxarray[] = $tvalue;

                    }

                }

                
				$gstrate = 0;
                foreach($finaltaxarray as $tkey => $tvalue){

                    if($tvalue['cgst'] > 0 ){

                            $gstrate = number_format(($tvalue['taxrate'] / 2), 2,'.','')."%";

                            $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Input Cgst @ ".$gstrate,

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                         "Amount"                => number_format($tvalue['cgst'], 2, '.',''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                            $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Input Sgst @ ".$gstrate,

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format($tvalue['sgst'], 2, '.',''),


                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                    }else if($tvalue['igst'] > 0){

                        $gstrate = number_format(($tvalue['taxrate']), 2,'.','')."%";

                        $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Input Igst @ ".$gstrate,

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format($tvalue['igst'], 2, '.',''),


                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                    }

                }

                

                

            if($row->pur_ret_tds_value > 0){

                    $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "TDS",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format($row->pur_ret_tds_value, 2, '.',''),


                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                }

                if($row->pur_ret_other_charges_tds_value > 0){

                    

                    $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "TDS on Charges",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format($row->pur_ret_other_charges_tds_value, 2, '.',''),


                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                

                }

                if($row->pur_ret_tcs_value > 0){

                    

                    $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "TCS",

                                                        "LedgerParent"          => "Duties & Taxes",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format($row->pur_ret_tcs_value, 2, '.',''),


                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                

                

                }

                

            if($row->pur_ret_discount > 0){

                

                    $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => "Discount Allowed",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Dr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format($row->pur_ret_discount, 2, '.',''),


                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                

            }

            

             //Other charges

         

           $chargequery = $this->db->query("SELECT sum(pur_ret_charge_value) as chargeamt, chr.name_charge 

	                                            FROM `ret_purchase_return_other_charges` as grnch 

	                                            LEFT JOIN ret_charges as chr ON chr.id_charge = grnch.pur_ret_charge_id 

	                                            WHERE pur_ret_itm_id = '".$row->po_id."' GROUP BY pur_ret_charge_id");

	     

	           foreach($chargequery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

                                                        "LedgerName"            => $itemrow->name_charge,

                                                        "LedgerParent"          => "DIRECT EXPENSES",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($itemrow->chargeamt), 2, '.', ''),


                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                    

	            }    

	        

            

            $retitmsql = $this->db->query("SELECT pur_ret_itm_id as pur_ret_cat_itm_id, ifnull(sum(pur_ret_pcs),0) as pur_ret_pcs, 

            ifnull(sum(round(pur_ret_debit_note_amt - total_total_tax - ifnull(omd.TOTAL, 0) - ifnull(ost.TOTAL, 0))),0) as TOTAL,

            ifnull(sum(pur_ret_nwt),0) as pur_ret_gwt, 

            cat.hsn_code as HSNCode, ifnull(cat.name, 'Gold Ornaments') as PRODUCTNAME,

            ifnull(pur_ret_tax_percent,0) as pur_ret_tax_rate, ifnull(sum(total_total_tax),0) as pur_ret_tax_value, 

            ifnull(sum(total_cgst_cost), 0) as returncgst, 

            ifnull(sum(total_sgst_cost), 0) as returnsgst, ifnull(sum(total_igst_cost), 0) as returnigst

            FROM `ret_purchase_return_items` as retitm 
            
            LEFT JOIN ret_product_master as pr ON pr.pro_id = retitm.id_product 

            LEFT JOIN ret_category as cat ON cat.id_ret_category = pr.cat_id 

            LEFT JOIN (SELECT pur_ret_return_id, 

                    sum(ret_other_itm_amount) as TOTAL 

                    FROM ret_purchase_return_other_metal as om 

                    GROUP BY pur_ret_return_id) omd ON omd.pur_ret_return_id = retitm.pur_ret_itm_id 

             LEFT JOIN (SELECT pur_ret_return_id, 

                    sum(ret_stone_amount) as TOTAL 

                    FROM ret_purchase_return_stone_items as bs 

                    GROUP BY pur_ret_return_id) ost ON ost.pur_ret_return_id = retitm.pur_ret_itm_id 

                    

            WHERE retitm.pur_ret_id = '".$row->po_id."' 

            AND retitm.pur_ret_debit_note_amt > 0 GROUP BY cat.id_ret_category");

            

            $gstrate = "";

            foreach($retitmsql->result() as $itemrow){

                    $gstrate = number_format(($itemrow->pur_ret_tax_rate), 2,'.','')."%";

	                $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => "GST Purchase ".$gstrate,

                                                        "LedgerParent"          => "Purchase Accounts",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => $itemrow->PRODUCTNAME,

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        
														"Quantity"              => number_format(($itemrow->pur_ret_gwt), 3,'.',''),

                                                        "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->pur_ret_gwt), 3, '.', ''),

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),

                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "Taxable",

                                                        "GstOvrdnTypeofsupply"   => "Goods",

                                                        "GstHsnName"             => $itemrow->HSNCode,

                                                        "GstHsnDescription"      => "JEWELLERY OF GOLD UNSET Products Include: Gold Ornaments, On Gold, Pendant",

                                                        "CgstGstRateDutyhead"    => "CGST",

                                                        "CgstGstRateValuationtype"  => "Based on Value",

                                                        "CgstGstRate"             => number_format($gstrate, 3,'.',''),

                                                        "SgstGstRateDutyhead"       => "SGST/UTGST",

                                                        "SgstGstRateValuationtype"   => "Based on Value",

                                                        "SgstGstRate"            => number_format($gstrate, 3,'.',''),

                                                        "IgstGstRateDutyhead"    => "IGST",

                                                        "IgstGstRateValuationtype"  => "Based on Value",

                                                        "IgstGstRate"            => number_format(($gstrate * 2), 3,'.',''),

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

	             //For other metal details

	             $otheritemquery = $this->db->query("SELECT sum(ret_other_itm_grs_weight) as net_wt, avg(	ret_other_itm_rate) as omrate, 

                                                sum(ret_other_itm_amount) as TOTAL, met.name as PRODUCTNAME, 

                                                sum(ret_other_itm_pcs) as ompcs   

                                                FROM ret_purchase_return_other_metal as om 

                                                LEFT JOIN ret_category as met on met.id_ret_category = om.ret_other_itm_metal_id 

                                                WHERE om.pur_ret_return_id = '".$itemrow->pur_ret_cat_itm_id."' GROUP BY ret_other_itm_metal_id");

                                                

                foreach($otheritemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => "GST Purchase ".$gstrate,

                                                        "LedgerParent"          => "Purchase Accounts",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => $itemrow->PRODUCTNAME,

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        
														"Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                        "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),
                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "Taxable",

                                                        "GstOvrdnTypeofsupply"   => "Goods",

                                                        "GstHsnName"             => $itemrow->HSNCode,

                                                        "GstHsnDescription"      => "JEWELLERY OF GOLD UNSET Products Include: Gold Ornaments, On Gold, Pendant",

                                                        "CgstGstRateDutyhead"    => "CGST",

                                                        "CgstGstRateValuationtype"  => "Based on Value",

                                                        "CgstGstRate"             => number_format($gstrate, 3,'.',''),

                                                        "SgstGstRateDutyhead"       => "SGST/UTGST",

                                                        "SgstGstRateValuationtype"   => "Based on Value",

                                                        "SgstGstRate"            => number_format($gstrate, 3,'.',''),

                                                        "IgstGstRateDutyhead"    => "IGST",

                                                        "IgstGstRateValuationtype"  => "Based on Value",

                                                        "IgstGstRate"            => number_format(($gstrate*2), 3,'.',''),

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                    

	            }

	            //For stone item returns

	            $stoneitemquery = $this->db->query("SELECT sum(ret_stone_wt) as net_wt, avg(ret_stone_rate) as avgrate, 

                                                sum(ret_stone_amount) as TOTAL, stone_name as PRODUCTNAME, 

                                                sum(ret_stone_pcs) as ompcs   

                                                FROM ret_purchase_return_stone_items as bs  

                                                LEFT JOIN ret_stone as st ON st.stone_id = bs.ret_stone_id 

                                                WHERE bs.pur_ret_return_id = '".$itemrow->pur_ret_cat_itm_id."'

                                                GROUP BY bs.ret_stone_id");

                                                

                foreach($stoneitemquery->result() as $itemrow){

	                 $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPE,

                                                        "LedgerName"            => "GST Purchase ".$gstrate,

                                                        "LedgerParent"          => "Purchase Accounts",

                                                        "LedgerAddress"         => $row->cuaddress,

                                                        "LedgerState"           => $row->cusstate,

                                                        "LedgerCountry"         => $row->cuscountry,

                                                        "LedgerPincode"         => $row->cuspincode,

                                                        "LedgerMobile"          => "+91".$row->CONTACTNO,

                                                        "LedgerGstReg"          =>  'Regular',
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           => $row->GSTNO, 

                                                        "BillName"              => $row->bill_id,

                                                        "BillDate"              => $row->INVOICEDATE,

                                                        "CrDr"                  => "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => $itemrow->PRODUCTNAME,

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        
														"Quantity"              => number_format(($itemrow->net_wt), 3,'.',''),

                                                        "Rate"                  => number_format((($itemrow->TOTAL) / $itemrow->net_wt), 3, '.', ''),

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(($itemrow->TOTAL), 2, '.', ''),
														
                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 

                                                        "BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => $row->cusdeladdress,

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => $row->cusstate,

                                                        "ConsigneeCountry"      => $row->cuscountry,

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 

                                                        "ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "Taxable",

                                                        "GstOvrdnTypeofsupply"   => "Goods",

                                                        "GstHsnName"             => $itemrow->HSNCode,

                                                        "GstHsnDescription"      => "JEWELLERY OF GOLD UNSET Products Include: Gold Ornaments, On Gold, Pendant",

                                                        "CgstGstRateDutyhead"    => "CGST",

                                                        "CgstGstRateValuationtype"  => "Based on Value",

                                                        "CgstGstRate"             => number_format($gstrate, 3,'.',''),

                                                        "SgstGstRateDutyhead"       => "SGST/UTGST",

                                                        "SgstGstRateValuationtype"   => "Based on Value",

                                                        "SgstGstRate"            => number_format($gstrate, 3,'.',''),

                                                        "IgstGstRateDutyhead"    => "IGST",

                                                        "IgstGstRateValuationtype"  => "Based on Value",

                                                        "IgstGstRate"            => number_format(($gstrate * 2), 3,'.',''),

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );

                    

	            }

            }

            

         

         if($row->roundoff != 0 ){

                 $return_data['VOUCHER'][] = array(

                                                        "Autoid"                => $row->po_id,

                                                        "CompanyNumber"         => $row->sort,

                                                        "TallyMasterid"         => 1,

                                                        "Voucherid"             => "",

                                                        "VoucherNumber"         => $invoice_string,

                                                        "VoucherDate"           => $row->INVOICEDATE,

                                                        "VoucherType"           => $row->VOUCHERTYPE,

                                                        "VoucherTypeParent"     => $row->VOUCHERTYPEPARENT,

														"LedgerName"            => "Round Off",

                                                        "LedgerParent"          => "Indirect Expenses",

                                                        "LedgerAddress"         =>   "",

                                                        "LedgerState"           =>   "",

                                                        "LedgerCountry"         =>   "",

                                                        "LedgerPincode"         =>   "",

                                                        "LedgerMobile"          =>   "",

                                                        "LedgerGstReg"          =>   "",
														
														"LedgerPan"         	=> $row->pan_no,

                                                        "LedgerGstin"           =>   "",

                                                        "BillName"              => "",

                                                        "BillDate"              => "",

                                                        "CrDr"                  => $row->roundoff > 0 ? "Dr" : "Cr",

                                                        "CostCategory"          => "",

                                                        "CostCentre"            => $row->CostCentre,

                                                        "Stockitem"             => "",

                                                        "Godown"                => "",

                                                        "BatchNo"               => "",

                                                        "Quantity"              => "",

                                                        "Rate"                  => "",

                                                        "Discount"              => "",

                                                        "Amount"                => number_format(abs($row->roundoff), 2, '.',''),


                                                        "OrderNo"               => "",

                                                        "OrderDate"             => "",

                                                        "TrackingNo"            => "",

                                                        "TrackingDate"          => "",

                                                        "TermsOfPayment"        => "",

                                                        "OtherRef"              => "",

                                                        "TermsOfDelivery1"      => "",

                                                        "TermsOfDelivery2"      => "",

                                                        "DispatchDocNo"         => "",

                                                        "ReceiptDocNo"          => "",

                                                        "DispatchedThrough"     => "",

                                                        "Destination"           => "",

                                                        "CarrierName"           => "",

                                                        "BillOfLanding"         => "",

                                                        "BillOfLandingDate"     => "",

                                                        "VehicleNo"             => "",

                                                        "BuyerName"             => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerMailingName"      => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "BuyerAddress1"         => $row->cuaddress,

                                                        "BuyerAddress2"         => "",

                                                        "BuyerState"            => $row->cusstate,

                                                        "BuyerCountry"          => $row->cuscountry,
														
														"BuyerGstReg"			=> "Regular",

                                                        "BuyerGSTIN"            => $row->GSTNO, 
														
														"BuyerPincode"          => $row->cuspincode,

                                                        "ConsigneeName"         => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeMailingName"  => $row->PARTYNAME. "-".$row->CONTACTNO,

                                                        "ConsigneeAddress1"     => "",

                                                        "ConsigneeAddress2"     => "",

                                                        "ConsigneeState"        => "",

                                                        "ConsigneeCountry"      => "",

                                                        "ConsigneeGSTIN"        => $row->GSTNO, 
														
														"ConsigneePincode"      => $row->cusdelpincode,

                                                        "PlaceOfSupply"         => $row->cusstate,

                                                        "CmpGstRegistrationType" => "Regular",
														
														"CmpGstin"              => $row->brgst,

                                                        "CmpGstState"           => $row->brstate,
                                                        
                                                        "GstOvrdnTaxability"     => "",

                                                        "GstOvrdnTypeofsupply"   => "",

                                                        "GstHsnName"             => "",

                                                        "GstHsnDescription"      => "",

                                                        "CgstGstRateDutyhead"    => "",

                                                        "CgstGstRateValuationtype"  => "",

                                                        "CgstGstRate"             => "",

                                                        "SgstGstRateDutyhead"       => "",

                                                        "SgstGstRateValuationtype"   => "",

                                                        "SgstGstRate"            => "",

                                                        "IgstGstRateDutyhead"    => "",

                                                        "IgstGstRateValuationtype"  => "",

                                                        "IgstGstRate"            => "",

                                                        "Reference"             => $row->po_id,

                                                        "ReferenceDate"         => $row->INVOICEDATE,

                                                        "VoucherSourceGodown"   =>  "",

                                                        "Narration"             => "",

                                                        "IsNonGstEntry"         => "No"

                                                );    

            }

	         

            

        }

        return $return_data;

	}




	

	

	function getrepairsalesList(){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }

	     $repair_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,

                                	    if(b.billing_for = 1, 'GST Sales', 'D-Sales') as VOUCHERTYPE, 'GST Sales' as voucherparent,

                                        '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                        IFNULL(del.address1,'') as ADRESS1,IFNULL(del.address2,'') as ADRESS2,IFNULL(del.address3,'') as ADRESS3, 

                                        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                        cus.mobile as CONTACTNO,cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME,

                                        cor.totalitems as QTY,sum(cor.rate) as RATE,sum(cor.rate) as VALUE,'' as SALESTAX,

                                        IFNULL(sum(cor.repair_tot_tax),0) as SALESTAXAMT,sum(cor.completed_weight ) as WEIGHT,

                                        (sum(cor.rate) - sum(cor.repair_tot_tax)) as TOTAL,IFNULL(b.remark,'') as REMARKS,

                                        IFNULL(sum(cor.completed_weight),0) as GROSSWT,IFNULL(sum(cor.completed_weight),0) as netweight,

                                        '' as SERVICEAMT,'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, 

                                        br.name as CostCentre, 0 as bill_discount, br.sort, 

                                        sum(cor.total_igst) as total_igst,  sum(cor.total_sgst) as total_sgst, sum(cor.total_cgst) as total_cgst, 

                                        cor.repair_percent as tax_percentage, met.metal_code, 

                                        b.round_off_amt as roundoff, b.bill_no, b.bill_id, billing_for, 

                                        (round(sum(CAST(((cor.rate - cor.repair_tot_tax) + cor.total_sgst + cor.total_cgst + cor.total_igst) AS DECIMAL(10,2)))) - sum(CAST(((cor.rate - cor.repair_tot_tax) + cor.total_sgst + cor.total_cgst + cor.total_igst) AS DECIMAL(10,2)))) as roundval 

                                        FROM ret_billing b 

                                		LEFT JOIN customerorderdetails as cor ON cor.bill_id = b.bill_id

                                        LEFT JOIN ret_product_master pro ON pro.pro_id=cor.id_product 

                                        LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id  

                                        LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                                        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                                        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                        LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                        LEFT JOIN state as st ON st.id_state = adr.id_state 

                                        LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id 

                                        LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                        WHERE b.bill_status=1 and b.bill_type = 11 

                                        ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                        ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

                                        AND b.id_branch > 1 AND cor.orderstatus = 5 AND cor.ortertype = 3 

                                        AND b.istransfered = 0 AND cor.rate > 10 

                                		GROUP BY b.bill_id");

		foreach($repair_query->result() as $row){

            $invoice_string     = $row->brcode."-"."RO"."-".$row->bill_no;

            

             $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                    "LedgerParent"          =>   $row->LedgerParent,

                    "LedgerAddress"         =>   $row->cuaddress,

                    "LedgerState"           =>   $row->cusstate,

                    "LedgerCountry"         =>   $row->cuscountry,

                    "LedgerPincode"         =>   $row->cuspincode,

                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                    "LedgerGstReg"          =>   $row->billing_for == 1 ? 'Consumer' : 'Regular',

                    "LedgerGstin"           =>   $row->GSTNO,

                    "BillName"              =>   $row->bill_id,

                    

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Dr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   $row->CostCentre, 

                    "Amount"                =>   $row->RATE,

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );

                

                $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   "GST Sales",

                    "LedgerParent"          =>   "Sales Accounts",

                    "LedgerAddress"         =>   "",

                    "LedgerState"           =>   "",

                    "LedgerCountry"         =>   "",

                    "LedgerPincode"         =>   "",

                    "LedgerMobile"          =>   "",

                    "LedgerGstReg"          =>   "",

                    "LedgerGstin"           =>   "",

                    "BillName"              =>   "",

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   "", 

                    "Amount"                =>   $row->TOTAL,

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );



                

                if($row->total_sgst > 0){

                    $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   "OUTPUT SGST @ 9%",

                    "LedgerParent"          =>   "Duties & Taxes",

                    "LedgerAddress"         =>   "",

                    "LedgerState"           =>   "",

                    "LedgerCountry"         =>   "",

                    "LedgerPincode"         =>   "",

                    "LedgerMobile"          =>   "",

                    "LedgerGstReg"          =>   "",

                    "LedgerGstin"           =>   "",

                    "BillName"              =>   "",

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   "", 

                    "Amount"                =>   $row->total_sgst,

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );

            }

                

                if($row->total_cgst > 0){

                    $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   "OUTPUT CGST @ 9%",

                    "LedgerParent"          =>   "Duties & Taxes",

                    "LedgerAddress"         =>   "",

                    "LedgerState"           =>   "",

                    "LedgerCountry"         =>   "",

                    "LedgerPincode"         =>   "",

                    "LedgerMobile"          =>   "",

                    "LedgerGstReg"          =>   "",

                    "LedgerGstin"           =>   "",

                    "BillName"              =>   "",

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   "", 

                    "Amount"                =>   $row->total_cgst,

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );

            }

            

            if($row->roundval != 0){

                

                    $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->bill_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   "Service Bill",

                    "VoucherTypeParent"     =>   "Sales",

                    "LedgerName"            =>   "Round Off",

                    "LedgerParent"          =>   "Indirect Expenses",

                    "LedgerAddress"         =>   "",

                    "LedgerState"           =>   "",

                    "LedgerCountry"         =>   "",

                    "LedgerPincode"         =>   "",

                    "LedgerMobile"          =>   "",

                    "LedgerGstReg"          =>   "",

                    "LedgerGstin"           =>   "",

                    "BillName"              =>   "",

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>    $row->roundval > 0 ? "Cr" : "Dr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   "", 

                    "Amount"                =>   number_format(abs($row->roundval), 2, '.',''),

                    "OrderNo"               => "",

                    "OrderDate"             => "",

                    "TrackingNo"            => "",

                    "TrackingDate"          => "",

                    "TermsOfPayment"        => "",

                    "OtherRef"              => "",

                    "TermsOfDelivery1"      => "",

                    "TermsOfDelivery2"      => "",

                    "DispatchDocNo"         => "",

                    "ReceiptDocNo"          => "",

                    "DispatchedThrough"     => "",

                    "Destination"           => "",

                    "CarrierName"           => "",

                    "BillOfLanding"         => "",

                    "BillOfLandingDate"     => "",

                    "VehicleNo"             => "",

                    "BuyerName"             => "",

                    "BuyerMailingName"      => "",

                    "BuyerAddress1"         => "",

                    "BuyerAddress2"         => "",

                    "BuyerState"            => "",

                    "BuyerCountry"          => "",

                    "BuyerGSTIN"            => "",

                    "ConsigneeName"         => "",

                    "ConsigneeMailingName"  => "",

                    "ConsigneeAddress1"     => "",

                    "ConsigneeAddress2"     => "",

                    "ConsigneeState"        => "",

                    "ConsigneeCountry"      => "",

                    "ConsigneeGSTIN"        => "",

                    "PlaceOfSupply"         => "",

                    "Reference"             =>   "",

            		"ReferenceDate"         =>   "",

                    "Narration"             =>   "",

                );

            

            }

                

		}

        

        

        return $return_data;   

	}

	

	function getpurchaseList(){

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }

	    $sql=$this->db->query("SELECT s.old_metal_sale_id, b.id_branch as id_branch, date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.pur_ref_no as INVOICENO,

	    'GST Purchase' as VOUCHERTYPE, 'Purchase' as vouvherparent, 

        '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

        IFNULL(del.address1,'') as ADRESS1,IFNULL(del.address2,'') as ADRESS2,IFNULL(del.address3,'') as ADRESS3,cus.mobile as CONTACTNO, s.piece as QTY,

        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

        IFNULL(s.rate,0) as VALUE,IFNULL(s.rate_per_grm,0) as RATE,

        '0' as SALESTAX,'0' as SALESTAXAMT,IFNULL(s.net_wt,0) as WEIGHT,IFNULL(s.rate,0) as TOTAL,

        IFNULL(b.remark,'') as REMARKS,IFNULL(s.gross_wt,0) as GRSWT,IFNULL(s.net_wt,0) as NETWT, br.sort,

        IFNULL(cat.metal_type,'') as PRODUCTNAME,'' as PRODUCTGROUP,'' as PRODUCTCODE, b.bill_id, br.name as CostCentre, 'Sundry Debtors' as LedgerParent, 

        met.metal_code, br.short_name as brcode, ifnull(estst.stprice,0) as stprice, 

        ifnull(estst.pieces,0) as stpieces, ifnull(estst.totwt,0) as sttotwt  

        FROM ret_bill_old_metal_sale_details s 

        LEFT JOIN ret_estimation_old_metal_sale_details est ON est.old_metal_sale_id=s.esti_old_metal_sale_id 

        LEFT JOIN (SELECT est_old_metal_sale_id, stone_type, stone_name, st.uom_id , 

                    AVG(ests.rate_per_gram) as avgrate, sum(ests.wt) as totwt, 

                    sum(ests.wt) as stonwt, sum(ests.price) as stprice, sum(pieces) as pieces  

                    FROM ret_esti_old_metal_stone_details ests 

                    LEFT JOIN ret_stone as st ON st.stone_id = ests.stone_id 

                    WHERE st.stone_type = 1 GROUP BY est_old_metal_sale_id) as estst ON estst.est_old_metal_sale_id = est.old_metal_sale_id 

        LEFT JOIN ret_old_metal_type cat ON cat.id_metal_type=est.id_old_metal_type

        LEFT JOIN ret_billing b ON b.bill_id=s.bill_id

        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

        LEFT JOIN country as cn ON cn.id_country = adr.id_country 

        LEFT JOIN state as st ON st.id_state = adr.id_state 

        LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id 

        LEFT JOIN branch br ON br.id_branch = b.id_branch 

        LEFT JOIN metal as met ON met.id_metal = b.metal_type 

        WHERE b.bill_status=1 and b.pur_ref_no IS NOT NULL 

         ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

         ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

        AND b.id_branch > 1 

        AND s.istransfered = 0 GROUP BY old_metal_sale_id LIMIT 100");

        //and date(b.bill_date) between '2022-05-01' AND '2022-05-03' 

        

        

        // >= subdate(current_date, 1)

        //echo $this->db->last_query();exit;

        foreach($sql->result() as $row){

            $invoice_string     =$row->brcode."-"."PU"."-".$row->metal_code."-".$row->INVOICENO;

            if($row->stprice > 0 || $row->stpieces > 0 || $row->sttotwt > 0){

                $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->old_metal_sale_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   $row->VOUCHERTYPE,

                    "VoucherTypeParent"     =>   $row->VOUCHERTYPE,

                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                    "LedgerParent"          =>   $row->LedgerParent,

                    "LedgerAddress"         =>   $row->cuaddress,

                    "LedgerState"           =>   $row->cusstate,

                    "LedgerCountry"         =>   $row->cuscountry,

                    "LedgerPincode"         =>   $row->cuspincode,

                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                    "LedgerGstReg"          =>   'Consumer',

                    "LedgerGstin"           =>   '',

                    "BillName"              =>   $row->bill_id,

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   $row->CostCentre, 

                    "Stockitem"             =>  ($row->WEIGHT == 0 ||  $row->WEIGHT == NULL) ? $row->PRODUCTNAME."-PCS" : $row->PRODUCTNAME,

                    "Godown"                =>   $row->CostCentre, 

                    "BatchNo"               =>   $row->INVOICENO,

                    "Quantity"              =>   ($row->WEIGHT == 0 ||  $row->WEIGHT == NULL) ? $row->QTY : $row->WEIGHT,

                    "Pcs"                   =>   $row->QTY,

                    "Rate"                  =>   number_format((($row->TOTAL -  $row->stprice) / ($row->WEIGHT == 0 ? $row->QTY : $row->WEIGHT)), 2, '.', ''),

                    "Discount"              =>   "",

                    "Amount"                =>   number_format(($row->TOTAL -  $row->stprice), 2, '.', ''),

                    "CgstLedger"            =>   "",

            		"CgstAmount"            =>   "",

                    "SgstLedger"            =>   "",

            		"SgstAmount"            =>   "",

            	    "AccLedger"             =>   "GST Purchase"

                );

                

                

                

                

                $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->old_metal_sale_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   $row->VOUCHERTYPE,

                    "VoucherTypeParent"     =>   $row->VOUCHERTYPE,

                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                    "LedgerParent"          =>   $row->LedgerParent,

                    "LedgerAddress"         =>   $row->cuaddress,

                    "LedgerState"           =>   $row->cusstate,

                    "LedgerCountry"         =>   $row->cuscountry,

                    "LedgerPincode"         =>   $row->cuspincode,

                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                    "LedgerGstReg"          =>   'Consumer',

                    "LedgerGstin"           =>   '',

                    "BillName"              =>   $row->bill_id,

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   $row->CostCentre, 

                    "Stockitem"             =>   "OLD DIAMOND", //$row->PRODUCTNAME,

                    "Godown"                =>   $row->CostCentre, 

                    "BatchNo"               =>   $row->INVOICENO,

                    "Quantity"              =>   $row->sttotwt,

                    "Pcs"                   =>   $row->stpieces,

                    "Rate"                  =>   number_format(($row->stprice / $row->sttotwt),2,'.',''),

                    "Discount"              =>   "",

                    "Amount"                =>   $row->stprice,

                    "CgstLedger"            =>   "",

            		"CgstAmount"            =>   "",

                    "SgstLedger"            =>   "",

            		"SgstAmount"            =>   "",

            	    "AccLedger"             =>   "GST Purchase"

                );

            

            }else{

                

                $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->old_metal_sale_id,

                    "CompanyNumber"         =>   $row->sort,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $invoice_string,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   $row->VOUCHERTYPE,

                    "VoucherTypeParent"     =>   $row->VOUCHERTYPE,

                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                    "LedgerParent"          =>   $row->LedgerParent,

                    "LedgerAddress"         =>   $row->cuaddress,

                    "LedgerState"           =>   $row->cusstate,

                    "LedgerCountry"         =>   $row->cuscountry,

                    "LedgerPincode"         =>   $row->cuspincode,

                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                    "LedgerGstReg"          =>   'Consumer',

                    "LedgerGstin"           =>   '',

                    "BillName"              =>   $row->bill_id,

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   $row->CostCentre, 

                    "Stockitem"             =>   $row->PRODUCTNAME,

                    "Godown"                =>   $row->CostCentre, 

                    "BatchNo"               =>   $row->INVOICENO,

                    "Quantity"              =>   $row->WEIGHT,

                    "Pcs"                   =>   $row->QTY,

                    "Rate"                  =>   $row->RATE,

                    "Discount"              =>   "",

                    "Amount"                =>   $row->TOTAL,

                    "CgstLedger"            =>   "",

            		"CgstAmount"            =>   "",

                    "SgstLedger"            =>   "",

            		"SgstAmount"            =>   "",

            	    "AccLedger"             =>   "GST Purchase"

                );

            

            }

        }

        

        

        if($_GET['id_branch'] =='' || $_GET['id_branch'] =='1'){

            $sql=$this->db->query("SELECT `po_item_id`, `po_item_po_id`, `po_purchase_mode`, `gross_wt`, `purchase_touch`, `no_of_pcs`, `item_cost`, 

    	                        po.purchase_type, po.po_ref_no, date_format(po.po_date, '%d-%m-%Y') as INVOICEDATE, 

    	                        kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

    	                        concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

    	                        ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,

    	                        cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME 

    	                        FROM `ret_purchase_order_items` as poi 

    	                        LEFT JOIN ret_purchase_order as po ON po.po_id = poi.`po_item_id` 

    	                        LEFT JOIN ret_category cat on cat.id_ret_category=poi.po_item_cat_id  

    	                        LEFT JOIN ret_karigar as kar ON kar.id_karigar = po.po_karigar_id 

    	                        LEFT JOIN country as cn ON cn.id_country = kar.id_country 

    	                        LEFT JOIN state as st ON st.id_state = kar.id_state 

    	                        WHERE `istransfered` = 0 AND po.is_suspense_stock = 0 AND po.bill_status = 1 ORDER BY po_item_id ASC LIMIT 100");

            

            

            // >= subdate(current_date, 1)

            

            foreach($sql->result() as $row){

                //$invoice_string     =$row->brcode."-"."SP"."-".$row->metal_code."-".$row->INVOICENO;

                $return_data['VOUCHER'][] = array(

                        "Autoid"                =>   $row->po_item_id,

                        "CompanyNumber"         =>   1,

                        "TallyMasterid"         =>   1,

                        "Voucherid"             =>   "",

                        "VoucherNumber"         =>   $row->po_ref_no,

                        "VoucherDate"           =>   $row->INVOICEDATE,

                        "VoucherType"           =>   'GST Purchase',

                        "VoucherTypeParent"     =>   'GST Purchase',

                        "LedgerName"            =>   $row->firstname. "-".$row->CONTACTNO,

                        "LedgerParent"          =>   'Sundry Debtors',

                        "LedgerAddress"         =>   $row->cuaddress,

                        "LedgerState"           =>   $row->cusstate,

                        "LedgerCountry"         =>   $row->cuscountry,

                        "LedgerPincode"         =>   $row->cuspincode,

                        "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                        "LedgerGstReg"          =>   'Consumer',

                        "LedgerGstin"           =>   '',

                        "BillName"              =>   $row->po_item_po_id,

                        "BillDate"              =>   $row->INVOICEDATE,

                        "CrDr"                  =>   "Cr",

                        "CostCategory"          =>   "",

                        "CostCentre"            =>   1, 

                        "Stockitem"             =>   $row->PRODUCTNAME,

                        "Godown"                =>   'Head Office', 

                        "BatchNo"               =>   $row->po_ref_no,

                        "Quantity"              =>   $row->gross_wt,

                        "Rate"                  =>   $row->item_cost,

                        "Discount"              =>   "",

                        "Amount"                =>   number_format(($row->item_cost / $row->gross_wt), 2, '.', ''),

                        "CgstLedger"            =>   "",

                		"CgstAmount"            =>   "",

                        "SgstLedger"            =>   "",

                		"SgstAmount"            =>   "",

                	    "AccLedger"             =>   "GST Purchase"

                    );

            }

        }

        

        return $return_data;

	}

	

	function getsupplierpurchaseList(){

	    

	    $return_data = array();

	    $sql=$this->db->query("SELECT `po_item_id`, `po_item_po_id`, `po_purchase_mode`, `gross_wt`, `purchase_touch`, `no_of_pcs`, `item_cost`, 

	                        po.purchase_type, po.po_ref_no, date_format(po.po_date, '%d-%m-%Y') as INVOICEDATE, 

	                        kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

	                        concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

	                        ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,

	                        cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME 

	                        FROM `ret_purchase_order_items` as poi 

	                        LEFT JOIN ret_purchase_order as po ON po.po_id = poi.`po_item_id` 

	                        LEFT JOIN ret_category cat on cat.id_ret_category=poi.po_item_cat_id  

	                        LEFT JOIN ret_karigar as kar ON kar.id_karigar = po.po_karigar_id 

	                        LEFT JOIN country as cn ON cn.id_country = kar.id_country 

	                        LEFT JOIN state as st ON st.id_state = kar.id_state 

	                        WHERE `istransfered` = 0 AND po.is_suspense_stock = 0 AND po.bill_status = 1 ORDER BY po_item_id ASC LIMIT 100");

        

        

        // >= subdate(current_date, 1)

        

        foreach($sql->result() as $row){

            //$invoice_string     =$row->brcode."-"."SP"."-".$row->metal_code."-".$row->INVOICENO;

            $return_data['VOUCHER'][] = array(

                    "Autoid"                =>   $row->po_item_id,

                    "CompanyNumber"         =>   1,

                    "TallyMasterid"         =>   1,

                    "Voucherid"             =>   "",

                    "VoucherNumber"         =>   $row->po_ref_no,

                    "VoucherDate"           =>   $row->INVOICEDATE,

                    "VoucherType"           =>   'GST Purchase',

                    "VoucherTypeParent"     =>   'GST Purchase',

                    "LedgerName"            =>   $row->firstname. "-".$row->CONTACTNO,

                    "LedgerParent"          =>   'Sundry Debtors',

                    "LedgerAddress"         =>   $row->cuaddress,

                    "LedgerState"           =>   $row->cusstate,

                    "LedgerCountry"         =>   $row->cuscountry,

                    "LedgerPincode"         =>   $row->cuspincode,

                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                    "LedgerGstReg"          =>   'Consumer',

                    "LedgerGstin"           =>   '',

                    "BillName"              =>   $row->po_item_po_id,

                    "BillDate"              =>   $row->INVOICEDATE,

                    "CrDr"                  =>   "Cr",

                    "CostCategory"          =>   "",

                    "CostCentre"            =>   1, 

                    "Stockitem"             =>   $row->PRODUCTNAME,

                    "Godown"                =>   'Head Office', 

                    "BatchNo"               =>   $row->po_ref_no,

                    "Quantity"              =>   $row->gross_wt,

                    "Rate"                  =>   $row->item_cost,

                    "Discount"              =>   "",

                    "Amount"                =>   number_format(($row->item_cost / $row->gross_wt), 2, '.', ''),

                    "CgstLedger"            =>   "",

            		"CgstAmount"            =>   "",

                    "SgstLedger"            =>   "",

            		"SgstAmount"            =>   "",

            	    "AccLedger"             =>   "GST Purchase"

                );

        }

        

        return $return_data;

	}

	

	function getBTTransferList()

	{

	    $return_data = array();

	     $from_date = "";

	    $to_date   = "";

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }

	    

	    //Tagged item BT out ward tags by from branch start here 

		$trans_query = $this->db->query("SELECT date_format(bt.approved_datetime,'%d-%m-%Y') as approvedon, branch_trans_code, 

		                                branch_transfer_id, transfer_from_branch, transfer_to_branch, transfer_item_type, pieces, grs_wt, 

		                                net_wt, fb.name as frombranch, fb.address1 as frmaddress1, fb.address2 as frmaddress2, tb.name as tobranch, 

		                                tb.address1 as toaddress1, tb.address2 as toaddress2, fb.short_name as from_bt_name, tb.short_name as to_bt_name, 

		                                IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,fb.sort, tb.sort as tsort,

		                                IFNULL(fst.name,'') as fcusstate, IFNULL(fcn.name,'') as fcuscountry

		                                FROM ret_branch_transfer as bt 

		                                LEFT JOIN branch fb ON fb.id_branch = bt.transfer_from_branch 

		                                LEFT JOIN branch tb ON tb.id_branch = bt.transfer_to_branch 

		                                LEFT JOIN country as cn ON cn.id_country = tb.id_country 

                                        LEFT JOIN state as st ON st.id_state = tb.id_state 

                                        LEFT JOIN country as fcn ON fcn.id_country = tb.id_country 

                                        LEFT JOIN state as fst ON fst.id_state = tb.id_state 

		                                WHERE transfer_item_type = 1 AND bt.is_other_issue = 0 AND bt.approved_datetime IS NOT NULL 

		                                 ".($from_date !='' && $to_date !='' ? " AND DATE(bt.approved_datetime) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                ".($_GET['id_branch'] !='' ? " AND bt.transfer_from_branch = '".$_GET['id_branch']."'" :'')." 

		                                AND bt.	outistransfered = 0 LIMIT 100");

		//echo $this->db->last_query();exit;

		$result_data = $trans_query->result_array();

		foreach($result_data as $rkey => $rval){

			$result_data[$rkey]['TransferDetails'] = $this->getbranchtrasferDetails($rval['branch_transfer_id']);

		}

		/*echo "<pre>";

		print_r($result_data[$rkey]['TransferDetails']);

		echo "</pre>";exit;*/

		foreach($result_data as $btkey => $btval){

		    foreach($btval['TransferDetails'] as $btikey => $btival){ //tally_qty_type

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['sort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "Out-" .$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['to_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['to_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => ($btival["tally_qty_type"] == 1 ? $btival["CategoryName"]."-PCS" : (($btival["NetWeight"] == 0 ||  $btival["NetWeight"] == NULL) ? $btival["CategoryName"]."-PCS" : $btival["CategoryName"])),

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => ($btival["tally_qty_type"] == 1 ? $btival["Quantity"] : ($btival["NetWeight"] == 0 ?  $btival["Quantity"] : $btival["NetWeight"])),

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "out"

		                                    );

		      if($btival["totaldiapcs"] > 0 && $btival["tally_qty_type"] != 1){

		          $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['sort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "Out-" .$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['to_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['to_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"             =>   'Diamond',

                                                

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["totaldiawt"],

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "out"

		                                    );

		      }

		    }

		    

		    $othermetalquery = $this->db->query("SELECT  

                                            ifnull(sum(otag.tag_other_itm_grs_weight),0) as GrossWeight, 

                                            ifnull(sum(otag.tag_other_itm_grs_weight),0) as NetWeight, ifnull(sum(otag.tag_other_itm_pcs), 0) as Quantity, 

                                            0 as LesWeight, 

                                            0 as total_salevalue, 

                                            cat.hsn_code as HSNCode, cat.name as CategoryName 

                                            FROM `ret_brch_transfer_tag_items` as trtag 

                                            LEFT JOIN ret_tag_other_metals as otag ON otag.tag_other_itm_tag_id = trtag.tag_id 

                                            LEFT JOIN ret_category as cat ON cat.id_ret_category = if(otag.tag_other_itm_pur_id = 7, 2, 1) 

                                            WHERE trtag.transfer_id = '".$btval['branch_transfer_id']."' 

                                            GROUP BY cat.id_ret_category HAVING Quantity > 0");

            

		    foreach($othermetalquery->result() as $omkey => $omval){

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['sort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "Out-" .$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['to_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['to_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         =>   $omval->CategoryName,

                                                

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $omval->GrossWeight,

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "out"

		                                    );

		    }

		    

		}

		//Tagged item BT out ward tags by from branch End here 

		

		

		// Tagged item BT in ward tags by from branch start here  

		$trans_query = $this->db->query("SELECT date_format(bt.dwnload_datetime,'%d-%m-%Y') as approvedon, branch_trans_code, 

		                                branch_transfer_id, transfer_from_branch, transfer_to_branch, transfer_item_type, pieces, grs_wt, 

		                                net_wt, fb.name as frombranch, fb.address1 as frmaddress1, fb.address2 as frmaddress2, tb.name as tobranch, 

		                                tb.address1 as toaddress1, tb.address2 as toaddress2, fb.short_name as from_bt_name, tb.short_name as to_bt_name, 

		                                IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,fb.sort, tb.sort as tsort,

		                                IFNULL(fst.name,'') as fcusstate, IFNULL(fcn.name,'') as fcuscountry

		                                FROM ret_branch_transfer as bt 

		                                LEFT JOIN branch fb ON fb.id_branch = bt.transfer_from_branch 

		                                LEFT JOIN branch tb ON tb.id_branch = bt.transfer_to_branch 

		                                LEFT JOIN country as cn ON cn.id_country = tb.id_country 

                                        LEFT JOIN state as st ON st.id_state = tb.id_state 

                                        LEFT JOIN country as fcn ON fcn.id_country = tb.id_country 

                                        LEFT JOIN state as fst ON fst.id_state = tb.id_state 

		                                WHERE transfer_item_type = 1 AND bt.is_other_issue = 0  AND bt.dwnload_datetime IS NOT NULL 

		                                 ".($from_date !='' && $to_date !='' ? " AND DATE(bt.dwnload_datetime) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                ".($_GET['id_branch'] !='' ? " AND bt.transfer_to_branch = '".$_GET['id_branch']."'" :'')." 

		                                AND bt.istransfered = 0 LIMIT 100");

		//echo $this->db->last_query();exit;                               

		$result_data = $trans_query->result_array();

		foreach($result_data as $rkey => $rval){

			$result_data[$rkey]['TransferDetails'] = $this->getbranchtrasferDetails($rval['branch_transfer_id']);

		}

		

		foreach($result_data as $btkey => $btval){

		    foreach($btval['TransferDetails'] as $btikey => $btival){

		        

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['tsort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "In-".$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['from_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['from_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => $btival["tally_qty_type"] == 1 ? $btival["CategoryName"]."-PCS" : ($btival["NetWeight"] == 0 ||  $btival["NetWeight"] == NULL) ? $btival["CategoryName"]."-PCS" : $btival["CategoryName"],

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["tally_qty_type"] == 1 ? $btival["Quantity"] :  $btival["NetWeight"] == 0 ?  $btival["Quantity"] : $btival["NetWeight"],

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "in"

		                                    );

		           if($btival["totaldiapcs"] > 0 && $btival["tally_qty_type"] != 1){

		                $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['tsort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "In-".$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['from_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['from_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => "Diamond",

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["totaldiawt"],

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "in"

		                                    );

		           }

		    }

		    

		    $othermetalquery = $this->db->query("SELECT  

                                            sum(otag.tag_other_itm_grs_weight) as GrossWeight, 

                                            ifnull(sum(otag.tag_other_itm_grs_weight),0) as NetWeight, ifnull(sum(otag.tag_other_itm_pcs), 0) as Quantity, 

                                            0 as LesWeight, 

                                            0 as total_salevalue, 

                                            cat.hsn_code as HSNCode, cat.name as CategoryName 

                                            FROM `ret_brch_transfer_tag_items` as trtag 

                                            LEFT JOIN ret_tag_other_metals as otag ON otag.tag_other_itm_tag_id = trtag.tag_id 

                                            LEFT JOIN ret_category as cat ON cat.id_ret_category = if(otag.tag_other_itm_pur_id = 7, 2, 1) 

                                            WHERE trtag.transfer_id = '".$btval['branch_transfer_id']."' 

                                            GROUP BY cat.id_ret_category HAVING Quantity > 0");

            

		    foreach($othermetalquery->result() as $omkey => $omval){

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['tsort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "In-" .$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['from_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['from_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         =>   $omval->CategoryName,

                                                

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $omval->GrossWeight,

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "in"

		                                    );

		    }

		    

		}

		// Tagged item BT in ward tags by from branch end here 

		

		$trans_query = $this->db->query("SELECT date_format(bt.approved_datetime,'%d-%m-%Y') as approvedon, branch_trans_code, 

		                                branch_transfer_id, transfer_from_branch, transfer_to_branch, transfer_item_type, pieces, grs_wt, 

		                                net_wt, fb.name as frombranch, fb.address1 as frmaddress1, fb.address2 as frmaddress2, tb.name as tobranch, 

		                                tb.address1 as toaddress1, tb.address2 as toaddress2, fb.short_name as from_bt_name, tb.short_name as to_bt_name, 

		                                IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,fb.sort, tb.sort as tsort,

		                                IFNULL(fst.name,'') as fcusstate, IFNULL(fcn.name,'') as fcuscountry

		                                FROM ret_branch_transfer as bt 

		                                LEFT JOIN branch fb ON fb.id_branch = bt.transfer_from_branch 

		                                LEFT JOIN branch tb ON tb.id_branch = bt.transfer_to_branch 

		                                LEFT JOIN country as cn ON cn.id_country = tb.id_country 

                                        LEFT JOIN state as st ON st.id_state = tb.id_state 

                                        LEFT JOIN country as fcn ON fcn.id_country = tb.id_country 

                                        LEFT JOIN state as fst ON fst.id_state = tb.id_state 

		                                WHERE transfer_item_type = 3 AND bt.is_other_issue = 0   AND bt.approved_datetime IS NOT NULL 

		                                 ".($from_date !='' && $to_date !='' ? " AND DATE(bt.approved_datetime) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                ".($_GET['id_branch'] !='' ? " AND bt.transfer_from_branch = '".$_GET['id_branch']."'" :'')." 

		                                AND bt.outistransfered = 0 LIMIT 100");

		//echo $this->db->last_query();exit;

		$result_data = $trans_query->result_array();

		foreach($result_data as $rkey => $rval){

			$result_data[$rkey]['TransferDetails'] = $this->getBTOldMetalDetails($rval['branch_transfer_id']);

		}

		foreach($result_data as $btkey => $btval){

		    foreach($btval['TransferDetails'] as $btikey => $btival){

		        

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['sort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "Out-".$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['to_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['to_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => $btival["tally_qty_type"] == 1 ? $btival["CategoryName"]."-PCS" : ($btival["NetWeight"] == 0 ||  $btival["NetWeight"] == NULL) ? $btival["CategoryName"]."-PCS" : $btival["CategoryName"],

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["tally_qty_type"] == 1 ? $btival["Quantity"] :  $btival["NetWeight"] == 0 ?  $btival["Quantity"] : $btival["NetWeight"],

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "out"

		                                    );

		            

		            if($btival["totaldiapcs"] > 0 && $btival["tally_qty_type"] != 1){

		                $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['sort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "Out-".$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['from_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['from_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => $btival["diastockname"],

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["totaldiawt"],

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "out"

		                                    );

		           }                        

		        

		    }

		}

		

		

		$trans_query = $this->db->query("SELECT date_format(bt.dwnload_datetime,'%d-%m-%Y') as approvedon, branch_trans_code, 

		                                branch_transfer_id, transfer_from_branch, transfer_to_branch, transfer_item_type, pieces, grs_wt, 

		                                net_wt, fb.name as frombranch, fb.address1 as frmaddress1, fb.address2 as frmaddress2, tb.name as tobranch, 

		                                tb.address1 as toaddress1, tb.address2 as toaddress2, fb.short_name as from_bt_name, tb.short_name as to_bt_name, 

		                                IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,fb.sort, tb.sort as tsort,

		                                IFNULL(fst.name,'') as fcusstate, IFNULL(fcn.name,'') as fcuscountry

		                                FROM ret_branch_transfer as bt 

		                                LEFT JOIN branch fb ON fb.id_branch = bt.transfer_from_branch 

		                                LEFT JOIN branch tb ON tb.id_branch = bt.transfer_to_branch 

		                                LEFT JOIN country as cn ON cn.id_country = tb.id_country 

                                        LEFT JOIN state as st ON st.id_state = tb.id_state 

                                        LEFT JOIN country as fcn ON fcn.id_country = tb.id_country 

                                        LEFT JOIN state as fst ON fst.id_state = tb.id_state 

		                                WHERE transfer_item_type = 3 AND bt.is_other_issue = 0  AND bt.dwnload_datetime IS NOT NULL 

		                                 ".($from_date !='' && $to_date !='' ? " AND DATE(bt.dwnload_datetime) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                ".($_GET['id_branch'] !='' ? " AND bt.transfer_to_branch = '".$_GET['id_branch']."'" :'')." 

		                                AND bt.istransfered = 0 LIMIT 100");

		$result_data = $trans_query->result_array();

		foreach($result_data as $rkey => $rval){

			$result_data[$rkey]['TransferDetails'] = $this->getBTOldMetalDetails($rval['branch_transfer_id']);

		}

		foreach($result_data as $btkey => $btval){

		    foreach($btval['TransferDetails'] as $btikey => $btival){

		        

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['tsort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "In-".$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['from_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['from_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => $btival["tally_qty_type"] == 1 ? $btival["CategoryName"]."-PCS" : ($btival["NetWeight"] == 0 ||  $btival["NetWeight"] == NULL) ? $btival["CategoryName"]."-PCS" : $btival["CategoryName"],

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["tally_qty_type"] == 1 ? $btival["Quantity"] :  $btival["NetWeight"] == 0 ?  $btival["Quantity"] : $btival["NetWeight"],

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "in"

		                                    );

		                                    

		              if($btival["totaldiapcs"] > 0 && $btival["tally_qty_type"] != 1){

		                $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['tsort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "In-".$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['from_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['from_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => $btival["diastockname"],

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["totaldiawt"],

                                                //"Rate"              => $btival["NetWeight"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btival["NetWeight"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "in"

		                                    );

		           }                

		    }

		}

		

		//Non tag item BT outward from branch

		$non_tag_trans_query = $this->db->query("SELECT date_format(bt.approved_datetime,'%d-%m-%Y') as approvedon, branch_trans_code, 

		                                branch_transfer_id, transfer_from_branch, transfer_to_branch, transfer_item_type, pieces, grs_wt, 

		                                net_wt, fb.name as frombranch, fb.address1 as frmaddress1, fb.address2 as frmaddress2, tb.name as tobranch, 

		                                tb.address1 as toaddress1, tb.address2 as toaddress2, fb.short_name as from_bt_name, tb.short_name as to_bt_name, 

		                                IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,fb.sort, tb.sort as tsort,

		                                IFNULL(fst.name,'') as fcusstate, IFNULL(fcn.name,'') as fcuscountry, bt.pieces, bt.grs_wt, bt.net_wt 

		                                FROM ret_branch_transfer as bt 

		                                LEFT JOIN branch fb ON fb.id_branch = bt.transfer_from_branch 

		                                LEFT JOIN branch tb ON tb.id_branch = bt.transfer_to_branch 

		                                LEFT JOIN country as cn ON cn.id_country = tb.id_country 

                                        LEFT JOIN state as st ON st.id_state = tb.id_state 

                                        LEFT JOIN country as fcn ON fcn.id_country = tb.id_country 

                                        LEFT JOIN state as fst ON fst.id_state = tb.id_state 

		                                WHERE transfer_item_type = 2 AND bt.is_other_issue = 0  AND bt.approved_datetime IS NOT NULL 

		                                 ".($from_date !='' && $to_date !='' ? " AND DATE(bt.approved_datetime) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                ".($_GET['id_branch'] !='' ? " AND bt.transfer_from_branch = '".$_GET['id_branch']."'" :'')." 

		                                AND bt.	outistransfered = 0 LIMIT 100");

		$result_data = $non_tag_trans_query->result_array();

		foreach($result_data as $rkey => $rval){

			$result_data[$rkey]['TransferDetails'] = $this->getBTNonTagDetails($rval['branch_transfer_id']);

		}

		foreach($result_data as $btkey => $btval){

		    foreach($btval['TransferDetails'] as $btikey => $btival){

		        

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['sort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "Out-".$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['to_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['to_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => $btival["CategoryName"],

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btval["net_wt"] == 0 ?  $btval["pieces"] : $btval["net_wt"],

                                                //"Rate"              => $btval["net_wt"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btval["net_wt"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "out"

		                                    );

		    }

		}

		

			$non_tag_trans_query = $this->db->query("SELECT date_format(bt.dwnload_datetime,'%d-%m-%Y') as approvedon, branch_trans_code, 

		                                branch_transfer_id, transfer_from_branch, transfer_to_branch, transfer_item_type, pieces, grs_wt, 

		                                net_wt, fb.name as frombranch, fb.address1 as frmaddress1, fb.address2 as frmaddress2, tb.name as tobranch, 

		                                tb.address1 as toaddress1, tb.address2 as toaddress2, fb.short_name as from_bt_name, tb.short_name as to_bt_name, 

		                                IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,fb.sort, tb.sort as tsort,

		                                IFNULL(fst.name,'') as fcusstate, IFNULL(fcn.name,'') as fcuscountry, bt.pieces, bt.grs_wt, bt.net_wt 

		                                FROM ret_branch_transfer as bt 

		                                LEFT JOIN branch fb ON fb.id_branch = bt.transfer_from_branch 

		                                LEFT JOIN branch tb ON tb.id_branch = bt.transfer_to_branch 

		                                LEFT JOIN country as cn ON cn.id_country = tb.id_country 

                                        LEFT JOIN state as st ON st.id_state = tb.id_state 

                                        LEFT JOIN country as fcn ON fcn.id_country = tb.id_country 

                                        LEFT JOIN state as fst ON fst.id_state = tb.id_state 

		                                WHERE transfer_item_type = 2 AND bt.is_other_issue = 0  AND bt.dwnload_datetime IS NOT NULL 

		                                 ".($from_date !='' && $to_date !='' ? " AND DATE(bt.dwnload_datetime) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                ".($_GET['id_branch'] !='' ? " AND bt.transfer_to_branch = '".$_GET['id_branch']."'" :'')." 

		                                AND bt.istransfered = 0 LIMIT 100");

		$result_data = $non_tag_trans_query->result_array();

		foreach($result_data as $rkey => $rval){

			$result_data[$rkey]['TransferDetails'] = $this->getBTNonTagDetails($rval['branch_transfer_id']);

		}

		foreach($result_data as $btkey => $btval){

		    foreach($btval['TransferDetails'] as $btikey => $btival){

		        

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['branch_transfer_id'],

                                                "CompanyNumber"     => $btval['tsort'],

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "In-".$btval['branch_transfer_id'],

                                                "VoucherDate"       => $btval['approvedon'],

                                                "VoucherType"       => $btval['from_bt_name']."-"."StockJournal",

                                                "VoucherTypeParent" => $btval['from_bt_name']."-"."StockJournal",

                                                "LedgerName"        => "",

                                                "LedgerParent"      => "",

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => $btval['frombranch'],

                                                "Stockitem"         => $btival["CategoryName"],

                                                "Godown"            => $btval['frombranch'],

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btval["net_wt"] == 0 ?  $btval["pieces"] : $btval["net_wt"],

                                                //"Rate"              => $btval["net_wt"] == 0 ?  $btival["total_salevalue"]  : number_format(($btival["total_salevalue"] / $btval["net_wt"]), 2, '.', ''),

                                                "Discount"          => "",

                                                //"Amount"            => $btival["total_salevalue"],

                                                "Rate"              => "",

                                                "Amount"            => "",

                                                "BuyerName"         => $btval['tobranch'],

                                                "BuyerMailingName"  => $btval['tobranch'],

                                                "BuyerAddress1"     => $btval['toaddress1'],

                                                "BuyerAddress2"     => $btval['toaddress2'],

                                                "BuyerState"        => $btval['cusstate'],

                                                "BuyerCountry"      => $btval['cuscountry'],

                                                "ConsigneeName"     => $btval['frombranch'],

                                                "ConsigneeMailingName" => $btval['frombranch'],

                                                "ConsigneeAddress1" => $btval['frmaddress1'],

                                                "ConsigneeAddress2" => $btval['frmaddress2'],

                                                "ConsigneeState"    => $btval['fcusstate'],

                                                "ConsigneeCountry"  => $btval['fcuscountry'],

                                                "Void"              => "in"

		                                    );

		    }

		}

		

		return $return_data;

	     

	}

	

	function getAllonetimeschemeList()

	{

	    

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }

	    

	     //Chit Payment Receipts Details

         $get_day_entries = $this->db->query("SELECT tal_imp_id, date_format(tal_imp_date, '%d-%m-%Y') as INVOICEDATE, tal_imp_date, tal_imp_branch, tal_bran_row_id,  

                                    	    br.short_name as brcode, br.name as CostCentre, 

                                    	    br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort, 

                                    	    IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry 

	                                        FROM ret_tally_import_chitpayments as pay  

	                                        LEFT JOIN branch br ON br.id_branch = pay.tal_imp_branch  

	                                        LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                            LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                            WHERE spltally_guid = 0 

                                             ".($from_date !='' && $to_date !='' ? " AND DATE(tal_imp_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                            ".($_GET['id_branch'] !='' ? " AND pay.tal_imp_branch = '".$_GET['id_branch']."'" :'')." 

                                             ");

	   //echo $this->db->last_query();exit;

	   foreach($get_day_entries->result() as $row){

    	    $payments	= $this->get_spl_purchase_plan_payments($row->tal_imp_date, $row->tal_imp_branch);

        	if(!empty($payments)){

                /*$date_grouped_data = array();

                foreach($payments as $key => $value){

                   $date_grouped_data[$value['date_payment']][$key] = $value;

                }*/

                $total_amount = 0;

                $total_online_amount = 0;

                $invoice_string = "SI-EMI-".$row->brcode."-".$row->tal_bran_row_id;

                foreach($payments as $dkey => $dateval){

                    $total_amount += $dateval['totamt'];

                    if($dateval['id_payGateway'] == NULL || ($dateval['payment_mode']  == "Cash" || $dateval['payment_mode'] == "CSH")){

                        if($dateval['payment_mode']  != "Cash" && $dateval['payment_mode'] != "CSH"){

                                $vouchertype = $row->brcode."-Journal";

                                if(($dateval['NB_type'] != 0 && $dateval['id_pay_device'] == 0) ||  $dateval['payment_mode'] == 'CHQ'){

                                    $ledgername = "Chit-Head Office";

                                    $voucherparent = "Branch/Divisions";

                                }else{

                                    if($dateval['device_name']  == 'Paytm'){

                                        $ledgername = "Chit-Credit Card(Paytm)";

                                        $voucherparent = "Sundry Debtor";

                                    }else{

                                        $ledgername = "Chit-Credit Card";

                                        $voucherparent = "Sundry Debtor";

                                    }

                                }

                            }else{

                                $ledgername = "Chit-Cash";

                                $vouchertype = $row->brcode."-Journal";

                                $voucherparent = "Cash-in-hand";

                            }

                            

                        if($ledgername != "Chit-Head Office"){

                                $return_data['VOUCHER'][] = array(

                                                "Autoid"                => $row->tal_imp_id,

                                                "CompanyNumber"         => $row->sort,

                                                "TallyMasterid"         => 1,

                                                "Voucherid"             => "",

                                                "VoucherNumber"         => $invoice_string,

                                                "VoucherDate"           => $row->INVOICEDATE,

                                                "VoucherType"           => $vouchertype,

                                                "VoucherTypeParent"     => "Sundry Debtor",

                                                "LedgerName"            => $ledgername, //$row->payment_mode 

                                                "LedgerParent"          => "",

                                                "LedgerAddress"         => "",

                                                "LedgerState"           => "",

                                                "LedgerCountry"         => "",

                                                "LedgerPincode"         => "",

                                                "LedgerMobile"          => "",

                                                "LedgerGstReg"          => "",

                                                "LedgerGstin"           => "",

                                                "BillName"              => "",

                                                "BillDate"              => $row->INVOICEDATE,

                                                "PlaceOfSupply"         => "",

                                                "TransactionDate"       => $row->INVOICEDATE,

                                                "CrDr"                  => "Dr",

                                                "Amount"                => $dateval['totamt'],

                                                "CostCategory"          => "",

                                                "CostCentre"            => $row->CostCentre,

                                                "BranchCode"            => $row->brcode,

                                                "Location"              => $row->frmaddress1,

                                                "State"                 => $row->brstate,

                                                

                                    );

                        }

                    }else{

                        $total_online_amount += $dateval['totamt'];

                    }

                }

                

                if($total_online_amount > 0){

                    $return_data['VOUCHER'][] = array(

                                                "Autoid"                => $row->tal_imp_id,

                                                "CompanyNumber"         => $row->sort,

                                                "TallyMasterid"         => 1,

                                                "Voucherid"             => "",

                                                "VoucherNumber"         => $invoice_string,

                                                "VoucherDate"           => $row->INVOICEDATE,

                                                "VoucherType"           => $row->brcode."-Journal",

                                                "VoucherTypeParent"     => "Sundry Debtor",

                                                "LedgerName"            => "Cashfree", //$row->payment_mode 

                                                "LedgerParent"          => "",

                                                "LedgerAddress"         => "",

                                                "LedgerState"           => "",

                                                "LedgerCountry"         => "",

                                                "LedgerPincode"         => "",

                                                "LedgerMobile"          => "",

                                                "LedgerGstReg"          => "",

                                                "LedgerGstin"           => "",

                                                "BillName"              => "",

                                                "BillDate"              => $row->INVOICEDATE,

                                                "PlaceOfSupply"         => "",

                                                "TransactionDate"       => $row->INVOICEDATE,

                                                "CrDr"                  => "Dr",

                                                "Amount"                => $total_online_amount,

                                                "CostCategory"          => "",

                                                "CostCentre"            => $row->CostCentre,

                                                "BranchCode"            => $row->brcode,

                                                "Location"              => $row->frmaddress1,

                                                "State"                 => $row->brstate,

                                                

                                            );

                }

                

                $return_data['VOUCHER'][] = array(

                                                "Autoid"                => $row->tal_imp_id,

                                                "CompanyNumber"         => $row->sort,

                                                "TallyMasterid"         => 1,

                                                "Voucherid"             => "",

                                                "VoucherNumber"         => $invoice_string,

                                                "VoucherDate"           => $row->INVOICEDATE,

                                                "VoucherType"           => $row->brcode."-Journal",

                                                "VoucherTypeParent"     => "Sundry Debtor",

                                                "LedgerName"            => "ONE TIME AMOUNT",

                                                "LedgerParent"          => "",

                                                "LedgerAddress"         => "",

                                                "LedgerState"           => "",

                                                "LedgerCountry"         => "",

                                                "LedgerPincode"         => "",

                                                "LedgerMobile"          => "",

                                                "LedgerGstReg"          => "Consumer",

                                                "LedgerGstin"           => "",

                                                "BillName"              => "",

                                                "BillDate"              => $row->INVOICEDATE,

                                                "PlaceOfSupply"         => "",

                                                "TransactionDate"       => $row->INVOICEDATE,

                                                "CrDr"                  => "Cr",

                                                "Amount"                => $total_amount,

                                                "CostCategory"          => "",

                                                "CostCentre"            => $row->CostCentre,

                                                "BranchCode"            => $row->brcode,

                                                "Location"              => $row->frmaddress1,

                                                "State"                 => $row->brstate

                                            );

                

    	   }else{

    	       $this->db->query("UPDATE ret_tally_import_chitpayments 

                    SET splistransfered = 2, tally_updated_on = '".date('Y-m-d H:i:s')."'  

                    WHERE tal_imp_id = '".$row->tal_imp_id."'");

    	   }

	   }

	   

	   //Chit NB payments

	   

	   $nbquery = $this->db->query("SELECT p.id_payment, date_format(p.date_payment, '%d-%m-%Y') as INVOICEDATE, pmd.payment_mode, sum(pmd.payment_amount) as totamt,

                            ifnull(`NB_type`, 0 ) as NB_type, `card_type`, ifnull(paydev.device_name, 0) as device_name, is_offline, id_payGateway,

                            ifnull(pmd.id_pay_device, 0) as id_pay_device, cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                            concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                            IFNULL(adr.pincode,'') as cuspincode,IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, cus.mobile as CONTACTNO,

                            br.short_name as brcode,br.name as CostCentre,br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort,

                            IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry, 

                            if(pmd.payment_mode = 'NB' AND id_payGateway IS NULL , if(paydev.device_type = 1 , 1 , 0), 1) as dtype

                            FROM payment p 

                            LEFT JOIN payment_mode_details as pmd ON pmd.id_payment = p.id_payment 

                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device AND paydev.device_type = 1 

                            LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = p.id_scheme_account 

                            LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme 

                            LEFT JOIN customer as cus ON cus.id_customer = scacc.id_customer 

                            LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                            LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                            LEFT JOIN state as st ON st.id_state = adr.id_state 

                            LEFT JOIN branch br ON br.id_branch = p.id_branch 

                            LEFT JOIN state as bst ON bst.id_state = br.id_state 

                            LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                            WHERE p.payment_status = 1 and p.receipt_no IS NOT NULL AND sch.one_time_premium = 1 AND sch.flexible_sch_type = 1 

                             ".($from_date !='' && $to_date !='' ? " AND DATE(p.date_payment) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                            ".($_GET['id_branch'] !='' ? " AND p.id_branch = '".$_GET['id_branch']."'" :'')." 

                            AND (id_payGateway IS NULL OR id_payGateway = 0) AND p.istallytransfered = 0 AND p.payment_status = 1 

                            GROUP BY pmd.payment_mode, p.id_payment HAVING (totamt > 0 AND NB_type != 0 AND dtype = 0) OR (payment_mode = 'CHQ')");

            foreach($nbquery->result() as $row){ 

                                

                                $invoice_string = "SI-NB-".$row->brcode."-".$row->id_payment;

                                 $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_payment,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $row->brcode."-Journal",

                                            "VoucherTypeParent"     => "Sundry Debtor",

                                            "LedgerName"            => "Chit-Head Office", //$row->payment_mode 

                                            "LedgerParent"          => "",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => $row->totamt,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                );

                                $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_payment,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $vouchertype,

                                            "VoucherTypeParent"     => "Sundry Debtor",

                                            "LedgerName"            => "ONE TIME AMOUNT", //$row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => "",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => $row->totamt,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                );

            }

            

         //Ssingle installment weight scheme   

         $siwtquery = $this->db->query("SELECT p.id_payment, date_format(p.date_payment, '%d-%m-%Y') as INVOICEDATE, pmd.payment_mode, sum(pmd.payment_amount) as totamt,

                            ifnull(`NB_type`, 0 ) as NB_type, `card_type`, ifnull(paydev.device_name, 0) as device_name, is_offline, id_payGateway,

                            ifnull(pmd.id_pay_device, 0) as id_pay_device, cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                            concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                            IFNULL(adr.pincode,'') as cuspincode,IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, cus.mobile as CONTACTNO,

                            br.short_name as brcode,br.name as CostCentre,br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort,

                            IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry, 

                            if(pmd.payment_mode = 'NB' AND id_payGateway IS NULL , if(paydev.device_type = 1 , 1 , 0), 1) as dtype

                            FROM payment p 

                            LEFT JOIN payment_mode_details as pmd ON pmd.id_payment = p.id_payment 

                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device AND paydev.device_type = 1 

                            LEFT JOIN scheme_account as scacc ON scacc.id_scheme_account = p.id_scheme_account 

                            LEFT JOIN scheme as sch ON sch.id_scheme = scacc.id_scheme 

                            LEFT JOIN customer as cus ON cus.id_customer = scacc.id_customer 

                            LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                            LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                            LEFT JOIN state as st ON st.id_state = adr.id_state 

                            LEFT JOIN branch br ON br.id_branch = p.id_branch 

                            LEFT JOIN state as bst ON bst.id_state = br.id_state 

                            LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                            WHERE p.payment_status = 1 and p.receipt_no IS NOT NULL AND sch.one_time_premium = 1 AND sch.flexible_sch_type = 4  

                             ".($from_date !='' && $to_date !='' ? " AND DATE(p.date_payment) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                            ".($_GET['id_branch'] !='' ? " AND p.id_branch = '".$_GET['id_branch']."'" :'')." 

                            AND p.istallytransfered = 0 AND p.payment_status = 1 

                            GROUP BY p.id_payment HAVING totamt > 0 ");

                //echo $this->db->last_query();exit;

            foreach($siwtquery->result() as $row){ 

                                

                                $invoice_string = "SI-WS-".$row->brcode."-".$row->id_payment;

                                 $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_payment,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $row->brcode."-Journal",

                                            "VoucherTypeParent"     => "Sundry Debtor",

                                            "LedgerName"            => $row->PARTYNAME. "-" .$row->CONTACTNO, 

                                            "LedgerParent"          => "",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => $row->totamt,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                );

                                $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_payment,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $vouchertype,

                                            "VoucherTypeParent"     => "Sundry Debtor",

                                            "LedgerName"            => "ONE TIME WEIGHT", //$row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => "",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => $row->totamt,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                );

            }

        return $return_data;

	}

	

	

	function getKarigarMetalIssueList()

	{

	    $return_data = array();

		$trans_query = $this->db->query("SELECT metiss.`met_issue_id`, metiss.`met_issue_karid`, metiss.`met_issue_ref_id`, 

                                        date_format(metiss.`met_issue_date`,'%d-%m-%Y') as issueon, `issue_aganist`, metiss.`id_order`, metiss.`bill_status`,

                                        kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

                                        concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                        ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry

                                        FROM `ret_karigar_metal_issue` metiss

                                        LEFT JOIN ret_karigar as kar ON kar.id_karigar = metiss.met_issue_karid 

                                        LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                        LEFT JOIN state as st ON st.id_state = kar.id_state 

                                        WHERE metiss.`bill_status` = 1 AND metiss.istransfered = 0");

		$result_data = $trans_query->result_array();

		foreach($result_data as $rkey => $rval){

			$result_data[$rkey]['TransferDetails'] = $this->getkarigarmetalissueDetails($rval['met_issue_id']);

		}

		

		foreach($result_data as $btkey => $btval){

		    foreach($btval['TransferDetails'] as $btikey => $btival){

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btival['issue_met_id'],

                                                "CompanyNumber"     => 1,

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => $btval['met_issue_ref_id'],

                                                "VoucherDate"       => $btval['issueon'],

                                                "VoucherType"       => "StockJournal",

                                                "VoucherTypeParent" => "StockJournal",

                                                "LedgerName"        =>  $btval['firstname']. "-".$btval['CONTACTNO'],

                                                "LedgerParent"      =>   'Sundry Debtors',

                                                "LedgerAddress"     =>   $btval['cuaddress'],

                                                "LedgerState"       =>   $btval['cusstate'],

                                                "LedgerCountry"     =>   $btval['cuscountry'],

                                                "LedgerPincode"     =>   $btval['cuspincode'],

                                                "LedgerMobile"      =>   "+91".$btval['CONTACTNO'],

                                                "LedgerGstReg"      =>   'Consumer',

                                                "LedgerGstin"       =>   '',

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Cr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => 1,

                                                "Stockitem"         => $btival["CategoryName"],

                                                "Godown"            => 1,

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["GrossWeight"],

                                                "Rate"              => round($btival["totalcost"] / $btival["GrossWeight"]),

                                                "Discount"          => "",

                                                "Amount"            => round($btival["totalcost"]),

                                                "BuyerName"         => "",

                                                "BuyerMailingName"  => "",

                                                "BuyerAddress1"     => "",

                                                "BuyerAddress2"     => "",

                                                "BuyerState"        => "",

                                                "BuyerCountry"      => "",

                                                "ConsigneeName"     => "",

                                                "ConsigneeMailingName" => "",

                                                "ConsigneeAddress1" => "",

                                                "ConsigneeAddress2" => "",

                                                "ConsigneeState"    => "",

                                                "ConsigneeCountry"  => "",

                                                "Void"              => "out" 

		                                    );

		    }

		}

		return $return_data;

	     

	}

	

	

	function getAllMetalIssueList($requestdata)

	{

	    $return_data = array();

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($requestdata['from_date'])){

	       $from_date   = $requestdata['from_date'];

	       $to_date     = $requestdata['to_date'];

	    }

	    

	    $return_data = array();

		$trans_query = $this->db->query("SELECT metiss.`met_issue_id`, metiss.`met_issue_karid`, metiss.`met_issue_ref_id`, 

                                        date_format(metiss.`met_issue_date`,'%d-%m-%Y') as issueon, `issue_aganist`, metiss.`id_order`, metiss.`bill_status`,

                                        kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

                                        concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                        ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry

                                        FROM `ret_karigar_metal_issue` metiss

                                        LEFT JOIN ret_karigar as kar ON kar.id_karigar = metiss.met_issue_karid 

                                        LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                        LEFT JOIN state as st ON st.id_state = kar.id_state 

                                        WHERE metiss.`bill_status` = 1 AND metiss.istransfered = 0 

                                         ".($from_date !='' && $to_date !='' ? " AND DATE(metiss.`met_issue_date`) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                        ");

		$result_data = $trans_query->result_array();

		foreach($result_data as $rkey => $rval){

			$result_data[$rkey]['TransferDetails'] = $this->getkarigarmetalissueDetails($rval['met_issue_id']);

		}

		

		foreach($result_data as $btkey => $btval){

		    foreach($btval['TransferDetails'] as $btikey => $btival){

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btival['issue_met_id'],

                                                "CompanyNumber"     => 1,

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "KMI-".$btval['met_issue_ref_id'],

                                                "VoucherDate"       => $btval['issueon'],

                                                "VoucherType"       => "StockJournal",

                                                "VoucherTypeParent" => "StockJournal",

                                                "LedgerName"        =>  $btval['firstname']. "-".$btval['CONTACTNO'],

                                                "LedgerParent"      =>   'Sundry Debtors',

                                                "LedgerAddress"     =>   $btval['cuaddress'],

                                                "LedgerState"       =>   $btval['cusstate'],

                                                "LedgerCountry"     =>   $btval['cuscountry'],

                                                "LedgerPincode"     =>   $btval['cuspincode'],

                                                "LedgerMobile"      =>   "+91".$btval['CONTACTNO'],

                                                "LedgerGstReg"      =>   'Consumer',

                                                "LedgerGstin"       =>   '',

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Cr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => 1,

                                                "Stockitem"         => $btival["CategoryName"],

                                                "Godown"            => 1,

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btival["GrossWeight"],

                                                "Rate"              => "", //round($btival["totalcost"] / $btival["GrossWeight"]),

                                                "Discount"          => "",

                                                "Amount"            => "", //round($btival["totalcost"]),

                                                "BuyerName"         => "",

                                                "BuyerMailingName"  => "",

                                                "BuyerAddress1"     => "",

                                                "BuyerAddress2"     => "",

                                                "BuyerState"        => "",

                                                "BuyerCountry"      => "",

                                                "ConsigneeName"     => "",

                                                "ConsigneeMailingName" => "",

                                                "ConsigneeAddress1" => "",

                                                "ConsigneeAddress2" => "",

                                                "ConsigneeState"    => "",

                                                "ConsigneeCountry"  => "",

                                                "Void"              => "out" 

		                                    );

		    }

		}

		

		

		//Polishing Issue details

		$metalissue_query = $this->db->query("SELECT pr.process_no, pr.id_old_metal_process, date_format(pr.`date_add`,'%d-%m-%Y') as issueon, oldt.id_metal_type, 

		                                    oldt.metal_type as CategoryName, IFNULL(SUM(d.issue_pcs),0) as piece, IFNULL(SUM(d.issue_gwt),0) as gross_wt, 

		                                    IFNULL(SUM(d.issue_nwt),0) as net_wt, 

		                                    kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

		                                    concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

		                                    ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry 

		                                    FROM ret_old_metal_polishing_details d 

		                                    LEFT JOIN ret_old_metal_polishing p ON p.id_polishing = d.id_polishing 

		                                    LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = p.id_old_metal_process 

		                                    LEFT JOIN ret_old_metal_type oldt ON oldt.id_metal_type = d.id_old_metal_type 

		                                    LEFT JOIN branch as br ON br.id_branch = '1' 

		                                    LEFT JOIN ret_karigar as kar ON kar.id_karigar = pr.id_karigar 

		                                    LEFT JOIN country as cn ON cn.id_country = kar.id_country 

		                                    LEFT JOIN state as st ON st.id_state = kar.id_state 

		                                    WHERE br.is_ho = 1 AND pr.process_for = 1 AND pr.outistransfered = 0 

		                                    ".($from_date !='' && $to_date !='' ? " AND DATE(pr.date_add) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                    GROUP by oldt.id_metal_type, pr.id_old_metal_process");

		

		foreach($metalissue_query->result_array() as $btkey => $btval){

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['id_old_metal_process'],

                                                "CompanyNumber"     => 1,

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "OMPI-".$btval['process_no'],

                                                "VoucherDate"       => $btval['issueon'],

                                                "VoucherType"       => "StockJournal",

                                                "VoucherTypeParent" => "StockJournal",

                                                "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                                                "LedgerParent"      => 'Sundry Debtors',

                                                "LedgerAddress"     => $btval['cuaddress'],

                                                "LedgerState"       => $btval['cusstate'],

                                                "LedgerCountry"     => $btval['cuscountry'],

                                                "LedgerPincode"     => $btval['cuspincode'],

                                                "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                "LedgerGstReg"      => 'Consumer',

                                                "LedgerGstin"       => '',

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Cr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => 1,

                                                "Stockitem"         => $btval["CategoryName"],

                                                "Godown"            => 1,

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btval["net_wt"],

                                                "Rate"              => "",

                                                "Discount"          => "",

                                                "Amount"            => "",

                                                "BuyerName"         => "",

                                                "BuyerMailingName"  => "",

                                                "BuyerAddress1"     => "",

                                                "BuyerAddress2"     => "",

                                                "BuyerState"        => "",

                                                "BuyerCountry"      => "",

                                                "ConsigneeName"     => "",

                                                "ConsigneeMailingName" => "",

                                                "ConsigneeAddress1" => "",

                                                "ConsigneeAddress2" => "",

                                                "ConsigneeState"    => "",

                                                "ConsigneeCountry"  => "",

                                                "Void"              => "out" 

		                                    );

		}

		

		/*

		//Melting issue details

		$metalissue_query = $this->db->query("SELECT pr.process_no, pr.id_old_metal_process, date_format(pr.`date_add`,'%d-%m-%Y') as issueon, oldt.id_metal_type, 

		                                    oldt.metal_type as CategoryName, IFNULL(SUM(d.issue_pcs),0) as piece, IFNULL(SUM(d.issue_gwt),0) as gross_wt, 

		                                    IFNULL(SUM(d.issue_nwt),0) as net_wt, 

		                                    kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

		                                    concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

		                                    ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry 

		                                    FROM ret_old_metal_melting_details d 

                                            LEFT JOIN ret_old_metal_melting m ON m.id_melting = d.id_melting 

                                            LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = m.id_old_metal_process 

                                            LEFT JOIN ret_old_metal_type oldt ON oldt.id_metal_type = d.id_metal_type 

		                                    LEFT JOIN branch as br ON br.id_branch = '1' 

		                                    LEFT JOIN ret_karigar as kar ON kar.id_karigar = pr.id_karigar 

		                                    LEFT JOIN country as cn ON cn.id_country = kar.id_country 

		                                    LEFT JOIN state as st ON st.id_state = kar.id_state 

		                                    WHERE br.is_ho = 1 AND pr.process_for = 1 AND pr.outistransfered = 0 

		                                    ".($from_date !='' && $to_date !='' ? " AND DATE(pr.date_add) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                    GROUP by oldt.id_metal_type, pr.id_old_metal_process");

		

		foreach($metalissue_query->result_array() as $btkey => $btval){

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['id_old_metal_process'],

                                                "CompanyNumber"     => 1,

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "OMPI-".$btval['process_no'],

                                                "VoucherDate"       => $btval['issueon'],

                                                "VoucherType"       => "StockJournal",

                                                "VoucherTypeParent" => "StockJournal",

                                                "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                                                "LedgerParent"      => 'Sundry Debtors',

                                                "LedgerAddress"     => $btval['cuaddress'],

                                                "LedgerState"       => $btval['cusstate'],

                                                "LedgerCountry"     => $btval['cuscountry'],

                                                "LedgerPincode"     => $btval['cuspincode'],

                                                "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                "LedgerGstReg"      => 'Consumer',

                                                "LedgerGstin"       => '',

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Cr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => 1,

                                                "Stockitem"         => $btval["CategoryName"],

                                                "Godown"            => 1,

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btval["net_wt"],

                                                "Rate"              => "",

                                                "Discount"          => "",

                                                "Amount"            => "",

                                                "BuyerName"         => "",

                                                "BuyerMailingName"  => "",

                                                "BuyerAddress1"     => "",

                                                "BuyerAddress2"     => "",

                                                "BuyerState"        => "",

                                                "BuyerCountry"      => "",

                                                "ConsigneeName"     => "",

                                                "ConsigneeMailingName" => "",

                                                "ConsigneeAddress1" => "",

                                                "ConsigneeAddress2" => "",

                                                "ConsigneeState"    => "",

                                                "ConsigneeCountry"  => "",

                                                "Void"              => "out" 

		                                    );

		}

		*/

		

		//Karigar metal receipt from GRN

		/*$karigarreceipt_query = $this->db->query("SELECT m.grn_id, m.grn_ref_no, date_format(m.grn_date,'%d-%m-%Y') as receipton, cat.name as CategoryName, 

                                            IFNULL(SUM(d.grn_no_of_pcs),0) as piece, IFNULL(SUM(d.grn_gross_wt),0) as gross_wt, 

                                            IFNULL(SUM(d.grn_net_wt),0) as net_wt,

                                            kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

                                            concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                            ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry 

                                            FROM ret_grn_items d 

                                            LEFT JOIN ret_grn_entry m ON m.grn_id = d.grn_item_grn_id 

                                            LEFT JOIN ret_category cat ON cat.id_ret_category = d.grn_item_cat_id 

                                            LEFT JOIN branch as br ON br.id_branch = '1' 

                                            LEFT JOIN ret_karigar as kar ON kar.id_karigar = m.grn_karigar_id 

                                            LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                            LEFT JOIN state as st ON st.id_state = kar.id_state 

		                                    WHERE br.is_ho = 1 AND m.grn_bill_status = 1 AND m.grn_type = 2 AND m.istransfered = 0 

		                                    ".($from_date !='' && $to_date !='' ? " AND DATE(m.grn_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                    GROUP by cat.id_ret_category, d.grn_item_grn_id");

		

		foreach($karigarreceipt_query->result_array() as $btkey => $btval){

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['grn_id'],

                                                "CompanyNumber"     => 1,

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "MR-".$btval['grn_ref_no'],

                                                "VoucherDate"       => $btval['receipton'],

                                                "VoucherType"       => "StockJournal",

                                                "VoucherTypeParent" => "StockJournal",

                                                "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                                                "LedgerParent"      => 'Sundry Debtors',

                                                "LedgerAddress"     => $btval['cuaddress'],

                                                "LedgerState"       => $btval['cusstate'],

                                                "LedgerCountry"     => $btval['cuscountry'],

                                                "LedgerPincode"     => $btval['cuspincode'],

                                                "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                "LedgerGstReg"      => 'Consumer',

                                                "LedgerGstin"       => '',

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => 1,

                                                "Stockitem"         => $btval["CategoryName"],

                                                "Godown"            => 1,

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btval["net_wt"],

                                                "Rate"              => "",

                                                "Discount"          => "",

                                                "Amount"            => "",

                                                "BuyerName"         => "",

                                                "BuyerMailingName"  => "",

                                                "BuyerAddress1"     => "",

                                                "BuyerAddress2"     => "",

                                                "BuyerState"        => "",

                                                "BuyerCountry"      => "",

                                                "ConsigneeName"     => "",

                                                "ConsigneeMailingName" => "",

                                                "ConsigneeAddress1" => "",

                                                "ConsigneeAddress2" => "",

                                                "ConsigneeState"    => "",

                                                "ConsigneeCountry"  => "",

                                                "Void"              => "in" 

		                                    );

		}

		

		*/

	    //After polishing receipt details

		$polishigreceipt_query = $this->db->query("SELECT pr.process_no, pr.id_old_metal_process, date_format(pr.`date_add`,'%d-%m-%Y') as issueon, cat.name as CategoryName, 

                                            IFNULL(SUM(d.no_of_piece),0) as piece, IFNULL(SUM(d.gross_wt),0) as gross_wt, 

                                            IFNULL(SUM(d.net_wt),0) as net_wt,

                                            kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

                                            concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                            ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry 

                                            FROM ret_old_metal_polishing_recd_details d 

                                            LEFT JOIN ret_old_metal_polishing m ON m.id_polishing = d.id_polishing 

                                            LEFT JOIN ret_old_metal_process pr ON pr.id_old_metal_process = m.id_old_metal_process_receipt 

                                            LEFT JOIN ret_category cat ON cat.id_ret_category = d.id_category 

                                            LEFT JOIN branch as br ON br.id_branch = '1' 

                                            LEFT JOIN ret_karigar as kar ON kar.id_karigar = pr.id_karigar 

                                            LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                            LEFT JOIN state as st ON st.id_state = kar.id_state 

		                                    WHERE br.is_ho = 1 AND pr.process_for = 2 AND pr.inistransfered = 0 

		                                    ".($from_date !='' && $to_date !='' ? " AND DATE(pr.date_add) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

		                                    GROUP by cat.id_ret_category, pr.id_old_metal_process");

		

		foreach($polishigreceipt_query->result_array() as $btkey => $btval){

		        $return_data['VOUCHER'][] = array(

		                                        "Autoid"            => $btval['id_old_metal_process'],

                                                "CompanyNumber"     => 1,

                                                "TallyMasterid"     => 1,

                                                "Voucherid"         => "",

                                                "VoucherNumber"     => "OMPR-".$btval['process_no'],

                                                "VoucherDate"       => $btval['issueon'],

                                                "VoucherType"       => "StockJournal",

                                                "VoucherTypeParent" => "StockJournal",

                                                "LedgerName"        => $btval['firstname']. "-".$btval['CONTACTNO'],

                                                "LedgerParent"      => 'Sundry Debtors',

                                                "LedgerAddress"     => $btval['cuaddress'],

                                                "LedgerState"       => $btval['cusstate'],

                                                "LedgerCountry"     => $btval['cuscountry'],

                                                "LedgerPincode"     => $btval['cuspincode'],

                                                "LedgerMobile"      => "+91".$btval['CONTACTNO'],

                                                "LedgerGstReg"      => 'Consumer',

                                                "LedgerGstin"       => '',

                                                "BillName"          => "",

                                                "BillDate"          => "",

                                                "CrDr"              => "Dr",

                                                "CostCategory"      => "",

                                                "CostCentre"        => 1,

                                                "Stockitem"         => $btval["CategoryName"],

                                                "Godown"            => 1,

                                                "BatchNo"           => "Primary Batch",

                                                "Quantity"          => $btval["net_wt"],

                                                "Rate"              => "",

                                                "Discount"          => "",

                                                "Amount"            => "",

                                                "BuyerName"         => "",

                                                "BuyerMailingName"  => "",

                                                "BuyerAddress1"     => "",

                                                "BuyerAddress2"     => "",

                                                "BuyerState"        => "",

                                                "BuyerCountry"      => "",

                                                "ConsigneeName"     => "",

                                                "ConsigneeMailingName" => "",

                                                "ConsigneeAddress1" => "",

                                                "ConsigneeAddress2" => "",

                                                "ConsigneeState"    => "",

                                                "ConsigneeCountry"  => "",

                                                "Void"              => "in" 

		                                    );

		}

		

		return $return_data;

	}

	

	function getpurchasereturnList()

	{

	     $return_data = array();

	     $sql=$this->db->query("SELECT pur_return_id, pur_ret_reason, pur_ret_ref_no, pur_ret_supplier_id, pur_ret_itm_id, pur_ret_pcs, 

	                            date_format(ret.`pur_ret_created_on`,'%d-%m-%Y') as issueon, round((oritm.item_cost / oritm.gross_wt) * pur_ret_gwt) as returnamount,

                                pur_ret_gwt, cat.hsn_code as HSNCode, ifnull(cat.name, 'Gold Ornaments') as CategoryName, 

                                kar.firstname, kar.lastname, kar.code_karigar,  kar.contactno1 as CONTACTNO, 

                                concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

                                ifnull(kar.pincode, '') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry

                                FROM `ret_purchase_return_items` as retitm 

                                LEFT JOIN ret_purchase_return as ret ON ret.pur_return_id = retitm.pur_ret_id 

                                LEFT JOIN ret_purchase_order_items as oritm ON oritm.po_item_id =  retitm.pur_ret_po_item_id 

                                LEFT JOIN ret_category as cat ON cat.id_ret_category = oritm.po_item_cat_id 

                                LEFT JOIN ret_karigar as kar ON kar.id_karigar = ret.pur_ret_supplier_id  

                                LEFT JOIN country as cn ON cn.id_country = kar.id_country 

                                LEFT JOIN state as st ON st.id_state = kar.id_state 

                                WHERE retitm.istransfered = 0 AND oritm.item_cost > 0");

             foreach($sql->result() as $row){

                     

                     $return_data['VOUCHER'][] = array(

                            "Autoid"                =>   $row->pur_ret_itm_id,

                            "CompanyNumber"         =>   1,

                            "TallyMasterid"         =>   1,

                            "Voucherid"             =>   "",

                            "VoucherNumber"         =>   $row->pur_ret_ref_no,

                            "VoucherDate"           =>   $row->issueon,

                            "VoucherType"           =>   "Debit Note",

                            "VoucherTypeParent"     =>   "Debit Note",

                            "BillName"              =>   $row->pur_ret_itm_id,

                            "BillDate"              =>   $row->issueon,

                            "Stockitem"             =>   $row->CategoryName,

                            "Godown"                =>   1, 

                            "BatchNo"               =>   $row->pur_ret_ref_no,

                            "Quantity"              =>   $row->pur_ret_gwt,

                            "Rate"                  =>   number_format($row->returnamount / $row->pur_ret_gwt),

                            "Discount"              =>   0,

                            "OrderNo"               =>   "",

                            "OrderDate"             =>   "",

                            

                            "LedgerName"            =>   "Purchase",

                            "LedgerParent"          =>   "Purchase A/c",

                            "LedgerAddress"         =>   $row->cuaddress,

                            "LedgerState"           =>   $row->cusstate,

                            "LedgerCountry"         =>   $row->cuscountry,

                            "LedgerPincode"         =>   $row->cuspincode,

                            "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                            "LedgerGstReg"          =>   'Consumer',

                            "LedgerGstin"           =>   '',

                           

                            "CrDr"                  =>   "Cr",

                            "CostCategory"          =>   "",

                            "CostCentre"            =>   1, 

                          

                            "Amount"                =>   $row->returnamount,

                            

                            /*"CgstLedger"            =>   "Output Cgst @ " .($row->tax_percentage / 2)."%",

                    		"CgstAmount"            =>   $row->total_cgst,

                    		

                            "SgstLedger"            =>   "Output Sgst @ " .($row->tax_percentage / 2)."%",

                    		"SgstAmount"            =>   $row->total_sgst,

                    		

                    		"IgstLedger"            =>   "Output Igst @ " .($row->tax_percentage)."%",

                    		"IgstAmount"            =>   $row->total_igst,

                    		"roundoff"              =>   $row->roundoff */

                        );

                        

                        

                        

                        $return_data['VOUCHER'][] = array(

                            "Autoid"                =>   $row->pur_ret_itm_id,

                            "CompanyNumber"         =>   1,

                            "TallyMasterid"         =>   1,

                            "Voucherid"             =>   "",

                            "VoucherNumber"         =>   $row->pur_ret_ref_no,

                            "VoucherDate"           =>   $row->issueon,

                            "VoucherType"           =>   "Debit Note",

                            "VoucherTypeParent"     =>   "Debit Note",

                            "BillName"              =>   $row->pur_ret_itm_id,

                            "BillDate"              =>   $row->issueon,

                            "Stockitem"             =>   $row->CategoryName,

                            "Godown"                =>   1, 

                            "BatchNo"               =>   $row->pur_ret_ref_no,

                            "Quantity"              =>   $row->pur_ret_gwt,

                            "Rate"                  =>   number_format($row->returnamount / $row->pur_ret_gwt),

                            "Discount"              =>   0,

                            "OrderNo"               =>   "",

                            "OrderDate"             =>   "",

                            

                            "LedgerName"            =>   $row->firstname. "-".$row->CONTACTNO,

                            "LedgerParent"          =>   "Sundry Debtors",

                            "LedgerAddress"         =>   $row->cuaddress,

                            "LedgerState"           =>   $row->cusstate,

                            "LedgerCountry"         =>   $row->cuscountry,

                            "LedgerPincode"         =>   $row->cuspincode,

                            "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                            "LedgerGstReg"          =>   'Consumer',

                            "LedgerGstin"           =>   '',

                           

                            "CrDr"                  =>   "Dr",

                            "CostCategory"          =>   "",

                            "CostCentre"            =>   1, 

                          

                            "Amount"                =>   $row->returnamount,

                            

                            /*"CgstLedger"            =>   "Output Cgst @ " .($row->tax_percentage / 2)."%",

                    		"CgstAmount"            =>   $row->total_cgst,

                    		

                            "SgstLedger"            =>   "Output Sgst @ " .($row->tax_percentage / 2)."%",

                    		"SgstAmount"            =>   $row->total_sgst,

                    		

                    		"IgstLedger"            =>   "Output Igst @ " .($row->tax_percentage)."%",

                    		"IgstAmount"            =>   $row->total_igst,

                    		"roundoff"              =>   $row->roundoff */

                        );

                

             }

	     

	     return $return_data;

	}

	

	

	function getsalesreturnList()

	{

	    $from_date = "";

	    $to_date   = "";

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }

	     $return_data = array();

	     $sql=$this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.s_ret_refno as INVOICENO, 

                        	    'CreditNote' as VOUCHERTYPE, r.return_id, 

                                '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                IFNULL(del.address1,'') as ADRESS1,IFNULL(del.address2,'') as ADRESS2,IFNULL(del.address3,'') as ADRESS3, 

                                concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                cus.mobile as CONTACTNO,cat.cat_code as PRODUCTCODE,cat.name as PRODUCTNAME,

                                d.piece as QTY,d.rate_per_grm as RATE,d.item_cost as VALUE,'' as SALESTAX,

                                IFNULL(d.item_total_tax,0) as SALESTAXAMT,d.gross_wt as WEIGHT,(d.item_cost-d.item_total_tax) as TOTAL,IFNULL(b.remark,'') as REMARKS,

                                IFNULL(d.gross_wt,0) as GROSSWT,IFNULL(d.net_wt,0) as netweight,

                                '' as SERVICEAMT,'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, br.sort, 

                                br.name as CostCentre, IFNULL(d.bill_discount,0) as bill_discount, 

                                 d.total_igst,  d.total_sgst, d.total_cgst, d.bill_det_id, 

                                taxm.tax_name as tax_name, taxm.tax_percentage as tax_percentage, met.metal_code, 

                                b.return_round_off_amt as roundoff, 

                                br.address1 as frmaddress1, br.address2 as frmaddress2,

                                IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry, cat.tally_qty_type 

                                FROM ret_bill_return_details r 

                                LEFT JOIN ret_billing b ON b.bill_id=r.bill_id 

								LEFT JOIN ret_bill_details d ON d.bill_det_id=r.ret_bill_det_id 

								LEFT JOIN ret_taging tag ON tag.tag_id=d.tag_id 

                                LEFT JOIN ret_product_master pro ON pro.pro_id=d.product_id 

                                LEFT JOIN ret_category cat on cat.id_ret_category=pro.cat_id  

                                LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                LEFT JOIN state as st ON st.id_state = adr.id_state 

                                LEFT JOIN ret_bill_delivery del ON del.bill_id=b.bill_id 

                                LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                

                                LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                

                                LEFT JOIN ret_taxmaster as taxm ON taxm.tax_id = d.tax_group_id 

                                WHERE b.bill_status=1 and b.s_ret_refno IS NOT NULL 

                                ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                 ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

                                AND r.istransfered = 0 LIMIT 100");

             foreach($sql->result() as $row){

                     $invoice_string     =$row->brcode."-"."SR"."-".$row->metal_code."-".$row->INVOICENO;

                     if($row->tally_qty_type == 1){

                         $return_data['VOUCHER'][] = array(

                                    "Autoid"                =>   $row->return_id,

                                    "CompanyNumber"         =>   $row->sort,

                                    "TallyMasterid"         =>   1,

                                    "Voucherid"             =>   "",

                                    "VoucherNumber"         =>   $invoice_string,

                                    "VoucherDate"           =>   $row->INVOICEDATE,

                                    "VoucherType"           =>   $row->VOUCHERTYPE,

                                    "VoucherTypeParent"     =>   "CreditNote",

                                    "BillName"              =>   $row->bill_id,

                                    "BillDate"              =>   $row->INVOICEDATE,

                                    "Stockitem"             =>   $row->PRODUCTNAME."-PCS",

                                    "Godown"                =>   $row->CostCentre, 

                                    "BatchNo"               =>   $invoice_string,

                                    "Quantity"              =>   $row->QTY,

                                    "Pcs"                   =>   $row->QTY,

                                

                                    

                                    "Rate"                  =>  $row->TOTAL,

                                    "Amount"                =>  $row->TOTAL,

                                    

                                    "Discount"              =>   0,

                                    "OrderNo"               =>   "",

                                    "OrderDate"             =>   "",

                                    

                                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                                    "LedgerParent"          =>   $row->LedgerParent,

                                    "LedgerAddress"         =>   $row->cuaddress,

                                    "LedgerState"           =>   $row->cusstate,

                                    "LedgerCountry"         =>   $row->cuscountry,

                                    "LedgerPincode"         =>   $row->cuspincode,

                                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                                    "LedgerGstReg"          =>   'Consumer',

                                    "LedgerGstin"           =>   '',

                                   

                                    "CrDr"                  =>   "Dr",

                                    "CostCategory"          =>   "",

                                    "CostCentre"            =>   $row->CostCentre, 

                                    

                                    "AccLedger"             =>   ($row->total_igst > 0 ? "IGST Sales ".$row->tax_percentage : "GST Sales ".$row->tax_percentage)."%",

                                    

                                    "CgstLedger"            =>   "Output Cgst @ " .($row->tax_percentage / 2)."%",

                            		"CgstAmount"            =>   $row->total_cgst,

                            		

                                    "SgstLedger"            =>   "Output Sgst @ " .($row->tax_percentage / 2)."%",

                            		"SgstAmount"            =>   $row->total_sgst,

                            		

                            		"IgstLedger"            =>   "Output Igst @ " .($row->tax_percentage)."%",

                            		"IgstAmount"            =>   $row->total_igst,

                                );

                     }else{

                     $diamond_sql = $this->db->query("SELECT bill_det_id, stone_type, stone_name, st.uom_id , AVG(bs.rate_per_gram) as avgrate, sum(bs.wt) as totwt, 

                                                sum(bs.wt) as stonwt, sum(bs.price) as stprice, sum(pieces) as pieces  

                                                FROM ret_billing_item_stones bs 

                                                LEFT JOIN ret_stone as st ON st.stone_id = bs.stone_id 

                                                WHERE st.stone_type = 1 

                                                AND bs.bill_det_id = $row->bill_det_id");

                                                //echo $this->db->last_query();exit;

                        if($diamond_sql->num_rows() > 0 && $diamond_sql->row()->stone_type != NULL ){

                            //echo $this->db->last_query();exit;

                            /*

                                $return_data['VOUCHER'][] = array(

                                    "Autoid"                =>   $row->bill_det_id,

                                    "CompanyNumber"         =>   $row->sort,

                                    "TallyMasterid"         =>   1,

                                    "Voucherid"             =>   "",

                                    "VoucherNumber"         =>   $invoice_string,

                                    "VoucherDate"           =>   $row->INVOICEDATE,

                                    "VoucherType"           =>   $row->total_igst > 0 ? "IGST Sales ".$row->tax_percentage : $row->VOUCHERTYPE,

                                    "VoucherTypeParent"     =>   $row->voucherparent,

                                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                                    "LedgerParent"          =>   $row->LedgerParent,

                                    "LedgerAddress"         =>   $row->cuaddress,

                                    "LedgerState"           =>   $row->cusstate,

                                    "LedgerCountry"         =>   $row->cuscountry,

                                    "LedgerPincode"         =>   $row->cuspincode,

                                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                                    "LedgerGstReg"          =>   'Consumer',

                                    "LedgerGstin"           =>   '',

                                    "BillName"              =>   $row->bill_id,

                                    "BillDate"              =>   $row->INVOICEDATE,

                                    "CrDr"                  =>   "Dr",

                                    "CostCategory"          =>   "",

                                    "CostCentre"            =>   $row->CostCentre, 

                                    "Stockitem"             =>   ($row->netweight == 0 ||  $row->netweight == NULL) ? $row->PRODUCTNAME."-PCS" : $row->PRODUCTNAME,

                                    "Godown"                =>   $row->CostCentre, 

                                    "BatchNo"               =>   $row->INVOICENO,

                                    "Quantity"              =>  ($row->netweight == 0 ||  $row->netweight == NULL) ? $row->QTY : $row->netweight,

                                    "Pcs"                   =>   $row->QTY,

                                    "Rate"                  =>   number_format((($row->TOTAL -  $diamond_sql->row()->stprice) / ($row->netweight == 0 ? $row->QTY : $row->netweight)), 2, '.', ''),

                                    //"Discount"              =>   number_format($row->bill_discount * (-1), 2,'.',''),

                                    "Discount"              =>  0,

                                    "Amount"                =>   number_format(($row->TOTAL -  $diamond_sql->row()->stprice), 2, '.', ''),

                                    

                                    "CgstLedger"            =>   "Output Cgst @ " .($row->tax_percentage / 2)."%",

                            		"CgstAmount"            =>   $row->total_cgst,

                                    

                                    "SgstLedger"            =>   "Output Sgst @ " .($row->tax_percentage / 2)."%",

                            		"SgstAmount"            =>   $row->total_sgst,

                            		

                            		"IgstLedger"            =>   "Output Igst @ " .($row->tax_percentage)."%",

                            		"IgstAmount"            =>   $row->total_igst,

                            		"roundoff"              =>   $row->roundoff, 

                            		"AccLedger"             =>   ($row->total_igst > 0 ? "IGST Sales ".$row->tax_percentage : "GST Sales ".$row->tax_percentage)."%",

                                );

                    

                                $return_data['VOUCHER'][] = array(

                                    "Autoid"                =>   $row->bill_det_id,

                                    "CompanyNumber"         =>   $row->sort,

                                    "TallyMasterid"         =>   1,

                                    "Voucherid"             =>   "",

                                    "VoucherNumber"         =>   $invoice_string,

                                    "VoucherDate"           =>   $row->INVOICEDATE,

                                    "VoucherType"           =>   $row->VOUCHERTYPE,

                                    "VoucherTypeParent"     =>   $row->VOUCHERTYPE,

                                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                                    "LedgerParent"          =>   $row->LedgerParent,

                                    "LedgerAddress"         =>   $row->cuaddress,

                                    "LedgerState"           =>   $row->cusstate,

                                    "LedgerCountry"         =>   $row->cuscountry,

                                    "LedgerPincode"         =>   $row->cuspincode,

                                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                                    "LedgerGstReg"          =>   'Consumer',

                                    "LedgerGstin"           =>   '',

                                    "BillName"              =>   $row->bill_id,

                                    "BillDate"              =>   $row->INVOICEDATE,

                                    "CrDr"                  =>   "Dr",

                                    "CostCategory"          =>   "",

                                    "CostCentre"            =>   $row->CostCentre, 

                                    "Stockitem"             =>   'Diamond',

                                    "Godown"                =>   $row->CostCentre, 

                                    "BatchNo"               =>   $row->INVOICENO,

                                    "Quantity"              =>   $diamond_sql->row()->totwt,

                                    "Pcs"                   =>   $diamond_sql->row()->pieces,

                                    "Rate"                  =>   number_format(($diamond_sql->row()->stprice / $diamond_sql->row()->totwt),2,'.',''),

                                    "Discount"              =>   0,

                                    "Amount"                =>   $diamond_sql->row()->stprice,

                                    

                                    "CgstLedger"            =>   "",

                                    "CgstAmount"            =>   "",

                                    	

                                    "SgstLedger"            =>   "",

                            		"SgstAmount"            =>   "",

                            	

                            		"IgstLedger"            =>   "",

                            		"IgstAmount"            =>   "",

                            		"roundoff"              =>   0,

                            		"AccLedger"             =>   ($row->total_igst > 0 ? "IGST Sales ".$row->tax_percentage : "GST Sales ".$row->tax_percentage)."%",

                                );

                            */

                            

                            

                            $return_data['VOUCHER'][] = array(

                                    "Autoid"                =>   $row->return_id,

                                    "CompanyNumber"         =>   $row->sort,

                                    "TallyMasterid"         =>   1,

                                    "Voucherid"             =>   "",

                                    "VoucherNumber"         =>   $invoice_string,

                                    "VoucherDate"           =>   $row->INVOICEDATE,

                                    "VoucherType"           =>   $row->VOUCHERTYPE,

                                    "VoucherTypeParent"     =>   "CreditNote",

                                    "BillName"              =>   $row->bill_id,

                                    "BillDate"              =>   $row->INVOICEDATE,

                                    "Stockitem"             =>   ($row->netweight == 0 ||  $row->netweight == NULL) ? $row->PRODUCTNAME."-PCS" : $row->PRODUCTNAME,

                                    "Godown"                =>   $row->CostCentre, 

                                    "BatchNo"               =>   $invoice_string,

                                    "Quantity"              =>   ($row->netweight == 0 ||  $row->netweight == NULL) ? $row->QTY : $row->netweight,

                                    "Pcs"                   =>   $row->QTY,

                                

                                    

                                    "Rate"                  =>   number_format((($row->TOTAL -  $diamond_sql->row()->stprice) / ($row->netweight == 0 ? $row->QTY : $row->netweight)), 2, '.', ''),

                                    "Amount"                =>   number_format(($row->TOTAL -  $diamond_sql->row()->stprice), 2, '.', ''),

                                    

                                    "Discount"              =>   0,

                                    "OrderNo"               =>   "",

                                    "OrderDate"             =>   "",

                                    

                                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                                    "LedgerParent"          =>   $row->LedgerParent,

                                    "LedgerAddress"         =>   $row->cuaddress,

                                    "LedgerState"           =>   $row->cusstate,

                                    "LedgerCountry"         =>   $row->cuscountry,

                                    "LedgerPincode"         =>   $row->cuspincode,

                                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                                    "LedgerGstReg"          =>   'Consumer',

                                    "LedgerGstin"           =>   '',

                                   

                                    "CrDr"                  =>   "Dr",

                                    "CostCategory"          =>   "",

                                    "CostCentre"            =>   $row->CostCentre, 

                                    

                                    "AccLedger"             =>   ($row->total_igst > 0 ? "IGST Sales ".$row->tax_percentage : "GST Sales ".$row->tax_percentage)."%",

                                    

                                    "CgstLedger"            =>   "Output Cgst @ " .($row->tax_percentage / 2)."%",

                            		"CgstAmount"            =>   $row->total_cgst,

                            		

                                    "SgstLedger"            =>   "Output Sgst @ " .($row->tax_percentage / 2)."%",

                            		"SgstAmount"            =>   $row->total_sgst,

                            		

                            		"IgstLedger"            =>   "Output Igst @ " .($row->tax_percentage)."%",

                            		"IgstAmount"            =>   $row->total_igst,

                            		/*"roundoff"              =>   $row->roundoff */

                                );

                            

                            $return_data['VOUCHER'][] = array(

                                    "Autoid"                =>   $row->return_id,

                                    "CompanyNumber"         =>   $row->sort,

                                    "TallyMasterid"         =>   1,

                                    "Voucherid"             =>   "",

                                    "VoucherNumber"         =>   $invoice_string,

                                    "VoucherDate"           =>   $row->INVOICEDATE,

                                    "VoucherType"           =>   $row->VOUCHERTYPE,

                                    "VoucherTypeParent"     =>   "CreditNote",

                                    "BillName"              =>   $row->bill_id,

                                    "BillDate"              =>   $row->INVOICEDATE,

                                    "Stockitem"             =>   'Diamond',

                                    "Godown"                =>   $row->CostCentre, 

                                    "BatchNo"               =>   $invoice_string,

                                    

                                    "Quantity"              =>   $diamond_sql->row()->totwt,

                                    "Pcs"                   =>   $diamond_sql->row()->pieces,

                                    "Rate"                  =>   number_format(($diamond_sql->row()->stprice / $diamond_sql->row()->totwt),2,'.',''),

                                    "Discount"              =>   0,

                                    "Amount"                =>   $diamond_sql->row()->stprice,

                                    

                                    "OrderNo"               =>   "",

                                    "OrderDate"             =>   "",

                                    

                                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                                    "LedgerParent"          =>   $row->LedgerParent,

                                    "LedgerAddress"         =>   $row->cuaddress,

                                    "LedgerState"           =>   $row->cusstate,

                                    "LedgerCountry"         =>   $row->cuscountry,

                                    "LedgerPincode"         =>   $row->cuspincode,

                                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                                    "LedgerGstReg"          =>   'Consumer',

                                    "LedgerGstin"           =>   '',

                                   

                                    "CrDr"                  =>   "Dr",

                                    "CostCategory"          =>   "",

                                    "CostCentre"            =>   $row->CostCentre, 

                                    

                                    "AccLedger"             =>   ($row->total_igst > 0 ? "IGST Sales ".$row->tax_percentage : "GST Sales ".$row->tax_percentage)."%",

                                    

                                    "CgstLedger"            =>   "",

                            		"CgstAmount"            =>   "",

                            		

                                    "SgstLedger"            =>   "",

                            		"SgstAmount"            =>   "",

                            		

                            		"IgstLedger"            =>   "",

                            		"IgstAmount"            =>  "",

                            		/*"roundoff"              =>   $row->roundoff */

                                );

                        }else{

                             $return_data['VOUCHER'][] = array(

                                    "Autoid"                =>   $row->return_id,

                                    "CompanyNumber"         =>   $row->sort,

                                    "TallyMasterid"         =>   1,

                                    "Voucherid"             =>   "",

                                    "VoucherNumber"         =>   $invoice_string,

                                    "VoucherDate"           =>   $row->INVOICEDATE,

                                    "VoucherType"           =>   $row->VOUCHERTYPE,

                                    "VoucherTypeParent"     =>   "CreditNote",

                                    "BillName"              =>   $row->bill_id,

                                    "BillDate"              =>   $row->INVOICEDATE,

                                    "Stockitem"             =>  ($row->netweight == 0 ||  $row->netweight == NULL) ? $row->PRODUCTNAME."-PCS" : $row->PRODUCTNAME,

                                    "Godown"                =>   $row->CostCentre, 

                                    "BatchNo"               =>   $invoice_string,

                                    "Quantity"              =>   ($row->netweight == 0 ||  $row->netweight == NULL) ? $row->QTY : $row->netweight,

                                    "Pcs"                   =>   $row->QTY,

                                    "Rate"                  =>   number_format(($row->TOTAL/ ($row->netweight == 0 ? $row->QTY : $row->netweight)), 2, '.', ''),

                                    "Discount"              =>   0,

                                    "OrderNo"               =>   "",

                                    "OrderDate"             =>   "",

                                    "LedgerName"            =>   $row->PARTYNAME. "-".$row->CONTACTNO,

                                    "LedgerParent"          =>   $row->LedgerParent,

                                    "LedgerAddress"         =>   $row->cuaddress,

                                    "LedgerState"           =>   $row->cusstate,

                                    "LedgerCountry"         =>   $row->cuscountry,

                                    "LedgerPincode"         =>   $row->cuspincode,

                                    "LedgerMobile"          =>   "+91".$row->CONTACTNO,

                                    "LedgerGstReg"          =>   'Consumer',

                                    "LedgerGstin"           =>   '',

                                   

                                    "CrDr"                  =>   "Dr",

                                    "CostCategory"          =>   "",

                                    "CostCentre"            =>   $row->CostCentre, 

                                  

                                    "Amount"                =>   $row->TOTAL,

                                    

                                    "AccLedger"             =>   ($row->total_igst > 0 ? "IGST Sales ".$row->tax_percentage : "GST Sales ".$row->tax_percentage)."%",

                                    

                                    "CgstLedger"            =>   "Output Cgst @ " .($row->tax_percentage / 2)."%",

                            		"CgstAmount"            =>   $row->total_cgst,

                            		

                                    "SgstLedger"            =>   "Output Sgst @ " .($row->tax_percentage / 2)."%",

                            		"SgstAmount"            =>   $row->total_sgst,

                            		

                            		"IgstLedger"            =>   "Output Igst @ " .($row->tax_percentage)."%",

                            		"IgstAmount"            =>   $row->total_igst,

                            		/*"roundoff"              =>   $row->roundoff */

                                );

                        }

                     }

                

             }

	     

	     return $return_data;

	}

	

    function getAllreceiptsList()
	{
	    $return_data = array();

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }

	    $receipt_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE, b.s_ret_refno as INVOICENO, b.sales_ref_no, `id_billing_payment`, 

	                            ifnull(`NB_type`, 0 ) as NB_type, `card_type`, `payment_for`, `payment_date`, `payment_mode`, 

	                            (`payment_amount` + ifnull(credit_disc_amt,0)) as payment_amount, 

	                            `cheque_date`, `cheque_no`, `bank_acc_no`, `bank_name` , ifnull(paydev.device_name, 0) as device_name,

                        	    'Payment' as VOUCHERTYPE, b.bill_type, b.pur_ref_no, 

                                '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                cus.mobile as CONTACTNO,

                                IFNULL(b.remark,'') as REMARKS,

                                br.address1 as frmaddress1, br.address2 as frmaddress2, 

                                IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,  

                                'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, 

                                br.name as CostCentre, br.sort, b.tot_bill_amount, b.round_off_amt as roundoff, 

								b.bill_no, b.order_adv_ref_no, b.credit_coll_refno, met.metal_code, b.chit_preclose_refno, 

								ROW_NUMBER() OVER(PARTITION BY pay.bill_id) AS currownumber, if(paydev.device_type = 1 , 1 , 0) as id_pay_device, 

								ifnull(b.credit_disc_amt,0) as billpaydiscount,  RIGHT(b.fin_year_code, 2) as fin_year_code   

                                FROM ret_billing_payment as pay 

								LEFT JOIN ret_billing b ON b.bill_id = pay.bill_id 

								LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device 

                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                LEFT JOIN state as st ON st.id_state = adr.id_state 

                                LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                                WHERE b.bill_status = 1 AND pay.type = 1 

                                 ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

                                AND pay.istransfered = 0 GROUP BY id_billing_payment LIMIT 100");

        foreach($receipt_query->result() as $row){

            

                    $ledgername = "";

                    $vouchertype = "";

                    $partyvoucherparent = "Sundry Debtors";

                    $voucherparent = "";

                    if($row->payment_mode != "Cash" && $row->payment_mode != "Csh"){//id_pay_device

                        $vouchertype = "GR-Journal";

                        if((($row->NB_type  == 1 || $row->payment_mode == 'NB') && $row->NB_type  != 3) ||  $row->payment_mode == 'CHQ'){

                            $ledgername = "SBI A/C No.26736";

                            $voucherparent = "Sundry Debtors";

                        }else if($row->NB_type  == 3){
                            
                                $ledgername = "SBI A/C No.26736";

                                $voucherparent = "Sundry Debtors";
                        }else{

                           
                                $ledgername = "SBI A/C No.26736";

                                $voucherparent = "Sundry Debtors";

                        }

                    }else{

                        $ledgername = "Cash";

                        $vouchertype = "Receipt";

                        $voucherparent = "Cash-In-hand";

                    }

                    

                    /*if($row->bill_type <= 3){ //Sales

                        $pay_invoice_string ='IR/'.$row->sales_ref_no.'/'.$row->currownumber;

                    }else if($row->bill_type == 5){ // Order Advance

                        $pay_invoice_string ='IR/'.$row->order_adv_ref_no.'/'.$row->currownumber;

                    }else if($row->bill_type == 8){ // Credit collection

                        $pay_invoice_string ='IR/'.$row->credit_coll_refno.'/'.$row->currownumber;

                    }else if($row->bill_type == 11){ // repair

                        $pay_invoice_string ='IR/'.$row->bill_no.'/'.$row->currownumber;

                    }else if($row->bill_type == 9){ // Order Delivery

                        $pay_invoice_string ='IR/'.$row->sales_ref_no.'/'.$row->currownumber;

                    }*/
                    
                     if($row->bill_type <= 3){ //Sales 
                        
                        $pay_invoice_string = "IR-".$row->fin_year_code."-".$row->bill_no.'-'.$row->currownumber;

                    }else if($row->bill_type == 5){ // Order Advance

                         $pay_invoice_string = "IR-".$row->fin_year_code."-".$row->bill_no.'-'.$row->currownumber;

                    }else if($row->bill_type == 8){ // Credit collection

                       $pay_invoice_string = "IR-".$row->fin_year_code."-".$row->bill_no.'-'.$row->currownumber;

                    }else if($row->bill_type == 11){ // repair

                        $pay_invoice_string =$row->bill_no.'/'.$row->currownumber;

                    }else if($row->bill_type == 9){ // Order Delivery

                        $pay_invoice_string = "IR-".$row->fin_year_code."-".$row->bill_no.'-'.$row->currownumber;

                    }


                    

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_billing_payment,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Receipt", //$row->payment_mode  == "Cash" ? $row->brcode."-Receipt" : $row->brcode."-Journal",

                                            "VoucherTypeParent"     => "Receipt", //$row->payment_mode  == "Cash" ? "Receipt" : "Journal",

                                            "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => "Sundry Debtors",

                                            "LedgerAddress"         => $row->cuaddress,

                                            "LedgerState"           => $row->cusstate,

                                            "LedgerCountry"         => $row->cuscountry,

                                            "LedgerPincode"         => $row->cuspincode,

                                            "LedgerMobile"          => "+91".$row->CONTACTNO,

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => $row->payment_amount,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                    $act_pay_amt = $row->payment_amount - $row->billpaydiscount;

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_billing_payment ,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Receipt", //$row->payment_mode  == "Cash" ? $row->brcode."-Receipt" : $row->brcode."-Journal",//$row->payment_mode  == "Cash" ? "GR-Receipt" : "GR-Journal",

                                            "VoucherTypeParent"     => "Receipt", //$row->payment_mode  == "Cash" ? "Receipt" : "Journal",

                                            "LedgerName"            => $ledgername,

                                            "LedgerParent"          => $row->payment_mode  == "Cash" ? "Sundry Debtors" : "Sundry Debtors",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => number_format($act_pay_amt, 2,'.',''),

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                    if($row->billpaydiscount > 0 && $row->bill_type == 8){

                        $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_billing_payment ,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Receipt", //$row->brcode."-Journal",//$row->payment_mode  == "Cash" ? "GR-Receipt" : "GR-Journal",

                                            "VoucherTypeParent"     => "Receipt", //"Journal",

                                            "LedgerName"            => "Discount Allowed",

                                            "LedgerParent"          => $row->payment_mode  == "Cash" ? "Sundry Debtors" : "Sundry Debtors",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => $row->billpaydiscount,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                    }

        }

        

        //For gift voucher receipts

        $gift_voucher_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE, b.s_ret_refno as INVOICENO, b.sales_ref_no,  

	                            `gift_voucher_amt` as payment_amount, 'Payment' as VOUCHERTYPE, b.bill_type, b.pur_ref_no, 

                                '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                cus.mobile as CONTACTNO, bill_gift_voucher_id, 

                                IFNULL(b.remark,'') as REMARKS,

                                br.address1 as frmaddress1, br.address2 as frmaddress2, 

                                IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,  

                                'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, 

                                br.name as CostCentre, br.sort, b.tot_bill_amount, b.round_off_amt as roundoff, 

								b.bill_no, met.metal_code, 

								ROW_NUMBER() OVER(PARTITION BY pay.bill_id) AS currownumber   

                                FROM ret_billing_gift_voucher_details as pay 

								LEFT JOIN ret_billing b ON b.bill_id = pay.bill_id 

                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                LEFT JOIN state as st ON st.id_state = adr.id_state 

                                LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                                WHERE b.bill_status = 1 

                                 ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

                                AND pay.istransfered = 0 GROUP BY bill_gift_voucher_id LIMIT 100");

        foreach($gift_voucher_query->result() as $row){

                    $ledgername = "Gift Voucher";

                    $vouchertype = "GR-Journal";

                    $partyvoucherparent = "Indirect Expenses";

                    $voucherparent = "Indirect Expenses";

                    

                    $pay_invoice_string ='GV-'.$row->bill_gift_voucher_id.'-'.$row->sales_ref_no.'-'.$row->currownumber;

                    

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_gift_voucher_id,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Receipt",

                                            "VoucherTypeParent"     => "Receipt",

                                            "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => $row->LedgerParent,

                                            "LedgerAddress"         => $row->cuaddress,

                                            "LedgerState"           => $row->cusstate,

                                            "LedgerCountry"         => $row->cuscountry,

                                            "LedgerPincode"         => $row->cuspincode,

                                            "LedgerMobile"          => "+91".$row->CONTACTNO,

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => $row->payment_amount ,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                                        

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_gift_voucher_id ,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Receipt",//$row->payment_mode  == "Cash" ? "GR-Receipt" : "GR-Journal",

                                            "VoucherTypeParent"     => $voucherparent,

                                            "LedgerName"            => $ledgername,

                                            "LedgerParent"          => "Sundry Debtors",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => $row->payment_amount ,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

        }

        

        

        //General Receipts

        $rec_query = $this->db->query("SELECT b.id_issue_receipt, date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.bill_no as INVOICENO, `id_issue_rcpt_pay`, 

                                    `id_issue_rcpt`, pay.`type`, ifnull(`NB_type`, 0 ) as NB_type, `card_type`, `payment_mode`, `payment_amount` , 

	                                 ifnull(paydev.device_name, 0) as device_name, 

                                        cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                        cus.mobile as CONTACTNO, b.receipt_type, 

                                        'Sundry Debtors' as LedgerParent, b.id_branch ,  br.short_name as brcode, 

                                        br.name as CostCentre, b.amount,  

                                        b.bill_no,  br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort,

                                        IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,

                                        ROW_NUMBER() OVER(PARTITION BY pay.id_issue_rcpt) AS currownumber, if(paydev.device_type = 1 , 1 , 0) as id_pay_device   

                                        FROM `ret_issue_rcpt_payment`  as pay 

										LEFT JOIN ret_issue_receipt b  ON b.id_issue_receipt = pay.id_issue_rcpt 

										LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device 

                                        LEFT JOIN customer cus ON cus.id_customer=b.id_customer 

                                        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                        LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                        LEFT JOIN state as st ON st.id_state = adr.id_state 

                                        LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                        LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                        LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                        WHERE pay.type = 1 

                                        AND b.bill_status = 1 AND amount > 0 

                                         ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')."  

                                        ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

                                        AND pay.istransfered = 0 HAVING payment_amount > 0 LIMIT 100");

        foreach($rec_query->result() as $row){

            

                $disp_voucher_name = "GR-".$row->bill_no."-".$row->currownumber;

                

                $ledgername = "";

                    $vouchertype = "";

                    $partyvoucherparent = "Sundry Debtor";

                    $voucherparent = "";

                    if($row->payment_mode != "Cash" && $row->payment_mode  != "Csh"){

                        $vouchertype = "Receipt";

                        if((($row->NB_type  == 1 || $row->payment_mode == 'NB') && $row->NB_type  != 3) ||  $row->payment_mode == 'CHQ'){    

                            $ledgername = "SBI A/C No.26736";

                            $voucherparent = "Receipt";

                        }else{

                                $ledgername = "SBI A/C No.26736";

                                $voucherparent = "Sundry Debtors";

                        }

                    }else{

                        $ledgername = "Cash";

                        $vouchertype = "Receipt";

                        $voucherparent = "Cash-In-Hand";

                    }

                

                $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_issue_rcpt_pay,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $disp_voucher_name,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $vouchertype,

                                            "VoucherTypeParent"     => $row->payment_mode  == "Cash" ? "Receipt" : "Receipt",

                                            "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => $row->LedgerParent,

                                            "LedgerAddress"         => $row->cuaddress,

                                            "LedgerState"           => $row->cusstate,

                                            "LedgerCountry"         => $row->cuscountry,

                                            "LedgerPincode"         => $row->cuspincode,

                                            "LedgerMobile"          => "+91".$row->CONTACTNO,

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => $row->payment_amount ,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                

                 $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_issue_rcpt_pay,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $disp_voucher_name,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $vouchertype,

                                            "VoucherTypeParent"     => $row->payment_mode  == "Cash" ? "Receipt" : "Receipt",

                                            "LedgerName"            => $ledgername, //$row->payment_mode 

                                            "LedgerParent"          => "Sundry Debtors",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => $row->payment_amount ,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                            

                                        );

        }
        
        
        //Chit Payment Receipts Details

         $get_day_entries = $this->db->query("SELECT tal_imp_id, date_format(tal_imp_date, '%d-%m-%Y') as INVOICEDATE, tal_imp_date, tal_imp_branch, tal_bran_row_id,  

                                    	    br.short_name as brcode, br.name as CostCentre, 

                                    	    br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort, 

                                    	    IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry 

	                                        FROM ret_tally_import_chitpayments as pay  

	                                        LEFT JOIN branch br ON br.id_branch = pay.tal_imp_branch  

	                                        LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                            LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                            WHERE istransfered = 0 

                                             ".($from_date !='' && $to_date !='' ? " AND DATE(tal_imp_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                            ".($_GET['id_branch'] !='' ? " AND pay.tal_imp_branch = '".$_GET['id_branch']."'" :'')." 

                                             LIMIT 15");

	   //echo $this->db->last_query();exit;

	   foreach($get_day_entries->result() as $key=>$row){

    	    $payments	= $this->get_purchase_plan_payments($row->tal_imp_date, $row->tal_imp_branch);

            /*echo "<pre>";
            print_r($payments);
            echo "</pre>";exit;*/

            $total_amount = 0;

            $total_online_amount = 0;
            
            foreach($payments as $dkey => $dateval){
                $total_payment = 0;
                $other_payment = 0;
                $cash_payment = 0;
                $scheme_name = "";
                $payid = "";
                foreach($dateval as $pkey => $pval){
                    $scheme_name = $pval['scheme_name'];
                    $total_payment += $pval['totamt'];
                    if($pval['payment_mode'] == 'CSH'){
                        $cash_payment += $pval['totamt'];
                        $payid = $pval['id_payment'];
                    }else{
                        $other_payment += $pval['totamt'];
                        $payid = $pval['id_payment'];
                    }
                }

                $invoice_string = "EMI-".$row->brcode."-".$row->tal_bran_row_id."-".$payid;


                if($total_payment > 0){
                    $return_data['VOUCHER'][] = array(

                        "Autoid"                => $row->tal_imp_id,

                        "CompanyNumber"         => $row->sort,

                        "TallyMasterid"         => 1,

                        "Voucherid"             => "",

                        "VoucherNumber"         => $invoice_string,

                        "VoucherDate"           => $row->INVOICEDATE,

                        "VoucherType"           => "Chit Receipt",

                        "VoucherTypeParent"     => "Receipt",

                        "LedgerName"            => $scheme_name,

                        "LedgerParent"          => "Sundry Debtors",

                        "LedgerAddress"         => "",

                        "LedgerState"           => "",

                        "LedgerCountry"         => "",

                        "LedgerPincode"         => "",

                        "LedgerMobile"          => "",

                        "LedgerGstReg"          => "Consumer",

                        "LedgerGstin"           => "",

                        "BillName"              => "",

                        "BillDate"              => $row->INVOICEDATE,

                        "PlaceOfSupply"         => "",

                        "TransactionDate"       => $row->INVOICEDATE,

                        "CrDr"                  => "Cr",

                        "Amount"                => number_format($total_payment, 2, '.', ''),

                        "CostCategory"          => "",

                        "CostCentre"            => $row->CostCentre,

                        "BranchCode"            => $row->brcode,

                        "Location"              => $row->frmaddress1,

                        "State"                 => $row->brstate

                    );  

                    if($cash_payment > 0){
                        //$invoice_string = "EMI-".$row->brcode."-".$row->tal_bran_row_id."-".$payid."-1";
                                
                            $ledgername     = "Cash";

                            $vouchertype    = "Chit Receipt";

                            $voucherparent  = "Receipt";
                            
                            $ledgetparent   = "Sundry Debtors";

                        $return_data['VOUCHER'][] = array(

                            "Autoid"                => $row->tal_imp_id,

                            "CompanyNumber"         => $row->sort,

                            "TallyMasterid"         => 1,

                            "Voucherid"             => "",

                            "VoucherNumber"         => $invoice_string,

                            "VoucherDate"           => $row->INVOICEDATE,

                            "VoucherType"           => $vouchertype,

                            "VoucherTypeParent"     => $voucherparent,

                            "LedgerName"            => $ledgername, //$row->payment_mode 

                            "LedgerParent"          => $ledgetparent,

                            "LedgerAddress"         => "",

                            "LedgerState"           => "",

                            "LedgerCountry"         => "",

                            "LedgerPincode"         => "",

                            "LedgerMobile"          => "",

                            "LedgerGstReg"          => "",

                            "LedgerGstin"           => "",

                            "BillName"              => "",

                            "BillDate"              => $row->INVOICEDATE,

                            "PlaceOfSupply"         => "",

                            "TransactionDate"       => $row->INVOICEDATE,

                            "CrDr"                  => "Dr",

                            "Amount"                => number_format($cash_payment, 2, '.', ''),

                            "CostCategory"          => "",

                            "CostCentre"            => $row->CostCentre,

                            "BranchCode"            => $row->brcode,

                            "Location"              => $row->frmaddress1,

                            "State"                 => $row->brstate,
                        );
                    }

                    if($other_payment > 0){
                        //$invoice_string = "EMI-".$row->brcode."-".$row->tal_bran_row_id."-".$payid."-2";
                                
                                $ledgername = "SBI A/C No.26736";

                                $voucherparent = "Receipt";
                                
                                $ledgetparent = "Sundry Debtors";
                        $return_data['VOUCHER'][] = array(

                            "Autoid"                => $row->tal_imp_id,

                            "CompanyNumber"         => $row->sort,

                            "TallyMasterid"         => 1,

                            "Voucherid"             => "",

                            "VoucherNumber"         => $invoice_string,

                            "VoucherDate"           => $row->INVOICEDATE,

                            "VoucherType"           => "Chit Receipt",

                            "VoucherTypeParent"     => $voucherparent,

                            "LedgerName"            => $ledgername, //$row->payment_mode 

                            "LedgerParent"          => $ledgetparent,

                            "LedgerAddress"         => "",

                            "LedgerState"           => "",

                            "LedgerCountry"         => "",

                            "LedgerPincode"         => "",

                            "LedgerMobile"          => "",

                            "LedgerGstReg"          => "",

                            "LedgerGstin"           => "",

                            "BillName"              => "",

                            "BillDate"              => $row->INVOICEDATE,

                            "PlaceOfSupply"         => "",

                            "TransactionDate"       => $row->INVOICEDATE,

                            "CrDr"                  => "Dr",

                            "Amount"                => number_format($other_payment, 2, '.', ''),

                            "CostCategory"          => "",

                            "CostCentre"            => $row->CostCentre,

                            "BranchCode"            => $row->brcode,

                            "Location"              => $row->frmaddress1,

                            "State"                 => $row->brstate,
                        );
                    }
                }
            }


	   }


        //Chit Utilization payment  utilized_amt
       $chit_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE, b.bill_no as INVOICENO, b.sales_ref_no, `bill_chit_ut_id`, 

                                        pay.utilized_amt, pay.scheme_account_id, sch.scheme_type, ifnull(sch.flexible_sch_type, 0) as flexible_sch_type, 

                                        sch.one_time_premium as one_time_premium, if((sch.scheme_type = 0 OR sch.flexible_sch_type = 1), sca.closing_amount, sca.closing_paid_amt) as closing_amount, 

                                        ifnull(sca.closing_weight, 0) as closing_weight, benefit, ifnull(pay.closing_weight,0) as chitutiweight, 

                                        if(b.bill_type = 10 , 0 , round((additional_benefits + ((((pay.closing_weight + pay.savings_in_wastage) * b.goldrate_22ct) - sca.closing_amount)  + pay.savings_in_making_charge)), 2)) as additional_benefits, 

                                        'Payment' as VOUCHERTYPE, b.bill_type, b.pur_ref_no, ifnull(closing_add_chgs, 0) as closing_add_chgs, 

                                        '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                        cus.mobile as CONTACTNO, sch.scheme_name as scheme_name,

                                        IFNULL(b.remark,'') as REMARKS,

                                        br.address1 as frmaddress1, br.address2 as frmaddress2, 

                                        IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,  

                                        'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, 

                                        br.name as CostCentre, br.sort, b.tot_bill_amount, b.round_off_amt as roundoff, 

                                        b.bill_no, b.order_adv_ref_no, b.credit_coll_refno, met.metal_code, 

                                        ROW_NUMBER() OVER(PARTITION BY pay.bill_id) AS currownumber  

                                        FROM ret_billing_chit_utilization as pay 

                                        LEFT JOIN scheme_account as sca ON sca.id_scheme_account = pay.scheme_account_id 

                                        LEFT JOIN scheme as sch ON sch.id_scheme = sca.id_scheme 

                                        LEFT JOIN ret_billing b ON b.bill_id = pay.bill_id 

                                        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                                        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                        LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                        LEFT JOIN state as st ON st.id_state = adr.id_state 

                                        LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                        LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                        LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                        LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                                        WHERE b.bill_status = 1 AND pay.scheme_account_id != 0 

                                         ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                        ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')."  

                                        AND pay.istransfered = 0 AND pay.utilized_amt > 0 LIMIT 100"); //GROUP BY b.bill_id

        //echo $this->db->last_query();exit;

        foreach($chit_query->result() as $row){

            

                    $ledgername = "";

                    $vouchertype = "";

                    $partyvoucherparent = "Receipt";

                    if(!empty($row->sales_ref_no)){

                        $pay_invoice_string = "CHR-".$row->sales_ref_no."-".$row->currownumber;

                    }else{

                        $pay_invoice_string = "CHR-".$row->bill_no."-".$row->currownumber;

                    }

                    $schemetype = $row->scheme_name;

                    if(($row->scheme_type == 0 || $row->flexible_sch_type == 1)){

                        $party_closing_amount = $row->closing_amount - $row->closing_add_chgs;

                        if($row->one_time_premium == 1){ // For one time amount scheme
                            $schemetype = "ONE TIME AMOUNT";
                            $party_closing_amount = $row->closing_amount + ($row->benefit + round($row->additional_benefits)) - $row->closing_add_chgs;
                        }

                    }else{

                        $party_closing_amount = $row->closing_amount + ($row->benefit + round($row->additional_benefits > 0 ? $row->additional_benefits : 0)) - $row->closing_add_chgs;
                        if($row->one_time_premium == 1){
                            $schemetype = "ONE TIME WEIGHT";
                        }

                    }

                    

                    

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_chit_ut_id,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Chit Receipt",

                                            "VoucherTypeParent"     => $partyvoucherparent,

                                            "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => $row->LedgerParent,

                                            "LedgerAddress"         => $row->cuaddress,

                                            "LedgerState"           => $row->cusstate,

                                            "LedgerCountry"         => $row->cuscountry,

                                            "LedgerPincode"         => $row->cuspincode,

                                            "LedgerMobile"          => "+91".$row->CONTACTNO,

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => number_format($row->utilized_amt, 2,'.',''),

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );
                    

                    if(($row->scheme_type == 0 || $row->flexible_sch_type == 1)){

                        $closing_amount = $row->closing_amount - ($row->benefit + round($row->additional_benefits));
                        if($row->one_time_premium == 1){
                            $closing_amount = $row->closing_amount;
                        }
                        

                    }else{

                        $closing_amount = $row->closing_amount;

                    }

                                        

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_chit_ut_id ,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Chit Receipt",

                                            "VoucherTypeParent"     => "Receipt",

                                            "LedgerName"            => $schemetype,

                                            "LedgerParent"          => "Sundry Debtors",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => number_format($row->utilized_amt, 2,'.',''),

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                /*if($row->benefit > 0 || $row->additional_benefits > 0){

                        if($row->chitutiweight > 0){

                            $benefitledgername = 'Chit Incentive - Weight';

                        }else{

                            $benefitledgername = 'Chit Incentive - Amount';

                        }

                     $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_chit_ut_id ,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $row->brcode."-Journal",

                                            "VoucherTypeParent"     => "Sundry Debtors",

                                            "LedgerName"            => $benefitledgername,

                                            "LedgerParent"          => "Sundry Creditors",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => number_format(($row->benefit + round($row->additional_benefits)), 2,'.',''),

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                }

            if($row->closing_add_chgs > 0){
                $return_data['VOUCHER'][] = array(

                    "Autoid"                => $row->bill_chit_ut_id,

                    "CompanyNumber"         => $row->sort,

                    "TallyMasterid"         => 1,

                    "Voucherid"             => "",

                    "VoucherNumber"         => $pay_invoice_string,

                    "VoucherDate"           => $row->INVOICEDATE,

                    "VoucherType"           => $row->brcode."-Journal",

                    "VoucherTypeParent"     => "Journal",

                    "LedgerName"            => "Chit Deduction",

                    "LedgerParent"          => "Indirect Incomes",

                    "LedgerAddress"         => $row->cuaddress,

                    "LedgerState"           => $row->cusstate,

                    "LedgerCountry"         => $row->cuscountry,

                    "LedgerPincode"         => $row->cuspincode,

                    "LedgerMobile"          => "+91".$row->CONTACTNO,

                    "LedgerGstReg"          => "Consumer",

                    "LedgerGstin"           => "",

                    "BillName"              => "",

                    "BillDate"              => $row->INVOICEDATE,

                    "PlaceOfSupply"         => "",

                    "TransactionDate"       => $row->INVOICEDATE,

                    "CrDr"                  => "Cr",

                    "Amount"                => number_format($row->closing_add_chgs, 2,'.',''),

                    "CostCategory"          => "",

                    "CostCentre"            => $row->CostCentre,

                    "BranchCode"            => $row->brcode,

                    "Location"              => $row->frmaddress1,

                    "State"                 => $row->brstate

                );
            }*/

        }
        return $return_data;
	}
	

	function getChitUtlizationPayments()

	{

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }else{

	        $from_date   = date('Y-m-d');

	        $to_date     = date('Y-m-d');

	    }

	    $return_data = array();

	    

	    $chit_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE, b.bill_no as INVOICENO, b.sales_ref_no, `bill_chit_ut_id`, 

                                        pay.utilized_amt, pay.scheme_account_id, 

                                        closing_amount, ifnull(closing_weight, 0) as closing_weight, benefit, additional_benefits, 

                                        'Payment' as VOUCHERTYPE, b.bill_type, b.pur_ref_no, 

                                        '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                        cus.mobile as CONTACTNO,

                                        IFNULL(b.remark,'') as REMARKS,

                                        br.address1 as frmaddress1, br.address2 as frmaddress2, 

                                        IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,  

                                        'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, 

                                        br.name as CostCentre, br.sort, b.tot_bill_amount, b.round_off_amt as roundoff, 

                                        b.bill_no, b.order_adv_ref_no, b.credit_coll_refno, met.metal_code, 

                                        ROW_NUMBER() OVER(PARTITION BY pay.bill_id) AS currownumber 

                                        FROM ret_billing_chit_utilization as pay 

                                        LEFT JOIN scheme_account as sca ON sca.id_scheme_account = pay.scheme_account_id

                                        LEFT JOIN ret_billing b ON b.bill_id = pay.bill_id 

                                        LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                                        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                        LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                        LEFT JOIN state as st ON st.id_state = adr.id_state 

                                        LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                        LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                        LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                        LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                                        WHERE b.bill_status = 1 AND pay.scheme_account_id != 0 

                                         ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')." 

                                        AND pay.istransfered = 0 AND pay.utilized_amt > 0");

        foreach($chit_query->result() as $row){

            

                    $ledgername = "";

                    $vouchertype = "";

                    $partyvoucherparent = "Sundry Debtors";

                   

                    $pay_invoice_string = "CHP-".$row->bill_no."-".$row->currownumber;

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_chit_ut_id,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "GR-Journal",

                                            "VoucherTypeParent"     => $partyvoucherparent,

                                            "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => $row->LedgerParent,

                                            "LedgerAddress"         => $row->cuaddress,

                                            "LedgerState"           => $row->cusstate,

                                            "LedgerCountry"         => $row->cuscountry,

                                            "LedgerPincode"         => $row->cuspincode,

                                            "LedgerMobile"          => "+91".$row->CONTACTNO,

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => $row->cusstate,

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => $row->closing_amount ,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                                        

                    $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_chit_ut_id ,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "GR-Journal",

                                            "VoucherTypeParent"     => "Sundry Debtors",

                                            "LedgerName"            => "CHIT SCHEME",

                                            "LedgerParent"          => "",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => ($row->closing_amount - ($row->benefit + $row->additional_benefits))  ,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                if($row->benefit > 0 ){

                     $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->bill_chit_ut_id ,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $pay_invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "GR-Journal",

                                            "VoucherTypeParent"     => "Sundry Debtors",

                                            "LedgerName"            => "Chit Incentive",

                                            "LedgerParent"          => "",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => $row->benefit,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                }

        }

        return $return_data;

	}

	

	function getPurchasePlanList()

	{

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }else{

	        $from_date   = date('Y-m-d');

	        $to_date     = date('Y-m-d');

	    }

	    $return_data = array();

	    $get_day_entries = $this->db->query("SELECT tal_imp_id, date_format(tal_imp_date, '%d-%m-%Y') as INVOICEDATE, tal_imp_date, tal_imp_branch, tal_bran_row_id,  

                                    	    br.short_name as brcode, br.name as CostCentre, 

                                    	    br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort, 

                                    	    IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry 

	                                        FROM ret_tally_import_chitpayments as pay  

	                                        LEFT JOIN branch br ON br.id_branch = pay.tal_imp_branch  

	                                        LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                            LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

	                                        WHERE tal_imp_date BETWEEN '".$from_date."' AND '".$to_date."'");

	   //echo $this->db->last_query();exit;

	   foreach($get_day_entries->result() as $row){

    	    $payments	= $this->get_purchase_plan_payments($row->tal_imp_date, $row->tal_imp_branch);

            /*$date_grouped_data = array();

            foreach($payments as $key => $value){

               $date_grouped_data[$value['date_payment']][$key] = $value;

            }*/

            $total_amount = 0;

            $invoice_string = "EMI-".$row->brcode."-".$row->tal_bran_row_id;

            foreach($payments as $dkey => $dateval){

                $total_amount += $dateval['totamt'];

                $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->tal_imp_id,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "GR-Journal",

                                            "VoucherTypeParent"     => "Sundry Debtor",

                                            "LedgerName"            => $dateval['payment_mode'], //$row->payment_mode 

                                            "LedgerParent"          => "",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => $invoice_string,

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => $dateval['totamt'],

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                            

                                        );

            }

            

            $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->tal_imp_id,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "GR-Journal",

                                            "VoucherTypeParent"     => "Sundry Debtor",

                                            "LedgerName"            => "CHIT SCHEME",

                                            "LedgerParent"          => "",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => $total_amount,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

            

	   }

       return $return_data;

	}

	function get_purchaseplan_paymodes($id_payment){

	    $sql_pay_mode = "SELECT pmd.payment_amount,  pmd.payment_mode, id_pay_mode_details

                FROM payment_mode_details pmd

                Where pmd.payment_status = 1 and id_payment=". $id_payment;

		return $this->db->query($sql_pay_mode)->result_array();

	}

	

	function get_purchase_plan_payments010623($from_date, $id_branch){

	    $query = $this->db->query("SELECT date(p.date_payment) as date_payment, p.payment_mode, sum(p.payment_amount) as totamt,

	                                 is_offline, id_payGateway, sch.scheme_name,  sch.code 

	                                FROM payment p 

	                                LEFT JOIN scheme_account sa on sa.id_scheme_account = p.id_scheme_account 

	                                LEFT JOIN scheme as sch ON sch.id_scheme = sa.id_scheme 

	                                WHERE p.payment_status=1 and p.receipt_no IS NOT NULL 

	                                AND sch.one_time_premium != 1 

	                                and date(p.date_payment) = '".$from_date."' 

	                                AND p.payment_mode != 'OG' AND p.payment_mode != 'ADV_ADJ' 

	                                AND p.payment_status = 1 AND p.id_branch = $id_branch GROUP BY p.payment_mode, id_payGateway, sa.id_scheme HAVING totamt > 0");

	                                

	   //|| ifnull(pmd.id_pay_device, 0) !=0    

	   //-- AND pmd.payment_mode != 'CHQ' AND (ifnull(`NB_type`, 0 ) = 0 || ifnull(pmd.id_pay_device, 0) !=0  || id_payGateway IS NOT NULL)

	   return $query->result_array();

	}
	
    function get_purchase_plan_payments($from_date, $id_branch){

	    $query = $this->db->query("SELECT p.id_payment, sa.id_scheme, date(p.date_payment) as date_payment, pmd.payment_mode, sum(pmd.payment_amount) as totamt,

	                                ifnull(`NB_type`, 0 ) as NB_type, `card_type`, ifnull(paydev.device_name, 0) as device_name, is_offline, id_payGateway,

	                                if(paydev.device_type = 1 , 1 , 0) as id_pay_device, 

	                                ifnull(bk.short_code, '') as short_code, ifnull(bk.acc_number, '') as acc_number, 

                                    ifnull(pmd.card_no, '') as card_no, ifnull(pmd.payment_ref_number, '') as payment_ref_number, 

                                    ifnull(pmd.bank_name, '') as bank_name, ifnull(date(pmd.payment_date), '') as payment_date,

                                    ifnull(pmd.cheque_no, '') as cheque_no, ifnull(date(pmd.cheque_date), '') as cheque_date, ifnull(pmd.bank_acc_no, '') as bank_acc_no,  
                                    
                                    concat('Type - ', pmd.payment_mode, ' ', ifnull(bk.short_code, ''), ifnull(bk.acc_number, ''), ' Date - ',  ifnull(date(pmd.payment_date), ''), ' Card No - ',  ifnull(pmd.card_no, ''), ' Approval No - ',  ifnull(pmd.payment_ref_number, ''), ' Device - ',  ifnull(paydev.device_name, '')) as narration, 

                                    sch.scheme_name,  sch.code, if(pmd.payment_mode = 'CSH' , 1 , 0) as dtype    

	                                FROM payment p 

	                                LEFT JOIN scheme_account sa on sa.id_scheme_account = p.id_scheme_account 

	                                LEFT JOIN scheme as sch ON sch.id_scheme = sa.id_scheme 

	                                LEFT JOIN payment_mode_details as pmd ON pmd.id_payment = p.id_payment 

	                                LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device 

                                    LEFT JOIN bank as bk ON bk.id_bank = pmd.id_bank 


	                                WHERE p.payment_status=1 and p.receipt_no IS NOT NULL 

	                                AND sch.one_time_premium != 1 

	                                and date(p.date_payment) = '".$from_date."' 

	                                AND pmd.payment_mode != 'CHQ' AND pmd.payment_mode != 'OG' AND pmd.payment_mode != 'ADV_ADJ' 

	                                AND p.payment_status = 1 AND pmd.payment_status = 1 AND p.id_branch = $id_branch GROUP BY pmd.payment_mode, sa.id_scheme HAVING totamt > 0");

	                                

	   //|| ifnull(pmd.id_pay_device, 0) !=0    

       $returndata = array();

	   //-- AND pmd.payment_mode != 'CHQ' AND (ifnull(`NB_type`, 0 ) = 0 || ifnull(pmd.id_pay_device, 0) !=0  || id_payGateway IS NOT NULL)
        if(!empty($query->result_array())){
            foreach($query->result_array() as $key => $val){
                $returndata[$val['code']][] = $val;
            }
        }
	   return $returndata;

	}


	function get_spl_purchase_plan_payments($from_date, $id_branch){

	    $query = $this->db->query("SELECT date(p.date_payment) as date_payment, pmd.payment_mode, sum(pmd.payment_amount) as totamt,

	                                ifnull(`NB_type`, 0 ) as NB_type, `card_type`, ifnull(paydev.device_name, 0) as device_name, is_offline, id_payGateway,

	                                if(paydev.device_type = 1 , 1 , 0) as id_pay_device, 

	                                if(pmd.payment_mode = 'NB' AND id_payGateway IS NULL , if(paydev.device_type = 1 , 1 , 0), 1) as dtype

	                                FROM payment p 

	                                LEFT JOIN scheme_account sa on sa.id_scheme_account = p.id_scheme_account 

	                                LEFT JOIN scheme as sch ON sch.id_scheme = sa.id_scheme 

	                                LEFT JOIN payment_mode_details as pmd ON pmd.id_payment = p.id_payment 

	                                LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pmd.id_pay_device 

	                                WHERE p.payment_status = 1 and p.receipt_no IS NOT NULL AND sch.one_time_premium = 1 AND sch.flexible_sch_type = 1  

	                                and date(p.date_payment) = '".$from_date."' 

	                                AND pmd.payment_mode != 'CHQ' AND pmd.payment_mode != 'OG' AND pmd.payment_mode != 'ADV_ADJ' 

	                                AND p.payment_status = 1 AND pmd.payment_status = 1 AND p.id_branch = $id_branch GROUP BY pmd.payment_mode, id_payGateway, pmd.id_pay_device HAVING totamt > 0  AND dtype = 1");

	                                

	   //|| ifnull(pmd.id_pay_device, 0) !=0    

	   //-- AND pmd.payment_mode != 'CHQ' AND (ifnull(`NB_type`, 0 ) = 0 || ifnull(pmd.id_pay_device, 0) !=0  || id_payGateway IS NOT NULL)

	   return $query->result_array();

	}

	

	function getPaymentsList(){

	    

	    $sql=$this->db->query("SELECT p.id_payment, date(p.date_payment) as INVOICEDATE,p.receipt_no as INVOICENO,'Receipt Journal TN' as VOUCHERTYPE,

        '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO, 

        cus.mobile as CONTACTNO,

        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

        p.metal_rate as RATE,'' as SALESTAX,IF(p.metal_weight = 0 , 1, IFNULL(p.metal_weight,1)) as qty , 

        '' as SERVICEAMT,'Sundry Debtors' as LedgerParent, p.id_branch , 

        br.sort,br.name as CostCentre,br.short_name as brcode, IFNULL(bst.name,'') as brstate, br.address1 as frmaddress1, br.address2 as frmaddress2,

        IFNULL(p.discountAmt,0) as bill_discount,p.payment_amount as TOTAL

        FROM payment p 

        LEFT JOIN scheme_account sa on sa.id_scheme_account = p.id_scheme_account

        LEFT JOIN customer cus ON cus.id_customer=sa.id_customer

        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

        LEFT JOIN country as cn ON cn.id_country = adr.id_country 

        LEFT JOIN state as st ON st.id_state = adr.id_state 

        LEFT JOIN branch br ON br.id_branch = p.id_branch 

        LEFT JOIN state as bst ON bst.id_state = br.id_state

        WHERE p.payment_status=1 and p.receipt_no IS NOT NULL 

        and date(p.date_payment) = '".date('Y-m-d')."' and p.istransfered = 0");

        // echo $this->db->last_query();exit;

        return $sql->result();

	}

	

	function getAllimporissuepaymentsList()

	{

	    $return_data = array();

	     if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }

	    $payment_query = $this->db->query("SELECT date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.s_ret_refno as INVOICENO, b.sales_ref_no, 

	                            `id_billing_payment`, ifnull(`NB_type`, 0 ) as NB_type, `card_type`, `payment_for`, `payment_date`, `payment_mode`, 

	                            `payment_amount`, `cheque_date`, `cheque_no`, `bank_acc_no`, `bank_name` , ifnull(paydev.device_name, 0) as device_name, 

                        	    'Payment' as VOUCHERTYPE, b.bill_type, ifnull(b.pur_ref_no, b.sales_ref_no) as pur_ref_no, 

                                '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                cus.mobile as CONTACTNO,

                                IFNULL(b.remark,'') as REMARKS,

                                 br.address1 as frmaddress1, br.address2 as frmaddress2,

                                  IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,  

                                'Sundry Debtors' as LedgerParent, b.id_branch , b.bill_id, br.short_name as brcode, 

                                br.name as CostCentre, br.sort, b.tot_bill_amount, b.round_off_amt as roundoff, 

								b.bill_no, b.order_adv_ref_no, b.credit_coll_refno, met.metal_code, 

								ROW_NUMBER() OVER(PARTITION BY pay.bill_id) AS currownumber, if(paydev.device_type = 1 , 1 , 0) as id_pay_device 

                                FROM `ret_billing_payment` as pay

								LEFT JOIN ret_billing b ON b.bill_id = pay.bill_id 

								LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device AND paydev.device_type = 1

                                LEFT JOIN customer cus ON cus.id_customer=b.bill_cus_id 

                                LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                LEFT JOIN state as st ON st.id_state = adr.id_state 

                                LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                LEFT JOIN metal as met ON met.id_metal = b.metal_type 

                                WHERE b.bill_status = 1 

                                 ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')."  

                                 ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

                                 AND pay.istransfered = 0 AND pay.type = 2 LIMIT 100");

                                 //date(b.bill_date) between '2022-04-01' AND '2022-04-10' AND 

                                 // AND (((tot_bill_amount < 0) OR (tot_bill_amount >=0 AND b.bill_type = 10)) OR 

                                //((b.bill_type = 1 OR b.bill_type = 9 ) AND (SELECT sum(payment_amount) FROM ret_billing_payment as bp WHERE bp.bill_id = b.bill_id AND type = 2) < 0) )

                                 

            foreach($payment_query->result() as $row){

                 //$invoice_string = "IP-".$row->id_billing_payment;

                 

                 if($row->bill_type == 2 || $row->bill_type == 4){ //Purchase

                        $invoice_string ='IP-P-'.$row->bill_no.'-'.$row->currownumber;

                    }else if($row->bill_type == 3){ // Sales return

                        $invoice_string ='IP-R-'.$row->bill_no.'-'.$row->currownumber;

                    }else {

                        $invoice_string = "IP-".$row->bill_no."-".$row->currownumber;

                    }

                 

                 

                 

                 

                 

                  $ledgername = "";

                    $vouchertype = "Payment Sales refund";

                    $partyvoucherparent = "Sundry Debtor";

                    $voucherparent = "";

                    if($row->payment_mode != "Cash"){

                        //$vouchertype = $row->brcode."-Payment";

                        if((($row->NB_type  == 1 || $row->payment_mode == 'NB') && $row->NB_type  != 3) ||  $row->payment_mode == 'CHQ'){

                            $ledgername = "Net Banking";

                            $voucherparent = "Branch/Divisions";

                        }else{

                                $ledgername = "Credit Card";

                                $voucherparent = "Sundry Debtor";

                        }

                    }else{

                        $ledgername = "Cash";

                        //$vouchertype = $row->brcode."-Payment";

                        $voucherparent = "Cash-In-Hand";

                    }

                 

                 $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_billing_payment,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $vouchertype,

                                            "VoucherTypeParent"     => "Payment",

                                            "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => $row->LedgerParent,

                                            "LedgerAddress"         => $row->cuaddress,

                                            "LedgerState"           => $row->cusstate,

                                            "LedgerCountry"         => $row->cuscountry,

                                            "LedgerPincode"         => $row->cuspincode,

                                            "LedgerMobile"          => "+91".$row->CONTACTNO,

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => abs($row->payment_amount ),

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                

                 $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_billing_payment ,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Payment Sales refund",//$row->payment_mode  == "Cash" ? "GR-Receipt" : "GR-Journal",

                                            "VoucherTypeParent"     => "Payment",

                                            "LedgerName"            => $ledgername,

                                            "LedgerParent"          => $row->payment_mode  == "Cash" ? "Cash-In-Hand" : "Sundry Debtors",
                                            

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => abs($row->payment_amount ),

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                            

                                        );

             

                 

            }

            $rec_query = $this->db->query("SELECT b.id_issue_receipt, date_format(b.bill_date, '%d-%m-%Y') as INVOICEDATE,b.bill_no as INVOICENO, 

                                        `id_issue_rcpt_pay`, `id_issue_rcpt`, pay.`type`, ifnull(`NB_type`, 0 ) as NB_type, `card_type`, 

                                        `payment_mode`, `payment_amount`, ifnull(paydev.device_name, 0) as device_name, 

                                        cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO,

                                        concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

                                        IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

                                        cus.mobile as CONTACTNO, b.issue_type, 

                                        'Sundry Debtors' as LedgerParent, b.id_branch ,  br.short_name as brcode, 

                                        br.name as CostCentre, b.amount,  

                                        b.bill_no,  br.address1 as frmaddress1, br.address2 as frmaddress2, br.sort,

                                        IFNULL(bst.name,'') as brstate, IFNULL(bcn.name,'') as brcountry,

                                        ROW_NUMBER() OVER(PARTITION BY pay.id_issue_rcpt) AS currownumber, if(paydev.device_type = 1 , 1 , 0) as id_pay_device 

                                        FROM `ret_issue_rcpt_payment`  as pay 

										LEFT JOIN ret_issue_receipt b  ON b.id_issue_receipt = pay.id_issue_rcpt 

										LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device AND paydev.device_type = 1

                                        LEFT JOIN customer cus ON cus.id_customer=b.id_customer 

                                        LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

                                        LEFT JOIN country as cn ON cn.id_country = adr.id_country 

                                        LEFT JOIN state as st ON st.id_state = adr.id_state 

                                        LEFT JOIN branch br ON br.id_branch = b.id_branch 

                                        LEFT JOIN state as bst ON bst.id_state = br.id_state 

                                        LEFT JOIN country as bcn ON bcn.id_country = br.id_country 

                                        WHERE pay.type = 2 AND b.bill_status = 1 

                                         ".($from_date !='' && $to_date !='' ? " AND DATE(b.bill_date) BETWEEN '".$from_date."' AND '".$to_date."'" :'')."  

                                         ".($_GET['id_branch'] !='' ? " AND b.id_branch = '".$_GET['id_branch']."'" :'')." 

                                        AND pay.istransfered = 0 LIMIT 100");

            foreach($rec_query->result() as $row){

                //$invoice_string = "GP-".$row->id_issue_rcpt_pay;

                $invoice_string = "GP-".$row->bill_no."-".$row->currownumber;

                

                $ledgername = "";

                    $vouchertype = "Payment Sales refund";

                    $partyvoucherparent = "Sundry Debtor";

                    $voucherparent = "Payment";

                    if($row->payment_mode  != "Cash"){

                        //$vouchertype = $row->brcode."-Journal";

                        if((($row->NB_type  == 1 || $row->payment_mode == 'NB') && $row->NB_type  != 3) ||  $row->payment_mode == 'CHQ'){

                            $ledgername = "Net Banking";

                            $voucherparent = "Payment";

                        }else{

                         

                                $ledgername = "Credit Card";

                                $voucherparent = "Payment";


                        }

                    }else{

                        $ledgername = "Cash";

                        //$vouchertype = $row->brcode."-Payment";

                        $voucherparent = "Payment";

                    }

                

                $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_issue_rcpt_pay,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $vouchertype,

                                            "VoucherTypeParent"     => $voucherparent,

                                            "LedgerName"            => $row->issue_type == 1 ? "Petty Cash" : $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => $row->LedgerParent,

                                            "LedgerAddress"         => $row->issue_type == 1 ? "" : $row->cuaddress,

                                            "LedgerState"           => $row->issue_type == 1 ? "" :$row->cusstate,

                                            "LedgerCountry"         => $row->issue_type == 1 ? "" :$row->cuscountry,

                                            "LedgerPincode"         => $row->issue_type == 1 ? "" :$row->cuspincode,

                                            "LedgerMobile"          => $row->issue_type == 1 ? "" : "+91".$row->CONTACTNO,

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => $row->payment_amount,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

                 $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->id_issue_rcpt_pay,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => $row->payment_mode  == "Cash" ? $row->brcode."-Payment" : $row->brcode."-Journal",//$row->payment_mode  == "Cash" ? "GR-Receipt" : "GR-Journal",

                                            "VoucherTypeParent"     => $row->payment_mode  == "Cash" ? "Payment" : "Journal",

                                            "LedgerName"            => $ledgername,

                                            "LedgerParent"          => $row->payment_mode  == "Cash" ? "Cash-In-Hand" : "Sundry Debtors",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => $row->payment_amount,

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                            

                                        );

            }

        return $return_data;

            

	}
    

	function getsupplierpaymentList()

	{

	    $return_data = array();

	    if(!empty($_GET['from_date'])){

	       $from_date   = $_GET['from_date'];

	       $to_date     = $_GET['to_date'];

	    }

	    $payment_query = $this->db->query("SELECT `pay_id`, `pay_sup_id`, `bill_type`, `pay_amt` as payment_amount, `pay_refno`, 

	                                        date_format(popay.`pay_create_on`, '%d-%m-%Y') as INVOICEDATE, kar.firstname as PARTYNAME, 

	                                        kar.lastname, kar.code_karigar, kar.contactno1 as CONTACTNO, 

	                                        concat(IFNULL(kar.address1,''),' ', IFNULL(kar.address2,''), ' ', IFNULL(kar.address3,'')) as cuaddress, 

	                                        kar.pincode as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry, 

	                                        br.sort,br.name as CostCentre,br.short_name as brcode, br.address1 as frmaddress1, br.address2 as frmaddress2,

	                                        IFNULL(bst.name,'') as brstate 

	                                        FROM `ret_po_payment` as popay 

	                                        LEFT JOIN ret_karigar as kar ON kar.id_karigar = popay.pay_sup_id 

	                                        LEFT JOIN country as cn ON cn.id_country = kar.id_country 

	                                        LEFT JOIN state as st ON st.id_state = kar.id_state 

	                                        LEFT JOIN branch as br ON br.is_ho = 1 

	                                        LEFT JOIN state as bst ON bst.id_state = br.id_state

	                                        WHERE `pay_status` = 1  AND `istransfered` = 0");

	    foreach($payment_query->result() as $row){

	        $invoice_string = "SP-".$row->pay_refno;

	         $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->pay_id,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            "VoucherType"           => "Payment",

                                            "VoucherTypeParent"     => "Payment",

                                            "LedgerName"            => $row->PARTYNAME. "-".$row->CONTACTNO,

                                            "LedgerParent"          => "Sundry Creditors",

                                            "LedgerAddress"         => $row->cuaddress,

                                            "LedgerState"           => $row->cusstate,

                                            "LedgerCountry"         => $row->cuscountry,

                                            "LedgerPincode"         => $row->cuspincode,

                                            "LedgerMobile"          => "+91".$row->CONTACTNO,

                                            "LedgerGstReg"          => "Consumer",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => $row->cusstate,

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Dr",

                                            "Amount"                => abs($row->payment_amount ),

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate

                                        );

	    

	        $paymodequery = $this->db->query("SELECT `type`, `pay_mode` as payment_mode, sum(`payment_amount`) as payment_amount, 

	                                        `ref_no`, `bill_id` 

	                                        FROM `ret_po_payment_detail` 

	                                        WHERE `pay_id` = '".$row->pay_id."' GROUP BY type, pay_mode");

	                                        

	        foreach($paymodequery->result() as $payrow){

	             $ledgername = "";

                    $vouchertype = "";

                    $partyvoucherparent = "Sundry Debtor";

                    $voucherparent = "";

                    if($payrow->payment_mode != "Cash"){

                        $vouchertype = $row->brcode."-Payment";

                        if($payrow->payment_mode == 'CHQ'){

                            $ledgername = "Chit-Head Office";

                            $voucherparent = "Branch/Divisions";

                        }else{

                            if($payrow->payment_mode  == 'CC'){

                                $ledgername = "Credit Card";

                                $voucherparent = "Sundry Debtor";

                            }else if($payrow->payment_mode  == 'CC'){

                                $ledgername = "Debit Card";

                                $voucherparent = "Sundry Debtor";

                            }else if($payrow->payment_mode  == 'NB'){

                                $ledgername = "Net Bank";

                                $voucherparent = "Sundry Debtor";

                            }

                        }

                    }else{

                        $ledgername = "Cash";

                        $vouchertype = $row->brcode."-Payment";

                        $voucherparent = "Cash-in-hand";

                    }

	             $return_data['VOUCHER'][] = array(

                                            "Autoid"                => $row->pay_id,

                                            "CompanyNumber"         => $row->sort,

                                            "TallyMasterid"         => 1,

                                            "Voucherid"             => "",

                                            "VoucherNumber"         => $invoice_string,

                                            "VoucherDate"           => $row->INVOICEDATE,

                                            //"VoucherType"           => $vouchertype,

                                            "VoucherType"           => "Payment",

                                            "VoucherTypeParent"     => "Payment",

                                            "LedgerName"            => "Federal Bank",

                                            "LedgerParent"          => "Loans (Liability)",

                                            "LedgerAddress"         => "",

                                            "LedgerState"           => "",

                                            "LedgerCountry"         => "",

                                            "LedgerPincode"         => "",

                                            "LedgerMobile"          => "",

                                            "LedgerGstReg"          => "",

                                            "LedgerGstin"           => "",

                                            "BillName"              => "",

                                            "BillDate"              => $row->INVOICEDATE,

                                            "PlaceOfSupply"         => "",

                                            "TransactionDate"       => $row->INVOICEDATE,

                                            "CrDr"                  => "Cr",

                                            "Amount"                => abs($payrow->payment_amount ),

                                            "CostCategory"          => "",

                                            "CostCentre"            => $row->CostCentre,

                                            "BranchCode"            => $row->brcode,

                                            "Location"              => $row->frmaddress1,

                                            "State"                 => $row->brstate,

                                            

                                        );

	        }

	        

	    }

	    return $return_data;

	    

	}



	function getClosedAcList(){

	    

	    $sql=$this->db->query("SELECT sa.id_scheme_account, date(sa.closing_date) as closing_date,

    	    sa.closing_amount,if(sa.scheme_acc_number !='',CONCAT(s.code, ' ',sa.scheme_acc_number),'') as sch_acc_no,

    	    'Payment' as VOUCHERTYPE, '' as PARTYCODE,cus.firstname as PARTYNAME,'' as PARTYGROUP,IFNULL(cus.gst_number,'') as GSTNO, 

            cus.mobile as CONTACTNO,

            concat(IFNULL(adr.address1,''),' ', IFNULL(adr.address2,''), ' ', IFNULL(adr.address3,'')) as cuaddress, 

            IFNULL(adr.pincode,'') as cuspincode, IFNULL(st.name,'') as cusstate, IFNULL(cn.name,'') as cuscountry,

            '' as SERVICEAMT,'Sundry Debtors' as LedgerParent,

            br.sort,br.name as CostCentre,br.short_name as brcode, IFNULL(bst.name,'') as brstate, br.address1 as frmaddress1, br.address2 as frmaddress2

        FROM scheme_account sa

            LEFT JOIN scheme as s ON s.id_scheme = sa.id_scheme 

            LEFT JOIN customer cus ON cus.id_customer=sa.id_customer

            LEFT JOIN address as adr ON adr.id_customer = cus.id_customer  

            LEFT JOIN country as cn ON cn.id_country = adr.id_country 

            LEFT JOIN state as st ON st.id_state = adr.id_state 

            LEFT JOIN branch br ON br.id_branch = sa.Closing_id_branch 

            LEFT JOIN state as bst ON bst.id_state = br.id_state

        WHERE sa.active = 0 and is_closed=1 and date(sa.closing_date) = '".date('Y-m-d')."' and sa.istransfered = 0");

        // echo $this->db->last_query();

        return $sql->result();

	}

	

	function get_billing_paymodes($bill_id, $type)

	{

	    $sql = $this->db->query("SELECT `id_billing_payment`, `bill_id`, ifnull(`NB_type`, 0 ) as NB_type, `card_type`, `payment_for`, `payment_date`, `payment_mode`, 

	                            `payment_amount`, `cheque_date`, `cheque_no`, `bank_acc_no`, `bank_name` , ifnull(paydev.device_name, 0) as device_name

	                            FROM `ret_billing_payment` as pay 

	                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device AND paydev.device_type = 1

	                            WHERE bill_id = $bill_id AND type = '".$type."' GROUP BY `payment_mode`");

	   return $sql->result_array();

	}

	

	function get_receipt_paymodes($receipt_id, $type)

	{

	    $sql = $this->db->query("SELECT `id_issue_rcpt_pay`, `id_issue_rcpt`, `type`, ifnull(`NB_type`, 0 ) as NB_type, `card_type`, `payment_mode`, `payment_amount` , 

	                            ifnull(paydev.device_name, 0) as device_name

	                            FROM `ret_issue_rcpt_payment`  as pay 

	                            LEFT JOIN ret_bill_pay_device as paydev ON paydev.id_device = pay.id_pay_device AND paydev.device_type = 1

	                            WHERE `id_issue_rcpt` = $receipt_id AND type = '".$type."'

	                            GROUP BY `payment_mode`");

	   return $sql->result_array();

	}

	

	function get_billing_chitutilization($bill_id)

	{

	    $sql = $this->db->query("SELECT `bill_chit_ut_id`, `bill_id`, `scheme_account_id`, `utilized_amt` 

	                            FROM `ret_billing_chit_utilization` 

	                            WHERE bill_id = $bill_id");

	   return $sql->result_array();

	}

	

	function get_FinancialYear()

	{

		$sql = $this->db->query("SELECT fin_year_code From ret_financial_year where fin_status=1");

		return $sql->row_array();

	}



	

	function updatePurchaseGUID($postdata)

	{

	   $updatedguids = array();

	    

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

	    file_put_contents('tally_logs/'.date('d-m-Y').'_update_purchase_log', $log, FILE_APPEND);

	    foreach($postdata['PURCHASE RESPONSE'] as $pkey => $pval){ //$row->brcode."-"."PU"."-".$row->metal_code."-".$row->INVOICENO; SA-PU-GL-00002

	        $invoice_string     = explode("-", $pval->AUTOID);

	        if($invoice_string[1] == "PU"){

    	        $metal_query = $this->db->query("SELECT met.id_metal FROM metal as met WHERE met.metal_code = '".$invoice_string[2]."'");

    	        $branch_query = $this->db->query("SELECT br.id_branch FROM branch br WHERE br.short_name = '".$invoice_string[0]."'");

    	        if($metal_query->num_rows() > 0 && $branch_query->num_rows() > 0){

    	             /*$query = $this->db->query("UPDATE ret_billing as bill 

                                LEFT JOIN ret_bill_old_metal_sale_details as det ON det.bill_id = bill.bill_id 

                                SET det.istransfered = 1, det.tally_guid = '".$pval->GUID."', det.tally_updated_on = '".date('Y-m-d H:i:s')."'  

                                WHERE bill.pur_ref_no = '".$invoice_string[3]."' AND bill.metal_type = '".$metal_query->row()->id_metal."' AND 

                                bill.id_branch = '".$branch_query->row()->id_branch."'");*/

                                

                         $query = $this->db->query("UPDATE ret_bill_old_metal_sale_details as det 

                                SET det.istransfered = 1, det.tally_guid = '".$pval->GUID."', det.tally_updated_on = '".date('Y-m-d H:i:s')."'  

                                WHERE det.old_metal_sale_id = '".$pval->REFNO."'");

                    if($this->db->affected_rows() > 0){

                        //$updatedguids[] = (array)$pval;

                    }

                                

    	       }

	        }

	    }

	    return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	function updateBTGUID($postdata)

	{

	    

	    foreach($postdata['BT RESPONSE'] as $pkey => $pval){

	             $query = $this->db->query("UPDATE ret_branch_transfer 

                            SET istransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  

                            WHERE branch_trans_code = '".$pval->VoucherNumber."'");

	    }

	    return true;

	}

	

	function updateReceiptsGUID($postdata)
	{
	    $updatedguids = array();
	    
	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.
                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.
                        "-------------------------".PHP_EOL;
        file_put_contents('tally_logs/'.date('d-m-Y').'_update_receipts_log', $log, FILE_APPEND);
    
	    foreach($postdata['RECEIPT RESPONSE'] as $pkey => $pval){
	        $invoice_string     = explode("-", $pval->AUTOID);
	        //$invoice_string = "EMI-".$row->brcode."-".$row->tal_bran_row_id; For chit
	        
	        if($invoice_string[0] == 'IR'){
	            $query = $this->db->query("UPDATE ret_billing_payment  
                    SET istransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE id_billing_payment = '".$pval->REFNO."'");
                if($this->db->affected_rows() > 0){
                    //$updatedguids[] = (array)$pval;
                }
	        }else if($invoice_string[0] == 'GR'){
	            $query = $this->db->query("UPDATE ret_issue_rcpt_payment 
                    SET istransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE id_issue_rcpt_pay = '".$pval->REFNO."'");
                if($this->db->affected_rows() > 0){
                    //$updatedguids[] = (array)$pval;
                }
	        }else if($invoice_string[0] == 'CHP' || $invoice_string[0] == 'CHR'){ // Chit Utilization
	            $query = $this->db->query("UPDATE ret_billing_chit_utilization 
                    SET istransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE bill_chit_ut_id = '".$pval->REFNO."'");
                if($this->db->affected_rows() > 0){
                    //$updatedguids[] = (array)$pval;
                }
	        }else if($invoice_string[0] == 'EMI'){ // Chit Utilization
	            $query = $this->db->query("UPDATE ret_tally_import_chitpayments 
                    SET istransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE tal_imp_id = '".$pval->REFNO."'");
                if($this->db->affected_rows() > 0){
                    //$updatedguids[] = (array)$pval;
                }
	        }else if($invoice_string[0] == 'EMINB'){ // Chit Utilization
	            $query = $this->db->query("UPDATE payment  
                    SET istallytransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE id_payment = '".$pval->REFNO."'");
                if($this->db->affected_rows() > 0){
                    //$updatedguids[] = (array)$pval;
                }
	        }else if($invoice_string[0] == 'GV'){
	            $query = $this->db->query("UPDATE ret_billing_gift_voucher_details  
                    SET istransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE bill_gift_voucher_id = '".$pval->REFNO."'");
                if($this->db->affected_rows() > 0){
                    //$updatedguids[] = (array)$pval;
                }
	        }else if($invoice_string[0] == 'SI'){ //Single instalment
	            if($invoice_string[1] == 'EMI'){ // One time amount scheme except NB
	                $query = $this->db->query("UPDATE ret_tally_import_chitpayments 
                    SET splistransfered = 1, spltally_guid = '".$pval->GUID."', spltally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE tal_imp_id = '".$pval->REFNO."'");
	            }else if($invoice_string[1] == 'NB'){// One time amount scheme pay mode of NB
	                $query = $this->db->query("UPDATE payment  
                    SET istallytransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE id_payment = '".$pval->REFNO."'");
	            }else if($invoice_string[1] == 'WS'){// One time weight scheme
	                $query = $this->db->query("UPDATE payment  
                    SET istallytransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE id_payment = '".$pval->REFNO."'");
	            }
	        }
	    }
	    return array("success" => true, "updatedguids" => $updatedguids);
	}
	
	function updatePaymentsGUID($postdata)
	{
	    $updatedguids = array();
	    
	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.
                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.
                        "-------------------------".PHP_EOL;
        file_put_contents('tally_logs/'.date('d-m-Y').'_update_receipts_log', $log, FILE_APPEND);
    
	    foreach($postdata['PAYMENT RESPONSE'] as $pkey => $pval){
	        $invoice_string     = explode("-", $pval->AUTOID);
	        if($invoice_string[0] == 'IP'){
	            $query = $this->db->query("UPDATE ret_billing_payment  
                    SET istransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE id_billing_payment = '".$pval->REFNO."'");
                if($this->db->affected_rows() > 0){
                    //$updatedguids[] = (array)$pval;
                }
	        }else if($invoice_string[0] == 'GP'){
	            $query = $this->db->query("UPDATE ret_issue_rcpt_payment 
                    SET istransfered = 1, tally_guid = '".$pval->GUID."', tally_updated_on = '".date('Y-m-d H:i:s')."'  
                    WHERE id_issue_rcpt_pay = '".$pval->REFNO."'");
                if($this->db->affected_rows() > 0){
                    //$updatedguids[] = (array)$pval;
                }
	        }
	    }
	    return array("success" => true, "updatedguids" => $updatedguids);
	}
	

	function updateSalesReturnsGUID($postdata)

	{

	    $updatedguids = array();

	    

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_salesreturn_log', $log, FILE_APPEND);

        foreach($postdata['SALESRETURN RESPONSE'] as $pkey => $pval){

	        $invoice_string     = explode("-", $pval->AUTOID);

	        $query = $this->db->query("UPDATE ret_bill_return_details as det 

                                SET det.istransfered = 1, det.tally_guid = '".$pval->GUID."', det.tally_updated_on = '".date('Y-m-d H:i:s')."'  

                                WHERE det.return_id = '".$pval->REFNO."'");

	        

        }

        return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	

	

	function updateBTIssueGUID($postdata)

	{

	    $updatedguids = array();

	    

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_btissue_log', $log, FILE_APPEND);

        foreach($postdata['STOCKJOURNAL RESPONSE'] as $pkey => $pval){

	        $invoice_string     = explode("-", $pval->AUTOID);

	        if($invoice_string[0] == 'In'){

	            $query = $this->db->query("UPDATE ret_branch_transfer as det 

                                SET det.istransfered = 1, det.tally_guid = '".$pval->GUID."', det.tally_updated_on = '".date('Y-m-d H:i:s')."'  

                                WHERE det.branch_transfer_id = '".$pval->REFNO."'");

	        }else if($invoice_string[0] == 'Out'){

	            $query = $this->db->query("UPDATE ret_branch_transfer as det 

                                SET det.outistransfered = 1, det.outtally_guid = '".$pval->GUID."', det.outtally_updated_on = '".date('Y-m-d H:i:s')."'  

                                WHERE det.branch_transfer_id = '".$pval->REFNO."'");

	        }

	        

        }

        return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	function updateKarigarMetalIssueGUID($postdata)

	{

	     $updatedguids = array();

	    

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_karigarmetalissue_log', $log, FILE_APPEND);

       

        return array("success" => true, "updatedguids" => $updatedguids);

	}

	function updatePurchaseReturnGUID($postdata)

	{

	     $updatedguids = array();

	    

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_purchasereturn_log', $log, FILE_APPEND);

       

        return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	function createChitdate()

	{

	    $branches = [2];

	    $startdate = '2023-01-02';

        for($i=0; date('Y-m-d', strtotime($startdate)) < date('Y-m-d'); $i++){

        	foreach($branches as $br){

        	    $insert_array = array(

        	            "tal_imp_date"      => $startdate,

        	            "tal_imp_branch"    => $br,

        	            "tal_imp_fin_code"  => '2022'

        	        );

        	        $this->db->insert('ret_tally_import_chitpayments', $insert_array);

        	        unset($insert_array);

        	}

        	$startdate = date('Y-m-d', strtotime($startdate . ' +1 day'));

        }

        

        $this->db->query("UPDATE ret_tally_import_chitpayments p1

                            JOIN (

                            SELECT p1.tal_imp_id,

                                   COUNT(p2.tal_imp_id) + 1 AS rn

                              FROM ret_tally_import_chitpayments p1

                              LEFT JOIN ret_tally_import_chitpayments p2 ON p2.tal_imp_branch = p1.tal_imp_branch AND p2.tal_imp_id < p1.tal_imp_id

                              GROUP BY p1.tal_imp_id

                            ) p2 ON p1.tal_imp_id = p2.tal_imp_id

                            SET p1.tal_bran_row_id = p2.rn");

                            

         $this->db->query("UPDATE `ret_billing` as bil 

                            JOIN(SELECT bill_id, 

                            (round(sum(CAST(((item_cost - item_total_tax) + total_sgst + total_cgst + total_igst) AS DECIMAL(10,2)))) - sum(CAST(((item_cost - item_total_tax) + total_sgst + total_cgst + total_igst) AS DECIMAL(10,2)))) as roundval 

                            FROM ret_bill_details GROUP BY bill_id) p2 ON p2.bill_id = bil.bill_id 

                            SET bil.round_off_amt = p2.roundval 

                            WHERE sales_ref_no IS NOT NULL");

                            

                            

         $this->db->query("UPDATE `ret_billing` as bil 

                            JOIN(SELECT ret.bill_id, (round(sum(CAST(((item_cost - item_total_tax) + total_sgst + total_cgst + total_igst) AS DECIMAL(10,2)))) - sum(CAST(((item_cost - item_total_tax) + total_sgst + total_cgst + total_igst) AS DECIMAL(10,2)))) as roundval 

                            FROM ret_bill_return_details as ret 

                            LEFT JOIN ret_bill_details as bd ON bd.bill_det_id = ret.ret_bill_det_id 

                            GROUP BY ret.bill_id) p2 ON p2.bill_id = bil.bill_id 

                            SET bil.return_round_off_amt = p2.roundval 

                            WHERE s_ret_refno IS NOT NULL");

        return true;

	    

	}

	

	

	function updateSalesVoucherGUID($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_sales_log', $log, FILE_APPEND);

         $updatedguids = array();

	    foreach($postdata['SALES RESPONSE'] as $pkey => $pval){ //WM-SA-GL-01285

	        //echo $pval->Autoid;exit;

	        $invoice_string     = explode("-", $pval->AUTOID);

	           $query = $this->db->query("UPDATE ret_billing as bill 

                            SET bill.istransfered = 1, bill.tally_guid = '".$pval->GUID."', bill.tally_updated_on = '".date('Y-m-d H:i:s')."'  

                            WHERE bill.bill_id = '".$pval->REFNO."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

	function updatePurchaseVoucherGUID($postdata)

	{

	   $updatedguids = array();

	    

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

	    file_put_contents('tally_logs/'.date('d-m-Y').'_update_purchase_log', $log, FILE_APPEND);

	    foreach($postdata['PURCHASE RESPONSE'] as $pkey => $pval){ //$row->brcode."-"."PU"."-".$row->metal_code."-".$row->INVOICENO; SA-PU-GL-00002

	        $invoice_string     = explode("-", $pval->AUTOID);

	        if($invoice_string[1] == "PU"){

    	        $query = $this->db->query("UPDATE ret_billing as bill 

                            SET bill.ispurtransfered = 1, bill.purtally_guid = '".$pval->GUID."', bill.purtally_updated_on = '".date('Y-m-d H:i:s')."'  

                            WHERE bill.bill_id = '".$pval->REFNO."'");

	        }else if($invoice_string[1] == "SP"){

	            

	        }

	    }

	    return array("success" => true, "updatedguids" => $updatedguids);

	}

	function updateSalesReturnVoucherGUID($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_salesreturn_log', $log, FILE_APPEND);

         $updatedguids = array();

	    foreach($postdata['CREDITNOTE RESPONSE'] as $pkey => $pval){ //WM-SA-GL-01285

	        //echo $pval->Autoid;exit;

	        $invoice_string     = explode("-", $pval->AUTOID);

	           $query = $this->db->query("UPDATE ret_billing as bill 

                            SET bill.issrtransfered = 1, bill.srtally_guid = '".$pval->GUID."', bill.srtally_updated_on = '".date('Y-m-d H:i:s')."'  

                            WHERE bill.bill_id = '".$pval->REFNO."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	

	function updateMaterialInVoucherGUID($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_materialin_log', $log, FILE_APPEND);

         $updatedguids = array();

	    foreach($postdata['MATERIALIN RESPONSE'] as $pkey => $pval){ //WM-SA-GL-01285

	        $invoice_string     = explode("-", $pval->AUTOID);

	           $query = $this->db->query("UPDATE ret_grn_entry as bill 

                            SET bill.issrtransfered = 1, bill.tally_guid = '".$pval->GUID."', bill.tally_updated_on = '".date('Y-m-d H:i:s')."'  

                            WHERE bill.grn_id = '".$pval->REFNO."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	function updateMaterialOutVoucherGUID($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_materialout_log', $log, FILE_APPEND);

         $updatedguids = array();

	    foreach($postdata['MATERIALOUT RESPONSE'] as $pkey => $pval){ //WM-SA-GL-01285

	        $invoice_string     = explode("-", $pval->AUTOID);

	           $query = $this->db->query("UPDATE ret_karigar_metal_issue as bill 

                            SET bill.issrtransfered = 1, bill.tally_guid = '".$pval->GUID."', bill.tally_updated_on = '".date('Y-m-d H:i:s')."'  

                            WHERE bill.met_issue_id = '".$pval->REFNO."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	function updateDeliveryNoteVoucherGUID($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_deliverynote_log', $log, FILE_APPEND);

         $updatedguids = array();

	    foreach($postdata['DELIVERYNOTE RESPONSE'] as $pkey => $pval){ //WM-SA-GL-01285

	        $invoice_string     = explode("-", $pval->AUTOID);

	           $query = $this->db->query("UPDATE ret_stock_issue as bill 

                            SET bill.outistransfered = 1, bill.outtally_guid = '".$pval->GUID."', bill.outtally_updated_on = '".date('Y-m-d H:i:s')."'  

                            WHERE bill.id_stock_issue = '".$pval->REFNO."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	function updateReceiptNoteVoucherGUID($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_receiptnote_log', $log, FILE_APPEND);

        $updatedguids = array();

	    foreach($postdata['REEIPTNOTE RESPONSE'] as $pkey => $pval){ //WM-SA-GL-01285

	        $invoice_string     = explode("-", $pval->AUTOID);

	           $query = $this->db->query("UPDATE ret_stock_issue as bill 

                            SET bill.inistransfered = 1, bill.intally_guid = '".$pval->GUID."', bill.intally_updated_on = '".date('Y-m-d H:i:s')."'  

                            WHERE bill.id_stock_issue = '".$pval->REFNO."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

	

	function getProfitLossList()

    {

        $returnarray = array();

        $createdrows = array();

        

        //Opening Pcs update

        /*$openqty = array( "1" => array("qty" => 14, "rate" => 1390.00, "totalamt" => 19460.00),

                          "2" => array("qty" => 1185, "rate" => 1390.00, "totalamt" => 1647150.00),

                          "5" => array("qty" => 485, "rate" => 1390.00, "totalamt" => 674150.00),

                          "6" => array("qty" => 144, "rate" => 1390.00, "totalamt" => 200160.00),

                          "7" => array("qty" => 457, "rate" => 1390.00, "totalamt" => 635230.00),

                        );

        foreach($openqty as $key => $val){

            $insertrow['avgratedate']   = '2022-03-31 00:00:00';

            $insertrow['avgratebranchid'] = $key;

            $insertrow['avgraterowid'] = '';

            $insertrow['avgratecatid']  = 3;

            $insertrow['avgratecattype']  = 1;

            $insertrow['avgrateparticulars'] = 'Opening Balance';

            $insertrow['avgratevchtype'] = '';

            $insertrow['avgratestocktype'] = 2;

            $insertrow['avgratevchno'] = '';

            $insertrow['avgrateinqty'] = $val["qty"];

            $insertrow['avgrateinrate'] = $val["rate"];

            $insertrow['avgrateinvalue'] = $val["totalamt"];

            $insertrow['avgrateoutqty'] = 0;

            $insertrow['avgrateoutrate'] = 0;

            $insertrow['avgrateoutvalue'] = 0;

            $insertrow['avgrateclosingqty'] = $val["qty"];

            $insertrow['avgrateclosingrate'] = $val["rate"];

            $insertrow['avgrateclosingvalue'] = $val["totalamt"];

            if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$key][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$key] = array_slice($createdrows[$insertrow['avgratestocktype']][$key], -5);

                unset($insertrow);

        }*/

        

        

        /*$catquery = $this->db->query("SELECT trv.*, cat.tally_qty_type FROM alltransactionview trv 

                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = trv.cat_id 

                                        WHERE cat_id = 17 AND cattype = 1");*/

        $catquery = $this->db->query("SELECT trv.*, 0 as tally_qty_type FROM alltransactionview trv 
        WHERE cat_id = 2 AND cattype = 2");

                                        

                                        

        foreach($catquery->result() as $rkey => $rval){

            $insertrow = array();

            if(($rval->tally_qty_type != 1 && $rval->net_wt != 0) || ($rval->particulars == 'Opening Balance' && $rval->tally_qty_type != 1)){

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[1][$rval->branchid])){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinrate'] = number_format(($rval->totamount / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateinvalue'] = $rval->totamount;

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $rval->net_wt;

                            $insertrow['avgrateclosingrate'] = $rval->net_wt == 0 ? $rval->totamount : number_format(($rval->totamount / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateclosingvalue'] = $rval->net_wt == 0 ? 0 : $rval->totamount;

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? ($rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[1][$rval->branchid])){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutrate'] = number_format(($rval->totamount / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutvalue'] = $rval->totamount;

                            $insertrow['avgrateclosingqty'] = number_format($rval->net_wt, 3, '.','');

                            $insertrow['avgrateclosingrate'] = number_format(($rval->totamount / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateclosingvalue'] = $rval->totamount;

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                            

                            /*if($insertrow['avgratevchno'] == 'Out-2211' && $rval->branchid == 1){

                                print_r($insertrow);

                                echo "<br />";

                                echo "<pre>";

                                    print_r($createdrows[$insertrow['avgratestocktype']][$rval->branchid]);

                                echo "</pre>";

                                exit;

                            }*/

                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecattype = '".$rval->cattype."' 

                                                                AND avgratestocktype = '1' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                //$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                                                   }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateoutvalue, avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                //$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateoutvalue / $rval->net_wt), 2, '.','');

                                //$insertrow['avgrateinvalue'] = number_format($branchinquery->row()->avgrateoutvalue, 2, '.','');

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                
                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }

                    }

                    /*$this->db->insert('ret_cat_wise_avg_rates', $insertrow);

                    $createdrows[$rval->branchid][] = $insertrow;

                    $createdrows[$rval->branchid] = array_slice($createdrows[$rval->branchid], -5);

                    unset($insertrow);*/

                }

                

            }else if(($rval->tally_qty_type == 1 || $rval->net_wt == 0) && $rval->tally_qty_type != 2){

                

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[2][$rval->branchid])){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinrate'] = number_format(($rval->totamount / $rval->piece), 2, '.','');

                            $insertrow['avgrateinvalue'] = $rval->totamount;

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $rval->piece;

                            $insertrow['avgrateclosingrate'] = $rval->piece == 0 ? $rval->totamount : number_format(($rval->totamount / $rval->piece), 2, '.','');

                            $insertrow['avgrateclosingvalue'] = $rval->piece == 0 ? 0 : $rval->totamount;

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? number_format(((double)$rval->piece * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','') : (double)$rval->totamount;

                            $insertrow['avgrateinrate'] = $insertrow['avgrateinvalue'] == 0 ? (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format(($insertrow['avgrateinvalue'] / $rval->piece), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        
                        if(empty($createdrows[2][$rval->branchid])){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->piece;

                            $insertrow['avgrateoutrate'] = number_format(($rval->totamount / $rval->piece), 2, '.','');

                            $insertrow['avgrateoutvalue'] = $rval->totamount;

                            $insertrow['avgrateclosingqty'] = number_format($rval->piece, 3, '.','');

                            $insertrow['avgrateclosingrate'] = number_format(($rval->totamount / $rval->piece), 2, '.','');

                            $insertrow['avgrateclosingvalue'] = $rval->totamount;

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->piece;

                            $insertrow['avgrateoutvalue'] = $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                            /*if($insertrow['avgratevchno'] == 'Out-1149' && $rval->branchid == 1){

                                print_r($insertrow);

                                echo "<br />";

                                echo "<pre>";

                                    print_r($createdrows[$rval->branchid]);

                                echo "</pre>";

                                exit;

                            }*/

                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate']  : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateoutvalue, avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                /*$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateoutvalue / $insertrow['avgrateinqty']), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format($branchinquery->row()->avgrateoutvalue, 2, '.','');*/

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                
                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = number_format(((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - (double)$insertrow['avgrateoutqty']), 3, '.','');

                                $insertrow['avgrateclosingvalue'] = number_format(((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + (double)$insertrow['avgrateinvalue'] - (double)$insertrow['avgrateoutvalue']), 2, '.','');

                                $insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] ==0)  ? (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                                

                                /*if($insertrow['avgratevchno'] == '425' && $rval->branchid == 1){

                                    print_r($insertrow);

                                    echo "<br />";

                                    echo "<pre>";

                                        print_r($createdrows[$rval->branchid]);

                                    echo "</pre>";

                                    exit;

                                }*/

                                

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            }

                        }

                    }

                    /*$this->db->insert('ret_cat_wise_avg_rates', $insertrow);

                    $createdrows[$rval->branchid][] = $insertrow;

                    $createdrows[$rval->branchid] = array_slice($createdrows[$rval->branchid], -5);

                    unset($insertrow);*/

                }

            }

            
            if(!empty($insertrow)){
                if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid] = array_slice($createdrows[$insertrow['avgratestocktype']][$rval->branchid], -5);

                unset($insertrow);
            }

        }

    }

    function upateProfitLossList()

    {

        $returnarray = array();

        $allcatquery = $this->db->query("SELECT * FROM ret_category where status = 1 ");

        //$allcatquery = $this->db->query("SELECT * FROM ret_old_metal_type");

        foreach($allcatquery->result() as $crkey => $crval){

            $createdrows = array();
            $catquery = $this->db->query("SELECT trv.*, UNIX_TIMESTAMP(trv.transdate) as uztransdate, 
								
										cat.tally_qty_type FROM alltransactionview trv 

                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = trv.cat_id 

                                        WHERE cat_id = $crval->id_ret_category AND cattype = 1 AND UNIX_TIMESTAMP(transdate) > 
										
										(SELECT UNIX_TIMESTAMP(avgratedate) as uxtie FROM ret_cat_wise_avg_rates WHERE 
										
										avgratecatid = $crval->id_ret_category AND avgratecattype = 1 ORDER BY avgrateid DESC LIMIT 1)");
        
        /*$catquery = $this->db->query("SELECT trv.*, UNIX_TIMESTAMP(trv.transdate) as uztransdate, 

        0 as tally_qty_type FROM alltransactionview trv 

        
        WHERE cat_id = $crval->id_metal_type AND cattype = 2 AND UNIX_TIMESTAMP(transdate) > 
        
        (SELECT UNIX_TIMESTAMP(avgratedate) as uxtie FROM ret_cat_wise_avg_rates WHERE 
        
        avgratecatid = $crval->id_metal_type AND avgratecattype = 2 ORDER BY avgrateid DESC LIMIT 1)");*/

                                        

        foreach($catquery->result() as $rkey => $rval){

            $insertrow = array();

            if(($rval->tally_qty_type != 1 && $rval->net_wt != 0) || ($rval->particulars == 'Opening Balance' && $rval->tally_qty_type != 1)){

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[1][$rval->branchid])){
						
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinrate'] = number_format(($rval->totamount / $rval->net_wt), 2, '.','');
							
							$insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? $avgsql->row()->avgrateclosingrate : $rval->totamount;

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            
							
							$insertrow['avgrateclosingvalue'] = number_format($avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');
							
							$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? ($rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[1][$rval->branchid])){
						
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;
							
							$insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$avgsql->row()->avgrateclosingrate), 2, '.','');

							
							$insertrow['avgrateoutrate'] = number_format($avgsql->row()->avgrateclosingrate, 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($avgsql->row()->avgrateclosingvalue) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');
							
							$insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                            

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecattype = '".$rval->cattype."' 

                                                                AND avgratestocktype = '1' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
						
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									
																		$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');


								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
						
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									//$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									//$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}
                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                                }else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}
                            }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN
							if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");



								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 1;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->net_wt;

								$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

								$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}else{
								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 1;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->net_wt;

								$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

								$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}
                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateoutvalue, avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									
									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									
									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									//$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateoutvalue / $rval->net_wt), 2, '.','');

									//$insertrow['avgrateinvalue'] = number_format($branchinquery->row()->avgrateoutvalue, 2, '.','');

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									
									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }

                        }

                    }

                }

                

            }else if(($rval->tally_qty_type == 1 || $rval->net_wt == 0) && $rval->tally_qty_type != 2){

                

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[2][$rval->branchid])){
							
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? number_format(((double)$rval->piece * (double)$avgsql->row()->avgrateclosingrate), 2, '.','') : (double)$rval->totamount;

                            $insertrow['avgrateinrate'] = $insertrow['avgrateinvalue'] == 0 ? (double)$avgsql->row()->avgrateclosingrate : number_format(($insertrow['avgrateinvalue'] / $rval->piece), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');


                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? number_format(((double)$rval->piece * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','') : (double)$rval->totamount;

                            $insertrow['avgrateinrate'] = $insertrow['avgrateinvalue'] == 0 ? (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format(($insertrow['avgrateinvalue'] / $rval->piece), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[2][$rval->branchid])){
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->piece;

                            $insertrow['avgrateoutvalue'] = $rval->piece * $avgsql->row()->avgrateclosingrate;

                            $insertrow['avgrateoutrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($avgsql->row()->avgrateclosingvalue) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            
                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->piece;

                            $insertrow['avgrateoutvalue'] = $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }
                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate']  : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate']  : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }else{
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }else{
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE  avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }else{
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN

                            if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 2;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->piece;

								$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

								$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}else{
								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 2;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->piece;

								$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

								$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

							}

                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateoutvalue, avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									/*$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateoutvalue / $insertrow['avgrateinqty']), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format($branchinquery->row()->avgrateoutvalue, 2, '.','');*/

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									
									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = number_format(((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty'] - (double)$insertrow['avgrateoutqty']), 3, '.','');

									$insertrow['avgrateclosingvalue'] = number_format(((double)$avgsql->row()->avgrateclosingvalue + (double)$insertrow['avgrateinvalue'] - (double)$insertrow['avgrateoutvalue']), 2, '.','');

									$insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] ==0)  ? (double)$avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									/*$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateoutvalue / $insertrow['avgrateinqty']), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format($branchinquery->row()->avgrateoutvalue, 2, '.','');*/

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									
									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = number_format(((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - (double)$insertrow['avgrateoutqty']), 3, '.','');

									$insertrow['avgrateclosingvalue'] = number_format(((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + (double)$insertrow['avgrateinvalue'] - (double)$insertrow['avgrateoutvalue']), 2, '.','');

									$insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] ==0)  ? (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}
                                

                                
                                

                            }else{
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                            }

                        }

                    }
                }

            }

            
            if(!empty($insertrow)){
                if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid] = array_slice($createdrows[$insertrow['avgratestocktype']][$rval->branchid], -5);

                unset($insertrow);
            }

        }

    
        }
    }

    function upateOldMetalProfitLossList()

    {

        $returnarray = array();

        //$allcatquery = $this->db->query("SELECT * FROM ret_category where status = 1");

        $allcatquery = $this->db->query("SELECT * FROM ret_old_metal_type");

        foreach($allcatquery->result() as $crkey => $crval){

            $createdrows = array();
            /*$catquery = $this->db->query("SELECT trv.*, UNIX_TIMESTAMP(trv.transdate) as uztransdate, 
								
										cat.tally_qty_type FROM alltransactionview trv 

                                        LEFT JOIN ret_category as cat ON cat.id_ret_category = trv.cat_id 

                                        WHERE cat_id = $crval->id_ret_category AND cattype = 1 AND UNIX_TIMESTAMP(transdate) > 
										
										(SELECT UNIX_TIMESTAMP(avgratedate) as uxtie FROM ret_cat_wise_avg_rates WHERE 
										
										avgratecatid = $crval->id_ret_category AND avgratecattype = 1 ORDER BY avgrateid DESC LIMIT 1)");*/
        
        $catquery = $this->db->query("SELECT trv.*, UNIX_TIMESTAMP(trv.transdate) as uztransdate, 

        0 as tally_qty_type FROM alltransactionview trv 

        
        WHERE cat_id = $crval->id_metal_type AND cattype = 2 AND UNIX_TIMESTAMP(transdate) > 
        
        (SELECT UNIX_TIMESTAMP(avgratedate) as uxtie FROM ret_cat_wise_avg_rates WHERE 
        
        avgratecatid = $crval->id_metal_type AND avgratecattype = 2 ORDER BY avgrateid DESC LIMIT 1)");

                                        

        foreach($catquery->result() as $rkey => $rval){

            $insertrow = array();

            if(($rval->tally_qty_type != 1 && $rval->net_wt != 0) || ($rval->particulars == 'Opening Balance' && $rval->tally_qty_type != 1)){

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[1][$rval->branchid])){
						
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinrate'] = number_format(($rval->totamount / $rval->net_wt), 2, '.','');
							
							$insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? $avgsql->row()->avgrateclosingrate : $rval->totamount;

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            
							
							$insertrow['avgrateclosingvalue'] = number_format($avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');
							
							$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? ($rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[1][$rval->branchid])){
						
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;
							
							$insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$avgsql->row()->avgrateclosingrate), 2, '.','');

							
							$insertrow['avgrateoutrate'] = number_format($avgsql->row()->avgrateclosingrate, 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($avgsql->row()->avgrateclosingvalue) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');
							
							$insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                            

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecattype = '".$rval->cattype."' 

                                                                AND avgratestocktype = '1' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
						
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									
																		$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');


								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
						
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									//$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									//$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}
                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                                }else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}
                            }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN
							if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");



								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 1;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->net_wt;

								$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

								$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}else{
								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 1;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->net_wt;

								$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

								$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}
                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateoutvalue, avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									
									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									
									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									//$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateoutvalue / $rval->net_wt), 2, '.','');

									//$insertrow['avgrateinvalue'] = number_format($branchinquery->row()->avgrateoutvalue, 2, '.','');

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									
									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }

                        }

                    }

                }

                

            }else if(($rval->tally_qty_type == 1 || $rval->net_wt == 0) && $rval->tally_qty_type != 2){

                

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[2][$rval->branchid])){
							
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");


                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? number_format(((double)$rval->piece * (double)$avgsql->row()->avgrateclosingrate), 2, '.','') : (double)$rval->totamount;

                            $insertrow['avgrateinrate'] = $insertrow['avgrateinvalue'] == 0 ? (double)$avgsql->row()->avgrateclosingrate : number_format(($insertrow['avgrateinvalue'] / $rval->piece), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');


                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? number_format(((double)$rval->piece * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','') : (double)$rval->totamount;

                            $insertrow['avgrateinrate'] = $insertrow['avgrateinvalue'] == 0 ? (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format(($insertrow['avgrateinvalue'] / $rval->piece), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[2][$rval->branchid])){
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->piece;

                            $insertrow['avgrateoutvalue'] = $rval->piece * $avgsql->row()->avgrateclosingrate;

                            $insertrow['avgrateoutrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($avgsql->row()->avgrateclosingvalue) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            
                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->piece;

                            $insertrow['avgrateoutvalue'] = $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }
                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate']  : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate']  : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }else{
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }else{
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE  avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }else{
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN

                            if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 2;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->piece;

								$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

								$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}else{
								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 2;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->piece;

								$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

								$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

							}

                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateoutvalue, avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									/*$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateoutvalue / $insertrow['avgrateinqty']), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format($branchinquery->row()->avgrateoutvalue, 2, '.','');*/

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									
									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = number_format(((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty'] - (double)$insertrow['avgrateoutqty']), 3, '.','');

									$insertrow['avgrateclosingvalue'] = number_format(((double)$avgsql->row()->avgrateclosingvalue + (double)$insertrow['avgrateinvalue'] - (double)$insertrow['avgrateoutvalue']), 2, '.','');

									$insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] ==0)  ? (double)$avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									/*$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateoutvalue / $insertrow['avgrateinqty']), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format($branchinquery->row()->avgrateoutvalue, 2, '.','');*/

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									
									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = number_format(((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - (double)$insertrow['avgrateoutqty']), 3, '.','');

									$insertrow['avgrateclosingvalue'] = number_format(((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + (double)$insertrow['avgrateinvalue'] - (double)$insertrow['avgrateoutvalue']), 2, '.','');

									$insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] ==0)  ? (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}
                                

                                
                                

                            }else{
								if(empty($createdrows[2][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
										WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 2 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 2;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->piece;

									$insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                            }

                        }

                    }
                }

            }

            
            if(!empty($insertrow)){
                if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid] = array_slice($createdrows[$insertrow['avgratestocktype']][$rval->branchid], -5);

                unset($insertrow);
            }

        }

    
        }
    }

    

    function getProfitLossPcsList()

    {

        $returnarray = array();

        $createdrows = array();

        $catquery = $this->db->query("SELECT * FROM alltransactionview WHERE cat_id = 17 AND cattype = 1");

        foreach($catquery->result() as $rkey => $rval){

            $insertrow = array();

            if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                if($rval->transtype == 1){ // Inward

                    if(empty($createdrows[$rval->branchid])){

                        $insertrow['avgratedate']   = $rval->transdate;

                        $insertrow['avgratebranchid'] = $rval->branchid;

                        $insertrow['avgraterowid'] = $rval->rowid;

                        $insertrow['avgratecatid']  = $rval->cat_id;

                        $insertrow['avgratecattype']  = $rval->cattype;

                        $insertrow['avgrateparticulars'] = $rval->particulars;

                        $insertrow['avgratevchtype'] = $rval->vchtype;

                        $insertrow['avgratevchno'] = $rval->refno;

                        $insertrow['avgrateinqty'] = $rval->piece;

                        $insertrow['avgrateinrate'] = number_format(($rval->totamount / $rval->piece), 2, '.','');

                        $insertrow['avgrateinvalue'] = $rval->totamount;

                        $insertrow['avgrateoutqty'] = 0;

                        $insertrow['avgrateoutrate'] = 0;

                        $insertrow['avgrateoutvalue'] = 0;

                        $insertrow['avgrateclosingqty'] = $rval->piece;

                        $insertrow['avgrateclosingrate'] = $rval->piece == 0 ? $rval->totamount : number_format(($rval->totamount / $rval->piece), 2, '.','');

                        $insertrow['avgrateclosingvalue'] = $rval->piece == 0 ? 0 : $rval->totamount;

                    }else{

                        $insertrow['avgratedate']   = $rval->transdate;

                        $insertrow['avgratebranchid'] = $rval->branchid;

                        $insertrow['avgraterowid'] = $rval->rowid;

                        $insertrow['avgratecatid']  = $rval->cat_id;

                        $insertrow['avgratecattype']  = $rval->cattype;

                        $insertrow['avgrateparticulars'] = $rval->particulars;

                        $insertrow['avgratevchtype'] = $rval->vchtype;

                        $insertrow['avgratevchno'] = $rval->refno;

                        $insertrow['avgrateinqty'] = $rval->piece;

                        $insertrow['avgrateinvalue'] = $rval->totamount == 0 ? ($rval->piece * $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate']) : $rval->totamount;

                        $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->piece), 2, '.','');

                        $insertrow['avgrateoutqty'] = 0;

                        $insertrow['avgrateoutrate'] = 0;

                        $insertrow['avgrateoutvalue'] = 0;

                        $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                        $insertrow['avgrateclosingvalue'] = number_format($createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                        $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                    }

                    

                }else if($rval->transtype == 2){ //// Outward

                    if(empty($createdrows[$rval->branchid])){

                        $insertrow['avgratedate']   = $rval->transdate;

                        $insertrow['avgratebranchid'] = $rval->branchid;

                        $insertrow['avgraterowid'] = $rval->rowid;

                        $insertrow['avgratecatid']  = $rval->cat_id;

                        $insertrow['avgratecattype']  = $rval->cattype;

                        $insertrow['avgrateparticulars'] = $rval->particulars;

                        $insertrow['avgratevchtype'] = $rval->vchtype;

                        $insertrow['avgratevchno'] = $rval->refno;

                        $insertrow['avgrateinqty'] = 0;

                        $insertrow['avgrateinrate'] = 0;

                        $insertrow['avgrateinvalue'] = 0;

                        $insertrow['avgrateoutqty'] = $rval->piece;

                        $insertrow['avgrateoutrate'] = number_format(($rval->totamount / $rval->piece), 2, '.','');

                        $insertrow['avgrateoutvalue'] = $rval->totamount;

                        $insertrow['avgrateclosingqty'] = number_format($rval->piece, 3, '.','');

                        $insertrow['avgrateclosingrate'] = number_format(($rval->totamount / $rval->piece), 2, '.','');

                        $insertrow['avgrateclosingvalue'] = $rval->totamount;

                    }else{

                        $insertrow['avgratedate']   = $rval->transdate;

                        $insertrow['avgratebranchid'] = $rval->branchid;

                        $insertrow['avgraterowid'] = $rval->rowid;

                        $insertrow['avgratecatid']  = $rval->cat_id;

                        $insertrow['avgratecattype']  = $rval->cattype;

                        $insertrow['avgrateparticulars'] = $rval->particulars;

                        $insertrow['avgratevchtype'] = $rval->vchtype;

                        $insertrow['avgratevchno'] = $rval->refno;

                        $insertrow['avgrateinqty'] = 0;

                        $insertrow['avgrateinrate'] = 0;

                        $insertrow['avgrateinvalue'] = 0;

                        $insertrow['avgrateoutqty'] = $rval->piece;

                        $insertrow['avgrateoutvalue'] = $rval->piece * $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate'];

                        $insertrow['avgrateoutrate'] = number_format(($createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','') ?: 0;

                        $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                        $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                        

                        //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                        

                        $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        

                        if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                        }

                        /*if($insertrow['avgratevchno'] == 'Out-1149' && $rval->branchid == 1){

                            print_r($insertrow);

                            echo "<br />";

                            echo "<pre>";

                                print_r($createdrows[$rval->branchid]);

                            echo "</pre>";

                            exit;

                        }*/

                    }

                }

            }else{

                if($rval->transtype == 1){

                    if($rval->entrytype == 1){ // IF BT inward

                        $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                ORDER BY rowid DESC LIMIT 1");

                        $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                            WHERE avgratebranchid = '".$rval->stocksource."' 

                                                            AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                            AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                        if($branchinquery->num_rows() > 0 ){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateinrate'] = number_format(($createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                    }else if($rval->entrytype == 5){// IF inward from Sales return 

                        $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                ORDER BY rowid DESC LIMIT 1");

                        $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                            WHERE avgratebranchid = '".$rval->branchid."' 

                                                            AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                            AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                        if($branchinquery->num_rows() > 0 ){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateinrate'] = number_format(($createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                    }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                        $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                ORDER BY rowid DESC LIMIT 1");

                        $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                            WHERE avgratebranchid = '".$rval->branchid."' 

                                                            AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                            AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                        if($branchinquery->num_rows() > 0 ){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateinrate'] = number_format(($createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                    }else if($rval->entrytype == 9){// IF inward from karigar GRN

                        $insertrow['avgratedate']   = $rval->transdate;

                        $insertrow['avgratebranchid'] = $rval->branchid;

                        $insertrow['avgraterowid'] = $rval->rowid;

                        $insertrow['avgratecatid']  = $rval->cat_id;

                        $insertrow['avgratecattype']  = $rval->cattype;

                        $insertrow['avgrateparticulars'] = $rval->particulars;

                        $insertrow['avgratevchtype'] = $rval->vchtype;

                        $insertrow['avgratevchno'] = $rval->refno;

                        $insertrow['avgrateinqty'] = $rval->piece;

                        $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate'];

                        $insertrow['avgrateinrate'] = number_format(($createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                        $insertrow['avgrateoutqty'] = 0;

                        $insertrow['avgrateoutrate'] = 0;

                        $insertrow['avgrateoutvalue'] = 0;

                        $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                        $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                        $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                    }else if($rval->entrytype == 10){// IF inward from retag out 

                        $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                ORDER BY rowid DESC LIMIT 1");

                        $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                            WHERE avgratebranchid = '".$rval->branchid."' 

                                                            AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                            AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                        if($branchinquery->num_rows() > 0 ){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateinrate'] = number_format(($createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$rval->branchid][sizeof($createdrows[$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                    }

                }

                /*$this->db->insert('ret_cat_wise_avg_rates', $insertrow);

                $createdrows[$rval->branchid][] = $insertrow;

                $createdrows[$rval->branchid] = array_slice($createdrows[$rval->branchid], -5);

                unset($insertrow);*/

            }

            

            if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                

            }else{

                var_dump($this->db->error());

                echo "<br />";

            }

            $createdrows[$rval->branchid][] = $insertrow;

            $createdrows[$rval->branchid] = array_slice($createdrows[$rval->branchid], -5);

            unset($insertrow);

        }

    

    }

    

    function getSilverOrnamentsPcsList(){

        $returnarray = array();

        $createdrows = array();

        $insertrow = array();

        $openqty = array( 

                          "2" => array("qty" => 148, "rate" => 578.00, "totalamt" => 85544.00),

                          "5" => array("qty" => 9, "rate" => 578.00, "totalamt" => 5202.00),

                        );

        foreach($openqty as $key => $val){

            $insertrow['avgratedate']   = '2022-04-01 00:00:00';

            $insertrow['avgratebranchid'] = $key;

            $insertrow['avgraterowid'] = '';

            $insertrow['avgratecatid']  = 12;

            $insertrow['avgratecattype']  = 1;

            $insertrow['avgrateparticulars'] = 'Opening Balance';

            $insertrow['avgratevchtype'] = '';

            $insertrow['avgratestocktype'] = 2;

            $insertrow['avgratevchno'] = '';

            $insertrow['avgrateinqty'] = $val["qty"];

            $insertrow['avgrateinrate'] = $val["rate"];

            $insertrow['avgrateinvalue'] = $val["totalamt"];

            $insertrow['avgrateoutqty'] = 0;

            $insertrow['avgrateoutrate'] = 0;

            $insertrow['avgrateoutvalue'] = 0;

            $insertrow['avgrateclosingqty'] = $val["qty"];

            $insertrow['avgrateclosingrate'] = $val["rate"];

            $insertrow['avgrateclosingvalue'] = $val["totalamt"];

            if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$key][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$key] = array_slice($createdrows[$insertrow['avgratestocktype']][$key], -5);

                unset($insertrow);

        }

        $catquery = $this->db->query("SELECT * FROM alltransactionview WHERE cat_id = 12 AND cattype = 1 AND net_wt = 0");

        foreach($catquery->result() as $rkey => $rval){

           

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[2][$rval->branchid])){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->particulars == 'Opening Balance' ? $openqty[$rval->branchid]["qty"] : $rval->piece;

                            $insertrow['avgrateinrate'] = $rval->particulars == 'Opening Balance' ? $openqty[$rval->branchid]["rate"] : number_format(($rval->totamount / $rval->piece), 2, '.','');

                            $insertrow['avgrateinvalue'] = $rval->particulars == 'Opening Balance' ? $openqty[$rval->branchid]["totalamt"] :  $rval->totamount;

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $rval->piece;

                            $insertrow['avgrateclosingrate'] = $rval->piece == 0 ? $rval->totamount : number_format(($rval->totamount / $rval->piece), 2, '.','');

                            $insertrow['avgrateclosingvalue'] = $rval->piece == 0 ? 0 : $rval->totamount;

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] = $rval->totamount == 0 ? ($rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->piece), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[2][$rval->branchid])){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->piece;

                            $insertrow['avgrateoutrate'] = number_format(($rval->totamount / $rval->piece), 2, '.','');

                            $insertrow['avgrateoutvalue'] = $rval->totamount;

                            $insertrow['avgrateclosingqty'] = number_format($rval->piece, 3, '.','');

                            $insertrow['avgrateclosingrate'] = number_format(($rval->totamount / $rval->piece), 2, '.','');

                            $insertrow['avgrateclosingvalue'] = $rval->totamount;

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->piece;

                            $insertrow['avgrateoutvalue'] = $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                            /*if($insertrow['avgratevchno'] == 'Out-1149' && $rval->branchid == 1){

                                print_r($insertrow);

                                echo "<br />";

                                echo "<pre>";

                                    print_r($createdrows[$rval->branchid]);

                                echo "</pre>";

                                exit;

                            }*/

                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate']  : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 2;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->piece;

                            $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alltransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 2;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->piece;

                                $insertrow['avgrateinvalue'] =  $rval->piece * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }

                    }

                    /*$this->db->insert('ret_cat_wise_avg_rates', $insertrow);

                    $createdrows[$rval->branchid][] = $insertrow;

                    $createdrows[$rval->branchid] = array_slice($createdrows[$rval->branchid], -5);

                    unset($insertrow);*/

                }

                

                 if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid] = array_slice($createdrows[$insertrow['avgratestocktype']][$rval->branchid], -5);

                unset($insertrow);

        }

    }

	



    function getDiamondProfitLossList()

    {

        $returnarray = array();

        $createdrows = array();

        

        //Opening Pcs update

        $openqty = array( "1" => array("qty" => 27.7, "rate" => 47660.00, "totalamt" => 1320182.00),

                          "2" => array("qty" => 421.366, "rate" => 47660.00, "totalamt" => 20082303.56),

                          "5" => array("qty" => 94.528, "rate" => 47660.00, "totalamt" => 4505204.48),

                          "6" => array("qty" => 0.260, "rate" => 47660.00, "totalamt" => 12391.60),

                        );

        foreach($openqty as $key => $val){

            $insertrow['avgratedate']   = '2022-03-31 00:00:00';

            $insertrow['avgratebranchid'] = $key;

            $insertrow['avgraterowid'] = '';

            $insertrow['avgratecatid']  = 3;

            $insertrow['avgratecattype']  = 3;

            $insertrow['avgrateparticulars'] = 'Opening Balance';

            $insertrow['avgratevchtype'] = '';

            $insertrow['avgratestocktype'] = 1; //Pcs -> 2 Weight -> 1

            $insertrow['avgratevchno'] = '';

            $insertrow['avgrateinqty'] = $val["qty"];

            $insertrow['avgrateinrate'] = $val["rate"];

            $insertrow['avgrateinvalue'] = $val["totalamt"];

            $insertrow['avgrateoutqty'] = 0;

            $insertrow['avgrateoutrate'] = 0;

            $insertrow['avgrateoutvalue'] = 0;

            $insertrow['avgrateclosingqty'] = $val["qty"];

            $insertrow['avgrateclosingrate'] = $val["rate"];

            $insertrow['avgrateclosingvalue'] = $val["totalamt"];

            if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$key][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$key] = array_slice($createdrows[$insertrow['avgratestocktype']][$key], -5);

                unset($insertrow);

        }

        

        $catquery = $this->db->query("SELECT * FROM alldiamondtransactionview trv 

                                        WHERE cat_id = 3 AND cattype = 3");

        foreach($catquery->result() as $rkey => $rval){

            $insertrow = array();

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[1][$rval->branchid])){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinrate'] = number_format(($rval->totamount / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateinvalue'] = $rval->totamount;

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $rval->net_wt;

                            $insertrow['avgrateclosingrate'] = $rval->net_wt == 0 ? $rval->totamount : number_format(($rval->totamount / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateclosingvalue'] = $rval->net_wt == 0 ? 0 : $rval->totamount;

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? ($rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[1][$rval->branchid])){

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutrate'] = number_format(($rval->totamount / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutvalue'] = $rval->totamount;

                            $insertrow['avgrateclosingqty'] = number_format($rval->net_wt, 3, '.','');

                            $insertrow['avgrateclosingrate'] = number_format(($rval->totamount / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateclosingvalue'] = $rval->totamount;

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                            

                            /*if($insertrow['avgratevchno'] == 'Out-2211' && $rval->branchid == 1){

                                print_r($insertrow);

                                echo "<br />";

                                echo "<pre>";

                                    print_r($createdrows[$insertrow['avgratestocktype']][$rval->branchid]);

                                echo "</pre>";

                                exit;

                            }*/

                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                //$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                                                   }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                            $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                            $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

                                $insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }else{

                                $insertrow['avgratedate']   = $rval->transdate;

                                $insertrow['avgratebranchid'] = $rval->branchid;

                                $insertrow['avgraterowid'] = $rval->rowid;

                                $insertrow['avgratecatid']  = $rval->cat_id;

                                $insertrow['avgratecattype']  = $rval->cattype;

                                $insertrow['avgrateparticulars'] = $rval->particulars;

                                $insertrow['avgratevchtype'] = $rval->vchtype;

                                $insertrow['avgratestocktype'] = 1;

                                $insertrow['avgratevchno'] = $rval->refno;

                                $insertrow['avgrateinqty'] = $rval->net_wt;

                                $insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

                                $insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                                $insertrow['avgrateoutqty'] = 0;

                                $insertrow['avgrateoutrate'] = 0;

                                $insertrow['avgrateoutvalue'] = 0;

                                $insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

                                $insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                       

                            }

                        }

                    }

                    /*$this->db->insert('ret_cat_wise_avg_rates', $insertrow);

                    $createdrows[$rval->branchid][] = $insertrow;

                    $createdrows[$rval->branchid] = array_slice($createdrows[$rval->branchid], -5);

                    unset($insertrow);*/

                }

                

                if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid] = array_slice($createdrows[$insertrow['avgratestocktype']][$rval->branchid], -5);

                unset($insertrow);

        }

        

    }

    function updateDiamondProfitLossList()

    {

        $returnarray = array();
        $createdrows = array();
        

        
        /*$catquery = $this->db->query("SELECT * FROM alldiamondtransactionview trv 

                                        WHERE cat_id = 3 AND cattype = 4");*/
        
        $catquery = $this->db->query("SELECT trv.*, UNIX_TIMESTAMP(trv.transdate) as uztransdate 

        FROM alldiamondtransactionview trv 

        WHERE cat_id = 3 AND cattype = 3 AND UNIX_TIMESTAMP(transdate) > 
        
        (SELECT UNIX_TIMESTAMP(avgratedate) as uxtie FROM ret_cat_wise_avg_rates WHERE 
        
        avgratecatid = 3 AND avgratecattype = 3 ORDER BY avgrateid DESC LIMIT 1)");

        foreach($catquery->result() as $rkey => $rval){

            $insertrow = array();

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[1][$rval->branchid])){
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? ($rval->net_wt * $avgsql->row()->avgrateclosingrate) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? ($rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[1][$rval->branchid])){
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$avgsql->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateoutrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($avgsql->row()->avgrateclosingvalue) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}
                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									//$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									//$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}
                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                            }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN
							if(empty($createdrows[1][$rval->branchid])){
								$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE  avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 1;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->net_wt;

								$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

								$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}else{
								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 1;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->net_wt;

								$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

								$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}

                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }

                    }

                }

                

                if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid] = array_slice($createdrows[$insertrow['avgratestocktype']][$rval->branchid], -5);

                unset($insertrow);

        }

        

    }

    function updateOldDiamondProfitLossList()

    {

        $returnarray = array();

        $createdrows = array();

        
        /*$catquery = $this->db->query("SELECT * FROM alldiamondtransactionview trv 

                                        WHERE cat_id = 3 AND cattype = 4");*/
        
        $catquery = $this->db->query("SELECT trv.*, UNIX_TIMESTAMP(trv.transdate) as uztransdate 

        FROM alldiamondtransactionview trv 

        WHERE cat_id = 3 AND cattype = 4 AND UNIX_TIMESTAMP(transdate) > 
        
        (SELECT UNIX_TIMESTAMP(avgratedate) as uxtie FROM ret_cat_wise_avg_rates WHERE 
        
        avgratecatid = 3 AND avgratecattype = 4 ORDER BY avgrateid DESC LIMIT 1)");

        foreach($catquery->result() as $rkey => $rval){

            $insertrow = array();

                if($rval->entrytype != 1 && $rval->entrytype != 9 && $rval->entrytype != 5 && $rval->entrytype != 8 && $rval->entrytype != 10){ // Except Branch Inward and Karigar purchase from GRN

                    if($rval->transtype == 1){ // Inward

                        if(empty($createdrows[1][$rval->branchid])){
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? ($rval->net_wt * $avgsql->row()->avgrateclosingrate) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = $rval->net_wt;

                            $insertrow['avgrateinvalue'] = (double)$rval->totamount == 0 ? ($rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']) : $rval->totamount;

                            $insertrow['avgrateinrate'] = number_format(($insertrow['avgrateinvalue'] / $rval->net_wt), 2, '.','');

                            $insertrow['avgrateoutqty'] = 0;

                            $insertrow['avgrateoutrate'] = 0;

                            $insertrow['avgrateoutvalue'] = 0;

                            $insertrow['avgrateclosingqty'] = number_format((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'], 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'], 2, '.','');

                            $insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                        }

                        

                    }else if($rval->transtype == 2){ //// Outward

                        if(empty($createdrows[1][$rval->branchid])){
							$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$avgsql->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateoutrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$avgsql->row()->avgrateclosingqty + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($avgsql->row()->avgrateclosingvalue) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                        }else{

                            $insertrow['avgratedate']   = $rval->transdate;

                            $insertrow['avgratebranchid'] = $rval->branchid;

                            $insertrow['avgraterowid'] = $rval->rowid;

                            $insertrow['avgratecatid']  = $rval->cat_id;

                            $insertrow['avgratecattype']  = $rval->cattype;

                            $insertrow['avgrateparticulars'] = $rval->particulars;

                            $insertrow['avgratevchtype'] = $rval->vchtype;

                            $insertrow['avgratestocktype'] = 1;

                            $insertrow['avgratevchno'] = $rval->refno;

                            $insertrow['avgrateinqty'] = 0;

                            $insertrow['avgrateinrate'] = 0;

                            $insertrow['avgrateinvalue'] = 0;

                            $insertrow['avgrateoutqty'] = $rval->net_wt;

                            $insertrow['avgrateoutvalue'] = number_format(((double)$rval->net_wt * (double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateoutrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid])- 1]['avgrateclosingrate']), 2, '.','');

                            $insertrow['avgrateclosingqty'] = number_format(((((double)$createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + (double)$insertrow['avgrateinqty']) - (double)$insertrow['avgrateoutqty'])), 3, '.','');

                            $insertrow['avgrateclosingvalue'] = number_format(((($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue']) + $insertrow['avgrateinvalue']) - $insertrow['avgrateoutvalue']), 2, '.','');

                            

                            //echo "AVG VALUE : ". $insertrow['avgrateclosingvalue']." AVG RATE".$insertrow['avgrateoutrate'] ."<br />";

                            

                            $insertrow['avgrateclosingrate'] = (double)$insertrow['avgrateclosingvalue'] == 0 ? $insertrow['avgrateoutrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

                            

                            if($insertrow['avgrateclosingrate'] == 0 || $insertrow['avgrateclosingqty'] == 0){

                                $insertrow['avgrateclosingrate'] = $insertrow['avgrateoutrate'];

                            }

                        }

                    }

                }else{

                    if($rval->transtype == 1){

                        if($rval->entrytype == 1){ // IF BT inward

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->stocksource."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->rowid."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->stocksource."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] =  ($insertrow['avgrateclosingvalue'] == 0 || $insertrow['avgrateclosingqty'] == 0) ? $insertrow['avgrateinrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}
                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									//$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									//$insertrow['avgrateclosingrate'] = number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');

								}

                       

                            }

                        }else if($rval->entrytype == 5){// IF inward from Sales return 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND cattype = '".$rval->cattype."' AND cat_id = '".$rval->cat_id."' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgratecatid = '".$rval->cat_id."' AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");
									

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }else if($rval->entrytype == 8){// IF inward from Process receipt like Polishing Receipt OR Melting Receipt 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}
                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                            }

                        }else if($rval->entrytype == 9){// IF inward from karigar GRN
							if(empty($createdrows[1][$rval->branchid])){
								$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE  avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 1;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->net_wt;

								$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

								$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}else{
								$insertrow['avgratedate']   = $rval->transdate;

								$insertrow['avgratebranchid'] = $rval->branchid;

								$insertrow['avgraterowid'] = $rval->rowid;

								$insertrow['avgratecatid']  = $rval->cat_id;

								$insertrow['avgratecattype']  = $rval->cattype;

								$insertrow['avgrateparticulars'] = $rval->particulars;

								$insertrow['avgratevchtype'] = $rval->vchtype;

								$insertrow['avgratestocktype'] = 1;

								$insertrow['avgratevchno'] = $rval->refno;

								$insertrow['avgrateinqty'] = $rval->net_wt;

								$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

								$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

								$insertrow['avgrateoutqty'] = 0;

								$insertrow['avgrateoutrate'] = 0;

								$insertrow['avgrateoutvalue'] = 0;

								$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

								$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

								$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
							}

                       

                        }else if($rval->entrytype == 10){// IF inward from retag out 

                            $viewsourcequery = $this->db->query("SELECT transdate, rowid  FROM alldiamondtransactionview WHERE branchid = '".$rval->branchid."' AND 

                                                                    transtype = 2  AND refno = '".$rval->refno."' AND cattype = 2 AND entrytype = '7' 

                                                                    AND rowid='".$rval->stocksource."' AND UNIX_TIMESTAMP(transdate) < UNIX_TIMESTAMP('".$rval->transdate."') 

                                                                    ORDER BY rowid DESC LIMIT 1");

                            $branchinquery = $this->db->query("SELECT avgrateclosingrate FROM ret_cat_wise_avg_rates 

                                                                WHERE avgratebranchid = '".$rval->branchid."' 

                                                                AND avgratedate = '".$viewsourcequery->row()->transdate."' 

                                                                AND avgraterowid='".$viewsourcequery->row()->rowid."'");

                            if($branchinquery->num_rows() > 0 ){
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinrate'] = number_format(($branchinquery->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateinvalue'] = number_format(($insertrow['avgrateinqty'] * $insertrow['avgrateinrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }else{
								if(empty($createdrows[1][$rval->branchid])){
									$avgsql	= $this->db->query("SELECT * FROM ret_cat_wise_avg_rates 
									WHERE avgratecatid = ".$rval->cat_id." AND avgratebranchid = ".$rval->branchid." AND avgratecattype = ".$rval->cattype." AND avgratestocktype = 1 AND UNIX_TIMESTAMP(avgratedate) < '".$rval->uztransdate."' ORDER BY avgrateid DESC LIMIT 1");

									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $avgsql->row()->avgrateclosingrate;

									$insertrow['avgrateinrate'] = number_format(($avgsql->row()->avgrateclosingrate), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $avgsql->row()->avgrateclosingqty + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $avgsql->row()->avgrateclosingvalue + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $avgsql->row()->avgrateclosingrate : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}else{
									$insertrow['avgratedate']   = $rval->transdate;

									$insertrow['avgratebranchid'] = $rval->branchid;

									$insertrow['avgraterowid'] = $rval->rowid;

									$insertrow['avgratecatid']  = $rval->cat_id;

									$insertrow['avgratecattype']  = $rval->cattype;

									$insertrow['avgrateparticulars'] = $rval->particulars;

									$insertrow['avgratevchtype'] = $rval->vchtype;

									$insertrow['avgratestocktype'] = 1;

									$insertrow['avgratevchno'] = $rval->refno;

									$insertrow['avgrateinqty'] = $rval->net_wt;

									$insertrow['avgrateinvalue'] =  $rval->net_wt * $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'];

									$insertrow['avgrateinrate'] = number_format(($createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate']), 2, '.','');

									$insertrow['avgrateoutqty'] = 0;

									$insertrow['avgrateoutrate'] = 0;

									$insertrow['avgrateoutvalue'] = 0;

									$insertrow['avgrateclosingqty'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingqty'] + $insertrow['avgrateinqty'] - $insertrow['avgrateoutqty'];

									$insertrow['avgrateclosingvalue'] = $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingvalue'] + $insertrow['avgrateinvalue'] - $insertrow['avgrateoutvalue'];

									$insertrow['avgrateclosingrate'] = $insertrow['avgrateclosingvalue'] == 0 ? $createdrows[$insertrow['avgratestocktype']][$rval->branchid][sizeof($createdrows[$insertrow['avgratestocktype']][$rval->branchid]) - 1]['avgrateclosingrate'] : number_format((($insertrow['avgrateclosingvalue']) / $insertrow['avgrateclosingqty']), 2, '.','');
								}

                       

                            }

                        }

                    }

                }

                

                if($this->db->insert('ret_cat_wise_avg_rates', $insertrow)){

                    

                }else{

                    var_dump($this->db->error());

                    echo "<br />";

                }

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid][] = $insertrow;

                $createdrows[$insertrow['avgratestocktype']][$rval->branchid] = array_slice($createdrows[$insertrow['avgratestocktype']][$rval->branchid], -5);

                unset($insertrow);

        }

        

    }

    function updateSalesBills($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_salesbills_log', $log, FILE_APPEND);

        $updatedguids = array();

        $postdata['bills'] = explode(",", $postdata['bills']);

	    foreach($postdata['bills'] as $pkey => $pval){ //WM-SA-GL-01285

	        $billId     = $pval;
           
            $query = $this->db->query("UPDATE ret_billing as bill 

                            SET bill.istransfered = 0 WHERE bill.bill_id = '".$billId."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

    function updatePurchaseBills($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_salesbills_log', $log, FILE_APPEND);

        $updatedguids = array();

        $postdata['bills'] = explode(",", $postdata['bills']);

	    foreach($postdata['bills'] as $pkey => $pval){ //WM-SA-GL-01285

	        $billId     = $pval;
           
            $query = $this->db->query("UPDATE ret_billing as bill 

                            SET bill.ispurtransfered = 0 WHERE bill.bill_id = '".$billId."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

    function updateSalesReturnBills($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_salesbills_log', $log, FILE_APPEND);

        $updatedguids = array();

        $postdata['bills'] = explode(",", $postdata['bills']);

	    foreach($postdata['bills'] as $pkey => $pval){ //WM-SA-GL-01285

	        $billId     = $pval;
           
            $query = $this->db->query("UPDATE ret_billing as bill 

                            SET bill.issrtransfered = 0 WHERE bill.bill_id = '".$billId."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

    function updateBillPayments($postdata)

	{

	    $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_billspayment_log', $log, FILE_APPEND);

        $updatedguids = array();

        $postdata['bills'] = explode(",", $postdata['bills']);

	    foreach($postdata['bills'] as $pkey => $pval){ //WM-SA-GL-01285

	        $billId     = $pval;

            $query = $this->db->query("UPDATE ret_billing_payment  

            SET istransfered = 0

            WHERE bill_id = '".$billId."'");

            $query = $this->db->query("UPDATE ret_billing_chit_utilization 

            SET istransfered = 0

            WHERE bill_id = '".$billId."'");
           
           $query = $this->db->query("UPDATE ret_billing_gift_voucher_details  

           SET istransfered = 0  

           WHERE bill_id = '".$billId."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

	}

    function updateIssueReceiptsPayment($postdata)
    {
        $log = "User: ".$_SERVER['REMOTE_ADDR'].' - '.date("F j, Y, g:i:s a").PHP_EOL.

                        "Tally Update : ".(print_r($postdata, true)).PHP_EOL.

                        "-------------------------".PHP_EOL;

        file_put_contents('tally_logs/'.date('d-m-Y').'_update_receiptsbills_log', $log, FILE_APPEND);

        $updatedguids = array();

        $postdata['bills'] = explode(",", $postdata['bills']);

	    foreach($postdata['bills'] as $pkey => $pval){ //WM-SA-GL-01285

	        $billId     = $pval;
           
            $query = $this->db->query("UPDATE ret_issue_rcpt_payment as bill 

                            SET bill.istransfered = 0 WHERE bill.id_issue_rcpt = '".$billId."'");

                if($this->db->affected_rows() > 0){

                    //$updatedguids[] = (array)$pval;

                }

	    }

	     return array("success" => true, "updatedguids" => $updatedguids);

    }



}